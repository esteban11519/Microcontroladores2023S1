

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun  4 03:10:14 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 09/02/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4550 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataCOMRAM
    94   00192C                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _interfaz
    98   00192C  08                 	db	8
    99                           
   100                           	psect	smallconst
   101   000800                     __psmallconst:
   102                           	callstack 0
   103   000800  00                 	db	0
   104   000801                     _dpowers:
   105                           	callstack 0
   106   000801  0001               	dw	1
   107   000803  000A               	dw	10
   108   000805  0064               	dw	100
   109   000807  03E8               	dw	1000
   110   000809  2710               	dw	10000
   111   00080B                     __end_of_dpowers:
   112                           	callstack 0
   113   000000                     _EECON2	set	4007
   114   000000                     _TRISD	set	3989
   115   000000                     _RD	set	32048
   116   000000                     _WR	set	32049
   117   000000                     _TRMT	set	32097
   118   000000                     _RA3	set	31747
   119   000000                     _LATE1	set	31849
   120   000000                     _LATE2	set	31850
   121   000000                     _LATE0	set	31848
   122   000000                     _GO	set	32273
   123   000000                     _ADON	set	32272
   124   000000                     _LATC1	set	31833
   125   000000                     _TRISC1	set	31905
   126   000000                     _TMR0ON	set	32431
   127   000000                     _GIE	set	32663
   128   000000                     _TMR0IE	set	32661
   129   000000                     _LATD1	set	31841
   130   000000                     _LATD0	set	31840
   131   000000                     _LATD	set	3980
   132   000000                     _RA2	set	31746
   133   000000                     _RC1	set	31761
   134   000000                     _LATB0	set	31824
   135   000000                     _LATC2	set	31834
   136   000000                     _LATE	set	3981
   137   000000                     _TRISE	set	3990
   138   000000                     _RCSTA	set	4011
   139   000000                     _TXSTA	set	4012
   140   000000                     _TRISB0	set	31896
   141   000000                     _TRISC2	set	31906
   142   000000                     _SWDTEN	set	32392
   143   000000                     _OSCCON	set	4051
   144   000000                     _T0CON	set	4053
   145   000000                     _TXREG	set	4013
   146   000000                     _SPBRG	set	4015
   147   000000                     _BAUDCON	set	4024
   148   000000                     _ADCON2	set	4032
   149   000000                     _ADCON1	set	4033
   150   000000                     _ADRES	set	4035
   151   000000                     _ADCON0	set	4034
   152   000000                     _TO	set	32387
   153   000000                     _EEDATA	set	4008
   154   000000                     _EEADR	set	4009
   155   000000                     _WREN	set	32050
   156   000000                     _TMR0	set	4054
   157   000000                     _TMR0IF	set	32658
   158   00080B                     STR_4:
   159   00080B  4C                 	db	76	;'L'
   160   00080C  61                 	db	97	;'a'
   161   00080D  73                 	db	115	;'s'
   162   00080E  74                 	db	116	;'t'
   163   00080F  20                 	db	32
   164   000810  54                 	db	84	;'T'
   165   000811  65                 	db	101	;'e'
   166   000812  6D                 	db	109	;'m'
   167   000813  70                 	db	112	;'p'
   168   000814  65                 	db	101	;'e'
   169   000815  74                 	db	116	;'t'
   170   000816  61                 	db	97	;'a'
   171   000817  74                 	db	116	;'t'
   172   000818  75                 	db	117	;'u'
   173   000819  72                 	db	114	;'r'
   174   00081A  65                 	db	101	;'e'
   175   00081B  00                 	db	0
   176   00081C                     STR_1:
   177   00081C  46                 	db	70	;'F'
   178   00081D  61                 	db	97	;'a'
   179   00081E  69                 	db	105	;'i'
   180   00081F  6C                 	db	108	;'l'
   181   000820  65                 	db	101	;'e'
   182   000821  64                 	db	100	;'d'
   183   000822  20                 	db	32
   184   000823  44                 	db	68	;'D'
   185   000824  48                 	db	72	;'H'
   186   000825  54                 	db	84	;'T'
   187   000826  31                 	db	49	;'1'
   188   000827  31                 	db	49	;'1'
   189   000828  00                 	db	0
   190   000829                     STR_3:
   191   000829  0A                 	db	10
   192   00082A  47                 	db	71	;'G'
   193   00082B  6F                 	db	111	;'o'
   194   00082C  64                 	db	100	;'d'
   195   00082D  20                 	db	32
   196   00082E  69                 	db	105	;'i'
   197   00082F  73                 	db	115	;'s'
   198   000830  20                 	db	32
   199   000831  67                 	db	103	;'g'
   200   000832  6F                 	db	111	;'o'
   201   000833  6F                 	db	111	;'o'
   202   000834  64                 	db	100	;'d'
   203   000835  00                 	db	0
   204   000836                     STR_15:
   205   000836  54                 	db	84	;'T'
   206   000837  3A                 	db	58	;':'
   207   000838  20                 	db	32
   208   000839  25                 	db	37
   209   00083A  69                 	db	105	;'i'
   210   00083B  20                 	db	32
   211   00083C  43                 	db	67	;'C'
   212   00083D  0A                 	db	10
   213   00083E  00                 	db	0
   214   00083F                     STR_11:
   215   00083F  54                 	db	84	;'T'
   216   000840  3A                 	db	58	;':'
   217   000841  20                 	db	32
   218   000842  25                 	db	37
   219   000843  69                 	db	105	;'i'
   220   000844  20                 	db	32
   221   000845  52                 	db	82	;'R'
   222   000846  61                 	db	97	;'a'
   223   000847  00                 	db	0
   224   000848                     STR_8:
   225   000848  48                 	db	72	;'H'
   226   000849  3A                 	db	58	;':'
   227   00084A  20                 	db	32
   228   00084B  25                 	db	37
   229   00084C  69                 	db	105	;'i'
   230   00084D  20                 	db	32
   231   00084E  25                 	db	37
   232   00084F  63                 	db	99	;'c'
   233   000850  00                 	db	0
   234   000851                     STR_7:
   235   000851  54                 	db	84	;'T'
   236   000852  3A                 	db	58	;':'
   237   000853  20                 	db	32
   238   000854  25                 	db	37
   239   000855  69                 	db	105	;'i'
   240   000856  20                 	db	32
   241   000857  43                 	db	67	;'C'
   242   000858  00                 	db	0
   243   000859                     STR_13:
   244   000859  54                 	db	84	;'T'
   245   00085A  3A                 	db	58	;':'
   246   00085B  20                 	db	32
   247   00085C  25                 	db	37
   248   00085D  69                 	db	105	;'i'
   249   00085E  20                 	db	32
   250   00085F  46                 	db	70	;'F'
   251   000860  00                 	db	0
   252   000861                     STR_9:
   253   000861  54                 	db	84	;'T'
   254   000862  3A                 	db	58	;':'
   255   000863  20                 	db	32
   256   000864  25                 	db	37
   257   000865  69                 	db	105	;'i'
   258   000866  20                 	db	32
   259   000867  4B                 	db	75	;'K'
   260   000868  00                 	db	0
   261   000869                     STR_2:
   262   000869  53                 	db	83	;'S'
   263   00086A  65                 	db	101	;'e'
   264   00086B  6E                 	db	110	;'n'
   265   00086C  73                 	db	115	;'s'
   266   00086D  6F                 	db	111	;'o'
   267   00086E  72                 	db	114	;'r'
   268   00086F  73                 	db	115	;'s'
   269   000870  00                 	db	0
   270   000871                     STR_5:
   271   000871  0A                 	db	10
   272   000872  54                 	db	84	;'T'
   273   000873  3A                 	db	58	;':'
   274   000874  20                 	db	32
   275   000875  00                 	db	0
   276   000876  00                 	db	0	; dummy byte at the end
   277   000000                     
   278                           ; #config settings
   279                           
   280                           	psect	cinit
   281   001780                     __pcinit:
   282                           	callstack 0
   283   001780                     start_initialization:
   284                           	callstack 0
   285   001780                     __initialization:
   286                           	callstack 0
   287                           
   288                           ; Initialize objects allocated to COMRAM (1 bytes)
   289                           ; load TBLPTR registers with __pidataCOMRAM
   290   001780  0E2C               	movlw	low __pidataCOMRAM
   291   001782  6EF6               	movwf	tblptrl,c
   292   001784  0E19               	movlw	high __pidataCOMRAM
   293   001786  6EF7               	movwf	tblptrh,c
   294   001788  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   295   00178A  6EF8               	movwf	tblptru,c
   296   00178C  0009               	tblrd		*+	;fetch initializer
   297   00178E  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   298                           
   299                           ; Clear objects allocated to BANK0 (4 bytes)
   300   001792  0100               	movlb	0
   301   001794  6B88               	clrf	(__pbssBANK0+3)& (0+255),b
   302   001796  6B87               	clrf	(__pbssBANK0+2)& (0+255),b
   303   001798  6B86               	clrf	(__pbssBANK0+1)& (0+255),b
   304   00179A  6B85               	clrf	__pbssBANK0& (0+255),b
   305                           
   306                           ; Clear objects allocated to COMRAM (1 bytes)
   307   00179C  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   308   00179E                     end_of_initialization:
   309                           	callstack 0
   310   00179E                     __end_of__initialization:
   311                           	callstack 0
   312   00179E  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   313   0017A0  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   314   0017A2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   315   0017A4  6EF8               	movwf	tblptru,c
   316   0017A6  0100               	movlb	0
   317   0017A8  EF64  F00A         	goto	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMRAM
   320   00004B                     __pbssCOMRAM:
   321                           	callstack 0
   322   00004B                     _Che:
   323                           	callstack 0
   324   00004B                     	ds	1
   325                           
   326                           	psect	dataCOMRAM
   327   00004C                     __pdataCOMRAM:
   328                           	callstack 0
   329   00004C                     _interfaz:
   330                           	callstack 0
   331   00004C                     	ds	1
   332                           
   333                           	psect	bssBANK0
   334   000085                     __pbssBANK0:
   335                           	callstack 0
   336   000085                     _Scale_Temperature:
   337                           	callstack 0
   338   000085                     	ds	1
   339   000086                     _Enable_sample:
   340                           	callstack 0
   341   000086                     	ds	1
   342   000087                     _Hum:
   343                           	callstack 0
   344   000087                     	ds	1
   345   000088                     _Temp:
   346                           	callstack 0
   347   000088                     	ds	1
   348                           
   349                           	psect	cstackBANK0
   350   000060                     __pcstackBANK0:
   351                           	callstack 0
   352   000060                     main@buffer_LCD_row_1:
   353                           	callstack 0
   354                           
   355                           ; 17 bytes @ 0x0
   356   000060                     	ds	17
   357   000071                     main@buffer_LCD_row_2:
   358                           	callstack 0
   359                           
   360                           ; 17 bytes @ 0x11
   361   000071                     	ds	17
   362   000082                     main@Temp_n1:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x22
   366   000082                     	ds	1
   367   000083                     main@Hum_n1:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x23
   371   000083                     	ds	1
   372   000084                     main@Scale_Temperature_n1:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x24
   376   000084                     	ds	1
   377                           
   378                           	psect	cstackCOMRAM
   379   000001                     __pcstackCOMRAM:
   380                           	callstack 0
   381   000001                     ??_RetardoLCD:
   382   000001                     ??_DHT11_Start:
   383   000001                     ??_DHT11_CheckResponse:
   384   000001                     ??_DHT11_ReadData:
   385   000001                     ?___lwdiv:
   386                           	callstack 0
   387   000001                     ?___ftpack:
   388                           	callstack 0
   389   000001                     ConfiguraLCD@a:
   390                           	callstack 0
   391   000001                     Transmitir@BufferT:
   392                           	callstack 0
   393   000001                     EEPROM_Write@data:
   394                           	callstack 0
   395   000001                     EEPROM_Read@address:
   396                           	callstack 0
   397   000001                     ___lbmod@divisor:
   398                           	callstack 0
   399   000001                     ___lwdiv@dividend:
   400                           	callstack 0
   401   000001                     ___ftpack@arg:
   402                           	callstack 0
   403                           
   404                           ; 3 bytes @ 0x0
   405   000001                     	ds	1
   406   000002                     RetardoLCD@a:
   407                           	callstack 0
   408   000002                     DHT11_ReadData@i:
   409                           	callstack 0
   410   000002                     EEPROM_Write@address:
   411                           	callstack 0
   412   000002                     ___lbmod@dividend:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x1
   416   000002                     	ds	1
   417   000003                     ??_EnviaDato:
   418   000003                     DHT11_ReadData@data:
   419                           	callstack 0
   420   000003                     ___lbmod@counter:
   421                           	callstack 0
   422   000003                     ___lwdiv@divisor:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x2
   426   000003                     	ds	1
   427   000004                     EnviaDato@a:
   428                           	callstack 0
   429   000004                     ___ftpack@exp:
   430                           	callstack 0
   431   000004                     ___lbmod@rem:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x3
   435   000004                     	ds	1
   436   000005                     ??_init_configuration:
   437   000005                     EscribeLCD_c@a:
   438                           	callstack 0
   439   000005                     DireccionaLCD@a:
   440                           	callstack 0
   441   000005                     ___ftpack@sign:
   442                           	callstack 0
   443   000005                     ___lbdiv@divisor:
   444                           	callstack 0
   445   000005                     ___lwdiv@quotient:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x4
   449   000005                     	ds	1
   450   000006                     ??___ftpack:
   451   000006                     MensajeLCD_Var@a:
   452                           	callstack 0
   453   000006                     show_temperature_LCD@buffer_LCD_row_1:
   454                           	callstack 0
   455   000006                     ___lbdiv@dividend:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x5
   459   000006                     	ds	1
   460   000007                     ??_MensajeLCD_Var:
   461   000007                     show_temperature_LCD@buffer_LCD_row_2:
   462                           	callstack 0
   463   000007                     ___lbdiv@counter:
   464                           	callstack 0
   465   000007                     ___lwdiv@counter:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x6
   469   000007                     	ds	1
   470   000008                     ?___lwmod:
   471                           	callstack 0
   472   000008                     MensajeLCD_Var@counter:
   473                           	callstack 0
   474   000008                     show_temperature_LCD@Temp_n1:
   475                           	callstack 0
   476   000008                     ___lbdiv@quotient:
   477                           	callstack 0
   478   000008                     ___lwmod@dividend:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x7
   482   000008                     	ds	1
   483   000009                     ?___lbtoft:
   484                           	callstack 0
   485   000009                     EscribeLCD_n8@b:
   486                           	callstack 0
   487   000009                     show_temperature_LCD@Hum_n1:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x8
   491   000009                     	ds	1
   492   00000A                     EscribeLCD_n8@centena:
   493                           	callstack 0
   494   00000A                     show_temperature_LCD@Scale_Temperature_n1:
   495                           	callstack 0
   496   00000A                     ___lwmod@divisor:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x9
   500   00000A                     	ds	1
   501   00000B                     EscribeLCD_n8@decena:
   502                           	callstack 0
   503   00000B                     show_temperature_LCD@counter:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0xA
   507   00000B                     	ds	1
   508   00000C                     EscribeLCD_n8@unidad:
   509                           	callstack 0
   510   00000C                     ___lbtoft@c:
   511                           	callstack 0
   512   00000C                     ___lwmod@counter:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0xB
   516   00000C                     	ds	1
   517   00000D                     ?_sprintf:
   518                           	callstack 0
   519   00000D                     ?___ftmul:
   520                           	callstack 0
   521   00000D                     EscribeLCD_n8@a:
   522                           	callstack 0
   523   00000D                     sprintf@sp:
   524                           	callstack 0
   525   00000D                     ___ftmul@f1:
   526                           	callstack 0
   527                           
   528                           ; 3 bytes @ 0xC
   529   00000D                     	ds	1
   530   00000E                     ??_welcome_operations:
   531   00000E                     sprintf@f:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0xD
   535   00000E                     	ds	2
   536   000010                     ___ftmul@f2:
   537                           	callstack 0
   538                           
   539                           ; 3 bytes @ 0xF
   540   000010                     	ds	3
   541   000013                     ??_sprintf:
   542   000013                     ??___ftmul:
   543                           
   544                           ; 1 bytes @ 0x12
   545   000013                     	ds	1
   546   000014                     sprintf@flag:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x13
   550   000014                     	ds	1
   551   000015                     sprintf@prec:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x14
   555   000015                     	ds	1
   556   000016                     sprintf@ap:
   557                           	callstack 0
   558   000016                     ___ftmul@exp:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x15
   562   000016                     	ds	1
   563   000017                     sprintf@val:
   564                           	callstack 0
   565   000017                     ___ftmul@f3_as_product:
   566                           	callstack 0
   567                           
   568                           ; 3 bytes @ 0x16
   569   000017                     	ds	2
   570   000019                     sprintf@c:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x18
   574   000019                     	ds	1
   575   00001A                     ??_send_temperature_RS232:
   576   00001A                     ___ftmul@cntr:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x19
   580   00001A                     	ds	1
   581   00001B                     ___ftmul@sign:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x1A
   585   00001B                     	ds	1
   586   00001C                     ?___ftdiv:
   587                           	callstack 0
   588   00001C                     ___ftdiv@f1:
   589                           	callstack 0
   590   00001C                     send_temperature_RS232@buffer_RS232:
   591                           	callstack 0
   592                           
   593                           ; 12 bytes @ 0x1B
   594   00001C                     	ds	3
   595   00001F                     ___ftdiv@f2:
   596                           	callstack 0
   597                           
   598                           ; 3 bytes @ 0x1E
   599   00001F                     	ds	3
   600   000022                     ??___ftdiv:
   601                           
   602                           ; 1 bytes @ 0x21
   603   000022                     	ds	3
   604   000025                     ___ftdiv@cntr:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x24
   608   000025                     	ds	1
   609   000026                     ___ftdiv@f3:
   610                           	callstack 0
   611                           
   612                           ; 3 bytes @ 0x25
   613   000026                     	ds	2
   614   000028                     send_temperature_RS232@counter:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x27
   618   000028                     	ds	1
   619   000029                     ___ftdiv@exp:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x28
   623   000029                     	ds	1
   624   00002A                     ___ftdiv@sign:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x29
   628   00002A                     	ds	1
   629   00002B                     ?___ftadd:
   630                           	callstack 0
   631   00002B                     ___ftadd@f1:
   632                           	callstack 0
   633                           
   634                           ; 3 bytes @ 0x2A
   635   00002B                     	ds	3
   636   00002E                     ___ftadd@f2:
   637                           	callstack 0
   638                           
   639                           ; 3 bytes @ 0x2D
   640   00002E                     	ds	3
   641   000031                     ??___ftadd:
   642                           
   643                           ; 1 bytes @ 0x30
   644   000031                     	ds	3
   645   000034                     ___ftadd@sign:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x33
   649   000034                     	ds	1
   650   000035                     ___ftadd@exp2:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x34
   654   000035                     	ds	1
   655   000036                     ___ftadd@exp1:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x35
   659   000036                     	ds	1
   660   000037                     ?___fttol:
   661                           	callstack 0
   662   000037                     ___fttol@f1:
   663                           	callstack 0
   664                           
   665                           ; 3 bytes @ 0x36
   666   000037                     	ds	4
   667   00003B                     ??___fttol:
   668                           
   669                           ; 1 bytes @ 0x3A
   670   00003B                     	ds	5
   671   000040                     ___fttol@sign1:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x3F
   675   000040                     	ds	1
   676   000041                     ___fttol@lval:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x40
   680   000041                     	ds	4
   681   000045                     ___fttol@exp1:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x44
   685   000045                     	ds	1
   686   000046                     choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x45
   690   000046                     	ds	1
   691   000047                     choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x46
   695   000047                     	ds	1
   696   000048                     ??_choose_scale_temperature_and_fill_buffers:
   697                           
   698                           ; 1 bytes @ 0x47
   699   000048                     	ds	1
   700   000049                     choose_scale_temperature_and_fill_buffers@temp_converted:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x48
   704   000049                     	ds	2
   705   00004B                     
   706                           ; 1 bytes @ 0x4A
   707 ;;
   708 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   709 ;;
   710 ;; *************** function _main *****************
   711 ;; Defined at:
   712 ;;		line 86 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  buffer_LCD_r   17   17[BANK0 ] unsigned char [17]
   717 ;;  buffer_LCD_r   17    0[BANK0 ] unsigned char [17]
   718 ;;  Scale_Temper    1   36[BANK0 ] unsigned char 
   719 ;;  Hum_n1          1   35[BANK0 ] unsigned char 
   720 ;;  Temp_n1         1   34[BANK0 ] unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 3F/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   730 ;;      Params:         0       0       0       0       0       0       0       0       0
   731 ;;      Locals:         0      37       0       0       0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0
   733 ;;      Totals:         0      37       0       0       0       0       0       0       0
   734 ;;Total ram usage:       37 bytes
   735 ;; Hardware stack levels required when called: 6
   736 ;; This function calls:
   737 ;;		_check_potentiometer_voltaje
   738 ;;		_choose_scale_temperature_and_fill_buffers
   739 ;;		_init_configuration
   740 ;;		_measure_temperature_c_humidity_per
   741 ;;		_save_temperature_c_EEPROM
   742 ;;		_send_temperature_RS232
   743 ;;		_show_temperature_LCD
   744 ;;		_show_temperature_c_RGB
   745 ;;		_welcome_operations
   746 ;; This function is called by:
   747 ;;		Startup code after reset
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text0
   752   0014C8                     __ptext0:
   753                           	callstack 0
   754   0014C8                     _main:
   755                           	callstack 25
   756                           
   757                           ;LAB05.c: 87: init_configuration();
   758                           
   759                           ;incstack = 0
   760   0014C8  ECF0  F009         	call	_init_configuration	;wreg free
   761                           
   762                           ;LAB05.c: 88: welcome_operations();
   763   0014CC  ECB2  F009         	call	_welcome_operations	;wreg free
   764                           
   765                           ;LAB05.c: 91: SWDTEN = 1;
   766   0014D0  80D1               	bsf	4049,0,c	;volatile
   767                           
   768                           ;LAB05.c: 95: unsigned char buffer_LCD_row_1[17];;LAB05.c: 96: unsigned char buffer_LCD_
      +                          row_2[17];;LAB05.c: 99: unsigned char Temp_n1=255;
   769   0014D2  0100               	movlb	0	; () banked
   770   0014D4  6982               	setf	main@Temp_n1& (0+255),b
   771                           
   772                           ; BSR set to: 0
   773                           ;LAB05.c: 100: unsigned char Hum_n1=255;
   774   0014D6  6983               	setf	main@Hum_n1& (0+255),b
   775                           
   776                           ; BSR set to: 0
   777                           ;LAB05.c: 101: unsigned char Scale_Temperature_n1=255;
   778   0014D8  6984               	setf	main@Scale_Temperature_n1& (0+255),b
   779   0014DA                     l2940:
   780                           
   781                           ; BSR set to: 0
   782                           ;LAB05.c: 105: if(Enable_sample){
   783   0014DA  5186               	movf	_Enable_sample& (0+255),w,b
   784   0014DC  B4D8               	btfsc	status,2,c
   785   0014DE  D7FD               	goto	l2940
   786                           
   787                           ; BSR set to: 0
   788                           ;LAB05.c: 110: measure_temperature_c_humidity_per();
   789   0014E0  ECEB  F00B         	call	_measure_temperature_c_humidity_per	;wreg free
   790   0014E4  0004               	clrwdt		;# 
   791                           
   792                           ;LAB05.c: 112: send_temperature_RS232();
   793   0014E6  EC1E  F00B         	call	_send_temperature_RS232	;wreg free
   794                           
   795                           ;LAB05.c: 113: save_temperature_c_EEPROM();
   796   0014EA  EC90  F00C         	call	_save_temperature_c_EEPROM	;wreg free
   797                           
   798                           ;LAB05.c: 114: choose_scale_temperature_and_fill_buffers(buffer_LCD_row_1,buffer_LCD_row
      +                          _2);
   799   0014EE  0E60               	movlw	low main@buffer_LCD_row_1
   800   0014F0  6E46               	movwf	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1^0,c
   801   0014F2  0E71               	movlw	low main@buffer_LCD_row_2
   802   0014F4  6E47               	movwf	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2^0,c
   803   0014F6  EC3C  F004         	call	_choose_scale_temperature_and_fill_buffers	;wreg free
   804                           
   805                           ;LAB05.c: 115: show_temperature_c_RGB();
   806   0014FA  EC2E  F00A         	call	_show_temperature_c_RGB	;wreg free
   807                           
   808                           ; BSR set to: 0
   809                           ;LAB05.c: 116: show_temperature_LCD(buffer_LCD_row_1, buffer_LCD_row_2, Temp_n1, Hum_n1,
      +                           Scale_Temperature_n1);
   810   0014FE  0E60               	movlw	low main@buffer_LCD_row_1
   811   001500  6E06               	movwf	show_temperature_LCD@buffer_LCD_row_1^0,c
   812   001502  0E71               	movlw	low main@buffer_LCD_row_2
   813   001504  6E07               	movwf	show_temperature_LCD@buffer_LCD_row_2^0,c
   814   001506  C082  F008         	movff	main@Temp_n1,show_temperature_LCD@Temp_n1
   815   00150A  C083  F009         	movff	main@Hum_n1,show_temperature_LCD@Hum_n1
   816   00150E  C084  F00A         	movff	main@Scale_Temperature_n1,show_temperature_LCD@Scale_Temperature_n1
   817   001512  EC28  F009         	call	_show_temperature_LCD	;wreg free
   818                           
   819                           ;LAB05.c: 117: check_potentiometer_voltaje();
   820   001516  EC42  F00C         	call	_check_potentiometer_voltaje	;wreg free
   821                           
   822                           ;LAB05.c: 118: Enable_sample = 0;
   823   00151A  0E00               	movlw	0
   824   00151C  0100               	movlb	0	; () banked
   825   00151E  6F86               	movwf	_Enable_sample& (0+255),b
   826                           
   827                           ; BSR set to: 0
   828                           ;LAB05.c: 121: Temp_n1=Temp;
   829   001520  C088  F082         	movff	_Temp,main@Temp_n1
   830                           
   831                           ; BSR set to: 0
   832                           ;LAB05.c: 122: Hum_n1=Hum;
   833   001524  C087  F083         	movff	_Hum,main@Hum_n1
   834                           
   835                           ; BSR set to: 0
   836                           ;LAB05.c: 123: Scale_Temperature_n1=Scale_Temperature;
   837   001528  C085  F084         	movff	_Scale_Temperature,main@Scale_Temperature_n1
   838   00152C  D7D6               	goto	l2940
   839   00152E                     __end_of_main:
   840                           	callstack 0
   841                           
   842 ;; *************** function _welcome_operations *****************
   843 ;; Defined at:
   844 ;;		line 200 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   858 ;;      Params:         0       0       0       0       0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0       0       0       0       0
   860 ;;      Temps:          2       0       0       0       0       0       0       0       0
   861 ;;      Totals:         2       0       0       0       0       0       0       0       0
   862 ;;Total ram usage:        2 bytes
   863 ;; Hardware stack levels used: 1
   864 ;; Hardware stack levels required when called: 5
   865 ;; This function calls:
   866 ;;		_BorraLCD
   867 ;;		_EEPROM_Read
   868 ;;		_EscribeLCD_n8
   869 ;;		_MensajeLCD_Var
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text1
   876   001364                     __ptext1:
   877                           	callstack 0
   878   001364                     _welcome_operations:
   879                           	callstack 25
   880                           
   881                           ;LAB05.c: 204: if(TO==0){
   882                           
   883                           ; BSR set to: 0
   884                           ;incstack = 0
   885   001364  B6D0               	btfsc	4048,3,c	;volatile
   886   001366  D006               	goto	l2756
   887                           
   888                           ;LAB05.c: 205: TO=1;
   889   001368  86D0               	bsf	4048,3,c	;volatile
   890                           
   891                           ;LAB05.c: 206: MensajeLCD_Var("Failed DHT11");
   892   00136A  0E1C               	movlw	low STR_1
   893   00136C  6E06               	movwf	MensajeLCD_Var@a^0,c
   894   00136E  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   895   001372  0003               	sleep		;# 
   896   001374                     l2756:
   897                           
   898                           ;LAB05.c: 208: };LAB05.c: 210: BorraLCD();
   899   001374  EC73  F00C         	call	_BorraLCD	;wreg free
   900                           
   901                           ;LAB05.c: 211: MensajeLCD_Var("Sensors");
   902   001378  0E69               	movlw	low STR_2
   903   00137A  6E06               	movwf	MensajeLCD_Var@a^0,c
   904   00137C  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   905                           
   906                           ;LAB05.c: 212: MensajeLCD_Var("\nGod is good");
   907   001380  0E29               	movlw	low STR_3
   908   001382  6E06               	movwf	MensajeLCD_Var@a^0,c
   909   001384  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   910                           
   911                           ;LAB05.c: 213: _delay((unsigned long)((1000)*(8000000/4000.0)));
   912   001388  0E0B               	movlw	11
   913   00138A  6E0F               	movwf	(??_welcome_operations+1)^0,c
   914   00138C  0E26               	movlw	38
   915   00138E  6E0E               	movwf	??_welcome_operations^0,c
   916   001390  0E5E               	movlw	94
   917   001392                     u2577:
   918   001392  2EE8               	decfsz	wreg,f,c
   919   001394  D7FE               	bra	u2577
   920   001396  2E0E               	decfsz	??_welcome_operations^0,f,c
   921   001398  D7FC               	bra	u2577
   922   00139A  2E0F               	decfsz	(??_welcome_operations+1)^0,f,c
   923   00139C  D7FA               	bra	u2577
   924                           
   925                           ;LAB05.c: 216: BorraLCD();
   926   00139E  EC73  F00C         	call	_BorraLCD	;wreg free
   927                           
   928                           ;LAB05.c: 217: MensajeLCD_Var("Last Tempetature");
   929   0013A2  0E0B               	movlw	low STR_4
   930   0013A4  6E06               	movwf	MensajeLCD_Var@a^0,c
   931   0013A6  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   932                           
   933                           ;LAB05.c: 218: MensajeLCD_Var("\nT: ");
   934   0013AA  0E71               	movlw	low STR_5
   935   0013AC  6E06               	movwf	MensajeLCD_Var@a^0,c
   936   0013AE  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   937                           
   938                           ;LAB05.c: 219: EscribeLCD_n8(EEPROM_Read(0x0),2);
   939   0013B2  0E02               	movlw	2
   940   0013B4  6E09               	movwf	EscribeLCD_n8@b^0,c
   941   0013B6  0E00               	movlw	0
   942   0013B8  EC84  F00C         	call	_EEPROM_Read
   943   0013BC  EC34  F007         	call	_EscribeLCD_n8
   944                           
   945                           ;LAB05.c: 220: MensajeLCD_Var(" C");
   946   0013C0  0E56               	movlw	low (STR_7+5)
   947   0013C2  6E06               	movwf	MensajeLCD_Var@a^0,c
   948   0013C4  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   949                           
   950                           ;LAB05.c: 221: _delay((unsigned long)((1000)*(8000000/4000.0)));
   951   0013C8  0E0B               	movlw	11
   952   0013CA  6E0F               	movwf	(??_welcome_operations+1)^0,c
   953   0013CC  0E26               	movlw	38
   954   0013CE  6E0E               	movwf	??_welcome_operations^0,c
   955   0013D0  0E5E               	movlw	94
   956   0013D2                     u2587:
   957   0013D2  2EE8               	decfsz	wreg,f,c
   958   0013D4  D7FE               	bra	u2587
   959   0013D6  2E0E               	decfsz	??_welcome_operations^0,f,c
   960   0013D8  D7FC               	bra	u2587
   961   0013DA  2E0F               	decfsz	(??_welcome_operations+1)^0,f,c
   962   0013DC  D7FA               	bra	u2587
   963   0013DE  0012               	return		;funcret
   964   0013E0                     __end_of_welcome_operations:
   965                           	callstack 0
   966                           
   967 ;; *************** function _MensajeLCD_Var *****************
   968 ;; Defined at:
   969 ;;		line 232 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  a               1    5[COMRAM] PTR unsigned char 
   972 ;;		 -> STR_6(3), STR_5(5), STR_4(17), STR_3(13), 
   973 ;;		 -> STR_2(8), STR_1(13), 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  counter         1    7[COMRAM] unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   985 ;;      Params:         1       0       0       0       0       0       0       0       0
   986 ;;      Locals:         1       0       0       0       0       0       0       0       0
   987 ;;      Temps:          1       0       0       0       0       0       0       0       0
   988 ;;      Totals:         3       0       0       0       0       0       0       0       0
   989 ;;Total ram usage:        3 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 4
   992 ;; This function calls:
   993 ;;		_BorraLCD
   994 ;;		_DireccionaLCD
   995 ;;		_EscribeLCD_c
   996 ;; This function is called by:
   997 ;;		_welcome_operations
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text2
  1002   0012E0                     __ptext2:
  1003                           	callstack 0
  1004   0012E0                     _MensajeLCD_Var:
  1005                           	callstack 25
  1006                           
  1007                           ;LibLCDXC8.h: 237: unsigned char counter=0;
  1008                           
  1009                           ;incstack = 0
  1010   0012E0  0E00               	movlw	0
  1011   0012E2  6E08               	movwf	MensajeLCD_Var@counter^0,c
  1012                           
  1013                           ;LibLCDXC8.h: 238: while(a[counter]!='\0' && counter<=255){
  1014   0012E4  D032               	goto	l2352
  1015   0012E6                     l2334:
  1016                           
  1017                           ;LibLCDXC8.h: 240: if(a[counter]=='\n'){
  1018   0012E6  5006               	movf	MensajeLCD_Var@a^0,w,c
  1019   0012E8  2408               	addwf	MensajeLCD_Var@counter^0,w,c
  1020   0012EA  6E07               	movwf	??_MensajeLCD_Var^0,c
  1021   0012EC  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1022   0012F0                     	if	1	;There is more than 1 active tblptr byte
  1023   0012F0  0E08               	movlw	high __smallconst
  1024   0012F2  6EF7               	movwf	tblptrh,c
  1025   0012F4                     	endif
  1026   0012F4                     	if	0	;tblptru may be non-zero
  1027   0012F4                     	endif
  1028   0012F4                     	if	0	;tblptru may be non-zero
  1029   0012F4                     	endif
  1030   0012F4  0008               	tblrd		*
  1031   0012F6  50F5               	movf	tablat,w,c
  1032   0012F8  0A0A               	xorlw	10
  1033   0012FA  A4D8               	btfss	status,2,c
  1034   0012FC  D004               	goto	l2340
  1035                           
  1036                           ;LibLCDXC8.h: 241: DireccionaLCD(0xC0);
  1037   0012FE  0EC0               	movlw	192
  1038   001300  EC68  F00C         	call	_DireccionaLCD
  1039                           
  1040                           ;LibLCDXC8.h: 242: counter++;
  1041   001304  2A08               	incf	MensajeLCD_Var@counter^0,f,c
  1042   001306                     l2340:
  1043                           
  1044                           ;LibLCDXC8.h: 243: };LibLCDXC8.h: 245: if((counter+1)%32==0){
  1045   001306  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
  1046   00130A  0E01               	movlw	1
  1047   00130C  2607               	addwf	??_MensajeLCD_Var^0,f,c
  1048   00130E  0E1F               	movlw	31
  1049   001310  1607               	andwf	??_MensajeLCD_Var^0,f,c
  1050   001312  A4D8               	btfss	status,2,c
  1051   001314  D003               	goto	l2344
  1052                           
  1053                           ;LibLCDXC8.h: 246: BorraLCD();
  1054   001316  EC73  F00C         	call	_BorraLCD	;wreg free
  1055                           
  1056                           ;LibLCDXC8.h: 247: }
  1057   00131A  D00B               	goto	l2348
  1058   00131C                     l2344:
  1059                           
  1060                           ;LibLCDXC8.h: 248: else if((counter+1)%16==0){
  1061   00131C  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
  1062   001320  0E01               	movlw	1
  1063   001322  2607               	addwf	??_MensajeLCD_Var^0,f,c
  1064   001324  0E0F               	movlw	15
  1065   001326  1607               	andwf	??_MensajeLCD_Var^0,f,c
  1066   001328  A4D8               	btfss	status,2,c
  1067   00132A  D003               	goto	l2348
  1068                           
  1069                           ;LibLCDXC8.h: 249: DireccionaLCD(0xC0);
  1070   00132C  0EC0               	movlw	192
  1071   00132E  EC68  F00C         	call	_DireccionaLCD
  1072   001332                     l2348:
  1073                           
  1074                           ;LibLCDXC8.h: 250: };LibLCDXC8.h: 252: EscribeLCD_c(a[counter]);
  1075   001332  5006               	movf	MensajeLCD_Var@a^0,w,c
  1076   001334  2408               	addwf	MensajeLCD_Var@counter^0,w,c
  1077   001336  6E07               	movwf	??_MensajeLCD_Var^0,c
  1078   001338  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1079   00133C                     	if	1	;There is more than 1 active tblptr byte
  1080   00133C  0E08               	movlw	high __smallconst
  1081   00133E  6EF7               	movwf	tblptrh,c
  1082   001340                     	endif
  1083   001340                     	if	0	;tblptru may be non-zero
  1084   001340                     	endif
  1085   001340                     	if	0	;tblptru may be non-zero
  1086   001340                     	endif
  1087   001340  0008               	tblrd		*
  1088   001342  50F5               	movf	tablat,w,c
  1089   001344  EC5D  F00C         	call	_EscribeLCD_c
  1090                           
  1091                           ;LibLCDXC8.h: 253: counter++;
  1092   001348  2A08               	incf	MensajeLCD_Var@counter^0,f,c
  1093   00134A                     l2352:
  1094   00134A  5006               	movf	MensajeLCD_Var@a^0,w,c
  1095   00134C  2408               	addwf	MensajeLCD_Var@counter^0,w,c
  1096   00134E  6E07               	movwf	??_MensajeLCD_Var^0,c
  1097   001350  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1098   001354                     	if	1	;There is more than 1 active tblptr byte
  1099   001354  0E08               	movlw	high __smallconst
  1100   001356  6EF7               	movwf	tblptrh,c
  1101   001358                     	endif
  1102   001358                     	if	0	;tblptru may be non-zero
  1103   001358                     	endif
  1104   001358                     	if	0	;tblptru may be non-zero
  1105   001358                     	endif
  1106   001358  0008               	tblrd		*
  1107   00135A  50F5               	movf	tablat,w,c
  1108   00135C  0900               	iorlw	0
  1109   00135E  B4D8               	btfsc	status,2,c
  1110   001360  0012               	return	
  1111   001362  D7C1               	goto	l2334
  1112   001364                     __end_of_MensajeLCD_Var:
  1113                           	callstack 0
  1114                           
  1115 ;; *************** function _EscribeLCD_n8 *****************
  1116 ;; Defined at:
  1117 ;;		line 145 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  a               1    wreg     unsigned char 
  1120 ;;  b               1    8[COMRAM] unsigned char 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  a               1   12[COMRAM] unsigned char 
  1123 ;;  unidad          1   11[COMRAM] unsigned char 
  1124 ;;  decena          1   10[COMRAM] unsigned char 
  1125 ;;  centena         1    9[COMRAM] unsigned char 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1135 ;;      Params:         1       0       0       0       0       0       0       0       0
  1136 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1138 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1139 ;;Total ram usage:        5 bytes
  1140 ;; Hardware stack levels used: 1
  1141 ;; Hardware stack levels required when called: 3
  1142 ;; This function calls:
  1143 ;;		_EnviaDato
  1144 ;;		_HabilitaLCD
  1145 ;;		_RetardoLCD
  1146 ;;		___lbdiv
  1147 ;;		___lbmod
  1148 ;; This function is called by:
  1149 ;;		_welcome_operations
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text3
  1154   000E68                     __ptext3:
  1155                           	callstack 0
  1156   000E68                     _EscribeLCD_n8:
  1157                           	callstack 26
  1158                           
  1159                           ;incstack = 0
  1160                           ;EscribeLCD_n8@a stored from wreg
  1161   000E68  6E0D               	movwf	EscribeLCD_n8@a^0,c
  1162                           
  1163                           ;LibLCDXC8.h: 150: unsigned char centena,decena,unidad;;LibLCDXC8.h: 151: LATD0=1;
  1164   000E6A  808C               	bsf	3980,0,c	;volatile
  1165                           
  1166                           ;LibLCDXC8.h: 152: switch(b){
  1167   000E6C  D065               	goto	l2330
  1168   000E6E                     l2298:
  1169   000E6E  0E0A               	movlw	10
  1170   000E70  6E01               	movwf	___lbmod@divisor^0,c
  1171   000E72  500D               	movf	EscribeLCD_n8@a^0,w,c
  1172   000E74  ECD6  F00B         	call	___lbmod
  1173   000E78  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  1174                           
  1175                           ;LibLCDXC8.h: 154: EnviaDato(unidad+48);
  1176   000E7A  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  1177   000E7C  0F30               	addlw	48
  1178   000E7E  EC46  F00B         	call	_EnviaDato
  1179                           
  1180                           ;LibLCDXC8.h: 155: HabilitaLCD();
  1181   000E82  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  1182                           
  1183                           ;LibLCDXC8.h: 156: RetardoLCD(4);
  1184   000E86  0E04               	movlw	4
  1185   000E88  EC97  F00A         	call	_RetardoLCD
  1186                           
  1187                           ;LibLCDXC8.h: 157: break;
  1188   000E8C  0012               	return	
  1189   000E8E                     l2304:
  1190   000E8E  0E0A               	movlw	10
  1191   000E90  6E05               	movwf	___lbdiv@divisor^0,c
  1192   000E92  0E64               	movlw	100
  1193   000E94  6E01               	movwf	___lbmod@divisor^0,c
  1194   000E96  500D               	movf	EscribeLCD_n8@a^0,w,c
  1195   000E98  ECD6  F00B         	call	___lbmod
  1196   000E9C  EC8A  F00B         	call	___lbdiv
  1197   000EA0  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  1198                           
  1199                           ;LibLCDXC8.h: 159: unidad=a%10;
  1200   000EA2  0E0A               	movlw	10
  1201   000EA4  6E01               	movwf	___lbmod@divisor^0,c
  1202   000EA6  500D               	movf	EscribeLCD_n8@a^0,w,c
  1203   000EA8  ECD6  F00B         	call	___lbmod
  1204   000EAC  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  1205                           
  1206                           ;LibLCDXC8.h: 160: EnviaDato(decena+48);
  1207   000EAE  500B               	movf	EscribeLCD_n8@decena^0,w,c
  1208   000EB0  0F30               	addlw	48
  1209   000EB2  EC46  F00B         	call	_EnviaDato
  1210                           
  1211                           ;LibLCDXC8.h: 161: HabilitaLCD();
  1212   000EB6  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  1213                           
  1214                           ;LibLCDXC8.h: 162: RetardoLCD(4);
  1215   000EBA  0E04               	movlw	4
  1216   000EBC  EC97  F00A         	call	_RetardoLCD
  1217                           
  1218                           ;LibLCDXC8.h: 163: EnviaDato(unidad+48);
  1219   000EC0  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  1220   000EC2  0F30               	addlw	48
  1221   000EC4  EC46  F00B         	call	_EnviaDato
  1222                           
  1223                           ;LibLCDXC8.h: 164: HabilitaLCD();
  1224   000EC8  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  1225                           
  1226                           ;LibLCDXC8.h: 165: RetardoLCD(4);
  1227   000ECC  0E04               	movlw	4
  1228   000ECE  EC97  F00A         	call	_RetardoLCD
  1229                           
  1230                           ;LibLCDXC8.h: 166: break;
  1231   000ED2  0012               	return	
  1232   000ED4                     l2314:
  1233   000ED4  0E64               	movlw	100
  1234   000ED6  6E05               	movwf	___lbdiv@divisor^0,c
  1235   000ED8  500D               	movf	EscribeLCD_n8@a^0,w,c
  1236   000EDA  EC8A  F00B         	call	___lbdiv
  1237   000EDE  6E0A               	movwf	EscribeLCD_n8@centena^0,c
  1238                           
  1239                           ;LibLCDXC8.h: 168: decena=(a%100)/10;
  1240   000EE0  0E0A               	movlw	10
  1241   000EE2  6E05               	movwf	___lbdiv@divisor^0,c
  1242   000EE4  0E64               	movlw	100
  1243   000EE6  6E01               	movwf	___lbmod@divisor^0,c
  1244   000EE8  500D               	movf	EscribeLCD_n8@a^0,w,c
  1245   000EEA  ECD6  F00B         	call	___lbmod
  1246   000EEE  EC8A  F00B         	call	___lbdiv
  1247   000EF2  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  1248                           
  1249                           ;LibLCDXC8.h: 169: unidad=a%10;
  1250   000EF4  0E0A               	movlw	10
  1251   000EF6  6E01               	movwf	___lbmod@divisor^0,c
  1252   000EF8  500D               	movf	EscribeLCD_n8@a^0,w,c
  1253   000EFA  ECD6  F00B         	call	___lbmod
  1254   000EFE  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  1255                           
  1256                           ;LibLCDXC8.h: 170: EnviaDato(centena+48);
  1257   000F00  500A               	movf	EscribeLCD_n8@centena^0,w,c
  1258   000F02  0F30               	addlw	48
  1259   000F04  EC46  F00B         	call	_EnviaDato
  1260                           
  1261                           ;LibLCDXC8.h: 171: HabilitaLCD();
  1262   000F08  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  1263                           
  1264                           ;LibLCDXC8.h: 172: RetardoLCD(4);
  1265   000F0C  0E04               	movlw	4
  1266   000F0E  EC97  F00A         	call	_RetardoLCD
  1267                           
  1268                           ;LibLCDXC8.h: 173: EnviaDato(decena+48);
  1269   000F12  500B               	movf	EscribeLCD_n8@decena^0,w,c
  1270   000F14  0F30               	addlw	48
  1271   000F16  EC46  F00B         	call	_EnviaDato
  1272                           
  1273                           ;LibLCDXC8.h: 174: HabilitaLCD();
  1274   000F1A  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  1275                           
  1276                           ;LibLCDXC8.h: 175: RetardoLCD(4);
  1277   000F1E  0E04               	movlw	4
  1278   000F20  EC97  F00A         	call	_RetardoLCD
  1279                           
  1280                           ;LibLCDXC8.h: 176: EnviaDato(unidad+48);
  1281   000F24  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  1282   000F26  0F30               	addlw	48
  1283   000F28  EC46  F00B         	call	_EnviaDato
  1284                           
  1285                           ;LibLCDXC8.h: 177: HabilitaLCD();
  1286   000F2C  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  1287                           
  1288                           ;LibLCDXC8.h: 178: RetardoLCD(4);
  1289   000F30  0E04               	movlw	4
  1290   000F32  EC97  F00A         	call	_RetardoLCD
  1291                           
  1292                           ;LibLCDXC8.h: 179: break;
  1293   000F36  0012               	return	
  1294   000F38                     l2330:
  1295   000F38  5009               	movf	EscribeLCD_n8@b^0,w,c
  1296                           
  1297                           ; Switch size 1, requested type "simple"
  1298                           ; Number of cases is 3, Range of values is 1 to 3
  1299                           ; switch strategies available:
  1300                           ; Name         Instructions Cycles
  1301                           ; simple_byte           10     6 (average)
  1302                           ;	Chosen strategy is simple_byte
  1303   000F3A  0A01               	xorlw	1	; case 1
  1304   000F3C  B4D8               	btfsc	status,2,c
  1305   000F3E  D797               	goto	l2298
  1306   000F40  0A03               	xorlw	3	; case 2
  1307   000F42  B4D8               	btfsc	status,2,c
  1308   000F44  D7A4               	goto	l2304
  1309   000F46  0A01               	xorlw	1	; case 3
  1310   000F48  A4D8               	btfss	status,2,c
  1311   000F4A  0012               	return	
  1312   000F4C  D7C3               	goto	l2314
  1313   000F4E                     __end_of_EscribeLCD_n8:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function ___lbmod *****************
  1317 ;; Defined at:
  1318 ;;		line 4 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbmod.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  dividend        1    wreg     unsigned char 
  1321 ;;  divisor         1    0[COMRAM] unsigned char 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  dividend        1    1[COMRAM] unsigned char 
  1324 ;;  rem             1    3[COMRAM] unsigned char 
  1325 ;;  counter         1    2[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      unsigned char 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1335 ;;      Params:         1       0       0       0       0       0       0       0       0
  1336 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1338 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1339 ;;Total ram usage:        4 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_EscribeLCD_n8
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text4
  1350   0017AC                     __ptext4:
  1351                           	callstack 0
  1352   0017AC                     ___lbmod:
  1353                           	callstack 27
  1354                           
  1355                           ;incstack = 0
  1356                           ;___lbmod@dividend stored from wreg
  1357   0017AC  6E02               	movwf	___lbmod@dividend^0,c
  1358   0017AE  0E08               	movlw	8
  1359   0017B0  6E03               	movwf	___lbmod@counter^0,c
  1360   0017B2  0E00               	movlw	0
  1361   0017B4  6E04               	movwf	___lbmod@rem^0,c
  1362   0017B6                     l2186:
  1363   0017B6  90D8               	bcf	status,0,c
  1364   0017B8  3402               	rlcf	___lbmod@dividend^0,w,c
  1365   0017BA  3404               	rlcf	___lbmod@rem^0,w,c
  1366   0017BC  6E04               	movwf	___lbmod@rem^0,c
  1367   0017BE  90D8               	bcf	status,0,c
  1368   0017C0  3602               	rlcf	___lbmod@dividend^0,f,c
  1369   0017C2  5001               	movf	___lbmod@divisor^0,w,c
  1370   0017C4  5C04               	subwf	___lbmod@rem^0,w,c
  1371   0017C6  A0D8               	btfss	status,0,c
  1372   0017C8  D002               	goto	l2194
  1373   0017CA  5001               	movf	___lbmod@divisor^0,w,c
  1374   0017CC  5E04               	subwf	___lbmod@rem^0,f,c
  1375   0017CE                     l2194:
  1376   0017CE  2E03               	decfsz	___lbmod@counter^0,f,c
  1377   0017D0  D7F2               	goto	l2186
  1378   0017D2  5004               	movf	___lbmod@rem^0,w,c
  1379   0017D4  0012               	return		;funcret
  1380   0017D6                     __end_of___lbmod:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function ___lbdiv *****************
  1384 ;; Defined at:
  1385 ;;		line 4 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbdiv.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  dividend        1    wreg     unsigned char 
  1388 ;;  divisor         1    4[COMRAM] unsigned char 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  dividend        1    5[COMRAM] unsigned char 
  1391 ;;  quotient        1    7[COMRAM] unsigned char 
  1392 ;;  counter         1    6[COMRAM] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      unsigned char 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1402 ;;      Params:         1       0       0       0       0       0       0       0       0
  1403 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1405 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1406 ;;Total ram usage:        4 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; Hardware stack levels required when called: 1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_EscribeLCD_n8
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text5
  1417   001714                     __ptext5:
  1418                           	callstack 0
  1419   001714                     ___lbdiv:
  1420                           	callstack 27
  1421                           
  1422                           ;incstack = 0
  1423                           ;___lbdiv@dividend stored from wreg
  1424   001714  6E06               	movwf	___lbdiv@dividend^0,c
  1425   001716  0E00               	movlw	0
  1426   001718  6E08               	movwf	___lbdiv@quotient^0,c
  1427   00171A  5005               	movf	___lbdiv@divisor^0,w,c
  1428   00171C  B4D8               	btfsc	status,2,c
  1429   00171E  D015               	goto	l2180
  1430   001720  0E01               	movlw	1
  1431   001722  6E07               	movwf	___lbdiv@counter^0,c
  1432   001724  D003               	goto	l2168
  1433   001726                     l2164:
  1434   001726  90D8               	bcf	status,0,c
  1435   001728  3605               	rlcf	___lbdiv@divisor^0,f,c
  1436   00172A  2A07               	incf	___lbdiv@counter^0,f,c
  1437   00172C                     l2168:
  1438   00172C  AE05               	btfss	___lbdiv@divisor^0,7,c
  1439   00172E  D7FB               	goto	l2164
  1440   001730                     u1400:
  1441   001730  90D8               	bcf	status,0,c
  1442   001732  3608               	rlcf	___lbdiv@quotient^0,f,c
  1443   001734  5005               	movf	___lbdiv@divisor^0,w,c
  1444   001736  5C06               	subwf	___lbdiv@dividend^0,w,c
  1445   001738  A0D8               	btfss	status,0,c
  1446   00173A  D003               	goto	l2176
  1447   00173C  5005               	movf	___lbdiv@divisor^0,w,c
  1448   00173E  5E06               	subwf	___lbdiv@dividend^0,f,c
  1449   001740  8008               	bsf	___lbdiv@quotient^0,0,c
  1450   001742                     l2176:
  1451   001742  90D8               	bcf	status,0,c
  1452   001744  3205               	rrcf	___lbdiv@divisor^0,f,c
  1453   001746  2E07               	decfsz	___lbdiv@counter^0,f,c
  1454   001748  D7F3               	goto	u1400
  1455   00174A                     l2180:
  1456   00174A  5008               	movf	___lbdiv@quotient^0,w,c
  1457   00174C  0012               	return		;funcret
  1458   00174E                     __end_of___lbdiv:
  1459                           	callstack 0
  1460                           
  1461 ;; *************** function _EEPROM_Read *****************
  1462 ;; Defined at:
  1463 ;;		line 477 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  address         1    wreg     unsigned char 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  address         1    0[COMRAM] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      unsigned char 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1477 ;;      Params:         0       0       0       0       0       0       0       0       0
  1478 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1480 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1481 ;;Total ram usage:        1 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; Hardware stack levels required when called: 1
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_welcome_operations
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text6
  1492   001908                     __ptext6:
  1493                           	callstack 0
  1494   001908                     _EEPROM_Read:
  1495                           	callstack 28
  1496                           
  1497                           ;incstack = 0
  1498                           ;EEPROM_Read@address stored from wreg
  1499   001908  6E01               	movwf	EEPROM_Read@address^0,c
  1500                           
  1501                           ;LAB05.c: 478: EEADR=address;
  1502   00190A  C001  FFA9         	movff	EEPROM_Read@address,4009	;volatile
  1503                           
  1504                           ;LAB05.c: 479: RD=1;
  1505   00190E  80A6               	bsf	4006,0,c	;volsfr
  1506                           
  1507                           ;LAB05.c: 480: return EEDATA;
  1508   001910  50A8               	movf	168,w,c	;volatile
  1509   001912  0012               	return		;funcret
  1510   001914                     __end_of_EEPROM_Read:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function _show_temperature_c_RGB *****************
  1514 ;; Defined at:
  1515 ;;		line 293 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;		None
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 3F/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1529 ;;      Params:         0       0       0       0       0       0       0       0       0
  1530 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1532 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1533 ;;Total ram usage:        0 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; Hardware stack levels required when called: 1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text7
  1544   00145C                     __ptext7:
  1545                           	callstack 0
  1546   00145C                     _show_temperature_c_RGB:
  1547                           	callstack 29
  1548                           
  1549                           ;LAB05.c: 294: if(Temp<22){
  1550                           
  1551                           ;incstack = 0
  1552   00145C  0E16               	movlw	22
  1553   00145E  0100               	movlb	0	; () banked
  1554   001460  6188               	cpfslt	_Temp& (0+255),b
  1555   001462  D004               	goto	l2860
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;LAB05.c: 296: LATE0=1;
  1559   001464  808D               	bsf	3981,0,c	;volatile
  1560                           
  1561                           ;LAB05.c: 297: LATE2=1;
  1562   001466  848D               	bsf	3981,2,c	;volatile
  1563                           
  1564                           ;LAB05.c: 298: LATE1=1;
  1565   001468  828D               	bsf	3981,1,c	;volatile
  1566                           
  1567                           ;LAB05.c: 299: }
  1568   00146A  0012               	return	
  1569   00146C                     l2860:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;LAB05.c: 300: else if(Temp<25) {
  1573   00146C  0E19               	movlw	25
  1574   00146E  6188               	cpfslt	_Temp& (0+255),b
  1575   001470  D004               	goto	l2864
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;LAB05.c: 302: LATE0=0;
  1579   001472  908D               	bcf	3981,0,c	;volatile
  1580                           
  1581                           ;LAB05.c: 303: LATE2=1;
  1582   001474  848D               	bsf	3981,2,c	;volatile
  1583                           
  1584                           ;LAB05.c: 304: LATE1=0;
  1585   001476  928D               	bcf	3981,1,c	;volatile
  1586                           
  1587                           ;LAB05.c: 305: }
  1588   001478  0012               	return	
  1589   00147A                     l2864:
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;LAB05.c: 306: else if(Temp<28){
  1593   00147A  0E1C               	movlw	28
  1594   00147C  6188               	cpfslt	_Temp& (0+255),b
  1595   00147E  D004               	goto	l2868
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;LAB05.c: 308: LATE0=1;
  1599   001480  808D               	bsf	3981,0,c	;volatile
  1600                           
  1601                           ;LAB05.c: 309: LATE2=1;
  1602   001482  848D               	bsf	3981,2,c	;volatile
  1603                           
  1604                           ;LAB05.c: 310: LATE1=0;
  1605   001484  928D               	bcf	3981,1,c	;volatile
  1606                           
  1607                           ;LAB05.c: 312: }
  1608   001486  0012               	return	
  1609   001488                     l2868:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;LAB05.c: 313: else if(Temp<31){
  1613   001488  0E1F               	movlw	31
  1614   00148A  6188               	cpfslt	_Temp& (0+255),b
  1615   00148C  D004               	goto	l2872
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;LAB05.c: 315: LATE0=1;
  1619   00148E  808D               	bsf	3981,0,c	;volatile
  1620                           
  1621                           ;LAB05.c: 316: LATE2=0;
  1622   001490  948D               	bcf	3981,2,c	;volatile
  1623                           
  1624                           ;LAB05.c: 317: LATE1=0;
  1625   001492  928D               	bcf	3981,1,c	;volatile
  1626                           
  1627                           ;LAB05.c: 318: }
  1628   001494  0012               	return	
  1629   001496                     l2872:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;LAB05.c: 319: else if(Temp<34){
  1633   001496  0E22               	movlw	34
  1634   001498  6188               	cpfslt	_Temp& (0+255),b
  1635   00149A  D004               	goto	l2876
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;LAB05.c: 321: LATE0=1;
  1639   00149C  808D               	bsf	3981,0,c	;volatile
  1640                           
  1641                           ;LAB05.c: 322: LATE2=0;
  1642   00149E  948D               	bcf	3981,2,c	;volatile
  1643                           
  1644                           ;LAB05.c: 323: LATE1=1;
  1645   0014A0  828D               	bsf	3981,1,c	;volatile
  1646                           
  1647                           ;LAB05.c: 324: }
  1648   0014A2  0012               	return	
  1649   0014A4                     l2876:
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;LAB05.c: 325: else if(Temp<37){
  1653   0014A4  0E25               	movlw	37
  1654   0014A6  6188               	cpfslt	_Temp& (0+255),b
  1655   0014A8  D004               	goto	l2880
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;LAB05.c: 327: LATE0=0;
  1659   0014AA  908D               	bcf	3981,0,c	;volatile
  1660                           
  1661                           ;LAB05.c: 328: LATE2=0;
  1662   0014AC  948D               	bcf	3981,2,c	;volatile
  1663                           
  1664                           ;LAB05.c: 329: LATE1=1;
  1665   0014AE  828D               	bsf	3981,1,c	;volatile
  1666                           
  1667                           ;LAB05.c: 330: }
  1668   0014B0  0012               	return	
  1669   0014B2                     l2880:
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;LAB05.c: 331: else if(Temp<40){
  1673   0014B2  0E28               	movlw	40
  1674   0014B4  6188               	cpfslt	_Temp& (0+255),b
  1675   0014B6  D004               	goto	l319
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;LAB05.c: 333: LATE0=0;
  1679   0014B8  908D               	bcf	3981,0,c	;volatile
  1680                           
  1681                           ;LAB05.c: 334: LATE2=1;
  1682   0014BA  848D               	bsf	3981,2,c	;volatile
  1683                           
  1684                           ;LAB05.c: 335: LATE1=1;
  1685   0014BC  828D               	bsf	3981,1,c	;volatile
  1686                           
  1687                           ;LAB05.c: 336: }
  1688   0014BE  0012               	return	
  1689   0014C0                     l319:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;LAB05.c: 337: else{;LAB05.c: 339: LATE0=0;
  1693   0014C0  908D               	bcf	3981,0,c	;volatile
  1694                           
  1695                           ;LAB05.c: 340: LATE2=0;
  1696   0014C2  948D               	bcf	3981,2,c	;volatile
  1697                           
  1698                           ;LAB05.c: 341: LATE1=0;
  1699   0014C4  928D               	bcf	3981,1,c	;volatile
  1700                           
  1701                           ; BSR set to: 0
  1702   0014C6  0012               	return		;funcret
  1703   0014C8                     __end_of_show_temperature_c_RGB:
  1704                           	callstack 0
  1705                           
  1706 ;; *************** function _show_temperature_LCD *****************
  1707 ;; Defined at:
  1708 ;;		line 404 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  buffer_LCD_r    1    5[COMRAM] PTR unsigned char 
  1711 ;;		 -> main@buffer_LCD_row_1(17), 
  1712 ;;  buffer_LCD_r    1    6[COMRAM] PTR unsigned char 
  1713 ;;		 -> main@buffer_LCD_row_2(17), 
  1714 ;;  Temp_n1         1    7[COMRAM] unsigned char 
  1715 ;;  Hum_n1          1    8[COMRAM] unsigned char 
  1716 ;;  Scale_Temper    1    9[COMRAM] unsigned char 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  counter         1   10[COMRAM] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 3F/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1728 ;;      Params:         5       0       0       0       0       0       0       0       0
  1729 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1731 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1732 ;;Total ram usage:        6 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 4
  1735 ;; This function calls:
  1736 ;;		_DireccionaLCD
  1737 ;;		_EscribeLCD_c
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text8
  1744   001250                     __ptext8:
  1745                           	callstack 0
  1746   001250                     _show_temperature_LCD:
  1747                           	callstack 26
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;LAB05.c: 405: unsigned char counter=0;
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;incstack = 0
  1754   001250  0E00               	movlw	0
  1755   001252  6E0B               	movwf	show_temperature_LCD@counter^0,c
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;LAB05.c: 407: if(Temp_n1!=Temp || Scale_Temperature!=Scale_Temperature_n1){
  1759   001254  5188               	movf	_Temp& (0+255),w,b
  1760   001256  1808               	xorwf	show_temperature_LCD@Temp_n1^0,w,c
  1761   001258  A4D8               	btfss	status,2,c
  1762   00125A  D004               	goto	u2450
  1763                           
  1764                           ; BSR set to: 0
  1765   00125C  500A               	movf	show_temperature_LCD@Scale_Temperature_n1^0,w,c
  1766   00125E  1985               	xorwf	_Scale_Temperature& (0+255),w,b
  1767   001260  B4D8               	btfsc	status,2,c
  1768   001262  D01B               	goto	u2470
  1769   001264                     u2450:
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;LAB05.c: 408: DireccionaLCD(0x80);
  1773   001264  0E80               	movlw	128
  1774   001266  EC68  F00C         	call	_DireccionaLCD
  1775                           
  1776                           ;LAB05.c: 410: while (buffer_LCD_row_1[counter]!='\0') {
  1777   00126A  D008               	goto	l2896
  1778   00126C                     l2892:
  1779                           
  1780                           ;LAB05.c: 411: EscribeLCD_c(buffer_LCD_row_1[counter]);
  1781   00126C  5006               	movf	show_temperature_LCD@buffer_LCD_row_1^0,w,c
  1782   00126E  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1783   001270  6ED9               	movwf	fsr2l,c
  1784   001272  6ADA               	clrf	fsr2h,c
  1785   001274  50DF               	movf	indf2,w,c
  1786   001276  EC5D  F00C         	call	_EscribeLCD_c
  1787                           
  1788                           ;LAB05.c: 412: counter++;
  1789   00127A  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1790   00127C                     l2896:
  1791   00127C  5006               	movf	show_temperature_LCD@buffer_LCD_row_1^0,w,c
  1792   00127E  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1793   001280  6ED9               	movwf	fsr2l,c
  1794   001282  6ADA               	clrf	fsr2h,c
  1795   001284  50DF               	movf	indf2,w,c
  1796   001286  B4D8               	btfsc	status,2,c
  1797   001288  D005               	goto	l2902
  1798   00128A  D7F0               	goto	l2892
  1799   00128C                     l2898:
  1800                           
  1801                           ;LAB05.c: 416: EscribeLCD_c(' ');
  1802   00128C  0E20               	movlw	32
  1803   00128E  EC5D  F00C         	call	_EscribeLCD_c
  1804                           
  1805                           ;LAB05.c: 417: counter++;
  1806   001292  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1807   001294                     l2902:
  1808   001294  0E0F               	movlw	15
  1809   001296  640B               	cpfsgt	show_temperature_LCD@counter^0,c
  1810   001298  D7F9               	goto	l2898
  1811   00129A                     u2470:
  1812                           
  1813                           ;LAB05.c: 418: };LAB05.c: 419: };LAB05.c: 421: counter=0;
  1814   00129A  0E00               	movlw	0
  1815   00129C  6E0B               	movwf	show_temperature_LCD@counter^0,c
  1816                           
  1817                           ;LAB05.c: 423: if(Hum_n1!=Hum){
  1818   00129E  0100               	movlb	0	; () banked
  1819   0012A0  5187               	movf	_Hum& (0+255),w,b
  1820   0012A2  1809               	xorwf	show_temperature_LCD@Hum_n1^0,w,c
  1821   0012A4  B4D8               	btfsc	status,2,c
  1822   0012A6  0012               	return	
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;LAB05.c: 424: DireccionaLCD(0xC0);
  1826   0012A8  0EC0               	movlw	192
  1827   0012AA  EC68  F00C         	call	_DireccionaLCD
  1828                           
  1829                           ;LAB05.c: 427: while (buffer_LCD_row_2[counter]!='\0') {
  1830   0012AE  D008               	goto	l2914
  1831   0012B0                     l2910:
  1832                           
  1833                           ;LAB05.c: 428: EscribeLCD_c(buffer_LCD_row_2[counter]);
  1834   0012B0  5007               	movf	show_temperature_LCD@buffer_LCD_row_2^0,w,c
  1835   0012B2  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1836   0012B4  6ED9               	movwf	fsr2l,c
  1837   0012B6  6ADA               	clrf	fsr2h,c
  1838   0012B8  50DF               	movf	indf2,w,c
  1839   0012BA  EC5D  F00C         	call	_EscribeLCD_c
  1840                           
  1841                           ;LAB05.c: 429: counter++;
  1842   0012BE  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1843   0012C0                     l2914:
  1844   0012C0  5007               	movf	show_temperature_LCD@buffer_LCD_row_2^0,w,c
  1845   0012C2  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1846   0012C4  6ED9               	movwf	fsr2l,c
  1847   0012C6  6ADA               	clrf	fsr2h,c
  1848   0012C8  50DF               	movf	indf2,w,c
  1849   0012CA  B4D8               	btfsc	status,2,c
  1850   0012CC  D005               	goto	l2920
  1851   0012CE  D7F0               	goto	l2910
  1852   0012D0                     l2916:
  1853                           
  1854                           ;LAB05.c: 434: EscribeLCD_c(' ');
  1855   0012D0  0E20               	movlw	32
  1856   0012D2  EC5D  F00C         	call	_EscribeLCD_c
  1857                           
  1858                           ;LAB05.c: 435: counter++;
  1859   0012D6  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1860   0012D8                     l2920:
  1861   0012D8  0E0F               	movlw	15
  1862   0012DA  640B               	cpfsgt	show_temperature_LCD@counter^0,c
  1863   0012DC  D7F9               	goto	l2916
  1864   0012DE  0012               	return	
  1865   0012E0                     __end_of_show_temperature_LCD:
  1866                           	callstack 0
  1867                           
  1868 ;; *************** function _EscribeLCD_c *****************
  1869 ;; Defined at:
  1870 ;;		line 136 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  a               1    wreg     unsigned char 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  a               1    4[COMRAM] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1884 ;;      Params:         0       0       0       0       0       0       0       0       0
  1885 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1887 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1888 ;;Total ram usage:        1 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; Hardware stack levels required when called: 3
  1891 ;; This function calls:
  1892 ;;		_EnviaDato
  1893 ;;		_HabilitaLCD
  1894 ;;		_RetardoLCD
  1895 ;; This function is called by:
  1896 ;;		_MensajeLCD_Var
  1897 ;;		_show_temperature_LCD
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text9
  1902   0018BA                     __ptext9:
  1903                           	callstack 0
  1904   0018BA                     _EscribeLCD_c:
  1905                           	callstack 25
  1906                           
  1907                           ;incstack = 0
  1908                           ;EscribeLCD_c@a stored from wreg
  1909   0018BA  6E05               	movwf	EscribeLCD_c@a^0,c
  1910                           
  1911                           ;LibLCDXC8.h: 140: LATD0=1;
  1912   0018BC  808C               	bsf	3980,0,c	;volatile
  1913                           
  1914                           ;LibLCDXC8.h: 141: EnviaDato(a);
  1915   0018BE  5005               	movf	EscribeLCD_c@a^0,w,c
  1916   0018C0  EC46  F00B         	call	_EnviaDato
  1917                           
  1918                           ;LibLCDXC8.h: 142: HabilitaLCD();
  1919   0018C4  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  1920                           
  1921                           ;LibLCDXC8.h: 143: RetardoLCD(4);
  1922   0018C8  0E04               	movlw	4
  1923   0018CA  EC97  F00A         	call	_RetardoLCD
  1924   0018CE  0012               	return		;funcret
  1925   0018D0                     __end_of_EscribeLCD_c:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _DireccionaLCD *****************
  1929 ;; Defined at:
  1930 ;;		line 257 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  a               1    wreg     unsigned char 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  a               1    4[COMRAM] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0
  1945 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1947 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1948 ;;Total ram usage:        1 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 3
  1951 ;; This function calls:
  1952 ;;		_EnviaDato
  1953 ;;		_HabilitaLCD
  1954 ;;		_RetardoLCD
  1955 ;; This function is called by:
  1956 ;;		_MensajeLCD_Var
  1957 ;;		_show_temperature_LCD
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text10
  1962   0018D0                     __ptext10:
  1963                           	callstack 0
  1964   0018D0                     _DireccionaLCD:
  1965                           	callstack 25
  1966                           
  1967                           ;incstack = 0
  1968                           ;DireccionaLCD@a stored from wreg
  1969   0018D0  6E05               	movwf	DireccionaLCD@a^0,c
  1970                           
  1971                           ;LibLCDXC8.h: 260: LATD0=0;
  1972   0018D2  908C               	bcf	3980,0,c	;volatile
  1973                           
  1974                           ;LibLCDXC8.h: 261: EnviaDato(a);
  1975   0018D4  5005               	movf	DireccionaLCD@a^0,w,c
  1976   0018D6  EC46  F00B         	call	_EnviaDato
  1977                           
  1978                           ;LibLCDXC8.h: 262: HabilitaLCD();
  1979   0018DA  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  1980                           
  1981                           ;LibLCDXC8.h: 263: RetardoLCD(4);
  1982   0018DE  0E04               	movlw	4
  1983   0018E0  EC97  F00A         	call	_RetardoLCD
  1984   0018E4  0012               	return		;funcret
  1985   0018E6                     __end_of_DireccionaLCD:
  1986                           	callstack 0
  1987                           
  1988 ;; *************** function _send_temperature_RS232 *****************
  1989 ;; Defined at:
  1990 ;;		line 391 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  buffer_RS232   12   27[COMRAM] unsigned char [12]
  1995 ;;  counter         1   39[COMRAM] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2005 ;;      Params:         0       0       0       0       0       0       0       0       0
  2006 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2007 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2008 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2009 ;;Total ram usage:       15 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 3
  2012 ;; This function calls:
  2013 ;;		_Transmitir
  2014 ;;		_sprintf
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text11
  2021   00163C                     __ptext11:
  2022                           	callstack 0
  2023   00163C                     _send_temperature_RS232:
  2024                           	callstack 27
  2025                           
  2026                           ;LAB05.c: 392: unsigned char counter=0;
  2027                           
  2028                           ;incstack = 0
  2029   00163C  0E00               	movlw	0
  2030   00163E  6E28               	movwf	send_temperature_RS232@counter^0,c
  2031                           
  2032                           ;LAB05.c: 393: unsigned char buffer_RS232[12];;LAB05.c: 394: sprintf(buffer_RS232, "T: %
      +                          i C\n",Temp);
  2033   001640  0E1C               	movlw	low send_temperature_RS232@buffer_RS232
  2034   001642  6E0D               	movwf	sprintf@sp^0,c
  2035   001644  0E36               	movlw	low STR_15
  2036   001646  6E0E               	movwf	sprintf@f^0,c
  2037   001648  C088  F00F         	movff	_Temp,?_sprintf+2
  2038   00164C  6A10               	clrf	(?_sprintf+3)^0,c
  2039   00164E  EC14  F006         	call	_sprintf	;wreg free
  2040                           
  2041                           ;LAB05.c: 396: while(buffer_RS232[counter]!='\0'){
  2042   001652  D008               	goto	l2802
  2043   001654                     l2798:
  2044                           
  2045                           ;LAB05.c: 397: Transmitir(buffer_RS232[counter]);
  2046   001654  5028               	movf	send_temperature_RS232@counter^0,w,c
  2047   001656  0F1C               	addlw	low send_temperature_RS232@buffer_RS232
  2048   001658  6ED9               	movwf	fsr2l,c
  2049   00165A  6ADA               	clrf	fsr2h,c
  2050   00165C  50DF               	movf	indf2,w,c
  2051   00165E  EC8A  F00C         	call	_Transmitir
  2052                           
  2053                           ;LAB05.c: 398: counter++;
  2054   001662  2A28               	incf	send_temperature_RS232@counter^0,f,c
  2055   001664                     l2802:
  2056   001664  5028               	movf	send_temperature_RS232@counter^0,w,c
  2057   001666  0F1C               	addlw	low send_temperature_RS232@buffer_RS232
  2058   001668  6ED9               	movwf	fsr2l,c
  2059   00166A  6ADA               	clrf	fsr2h,c
  2060   00166C  50DF               	movf	indf2,w,c
  2061   00166E  A4D8               	btfss	status,2,c
  2062   001670  D7F1               	goto	l2798
  2063                           
  2064                           ;LAB05.c: 399: };LAB05.c: 400: _delay((unsigned long)((200)*(8000000/4000.0)));
  2065   001672  0E03               	movlw	3
  2066   001674  6E1B               	movwf	(??_send_temperature_RS232+1)^0,c
  2067   001676  0E08               	movlw	8
  2068   001678  6E1A               	movwf	??_send_temperature_RS232^0,c
  2069   00167A  0E77               	movlw	119
  2070   00167C                     u2597:
  2071   00167C  2EE8               	decfsz	wreg,f,c
  2072   00167E  D7FE               	bra	u2597
  2073   001680  2E1A               	decfsz	??_send_temperature_RS232^0,f,c
  2074   001682  D7FC               	bra	u2597
  2075   001684  2E1B               	decfsz	(??_send_temperature_RS232+1)^0,f,c
  2076   001686  D7FA               	bra	u2597
  2077   001688  F000               	nop	
  2078   00168A  0012               	return		;funcret
  2079   00168C                     __end_of_send_temperature_RS232:
  2080                           	callstack 0
  2081                           
  2082 ;; *************** function _Transmitir *****************
  2083 ;; Defined at:
  2084 ;;		line 444 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  BufferT         1    wreg     unsigned char 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  BufferT         1    0[COMRAM] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2098 ;;      Params:         0       0       0       0       0       0       0       0       0
  2099 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2101 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2102 ;;Total ram usage:        1 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 1
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_send_temperature_RS232
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text12
  2113   001914                     __ptext12:
  2114                           	callstack 0
  2115   001914                     _Transmitir:
  2116                           	callstack 28
  2117                           
  2118                           ;incstack = 0
  2119                           ;Transmitir@BufferT stored from wreg
  2120   001914  6E01               	movwf	Transmitir@BufferT^0,c
  2121   001916                     
  2122                           ;LAB05.c: 445: while(TRMT==0);
  2123   001916  A2AC               	btfss	4012,1,c	;volatile
  2124   001918  D7FE               	goto	l2478
  2125                           
  2126                           ;LAB05.c: 446: TXREG=BufferT;
  2127   00191A  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  2128   00191E  0012               	return		;funcret
  2129   001920                     __end_of_Transmitir:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _save_temperature_c_EEPROM *****************
  2133 ;; Defined at:
  2134 ;;		line 289 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2148 ;;      Params:         0       0       0       0       0       0       0       0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2151 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2152 ;;Total ram usage:        0 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 2
  2155 ;; This function calls:
  2156 ;;		_EEPROM_Write
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text13
  2163   001920                     __ptext13:
  2164                           	callstack 0
  2165   001920                     _save_temperature_c_EEPROM:
  2166                           	callstack 28
  2167                           
  2168                           ;LAB05.c: 290: EEPROM_Write(0x0, Temp);
  2169                           
  2170                           ;incstack = 0
  2171   001920  C088  F001         	movff	_Temp,EEPROM_Write@data
  2172   001924  0E00               	movlw	0
  2173   001926  EC33  F00C         	call	_EEPROM_Write
  2174   00192A  0012               	return		;funcret
  2175   00192C                     __end_of_save_temperature_c_EEPROM:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _EEPROM_Write *****************
  2179 ;; Defined at:
  2180 ;;		line 460 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  address         1    wreg     unsigned char 
  2183 ;;  data            1    0[COMRAM] unsigned char 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  address         1    1[COMRAM] unsigned char 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2195 ;;      Params:         1       0       0       0       0       0       0       0       0
  2196 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2198 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2199 ;;Total ram usage:        2 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_save_temperature_c_EEPROM
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text14
  2210   001866                     __ptext14:
  2211                           	callstack 0
  2212   001866                     _EEPROM_Write:
  2213                           	callstack 28
  2214                           
  2215                           ;incstack = 0
  2216                           ;EEPROM_Write@address stored from wreg
  2217   001866  6E02               	movwf	EEPROM_Write@address^0,c
  2218                           
  2219                           ;LAB05.c: 461: EEADR=address;
  2220   001868  C002  FFA9         	movff	EEPROM_Write@address,4009	;volatile
  2221                           
  2222                           ;LAB05.c: 462: EEDATA=data;
  2223   00186C  C001  FFA8         	movff	EEPROM_Write@data,4008	;volatile
  2224                           
  2225                           ;LAB05.c: 464: WREN=1;
  2226   001870  84A6               	bsf	4006,2,c	;volsfr
  2227                           
  2228                           ;LAB05.c: 466: EECON2=0x55;
  2229   001872  0E55               	movlw	85
  2230   001874  6EA7               	movwf	167,c	;volsfr
  2231                           
  2232                           ;LAB05.c: 467: EECON2=0xAA;
  2233   001876  0EAA               	movlw	170
  2234   001878  6EA7               	movwf	167,c	;volsfr
  2235                           
  2236                           ;LAB05.c: 469: WR=1;
  2237   00187A  82A6               	bsf	4006,1,c	;volsfr
  2238   00187C                     l371:
  2239   00187C  B2A6               	btfsc	4006,1,c	;volsfr
  2240   00187E  D7FE               	goto	l371
  2241                           
  2242                           ;LAB05.c: 472: WREN=0;
  2243   001880  94A6               	bcf	4006,2,c	;volsfr
  2244                           
  2245                           ;LAB05.c: 473: return;
  2246   001882  0012               	return		;funcret
  2247   001884                     __end_of_EEPROM_Write:
  2248                           	callstack 0
  2249                           
  2250 ;; *************** function _measure_temperature_c_humidity_per *****************
  2251 ;; Defined at:
  2252 ;;		line 226 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 3F/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2266 ;;      Params:         0       0       0       0       0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 2
  2273 ;; This function calls:
  2274 ;;		_DHT11_CheckResponse
  2275 ;;		_DHT11_ReadData
  2276 ;;		_DHT11_Start
  2277 ;; This function is called by:
  2278 ;;		_main
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text15
  2283   0017D6                     __ptext15:
  2284                           	callstack 0
  2285   0017D6                     _measure_temperature_c_humidity_per:
  2286                           	callstack 28
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;LAB05.c: 227: DHT11_Start();
  2290                           
  2291                           ;incstack = 0
  2292   0017D6  EC22  F00C         	call	_DHT11_Start	;wreg free
  2293                           
  2294                           ;LAB05.c: 228: DHT11_CheckResponse();
  2295   0017DA  ECA7  F00B         	call	_DHT11_CheckResponse	;wreg free
  2296                           
  2297                           ;LAB05.c: 231: Hum = DHT11_ReadData();
  2298   0017DE  ECCA  F00A         	call	_DHT11_ReadData	;wreg free
  2299   0017E2  0100               	movlb	0	; () banked
  2300   0017E4  6F87               	movwf	_Hum& (0+255),b
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;LAB05.c: 232: DHT11_ReadData();
  2304   0017E6  ECCA  F00A         	call	_DHT11_ReadData	;wreg free
  2305                           
  2306                           ;LAB05.c: 233: Temp = DHT11_ReadData();
  2307   0017EA  ECCA  F00A         	call	_DHT11_ReadData	;wreg free
  2308   0017EE  0100               	movlb	0	; () banked
  2309   0017F0  6F88               	movwf	_Temp& (0+255),b
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;LAB05.c: 234: DHT11_ReadData();
  2313   0017F2  ECCA  F00A         	call	_DHT11_ReadData	;wreg free
  2314                           
  2315                           ;LAB05.c: 235: DHT11_ReadData();
  2316   0017F6  ECCA  F00A         	call	_DHT11_ReadData	;wreg free
  2317   0017FA  0012               	return		;funcret
  2318   0017FC                     __end_of_measure_temperature_c_humidity_per:
  2319                           	callstack 0
  2320                           
  2321 ;; *************** function _DHT11_Start *****************
  2322 ;; Defined at:
  2323 ;;		line 257 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg
  2332 ;; Tracked objects:
  2333 ;;		On entry : 3F/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2337 ;;      Params:         0       0       0       0       0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2339 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2340 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2341 ;;Total ram usage:        1 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 1
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_measure_temperature_c_humidity_per
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text16
  2352   001844                     __ptext16:
  2353                           	callstack 0
  2354   001844                     _DHT11_Start:
  2355                           	callstack 28
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;LAB05.c: 259: TRISC1 = 0;
  2359                           
  2360                           ;incstack = 0
  2361   001844  9294               	bcf	3988,1,c	;volatile
  2362                           
  2363                           ;LAB05.c: 260: LATC1 = 0;
  2364   001846  928B               	bcf	3979,1,c	;volatile
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;LAB05.c: 261: _delay((unsigned long)((18)*(8000000/4000.0)));
  2368   001848  0E2F               	movlw	47
  2369   00184A  6E01               	movwf	??_DHT11_Start^0,c
  2370   00184C  0EC0               	movlw	192
  2371   00184E                     u2607:
  2372   00184E  2EE8               	decfsz	wreg,f,c
  2373   001850  D7FE               	bra	u2607
  2374   001852  2E01               	decfsz	??_DHT11_Start^0,f,c
  2375   001854  D7FC               	bra	u2607
  2376                           
  2377                           ;LAB05.c: 262: LATC1 = 1;
  2378   001856  828B               	bsf	3979,1,c	;volatile
  2379                           
  2380                           ;LAB05.c: 263: _delay((unsigned long)((20)*(8000000/4000000.0)));
  2381   001858  0E0D               	movlw	13
  2382   00185A                     u2617:
  2383   00185A  2EE8               	decfsz	wreg,f,c
  2384   00185C  D7FE               	bra	u2617
  2385   00185E  F000               	nop	
  2386                           
  2387                           ;LAB05.c: 264: TRISC1 = 1;
  2388   001860  8294               	bsf	3988,1,c	;volatile
  2389                           
  2390                           ;LAB05.c: 265: LATC1 = 0;
  2391   001862  928B               	bcf	3979,1,c	;volatile
  2392   001864  0012               	return		;funcret
  2393   001866                     __end_of_DHT11_Start:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _DHT11_ReadData *****************
  2397 ;; Defined at:
  2398 ;;		line 241 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  data            1    2[COMRAM] unsigned char 
  2403 ;;  i               1    1[COMRAM] unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      unsigned char 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0
  2414 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2415 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2416 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2417 ;;Total ram usage:        3 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_measure_temperature_c_humidity_per
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text17
  2428   001594                     __ptext17:
  2429                           	callstack 0
  2430   001594                     _DHT11_ReadData:
  2431                           	callstack 28
  2432                           
  2433                           ;LAB05.c: 243: unsigned char i,data = 0;
  2434                           
  2435                           ;incstack = 0
  2436   001594  0E00               	movlw	0
  2437   001596  6E03               	movwf	DHT11_ReadData@data^0,c
  2438                           
  2439                           ;LAB05.c: 244: for(i=0;i<8;i++)
  2440   001598  0E00               	movlw	0
  2441   00159A  6E02               	movwf	DHT11_ReadData@i^0,c
  2442   00159C                     l270:
  2443   00159C  A282               	btfss	3970,1,c	;volatile
  2444   00159E  D003               	goto	u1680
  2445   0015A0  6A01               	clrf	??_DHT11_ReadData^0,c
  2446   0015A2  2A01               	incf	??_DHT11_ReadData^0,f,c
  2447   0015A4  D001               	goto	u1698
  2448   0015A6                     u1680:
  2449   0015A6  6A01               	clrf	??_DHT11_ReadData^0,c
  2450   0015A8                     u1698:
  2451   0015A8  A001               	btfss	??_DHT11_ReadData^0,0,c
  2452   0015AA  D7F8               	goto	l270
  2453                           
  2454                           ;LAB05.c: 247: _delay((unsigned long)((30)*(8000000/4000000.0)));
  2455   0015AC  0E14               	movlw	20
  2456   0015AE                     u2627:
  2457   0015AE  2EE8               	decfsz	wreg,f,c
  2458   0015B0  D7FE               	bra	u2627
  2459                           
  2460                           ;LAB05.c: 248: if(RC1 & 1)
  2461   0015B2  A282               	btfss	3970,1,c	;volatile
  2462   0015B4  D003               	goto	u1710
  2463   0015B6  6A01               	clrf	??_DHT11_ReadData^0,c
  2464   0015B8  2A01               	incf	??_DHT11_ReadData^0,f,c
  2465   0015BA  D001               	goto	u1728
  2466   0015BC                     u1710:
  2467   0015BC  6A01               	clrf	??_DHT11_ReadData^0,c
  2468   0015BE                     u1728:
  2469   0015BE  A001               	btfss	??_DHT11_ReadData^0,0,c
  2470   0015C0  D003               	goto	l2388
  2471                           
  2472                           ;LAB05.c: 249: data = ((data<<1) | 1);
  2473   0015C2  80D8               	bsf	status,0,c
  2474   0015C4  3603               	rlcf	DHT11_ReadData@data^0,f,c
  2475   0015C6  D003               	goto	l275
  2476   0015C8                     l2388:
  2477                           
  2478                           ;LAB05.c: 250: else;LAB05.c: 251: data = (data<<1);
  2479   0015C8  5003               	movf	DHT11_ReadData@data^0,w,c
  2480   0015CA  2403               	addwf	DHT11_ReadData@data^0,w,c
  2481   0015CC  6E03               	movwf	DHT11_ReadData@data^0,c
  2482   0015CE                     l275:
  2483   0015CE  A282               	btfss	3970,1,c	;volatile
  2484   0015D0  D003               	goto	u1740
  2485   0015D2  6A01               	clrf	??_DHT11_ReadData^0,c
  2486   0015D4  2A01               	incf	??_DHT11_ReadData^0,f,c
  2487   0015D6  D001               	goto	u1758
  2488   0015D8                     u1740:
  2489   0015D8  6A01               	clrf	??_DHT11_ReadData^0,c
  2490   0015DA                     u1758:
  2491   0015DA  B001               	btfsc	??_DHT11_ReadData^0,0,c
  2492   0015DC  D7F8               	goto	l275
  2493   0015DE  2A02               	incf	DHT11_ReadData@i^0,f,c
  2494   0015E0  0E07               	movlw	7
  2495   0015E2  6402               	cpfsgt	DHT11_ReadData@i^0,c
  2496   0015E4  D7DB               	goto	l270
  2497                           
  2498                           ;LAB05.c: 253: };LAB05.c: 254: return data;
  2499   0015E6  5003               	movf	DHT11_ReadData@data^0,w,c
  2500   0015E8  0012               	return		;funcret
  2501   0015EA                     __end_of_DHT11_ReadData:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function _DHT11_CheckResponse *****************
  2505 ;; Defined at:
  2506 ;;		line 269 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;		None
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;		None
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		None
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2520 ;;      Params:         0       0       0       0       0       0       0       0       0
  2521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2522 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2523 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2524 ;;Total ram usage:        1 bytes
  2525 ;; Hardware stack levels used: 1
  2526 ;; Hardware stack levels required when called: 1
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_measure_temperature_c_humidity_per
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text18
  2535   00174E                     __ptext18:
  2536                           	callstack 0
  2537   00174E                     _DHT11_CheckResponse:
  2538                           	callstack 28
  2539                           
  2540                           ;LAB05.c: 271: while(RC1 & 1);
  2541                           
  2542                           ;incstack = 0
  2543   00174E  A282               	btfss	3970,1,c	;volatile
  2544   001750  D003               	goto	u1590
  2545   001752  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2546   001754  2A01               	incf	??_DHT11_CheckResponse^0,f,c
  2547   001756  D001               	goto	u1608
  2548   001758                     u1590:
  2549   001758  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2550   00175A                     u1608:
  2551   00175A  B001               	btfsc	??_DHT11_CheckResponse^0,0,c
  2552   00175C  D7F8               	goto	__ptext18
  2553   00175E                     u1610:
  2554   00175E  A282               	btfss	3970,1,c	;volatile
  2555   001760  D003               	goto	u1620
  2556   001762  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2557   001764  2A01               	incf	??_DHT11_CheckResponse^0,f,c
  2558   001766  D001               	goto	u1638
  2559   001768                     u1620:
  2560   001768  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2561   00176A                     u1638:
  2562   00176A  A001               	btfss	??_DHT11_CheckResponse^0,0,c
  2563   00176C  D7F8               	goto	u1610
  2564   00176E                     u1640:
  2565   00176E  A282               	btfss	3970,1,c	;volatile
  2566   001770  D003               	goto	u1650
  2567   001772  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2568   001774  2A01               	incf	??_DHT11_CheckResponse^0,f,c
  2569   001776  D001               	goto	u1668
  2570   001778                     u1650:
  2571   001778  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2572   00177A                     u1668:
  2573   00177A  A001               	btfss	??_DHT11_CheckResponse^0,0,c
  2574   00177C  0012               	return	
  2575   00177E  D7F7               	goto	u1640
  2576   001780                     __end_of_DHT11_CheckResponse:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function _init_configuration *****************
  2580 ;; Defined at:
  2581 ;;		line 132 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2595 ;;      Params:         0       0       0       0       0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2597 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2598 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2599 ;;Total ram usage:        2 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 5
  2602 ;; This function calls:
  2603 ;;		_ConfiguraLCD
  2604 ;;		_InicializaLCD
  2605 ;; This function is called by:
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text19
  2611   0013E0                     __ptext19:
  2612                           	callstack 0
  2613   0013E0                     _init_configuration:
  2614                           	callstack 25
  2615                           
  2616                           ;LAB05.c: 135: OSCCON=0b01110000;
  2617                           
  2618                           ;incstack = 0
  2619   0013E0  0E70               	movlw	112
  2620   0013E2  6ED3               	movwf	211,c	;volatile
  2621                           
  2622                           ;LAB05.c: 136: _delay((unsigned long)((1)*(8000000/4000.0)));
  2623   0013E4  0E03               	movlw	3
  2624   0013E6  6E05               	movwf	??_init_configuration^0,c
  2625   0013E8  0E98               	movlw	152
  2626   0013EA                     u2637:
  2627   0013EA  2EE8               	decfsz	wreg,f,c
  2628   0013EC  D7FE               	bra	u2637
  2629   0013EE  2E05               	decfsz	??_init_configuration^0,f,c
  2630   0013F0  D7FC               	bra	u2637
  2631                           
  2632                           ;LAB05.c: 141: TXSTA=0b00100000;
  2633   0013F2  0E20               	movlw	32
  2634   0013F4  6EAC               	movwf	172,c	;volatile
  2635                           
  2636                           ;LAB05.c: 142: RCSTA=0b10000000;
  2637   0013F6  0E80               	movlw	128
  2638   0013F8  6EAB               	movwf	171,c	;volatile
  2639                           
  2640                           ;LAB05.c: 143: BAUDCON=0b00000000;
  2641   0013FA  0E00               	movlw	0
  2642   0013FC  6EB8               	movwf	184,c	;volatile
  2643                           
  2644                           ;LAB05.c: 144: SPBRG=12;
  2645   0013FE  0E0C               	movlw	12
  2646   001400  6EAF               	movwf	175,c	;volatile
  2647                           
  2648                           ;LAB05.c: 147: ADCON1=13;
  2649   001402  0E0D               	movlw	13
  2650   001404  6EC1               	movwf	193,c	;volatile
  2651                           
  2652                           ;LAB05.c: 150: TRISE=0b11111000;
  2653   001406  0EF8               	movlw	248
  2654   001408  6E96               	movwf	150,c	;volatile
  2655                           
  2656                           ;LAB05.c: 151: LATE=1;
  2657   00140A  0E01               	movlw	1
  2658   00140C  6E8D               	movwf	141,c	;volatile
  2659                           
  2660                           ;LAB05.c: 156: TRISC2=0;
  2661   00140E  9494               	bcf	3988,2,c	;volatile
  2662                           
  2663                           ;LAB05.c: 157: LATC2=0;
  2664   001410  948B               	bcf	3979,2,c	;volatile
  2665                           
  2666                           ;LAB05.c: 160: TRISB0=0;
  2667   001412  9093               	bcf	3987,0,c	;volatile
  2668                           
  2669                           ;LAB05.c: 161: LATB0=0;
  2670   001414  908A               	bcf	3978,0,c	;volatile
  2671                           
  2672                           ;LAB05.c: 165: ADCON0=0b00000100;
  2673   001416  0E04               	movlw	4
  2674   001418  6EC2               	movwf	194,c	;volatile
  2675                           
  2676                           ;LAB05.c: 167: ADCON2=0b11001001;
  2677   00141A  0EC9               	movlw	201
  2678   00141C  6EC0               	movwf	192,c	;volatile
  2679                           
  2680                           ;LAB05.c: 179: T0CON=0b00000100;
  2681   00141E  0E04               	movlw	4
  2682   001420  6ED5               	movwf	213,c	;volatile
  2683                           
  2684                           ;LAB05.c: 180: TMR0=3036;
  2685   001422  0E0B               	movlw	11
  2686   001424  6ED7               	movwf	215,c	;volatile
  2687   001426  0EDC               	movlw	220
  2688   001428  6ED6               	movwf	214,c	;volatile
  2689                           
  2690                           ;LAB05.c: 184: TMR0IF=0;
  2691   00142A  94F2               	bcf	4082,2,c	;volatile
  2692                           
  2693                           ;LAB05.c: 185: TMR0IE=1;
  2694   00142C  8AF2               	bsf	4082,5,c	;volatile
  2695                           
  2696                           ;LAB05.c: 186: GIE=1;
  2697   00142E  8EF2               	bsf	4082,7,c	;volatile
  2698                           
  2699                           ;LAB05.c: 188: TMR0ON=1;
  2700   001430  8ED5               	bsf	4053,7,c	;volatile
  2701                           
  2702                           ;LAB05.c: 191: TRISD=0;
  2703   001432  0E00               	movlw	0
  2704   001434  6E95               	movwf	149,c	;volatile
  2705                           
  2706                           ;LAB05.c: 192: LATD=0;
  2707   001436  0E00               	movlw	0
  2708   001438  6E8C               	movwf	140,c	;volatile
  2709                           
  2710                           ;LAB05.c: 193: ConfiguraLCD(4);
  2711   00143A  0E04               	movlw	4
  2712   00143C  EC51  F00C         	call	_ConfiguraLCD
  2713                           
  2714                           ;LAB05.c: 194: InicializaLCD();
  2715   001440  ECDA  F008         	call	_InicializaLCD	;wreg free
  2716                           
  2717                           ;LAB05.c: 195: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2718   001444  0E0B               	movlw	11
  2719   001446  6E06               	movwf	(??_init_configuration+1)^0,c
  2720   001448  0E26               	movlw	38
  2721   00144A  6E05               	movwf	??_init_configuration^0,c
  2722   00144C  0E5E               	movlw	94
  2723   00144E                     u2647:
  2724   00144E  2EE8               	decfsz	wreg,f,c
  2725   001450  D7FE               	bra	u2647
  2726   001452  2E05               	decfsz	??_init_configuration^0,f,c
  2727   001454  D7FC               	bra	u2647
  2728   001456  2E06               	decfsz	(??_init_configuration+1)^0,f,c
  2729   001458  D7FA               	bra	u2647
  2730   00145A  0012               	return		;funcret
  2731   00145C                     __end_of_init_configuration:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function _InicializaLCD *****************
  2735 ;; Defined at:
  2736 ;;		line 71 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2750 ;;      Params:         0       0       0       0       0       0       0       0       0
  2751 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2753 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2754 ;;Total ram usage:        0 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 4
  2757 ;; This function calls:
  2758 ;;		_BorraLCD
  2759 ;;		_EnviaDato
  2760 ;;		_HabilitaLCD
  2761 ;;		_RetardoLCD
  2762 ;; This function is called by:
  2763 ;;		_init_configuration
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text20
  2768   0011B4                     __ptext20:
  2769                           	callstack 0
  2770   0011B4                     _InicializaLCD:
  2771                           	callstack 25
  2772                           
  2773                           ;LibLCDXC8.h: 73: LATD0=0;
  2774                           
  2775                           ;incstack = 0
  2776   0011B4  908C               	bcf	3980,0,c	;volatile
  2777                           
  2778                           ;LibLCDXC8.h: 74: if(interfaz==4)
  2779   0011B6  0E04               	movlw	4
  2780   0011B8  184C               	xorwf	_interfaz^0,w,c
  2781   0011BA  A4D8               	btfss	status,2,c
  2782   0011BC  D004               	goto	l2248
  2783                           
  2784                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
  2785   0011BE  508C               	movf	140,w,c	;volatile
  2786   0011C0  0B0F               	andlw	15
  2787   0011C2  0930               	iorlw	48
  2788   0011C4  D001               	goto	L1
  2789   0011C6                     l2248:
  2790                           
  2791                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  2792   0011C6  0E3F               	movlw	63
  2793   0011C8                     L1:
  2794   0011C8  6E8C               	movwf	140,c	;volatile
  2795                           
  2796                           ;LibLCDXC8.h: 78: HabilitaLCD();
  2797   0011CA  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  2798                           
  2799                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  2800   0011CE  0E01               	movlw	1
  2801   0011D0  EC97  F00A         	call	_RetardoLCD
  2802                           
  2803                           ;LibLCDXC8.h: 80: if(interfaz==4)
  2804   0011D4  0E04               	movlw	4
  2805   0011D6  184C               	xorwf	_interfaz^0,w,c
  2806   0011D8  A4D8               	btfss	status,2,c
  2807   0011DA  D004               	goto	l2258
  2808                           
  2809                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
  2810   0011DC  508C               	movf	140,w,c	;volatile
  2811   0011DE  0B0F               	andlw	15
  2812   0011E0  0930               	iorlw	48
  2813   0011E2  D001               	goto	L2
  2814   0011E4                     l2258:
  2815                           
  2816                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  2817   0011E4  0E3F               	movlw	63
  2818   0011E6                     L2:
  2819   0011E6  6E8C               	movwf	140,c	;volatile
  2820                           
  2821                           ;LibLCDXC8.h: 84: HabilitaLCD();
  2822   0011E8  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  2823                           
  2824                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  2825   0011EC  0E03               	movlw	3
  2826   0011EE  EC97  F00A         	call	_RetardoLCD
  2827                           
  2828                           ;LibLCDXC8.h: 86: if(interfaz==4)
  2829   0011F2  0E04               	movlw	4
  2830   0011F4  184C               	xorwf	_interfaz^0,w,c
  2831   0011F6  A4D8               	btfss	status,2,c
  2832   0011F8  D004               	goto	l2268
  2833                           
  2834                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
  2835   0011FA  508C               	movf	140,w,c	;volatile
  2836   0011FC  0B0F               	andlw	15
  2837   0011FE  0930               	iorlw	48
  2838   001200  D001               	goto	L3
  2839   001202                     l2268:
  2840                           
  2841                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  2842   001202  0E3F               	movlw	63
  2843   001204                     L3:
  2844   001204  6E8C               	movwf	140,c	;volatile
  2845                           
  2846                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2847   001206  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  2848                           
  2849                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2850   00120A  0E04               	movlw	4
  2851   00120C  EC97  F00A         	call	_RetardoLCD
  2852                           
  2853                           ;LibLCDXC8.h: 92: if(interfaz==4){
  2854   001210  0E04               	movlw	4
  2855   001212  184C               	xorwf	_interfaz^0,w,c
  2856   001214  A4D8               	btfss	status,2,c
  2857   001216  D011               	goto	l2288
  2858                           
  2859                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
  2860   001218  508C               	movf	140,w,c	;volatile
  2861   00121A  0B0F               	andlw	15
  2862   00121C  0920               	iorlw	32
  2863   00121E  6E8C               	movwf	140,c	;volatile
  2864                           
  2865                           ;LibLCDXC8.h: 94: HabilitaLCD();
  2866   001220  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  2867                           
  2868                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  2869   001224  0E04               	movlw	4
  2870   001226  EC97  F00A         	call	_RetardoLCD
  2871                           
  2872                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
  2873   00122A  0E2F               	movlw	47
  2874   00122C  EC46  F00B         	call	_EnviaDato
  2875                           
  2876                           ;LibLCDXC8.h: 97: HabilitaLCD();
  2877   001230  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  2878                           
  2879                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  2880   001234  0E04               	movlw	4
  2881   001236  EC97  F00A         	call	_RetardoLCD
  2882   00123A                     l2288:
  2883                           
  2884                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  2885   00123A  EC73  F00C         	call	_BorraLCD	;wreg free
  2886                           
  2887                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  2888   00123E  0E0F               	movlw	15
  2889   001240  EC46  F00B         	call	_EnviaDato
  2890                           
  2891                           ;LibLCDXC8.h: 102: HabilitaLCD();
  2892   001244  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  2893                           
  2894                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  2895   001248  0E04               	movlw	4
  2896   00124A  EC97  F00A         	call	_RetardoLCD
  2897   00124E  0012               	return		;funcret
  2898   001250                     __end_of_InicializaLCD:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _BorraLCD *****************
  2902 ;; Defined at:
  2903 ;;		line 112 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0
  2918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2920 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2921 ;;Total ram usage:        0 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; Hardware stack levels required when called: 3
  2924 ;; This function calls:
  2925 ;;		_EnviaDato
  2926 ;;		_HabilitaLCD
  2927 ;;		_RetardoLCD
  2928 ;; This function is called by:
  2929 ;;		_InicializaLCD
  2930 ;;		_MensajeLCD_Var
  2931 ;;		_welcome_operations
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text21
  2936   0018E6                     __ptext21:
  2937                           	callstack 0
  2938   0018E6                     _BorraLCD:
  2939                           	callstack 25
  2940                           
  2941                           ;LibLCDXC8.h: 114: LATD0=0;
  2942                           
  2943                           ;incstack = 0
  2944   0018E6  908C               	bcf	3980,0,c	;volatile
  2945                           
  2946                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2947   0018E8  0E01               	movlw	1
  2948   0018EA  EC46  F00B         	call	_EnviaDato
  2949                           
  2950                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2951   0018EE  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  2952                           
  2953                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2954   0018F2  0E02               	movlw	2
  2955   0018F4  EC97  F00A         	call	_RetardoLCD
  2956   0018F8  0012               	return		;funcret
  2957   0018FA                     __end_of_BorraLCD:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _EnviaDato *****************
  2961 ;; Defined at:
  2962 ;;		line 59 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  a               1    wreg     unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  a               1    3[COMRAM] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2976 ;;      Params:         0       0       0       0       0       0       0       0       0
  2977 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2978 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2979 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2980 ;;Total ram usage:        2 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 2
  2983 ;; This function calls:
  2984 ;;		_HabilitaLCD
  2985 ;;		_RetardoLCD
  2986 ;; This function is called by:
  2987 ;;		_InicializaLCD
  2988 ;;		_BorraLCD
  2989 ;;		_EscribeLCD_c
  2990 ;;		_EscribeLCD_n8
  2991 ;;		_DireccionaLCD
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text22
  2996   00168C                     __ptext22:
  2997                           	callstack 0
  2998   00168C                     _EnviaDato:
  2999                           	callstack 25
  3000                           
  3001                           ;incstack = 0
  3002                           ;EnviaDato@a stored from wreg
  3003   00168C  6E04               	movwf	EnviaDato@a^0,c
  3004                           
  3005                           ;LibLCDXC8.h: 60: if(interfaz==4){
  3006   00168E  0E04               	movlw	4
  3007   001690  184C               	xorwf	_interfaz^0,w,c
  3008   001692  A4D8               	btfss	status,2,c
  3009   001694  D017               	goto	l2094
  3010                           
  3011                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3012   001696  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  3013   00169A  0EF0               	movlw	240
  3014   00169C  1603               	andwf	??_EnviaDato^0,f,c
  3015   00169E  508C               	movf	140,w,c	;volatile
  3016   0016A0  0B0F               	andlw	15
  3017   0016A2  1003               	iorwf	??_EnviaDato^0,w,c
  3018   0016A4  6E8C               	movwf	140,c	;volatile
  3019                           
  3020                           ;LibLCDXC8.h: 62: HabilitaLCD();
  3021   0016A6  EC7D  F00C         	call	_HabilitaLCD	;wreg free
  3022                           
  3023                           ;LibLCDXC8.h: 63: RetardoLCD(1);
  3024   0016AA  0E01               	movlw	1
  3025   0016AC  EC97  F00A         	call	_RetardoLCD
  3026                           
  3027                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
  3028   0016B0  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  3029   0016B4  3A03               	swapf	??_EnviaDato^0,f,c
  3030   0016B6  0EF0               	movlw	240
  3031   0016B8  1603               	andwf	??_EnviaDato^0,f,c
  3032   0016BA  508C               	movf	140,w,c	;volatile
  3033   0016BC  0B0F               	andlw	15
  3034   0016BE  1003               	iorwf	??_EnviaDato^0,w,c
  3035   0016C0  6E8C               	movwf	140,c	;volatile
  3036                           
  3037                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
  3038   0016C2  0012               	return	
  3039   0016C4                     l2094:
  3040   0016C4  0E08               	movlw	8
  3041   0016C6  184C               	xorwf	_interfaz^0,w,c
  3042   0016C8  A4D8               	btfss	status,2,c
  3043   0016CA  0012               	return	
  3044                           
  3045                           ;LibLCDXC8.h: 68: LATD=a;
  3046   0016CC  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  3047   0016D0  0012               	return		;funcret
  3048   0016D2                     __end_of_EnviaDato:
  3049                           	callstack 0
  3050                           
  3051 ;; *************** function _RetardoLCD *****************
  3052 ;; Defined at:
  3053 ;;		line 293 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  a               1    wreg     unsigned char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  a               1    1[COMRAM] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3067 ;;      Params:         0       0       0       0       0       0       0       0       0
  3068 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3069 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3070 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3071 ;;Total ram usage:        2 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 1
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_EnviaDato
  3078 ;;		_InicializaLCD
  3079 ;;		_BorraLCD
  3080 ;;		_EscribeLCD_c
  3081 ;;		_EscribeLCD_n8
  3082 ;;		_DireccionaLCD
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text23
  3087   00152E                     __ptext23:
  3088                           	callstack 0
  3089   00152E                     _RetardoLCD:
  3090                           	callstack 26
  3091                           
  3092                           ;incstack = 0
  3093                           ;RetardoLCD@a stored from wreg
  3094   00152E  6E02               	movwf	RetardoLCD@a^0,c
  3095                           
  3096                           ;LibLCDXC8.h: 294: switch(a){
  3097   001530  D023               	goto	l2082
  3098   001532                     l2072:
  3099   001532  0E27               	movlw	39
  3100   001534  6E01               	movwf	??_RetardoLCD^0,c
  3101   001536  0EF5               	movlw	245
  3102   001538                     u2657:
  3103   001538  2EE8               	decfsz	wreg,f,c
  3104   00153A  D7FE               	bra	u2657
  3105   00153C  2E01               	decfsz	??_RetardoLCD^0,f,c
  3106   00153E  D7FC               	bra	u2657
  3107   001540  F000               	nop	
  3108                           
  3109                           ;LibLCDXC8.h: 297: break;
  3110   001542  0012               	return	
  3111   001544                     l2074:
  3112   001544  0E03               	movlw	3
  3113   001546  6E01               	movwf	??_RetardoLCD^0,c
  3114   001548  0E98               	movlw	152
  3115   00154A                     u2667:
  3116   00154A  2EE8               	decfsz	wreg,f,c
  3117   00154C  D7FE               	bra	u2667
  3118   00154E  2E01               	decfsz	??_RetardoLCD^0,f,c
  3119   001550  D7FC               	bra	u2667
  3120                           
  3121                           ;LibLCDXC8.h: 299: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3122   001552  0EB6               	movlw	182
  3123   001554                     u2677:
  3124   001554  D000               	nop2	
  3125   001556  D000               	nop2	
  3126   001558  2EE8               	decfsz	wreg,f,c
  3127   00155A  D7FC               	bra	u2677
  3128   00155C  D000               	nop2	
  3129   00155E  D000               	nop2	
  3130   001560  D000               	nop2	
  3131                           
  3132                           ;LibLCDXC8.h: 301: break;
  3133   001562  0012               	return	
  3134   001564                     l2076:
  3135   001564  0E42               	movlw	66
  3136   001566                     u2687:
  3137   001566  2EE8               	decfsz	wreg,f,c
  3138   001568  D7FE               	bra	u2687
  3139   00156A  D000               	nop2	
  3140                           
  3141                           ;LibLCDXC8.h: 304: break;
  3142   00156C  0012               	return	
  3143   00156E                     l2078:
  3144   00156E  0E1A               	movlw	26
  3145   001570                     u2697:
  3146   001570  2EE8               	decfsz	wreg,f,c
  3147   001572  D7FE               	bra	u2697
  3148   001574  D000               	nop2	
  3149                           
  3150                           ;LibLCDXC8.h: 307: break;
  3151   001576  0012               	return	
  3152   001578                     l2082:
  3153   001578  5002               	movf	RetardoLCD@a^0,w,c
  3154                           
  3155                           ; Switch size 1, requested type "simple"
  3156                           ; Number of cases is 4, Range of values is 1 to 4
  3157                           ; switch strategies available:
  3158                           ; Name         Instructions Cycles
  3159                           ; simple_byte           13     7 (average)
  3160                           ;	Chosen strategy is simple_byte
  3161   00157A  0A01               	xorlw	1	; case 1
  3162   00157C  B4D8               	btfsc	status,2,c
  3163   00157E  D7D9               	goto	l2072
  3164   001580  0A03               	xorlw	3	; case 2
  3165   001582  B4D8               	btfsc	status,2,c
  3166   001584  D7DF               	goto	l2074
  3167   001586  0A01               	xorlw	1	; case 3
  3168   001588  B4D8               	btfsc	status,2,c
  3169   00158A  D7EC               	goto	l2076
  3170   00158C  0A07               	xorlw	7	; case 4
  3171   00158E  A4D8               	btfss	status,2,c
  3172   001590  0012               	return	
  3173   001592  D7ED               	goto	l2078
  3174   001594                     __end_of_RetardoLCD:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _HabilitaLCD *****************
  3178 ;; Defined at:
  3179 ;;		line 105 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3196 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3197 ;;Total ram usage:        0 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 1
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_EnviaDato
  3204 ;;		_InicializaLCD
  3205 ;;		_BorraLCD
  3206 ;;		_EscribeLCD_c
  3207 ;;		_EscribeLCD_n8
  3208 ;;		_DireccionaLCD
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text24
  3213   0018FA                     __ptext24:
  3214                           	callstack 0
  3215   0018FA                     _HabilitaLCD:
  3216                           	callstack 26
  3217                           
  3218                           ;LibLCDXC8.h: 107: LATD1=1;
  3219                           
  3220                           ;incstack = 0
  3221   0018FA  828C               	bsf	3980,1,c	;volatile
  3222                           
  3223                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3224   0018FC  0E1A               	movlw	26
  3225   0018FE                     u2707:
  3226   0018FE  2EE8               	decfsz	wreg,f,c
  3227   001900  D7FE               	bra	u2707
  3228   001902  D000               	nop2	
  3229                           
  3230                           ;LibLCDXC8.h: 110: LATD1=0;
  3231   001904  928C               	bcf	3980,1,c	;volatile
  3232   001906  0012               	return		;funcret
  3233   001908                     __end_of_HabilitaLCD:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function _ConfiguraLCD *****************
  3237 ;; Defined at:
  3238 ;;		line 55 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  a               1    wreg     unsigned char 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  a               1    0[COMRAM] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3252 ;;      Params:         0       0       0       0       0       0       0       0       0
  3253 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3255 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3256 ;;Total ram usage:        1 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 1
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_init_configuration
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text25
  3267   0018A2                     __ptext25:
  3268                           	callstack 0
  3269   0018A2                     _ConfiguraLCD:
  3270                           	callstack 28
  3271                           
  3272                           ;incstack = 0
  3273                           ;ConfiguraLCD@a stored from wreg
  3274   0018A2  6E01               	movwf	ConfiguraLCD@a^0,c
  3275                           
  3276                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
  3277   0018A4  0E04               	movlw	4
  3278   0018A6  1801               	xorwf	ConfiguraLCD@a^0,w,c
  3279   0018A8  B4D8               	btfsc	status,2,c
  3280   0018AA  D004               	goto	u1500
  3281   0018AC  0E08               	movlw	8
  3282   0018AE  1801               	xorwf	ConfiguraLCD@a^0,w,c
  3283   0018B0  A4D8               	btfss	status,2,c
  3284   0018B2  0012               	return	
  3285   0018B4                     u1500:
  3286                           
  3287                           ;LibLCDXC8.h: 57: interfaz=a;
  3288   0018B4  C001  F04C         	movff	ConfiguraLCD@a,_interfaz
  3289   0018B8  0012               	return		;funcret
  3290   0018BA                     __end_of_ConfiguraLCD:
  3291                           	callstack 0
  3292                           
  3293 ;; *************** function _choose_scale_temperature_and_fill_buffers *****************
  3294 ;; Defined at:
  3295 ;;		line 348 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  buffer_LCD_r    1   69[COMRAM] PTR unsigned char 
  3298 ;;		 -> main@buffer_LCD_row_1(17), 
  3299 ;;  buffer_LCD_r    1   70[COMRAM] PTR unsigned char 
  3300 ;;		 -> main@buffer_LCD_row_2(17), 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  temp_convert    2   72[COMRAM] int 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3312 ;;      Params:         2       0       0       0       0       0       0       0       0
  3313 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3314 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3315 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3316 ;;Total ram usage:        5 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 3
  3319 ;; This function calls:
  3320 ;;		___ftadd
  3321 ;;		___ftdiv
  3322 ;;		___ftmul
  3323 ;;		___fttol
  3324 ;;		___lbtoft
  3325 ;;		_sprintf
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text26
  3332   000878                     __ptext26:
  3333                           	callstack 0
  3334   000878                     _choose_scale_temperature_and_fill_buffers:
  3335                           	callstack 27
  3336                           
  3337                           ;LAB05.c: 351: _delay((unsigned long)((10)*(8000000/4000.0)));
  3338                           
  3339                           ;incstack = 0
  3340   000878  0E1A               	movlw	26
  3341   00087A  6E48               	movwf	??_choose_scale_temperature_and_fill_buffers^0,c
  3342   00087C  0EF8               	movlw	248
  3343   00087E                     u2717:
  3344   00087E  2EE8               	decfsz	wreg,f,c
  3345   000880  D7FE               	bra	u2717
  3346   000882  2E48               	decfsz	??_choose_scale_temperature_and_fill_buffers^0,f,c
  3347   000884  D7FC               	bra	u2717
  3348   000886  D000               	nop2	
  3349                           
  3350                           ;LAB05.c: 352: if(RA2==0 && RA3==0){
  3351   000888  A480               	btfss	3968,2,c	;volatile
  3352   00088A  B680               	btfsc	3968,3,c	;volatile
  3353   00088C  D01A               	goto	l324
  3354                           
  3355                           ;LAB05.c: 354: sprintf(buffer_LCD_row_1, "T: %i C",Temp);
  3356   00088E  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3357   000892  0E51               	movlw	low STR_7
  3358   000894  6E0E               	movwf	sprintf@f^0,c
  3359   000896  C088  F00F         	movff	_Temp,?_sprintf+2
  3360   00089A  6A10               	clrf	(?_sprintf+3)^0,c
  3361   00089C  EC14  F006         	call	_sprintf	;wreg free
  3362                           
  3363                           ;LAB05.c: 355: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3364   0008A0  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3365   0008A4  0E48               	movlw	low STR_8
  3366   0008A6  6E0E               	movwf	sprintf@f^0,c
  3367   0008A8  C087  F00F         	movff	_Hum,?_sprintf+2
  3368   0008AC  6A10               	clrf	(?_sprintf+3)^0,c
  3369   0008AE  0E00               	movlw	0
  3370   0008B0  6E12               	movwf	(?_sprintf+5)^0,c
  3371   0008B2  0E25               	movlw	37
  3372   0008B4  6E11               	movwf	(?_sprintf+4)^0,c
  3373   0008B6  EC14  F006         	call	_sprintf	;wreg free
  3374                           
  3375                           ;LAB05.c: 357: Scale_Temperature=0;
  3376   0008BA  0E00               	movlw	0
  3377   0008BC  0100               	movlb	0	; () banked
  3378   0008BE  6F85               	movwf	_Scale_Temperature& (0+255),b
  3379                           
  3380                           ;LAB05.c: 358: }
  3381   0008C0  0012               	return	
  3382   0008C2                     l324:
  3383                           
  3384                           ;LAB05.c: 359: else if(RA2==0 && RA3==1){
  3385   0008C2  A480               	btfss	3968,2,c	;volatile
  3386   0008C4  A680               	btfss	3968,3,c	;volatile
  3387   0008C6  D039               	goto	l326
  3388                           
  3389                           ;LAB05.c: 361: temp_converted = Temp + 273.15;
  3390   0008C8  0E93               	movlw	147
  3391   0008CA  6E2E               	movwf	___ftadd@f2^0,c
  3392   0008CC  0E88               	movlw	136
  3393   0008CE  6E2F               	movwf	(___ftadd@f2+1)^0,c
  3394   0008D0  0E43               	movlw	67
  3395   0008D2  6E30               	movwf	(___ftadd@f2+2)^0,c
  3396   0008D4  0100               	movlb	0	; () banked
  3397   0008D6  5188               	movf	_Temp& (0+255),w,b
  3398   0008D8  ECFE  F00B         	call	___lbtoft
  3399   0008DC  C009  F02B         	movff	?___lbtoft,___ftadd@f1
  3400   0008E0  C00A  F02C         	movff	?___lbtoft+1,___ftadd@f1+1
  3401   0008E4  C00B  F02D         	movff	?___lbtoft+2,___ftadd@f1+2
  3402   0008E8  EC40  F005         	call	___ftadd	;wreg free
  3403   0008EC  C02B  F037         	movff	?___ftadd,___fttol@f1
  3404   0008F0  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  3405   0008F4  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  3406   0008F8  EC1A  F008         	call	___fttol	;wreg free
  3407   0008FC  C037  F049         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  3408   000900  C038  F04A         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  3409                           
  3410                           ;LAB05.c: 363: sprintf(buffer_LCD_row_1, "T: %i K",temp_converted);
  3411   000904  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3412   000908  0E61               	movlw	low STR_9
  3413   00090A  6E0E               	movwf	sprintf@f^0,c
  3414   00090C  C049  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  3415   000910  C04A  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  3416   000914  EC14  F006         	call	_sprintf	;wreg free
  3417                           
  3418                           ;LAB05.c: 364: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3419   000918  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3420   00091C  0E48               	movlw	low STR_8
  3421   00091E  6E0E               	movwf	sprintf@f^0,c
  3422   000920  C087  F00F         	movff	_Hum,?_sprintf+2
  3423   000924  6A10               	clrf	(?_sprintf+3)^0,c
  3424   000926  0E00               	movlw	0
  3425   000928  6E12               	movwf	(?_sprintf+5)^0,c
  3426   00092A  0E25               	movlw	37
  3427   00092C  6E11               	movwf	(?_sprintf+4)^0,c
  3428   00092E  EC14  F006         	call	_sprintf	;wreg free
  3429                           
  3430                           ;LAB05.c: 366: Scale_Temperature=1;
  3431   000932  0E01               	movlw	1
  3432   000934  0100               	movlb	0	; () banked
  3433   000936  6F85               	movwf	_Scale_Temperature& (0+255),b
  3434                           
  3435                           ;LAB05.c: 367: }
  3436   000938  0012               	return	
  3437   00093A                     l326:
  3438                           
  3439                           ;LAB05.c: 368: else if(RA2==1 && RA3==0){
  3440   00093A  B480               	btfsc	3968,2,c	;volatile
  3441   00093C  B680               	btfsc	3968,3,c	;volatile
  3442   00093E  D047               	goto	l328
  3443                           
  3444                           ;LAB05.c: 370: temp_converted = Temp*1.8 + 491.67;
  3445   000940  0ED6               	movlw	214
  3446   000942  6E2E               	movwf	___ftadd@f2^0,c
  3447   000944  0EF5               	movlw	245
  3448   000946  6E2F               	movwf	(___ftadd@f2+1)^0,c
  3449   000948  0E43               	movlw	67
  3450   00094A  6E30               	movwf	(___ftadd@f2+2)^0,c
  3451   00094C  0E66               	movlw	102
  3452   00094E  6E10               	movwf	___ftmul@f2^0,c
  3453   000950  0EE6               	movlw	230
  3454   000952  6E11               	movwf	(___ftmul@f2+1)^0,c
  3455   000954  0E3F               	movlw	63
  3456   000956  6E12               	movwf	(___ftmul@f2+2)^0,c
  3457   000958  0100               	movlb	0	; () banked
  3458   00095A  5188               	movf	_Temp& (0+255),w,b
  3459   00095C  ECFE  F00B         	call	___lbtoft
  3460   000960  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  3461   000964  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  3462   000968  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  3463   00096C  ECBA  F006         	call	___ftmul	;wreg free
  3464   000970  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  3465   000974  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  3466   000978  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  3467   00097C  EC40  F005         	call	___ftadd	;wreg free
  3468   000980  C02B  F037         	movff	?___ftadd,___fttol@f1
  3469   000984  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  3470   000988  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  3471   00098C  EC1A  F008         	call	___fttol	;wreg free
  3472   000990  C037  F049         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  3473   000994  C038  F04A         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  3474                           
  3475                           ;LAB05.c: 372: sprintf(buffer_LCD_row_1, "T: %i Ra",temp_converted);
  3476   000998  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3477   00099C  0E3F               	movlw	low STR_11
  3478   00099E  6E0E               	movwf	sprintf@f^0,c
  3479   0009A0  C049  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  3480   0009A4  C04A  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  3481   0009A8  EC14  F006         	call	_sprintf	;wreg free
  3482                           
  3483                           ;LAB05.c: 373: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3484   0009AC  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3485   0009B0  0E48               	movlw	low STR_8
  3486   0009B2  6E0E               	movwf	sprintf@f^0,c
  3487   0009B4  C087  F00F         	movff	_Hum,?_sprintf+2
  3488   0009B8  6A10               	clrf	(?_sprintf+3)^0,c
  3489   0009BA  0E00               	movlw	0
  3490   0009BC  6E12               	movwf	(?_sprintf+5)^0,c
  3491   0009BE  0E25               	movlw	37
  3492   0009C0  6E11               	movwf	(?_sprintf+4)^0,c
  3493   0009C2  EC14  F006         	call	_sprintf	;wreg free
  3494                           
  3495                           ;LAB05.c: 375: Scale_Temperature=2;
  3496   0009C6  0E02               	movlw	2
  3497   0009C8  0100               	movlb	0	; () banked
  3498   0009CA  6F85               	movwf	_Scale_Temperature& (0+255),b
  3499                           
  3500                           ;LAB05.c: 377: }
  3501   0009CC  0012               	return	
  3502   0009CE                     l328:
  3503                           
  3504                           ;LAB05.c: 378: else if(RA2==1 && RA3==1){
  3505   0009CE  A480               	btfss	3968,2,c	;volatile
  3506   0009D0  0012               	return	
  3507   0009D2  A680               	btfss	3968,3,c	;volatile
  3508   0009D4  0012               	return	
  3509                           
  3510                           ;LAB05.c: 380: temp_converted = Temp*9.0/5.0 + 32.0;
  3511   0009D6  0E00               	movlw	0
  3512   0009D8  6E2E               	movwf	___ftadd@f2^0,c
  3513   0009DA  0E00               	movlw	0
  3514   0009DC  6E2F               	movwf	(___ftadd@f2+1)^0,c
  3515   0009DE  0E42               	movlw	66
  3516   0009E0  6E30               	movwf	(___ftadd@f2+2)^0,c
  3517   0009E2  0E00               	movlw	0
  3518   0009E4  6E1F               	movwf	___ftdiv@f2^0,c
  3519   0009E6  0EA0               	movlw	160
  3520   0009E8  6E20               	movwf	(___ftdiv@f2+1)^0,c
  3521   0009EA  0E40               	movlw	64
  3522   0009EC  6E21               	movwf	(___ftdiv@f2+2)^0,c
  3523   0009EE  0E00               	movlw	0
  3524   0009F0  6E10               	movwf	___ftmul@f2^0,c
  3525   0009F2  0E10               	movlw	16
  3526   0009F4  6E11               	movwf	(___ftmul@f2+1)^0,c
  3527   0009F6  0E41               	movlw	65
  3528   0009F8  6E12               	movwf	(___ftmul@f2+2)^0,c
  3529   0009FA  0100               	movlb	0	; () banked
  3530   0009FC  5188               	movf	_Temp& (0+255),w,b
  3531   0009FE  ECFE  F00B         	call	___lbtoft
  3532   000A02  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  3533   000A06  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  3534   000A0A  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  3535   000A0E  ECBA  F006         	call	___ftmul	;wreg free
  3536   000A12  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  3537   000A16  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  3538   000A1A  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  3539   000A1E  ECA7  F007         	call	___ftdiv	;wreg free
  3540   000A22  C01C  F02B         	movff	?___ftdiv,___ftadd@f1
  3541   000A26  C01D  F02C         	movff	?___ftdiv+1,___ftadd@f1+1
  3542   000A2A  C01E  F02D         	movff	?___ftdiv+2,___ftadd@f1+2
  3543   000A2E  EC40  F005         	call	___ftadd	;wreg free
  3544   000A32  C02B  F037         	movff	?___ftadd,___fttol@f1
  3545   000A36  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  3546   000A3A  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  3547   000A3E  EC1A  F008         	call	___fttol	;wreg free
  3548   000A42  C037  F049         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  3549   000A46  C038  F04A         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  3550                           
  3551                           ;LAB05.c: 382: sprintf(buffer_LCD_row_1, "T: %i F",temp_converted);
  3552   000A4A  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3553   000A4E  0E59               	movlw	low STR_13
  3554   000A50  6E0E               	movwf	sprintf@f^0,c
  3555   000A52  C049  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  3556   000A56  C04A  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  3557   000A5A  EC14  F006         	call	_sprintf	;wreg free
  3558                           
  3559                           ;LAB05.c: 383: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3560   000A5E  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3561   000A62  0E48               	movlw	low STR_8
  3562   000A64  6E0E               	movwf	sprintf@f^0,c
  3563   000A66  C087  F00F         	movff	_Hum,?_sprintf+2
  3564   000A6A  6A10               	clrf	(?_sprintf+3)^0,c
  3565   000A6C  0E00               	movlw	0
  3566   000A6E  6E12               	movwf	(?_sprintf+5)^0,c
  3567   000A70  0E25               	movlw	37
  3568   000A72  6E11               	movwf	(?_sprintf+4)^0,c
  3569   000A74  EC14  F006         	call	_sprintf	;wreg free
  3570                           
  3571                           ;LAB05.c: 385: Scale_Temperature=3;
  3572   000A78  0E03               	movlw	3
  3573   000A7A  0100               	movlb	0	; () banked
  3574   000A7C  6F85               	movwf	_Scale_Temperature& (0+255),b
  3575   000A7E  0012               	return	
  3576   000A80                     __end_of_choose_scale_temperature_and_fill_buffers:
  3577                           	callstack 0
  3578                           
  3579 ;; *************** function _sprintf *****************
  3580 ;; Defined at:
  3581 ;;		line 505 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/doprnt.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  sp              1   12[COMRAM] PTR unsigned char 
  3584 ;;		 -> send_temperature_RS232@buffer_RS232(12), main@buffer_LCD_row_2(17), main@buffer_LCD_row_1(17), 
  3585 ;;  f               1   13[COMRAM] PTR const unsigned char 
  3586 ;;		 -> STR_15(9), STR_14(9), STR_13(8), STR_12(9), 
  3587 ;;		 -> STR_11(9), STR_10(9), STR_9(8), STR_8(9), 
  3588 ;;		 -> STR_7(8), 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  tmpval          4    0        struct .
  3591 ;;  cp              3    0        PTR const unsigned char 
  3592 ;;  val             2   22[COMRAM] unsigned int 
  3593 ;;  len             2    0        unsigned int 
  3594 ;;  c               1   24[COMRAM] unsigned char 
  3595 ;;  ap              1   21[COMRAM] PTR void [1]
  3596 ;;		 -> ?_sprintf(2), 
  3597 ;;  prec            1   20[COMRAM] char 
  3598 ;;  flag            1   19[COMRAM] unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  2   12[COMRAM] int 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3608 ;;      Params:         6       0       0       0       0       0       0       0       0
  3609 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3610 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3611 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3612 ;;Total ram usage:       13 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; Hardware stack levels required when called: 2
  3615 ;; This function calls:
  3616 ;;		___lwdiv
  3617 ;;		___lwmod
  3618 ;; This function is called by:
  3619 ;;		_choose_scale_temperature_and_fill_buffers
  3620 ;;		_send_temperature_RS232
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text27
  3625   000C28                     __ptext27:
  3626                           	callstack 0
  3627   000C28                     _sprintf:
  3628                           	callstack 27
  3629                           
  3630                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3631                           
  3632                           ;incstack = 0
  3633   000C28  0E0F               	movlw	low (?_sprintf+2)
  3634   000C2A  6E16               	movwf	sprintf@ap^0,c
  3635                           
  3636                           ;doprnt.c: 553: while((c = *f++)) {
  3637   000C2C  D091               	goto	u1840
  3638   000C2E                     l2412:
  3639                           
  3640                           ;doprnt.c: 555: if(c != '%')
  3641   000C2E  0E25               	movlw	37
  3642   000C30  1819               	xorwf	sprintf@c^0,w,c
  3643   000C32  B4D8               	btfsc	status,2,c
  3644   000C34  D007               	goto	l2418
  3645   000C36                     u1790:
  3646                           
  3647                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  3648   000C36  500D               	movf	sprintf@sp^0,w,c
  3649   000C38  6ED9               	movwf	fsr2l,c
  3650   000C3A  6ADA               	clrf	fsr2h,c
  3651   000C3C  C019  FFDF         	movff	sprintf@c,indf2
  3652   000C40  2A0D               	incf	sprintf@sp^0,f,c
  3653                           
  3654                           ;doprnt.c: 559: continue;
  3655   000C42  D086               	goto	u1840
  3656   000C44                     l2418:
  3657                           
  3658                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3659   000C44  0E00               	movlw	0
  3660   000C46  6E14               	movwf	sprintf@flag^0,c
  3661                           
  3662                           ;doprnt.c: 661: switch(c = *f++) {
  3663   000C48  D008               	goto	l2430
  3664   000C4A                     l2420:
  3665                           
  3666                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  3667   000C4A  5016               	movf	sprintf@ap^0,w,c
  3668   000C4C  6ED9               	movwf	fsr2l,c
  3669   000C4E  6ADA               	clrf	fsr2h,c
  3670   000C50  50DF               	movf	indf2,w,c
  3671   000C52  6E19               	movwf	sprintf@c^0,c
  3672   000C54  0E02               	movlw	2
  3673   000C56  2616               	addwf	sprintf@ap^0,f,c
  3674   000C58  D7EE               	goto	u1790
  3675   000C5A                     l2430:
  3676   000C5A  2A0E               	incf	sprintf@f^0,f,c
  3677   000C5C  040E               	decf	sprintf@f^0,w,c
  3678   000C5E  6E13               	movwf	??_sprintf^0,c
  3679   000C60  C013  FFF6         	movff	??_sprintf,tblptrl
  3680   000C64                     	if	1	;There is more than 1 active tblptr byte
  3681   000C64  0E08               	movlw	high __smallconst
  3682   000C66  6EF7               	movwf	tblptrh,c
  3683   000C68                     	endif
  3684   000C68                     	if	0	;tblptru may be non-zero
  3685   000C68                     	endif
  3686   000C68                     	if	0	;tblptru may be non-zero
  3687   000C68                     	endif
  3688   000C68  0008               	tblrd		*
  3689   000C6A  CFF5 F019          	movff	tablat,sprintf@c
  3690   000C6E  5019               	movf	sprintf@c^0,w,c
  3691                           
  3692                           ; Switch size 1, requested type "simple"
  3693                           ; Number of cases is 4, Range of values is 0 to 105
  3694                           ; switch strategies available:
  3695                           ; Name         Instructions Cycles
  3696                           ; simple_byte           13     7 (average)
  3697                           ;	Chosen strategy is simple_byte
  3698   000C70  0A00               	xorlw	0	; case 0
  3699   000C72  B4D8               	btfsc	status,2,c
  3700   000C74  D07A               	goto	u1850
  3701   000C76  0A63               	xorlw	99	; case 99
  3702   000C78  B4D8               	btfsc	status,2,c
  3703   000C7A  D7E7               	goto	l2420
  3704   000C7C  0A07               	xorlw	7	; case 100
  3705   000C7E  B4D8               	btfsc	status,2,c
  3706   000C80  D003               	goto	l2432
  3707   000C82  0A0D               	xorlw	13	; case 105
  3708   000C84  A4D8               	btfss	status,2,c
  3709   000C86  D7D7               	goto	u1790
  3710   000C88                     l2432:
  3711                           
  3712                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3713   000C88  5016               	movf	sprintf@ap^0,w,c
  3714   000C8A  6ED9               	movwf	fsr2l,c
  3715   000C8C  6ADA               	clrf	fsr2h,c
  3716   000C8E  CFDE F017          	movff	postinc2,sprintf@val
  3717   000C92  CFDD F018          	movff	postdec2,sprintf@val+1
  3718   000C96  0E02               	movlw	2
  3719   000C98  2616               	addwf	sprintf@ap^0,f,c
  3720                           
  3721                           ;doprnt.c: 1287: if((int)val < 0) {
  3722   000C9A  AE18               	btfss	(sprintf@val+1)^0,7,c
  3723   000C9C  D006               	goto	l2442
  3724                           
  3725                           ;doprnt.c: 1288: flag |= 0x03;
  3726   000C9E  0E03               	movlw	3
  3727   000CA0  1214               	iorwf	sprintf@flag^0,f,c
  3728                           
  3729                           ;doprnt.c: 1289: val = -val;
  3730   000CA2  6C17               	negf	sprintf@val^0,c
  3731   000CA4  1E18               	comf	(sprintf@val+1)^0,f,c
  3732   000CA6  B0D8               	btfsc	status,0,c
  3733   000CA8  2A18               	incf	(sprintf@val+1)^0,f,c
  3734   000CAA                     l2442:
  3735                           
  3736                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3737   000CAA  0E01               	movlw	1
  3738   000CAC  6E19               	movwf	sprintf@c^0,c
  3739   000CAE                     l2448:
  3740                           
  3741                           ;doprnt.c: 1332: if(val < dpowers[c])
  3742   000CAE  5019               	movf	sprintf@c^0,w,c
  3743   000CB0  0D02               	mullw	2
  3744   000CB2  50F3               	movf	243,w,c
  3745   000CB4  0F01               	addlw	low _dpowers
  3746   000CB6  6E13               	movwf	??_sprintf^0,c
  3747   000CB8  C013  FFF6         	movff	??_sprintf,tblptrl
  3748   000CBC                     	if	1	;There is more than 1 active tblptr byte
  3749   000CBC  0E08               	movlw	high __smallconst
  3750   000CBE  6EF7               	movwf	tblptrh,c
  3751   000CC0                     	endif
  3752   000CC0                     	if	0	;tblptru may be non-zero
  3753   000CC0                     	endif
  3754   000CC0                     	if	0	;tblptru may be non-zero
  3755   000CC0                     	endif
  3756   000CC0  0009               	tblrd		*+
  3757   000CC2  50F5               	movf	tablat,w,c
  3758   000CC4  5C17               	subwf	sprintf@val^0,w,c
  3759   000CC6  0009               	tblrd		*+
  3760   000CC8  50F5               	movf	tablat,w,c
  3761   000CCA  5818               	subwfb	(sprintf@val+1)^0,w,c
  3762   000CCC  A0D8               	btfss	status,0,c
  3763   000CCE  D005               	goto	u1820
  3764   000CD0  2A19               	incf	sprintf@c^0,f,c
  3765   000CD2  0E05               	movlw	5
  3766   000CD4  1819               	xorwf	sprintf@c^0,w,c
  3767   000CD6  A4D8               	btfss	status,2,c
  3768   000CD8  D7EA               	goto	l2448
  3769   000CDA                     u1820:
  3770                           
  3771                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3772   000CDA  C014  F013         	movff	sprintf@flag,??_sprintf
  3773   000CDE  0E03               	movlw	3
  3774   000CE0  1613               	andwf	??_sprintf^0,f,c
  3775   000CE2  B4D8               	btfsc	status,2,c
  3776   000CE4  D006               	goto	l2462
  3777                           
  3778                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3779   000CE6  500D               	movf	sprintf@sp^0,w,c
  3780   000CE8  6ED9               	movwf	fsr2l,c
  3781   000CEA  6ADA               	clrf	fsr2h,c
  3782   000CEC  0E2D               	movlw	45
  3783   000CEE  6EDF               	movwf	indf2,c
  3784   000CF0  2A0D               	incf	sprintf@sp^0,f,c
  3785   000CF2                     l2462:
  3786                           
  3787                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3788   000CF2  C019  F015         	movff	sprintf@c,sprintf@prec
  3789                           
  3790                           ;doprnt.c: 1500: while(prec--) {
  3791   000CF6  D028               	goto	l2470
  3792   000CF8                     l2464:
  3793                           
  3794                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3795   000CF8  5015               	movf	sprintf@prec^0,w,c
  3796   000CFA  0D02               	mullw	2
  3797   000CFC  50F3               	movf	243,w,c
  3798   000CFE  0F01               	addlw	low _dpowers
  3799   000D00  6E13               	movwf	??_sprintf^0,c
  3800   000D02  C013  FFF6         	movff	??_sprintf,tblptrl
  3801   000D06                     	if	1	;There is more than 1 active tblptr byte
  3802   000D06  0E08               	movlw	high __smallconst
  3803   000D08  6EF7               	movwf	tblptrh,c
  3804   000D0A                     	endif
  3805   000D0A                     	if	0	;tblptru may be non-zero
  3806   000D0A                     	endif
  3807   000D0A                     	if	0	;tblptru may be non-zero
  3808   000D0A                     	endif
  3809   000D0A  0009               	tblrd		*+
  3810   000D0C  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3811   000D10  000A               	tblrd		*-
  3812   000D12  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3813   000D16  C017  F001         	movff	sprintf@val,___lwdiv@dividend
  3814   000D1A  C018  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3815   000D1E  ECF5  F00A         	call	___lwdiv	;wreg free
  3816   000D22  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3817   000D26  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3818   000D2A  0E00               	movlw	0
  3819   000D2C  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3820   000D2E  0E0A               	movlw	10
  3821   000D30  6E0A               	movwf	___lwmod@divisor^0,c
  3822   000D32  EC69  F00B         	call	___lwmod	;wreg free
  3823   000D36  5008               	movf	?___lwmod^0,w,c
  3824   000D38  0F30               	addlw	48
  3825   000D3A  6E19               	movwf	sprintf@c^0,c
  3826                           
  3827                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  3828   000D3C  500D               	movf	sprintf@sp^0,w,c
  3829   000D3E  6ED9               	movwf	fsr2l,c
  3830   000D40  6ADA               	clrf	fsr2h,c
  3831   000D42  C019  FFDF         	movff	sprintf@c,indf2
  3832   000D46  2A0D               	incf	sprintf@sp^0,f,c
  3833   000D48                     l2470:
  3834   000D48  0615               	decf	sprintf@prec^0,f,c
  3835   000D4A  2815               	incf	sprintf@prec^0,w,c
  3836   000D4C  A4D8               	btfss	status,2,c
  3837   000D4E  D7D4               	goto	l2464
  3838   000D50                     u1840:
  3839   000D50  2A0E               	incf	sprintf@f^0,f,c
  3840   000D52  040E               	decf	sprintf@f^0,w,c
  3841   000D54  6E13               	movwf	??_sprintf^0,c
  3842   000D56  C013  FFF6         	movff	??_sprintf,tblptrl
  3843   000D5A                     	if	1	;There is more than 1 active tblptr byte
  3844   000D5A  0E08               	movlw	high __smallconst
  3845   000D5C  6EF7               	movwf	tblptrh,c
  3846   000D5E                     	endif
  3847   000D5E                     	if	0	;tblptru may be non-zero
  3848   000D5E                     	endif
  3849   000D5E                     	if	0	;tblptru may be non-zero
  3850   000D5E                     	endif
  3851   000D5E  0008               	tblrd		*
  3852   000D60  CFF5 F019          	movff	tablat,sprintf@c
  3853   000D64  5019               	movf	sprintf@c^0,w,c
  3854   000D66  A4D8               	btfss	status,2,c
  3855   000D68  D762               	goto	l2412
  3856   000D6A                     u1850:
  3857                           
  3858                           ;doprnt.c: 1564: *sp = 0;
  3859   000D6A  500D               	movf	sprintf@sp^0,w,c
  3860   000D6C  6ED9               	movwf	fsr2l,c
  3861   000D6E  6ADA               	clrf	fsr2h,c
  3862   000D70  6ADF               	clrf	indf2,c
  3863   000D72  0012               	return		;funcret
  3864   000D74                     __end_of_sprintf:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function ___lwmod *****************
  3868 ;; Defined at:
  3869 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwmod.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  dividend        2    7[COMRAM] unsigned int 
  3872 ;;  divisor         2    9[COMRAM] unsigned int 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  counter         1   11[COMRAM] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  2    7[COMRAM] unsigned int 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3884 ;;      Params:         4       0       0       0       0       0       0       0       0
  3885 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3887 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3888 ;;Total ram usage:        5 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_sprintf
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text28
  3899   0016D2                     __ptext28:
  3900                           	callstack 0
  3901   0016D2                     ___lwmod:
  3902                           	callstack 27
  3903                           
  3904                           ;incstack = 0
  3905   0016D2  500A               	movf	___lwmod@divisor^0,w,c
  3906   0016D4  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  3907   0016D6  B4D8               	btfsc	status,2,c
  3908   0016D8  D018               	goto	l898
  3909   0016DA  0E01               	movlw	1
  3910   0016DC  6E0C               	movwf	___lwmod@counter^0,c
  3911   0016DE  D004               	goto	l2228
  3912   0016E0                     l2226:
  3913   0016E0  90D8               	bcf	status,0,c
  3914   0016E2  360A               	rlcf	___lwmod@divisor^0,f,c
  3915   0016E4  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  3916   0016E6  2A0C               	incf	___lwmod@counter^0,f,c
  3917   0016E8                     l2228:
  3918   0016E8  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  3919   0016EA  D7FA               	goto	l2226
  3920   0016EC                     u1470:
  3921   0016EC  500A               	movf	___lwmod@divisor^0,w,c
  3922   0016EE  5C08               	subwf	___lwmod@dividend^0,w,c
  3923   0016F0  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3924   0016F2  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  3925   0016F4  A0D8               	btfss	status,0,c
  3926   0016F6  D004               	goto	l2234
  3927   0016F8  500A               	movf	___lwmod@divisor^0,w,c
  3928   0016FA  5E08               	subwf	___lwmod@dividend^0,f,c
  3929   0016FC  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3930   0016FE  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  3931   001700                     l2234:
  3932   001700  90D8               	bcf	status,0,c
  3933   001702  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  3934   001704  320A               	rrcf	___lwmod@divisor^0,f,c
  3935   001706  2E0C               	decfsz	___lwmod@counter^0,f,c
  3936   001708  D7F1               	goto	u1470
  3937   00170A                     l898:
  3938   00170A  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3939   00170E  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3940   001712  0012               	return		;funcret
  3941   001714                     __end_of___lwmod:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function ___lwdiv *****************
  3945 ;; Defined at:
  3946 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwdiv.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  dividend        2    0[COMRAM] unsigned int 
  3949 ;;  divisor         2    2[COMRAM] unsigned int 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  quotient        2    4[COMRAM] unsigned int 
  3952 ;;  counter         1    6[COMRAM] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  2    0[COMRAM] unsigned int 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3962 ;;      Params:         4       0       0       0       0       0       0       0       0
  3963 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3965 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3966 ;;Total ram usage:        7 bytes
  3967 ;; Hardware stack levels used: 1
  3968 ;; Hardware stack levels required when called: 1
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_sprintf
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text29
  3977   0015EA                     __ptext29:
  3978                           	callstack 0
  3979   0015EA                     ___lwdiv:
  3980                           	callstack 27
  3981                           
  3982                           ;incstack = 0
  3983   0015EA  0E00               	movlw	0
  3984   0015EC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3985   0015EE  0E00               	movlw	0
  3986   0015F0  6E05               	movwf	___lwdiv@quotient^0,c
  3987   0015F2  5003               	movf	___lwdiv@divisor^0,w,c
  3988   0015F4  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3989   0015F6  B4D8               	btfsc	status,2,c
  3990   0015F8  D01C               	goto	l888
  3991   0015FA  0E01               	movlw	1
  3992   0015FC  6E07               	movwf	___lwdiv@counter^0,c
  3993   0015FE  D004               	goto	l2208
  3994   001600                     l2206:
  3995   001600  90D8               	bcf	status,0,c
  3996   001602  3603               	rlcf	___lwdiv@divisor^0,f,c
  3997   001604  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3998   001606  2A07               	incf	___lwdiv@counter^0,f,c
  3999   001608                     l2208:
  4000   001608  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4001   00160A  D7FA               	goto	l2206
  4002   00160C                     u1440:
  4003   00160C  90D8               	bcf	status,0,c
  4004   00160E  3605               	rlcf	___lwdiv@quotient^0,f,c
  4005   001610  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4006   001612  5003               	movf	___lwdiv@divisor^0,w,c
  4007   001614  5C01               	subwf	___lwdiv@dividend^0,w,c
  4008   001616  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4009   001618  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4010   00161A  A0D8               	btfss	status,0,c
  4011   00161C  D005               	goto	l2218
  4012   00161E  5003               	movf	___lwdiv@divisor^0,w,c
  4013   001620  5E01               	subwf	___lwdiv@dividend^0,f,c
  4014   001622  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4015   001624  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4016   001626  8005               	bsf	___lwdiv@quotient^0,0,c
  4017   001628                     l2218:
  4018   001628  90D8               	bcf	status,0,c
  4019   00162A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4020   00162C  3203               	rrcf	___lwdiv@divisor^0,f,c
  4021   00162E  2E07               	decfsz	___lwdiv@counter^0,f,c
  4022   001630  D7ED               	goto	u1440
  4023   001632                     l888:
  4024   001632  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4025   001636  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4026   00163A  0012               	return		;funcret
  4027   00163C                     __end_of___lwdiv:
  4028                           	callstack 0
  4029                           
  4030 ;; *************** function ___lbtoft *****************
  4031 ;; Defined at:
  4032 ;;		line 27 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbtoft.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  c               1    wreg     unsigned char 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  c               1   11[COMRAM] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  3    8[COMRAM] float 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 3F/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4046 ;;      Params:         3       0       0       0       0       0       0       0       0
  4047 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4049 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4050 ;;Total ram usage:        4 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; Hardware stack levels required when called: 2
  4053 ;; This function calls:
  4054 ;;		___ftpack
  4055 ;; This function is called by:
  4056 ;;		_choose_scale_temperature_and_fill_buffers
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text30
  4061   0017FC                     __ptext30:
  4062                           	callstack 0
  4063   0017FC                     ___lbtoft:
  4064                           	callstack 27
  4065                           
  4066                           ;incstack = 0
  4067                           ;___lbtoft@c stored from wreg
  4068   0017FC  6E0C               	movwf	___lbtoft@c^0,c
  4069   0017FE  500C               	movf	___lbtoft@c^0,w,c
  4070   001800  6E01               	movwf	___ftpack@arg^0,c
  4071   001802  6A02               	clrf	(___ftpack@arg+1)^0,c
  4072   001804  6A03               	clrf	(___ftpack@arg+2)^0,c
  4073   001806  0E8E               	movlw	142
  4074   001808  6E04               	movwf	___ftpack@exp^0,c
  4075   00180A  0E00               	movlw	0
  4076   00180C  6E05               	movwf	___ftpack@sign^0,c
  4077   00180E  EC83  F008         	call	___ftpack	;wreg free
  4078   001812  C001  F009         	movff	?___ftpack,?___lbtoft
  4079   001816  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  4080   00181A  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  4081   00181E  0012               	return		;funcret
  4082   001820                     __end_of___lbtoft:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function ___fttol *****************
  4086 ;; Defined at:
  4087 ;;		line 44 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/fttol.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  f1              3   54[COMRAM] float 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  lval            4   64[COMRAM] unsigned long 
  4092 ;;  exp1            1   68[COMRAM] unsigned char 
  4093 ;;  sign1           1   63[COMRAM] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  4   54[COMRAM] long 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4103 ;;      Params:         4       0       0       0       0       0       0       0       0
  4104 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4105 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4106 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4107 ;;Total ram usage:       15 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; Hardware stack levels required when called: 1
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_choose_scale_temperature_and_fill_buffers
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text31
  4118   001034                     __ptext31:
  4119                           	callstack 0
  4120   001034                     ___fttol:
  4121                           	callstack 28
  4122                           
  4123                           ;incstack = 0
  4124   001034  C039  F03B         	movff	___fttol@f1+2,??___fttol
  4125   001038  6A3C               	clrf	(??___fttol+1)^0,c
  4126   00103A  6A3D               	clrf	(??___fttol+2)^0,c
  4127   00103C  3438               	rlcf	(___fttol@f1+1)^0,w,c
  4128   00103E  363B               	rlcf	??___fttol^0,f,c
  4129   001040  E301               	bnc	u2191
  4130   001042  803C               	bsf	(??___fttol+1)^0,0,c
  4131   001044                     u2191:
  4132   001044  503B               	movf	??___fttol^0,w,c
  4133   001046  6E45               	movwf	___fttol@exp1^0,c
  4134   001048  5045               	movf	___fttol@exp1^0,w,c
  4135   00104A  A4D8               	btfss	status,2,c
  4136   00104C  D009               	goto	l2654
  4137   00104E                     u2200:
  4138   00104E  0E00               	movlw	0
  4139   001050  6E37               	movwf	?___fttol^0,c
  4140   001052  0E00               	movlw	0
  4141   001054  6E38               	movwf	(?___fttol+1)^0,c
  4142   001056  0E00               	movlw	0
  4143   001058  6E39               	movwf	(?___fttol+2)^0,c
  4144   00105A  0E00               	movlw	0
  4145   00105C  6E3A               	movwf	(?___fttol+3)^0,c
  4146   00105E  0012               	return	
  4147   001060                     l2654:
  4148   001060  0E17               	movlw	23
  4149   001062  6E3B               	movwf	??___fttol^0,c
  4150   001064  C037  F03C         	movff	___fttol@f1,??___fttol+1
  4151   001068  C038  F03D         	movff	___fttol@f1+1,??___fttol+2
  4152   00106C  C039  F03E         	movff	___fttol@f1+2,??___fttol+3
  4153   001070  283B               	incf	??___fttol^0,w,c
  4154   001072  6E3F               	movwf	(??___fttol+4)^0,c
  4155   001074  D004               	goto	u2210
  4156   001076                     u2215:
  4157   001076  90D8               	bcf	status,0,c
  4158   001078  323E               	rrcf	(??___fttol+3)^0,f,c
  4159   00107A  323D               	rrcf	(??___fttol+2)^0,f,c
  4160   00107C  323C               	rrcf	(??___fttol+1)^0,f,c
  4161   00107E                     u2210:
  4162   00107E  2E3F               	decfsz	(??___fttol+4)^0,f,c
  4163   001080  D7FA               	goto	u2215
  4164   001082  503C               	movf	(??___fttol+1)^0,w,c
  4165   001084  6E40               	movwf	___fttol@sign1^0,c
  4166   001086  8E38               	bsf	(___fttol@f1+1)^0,7,c
  4167   001088  0EFF               	movlw	255
  4168   00108A  1637               	andwf	___fttol@f1^0,f,c
  4169   00108C  0EFF               	movlw	255
  4170   00108E  1638               	andwf	(___fttol@f1+1)^0,f,c
  4171   001090  0E00               	movlw	0
  4172   001092  1639               	andwf	(___fttol@f1+2)^0,f,c
  4173   001094  5037               	movf	___fttol@f1^0,w,c
  4174   001096  6E41               	movwf	___fttol@lval^0,c
  4175   001098  5038               	movf	(___fttol@f1+1)^0,w,c
  4176   00109A  6E42               	movwf	(___fttol@lval+1)^0,c
  4177   00109C  5039               	movf	(___fttol@f1+2)^0,w,c
  4178   00109E  6E43               	movwf	(___fttol@lval+2)^0,c
  4179   0010A0  6A44               	clrf	(___fttol@lval+3)^0,c
  4180   0010A2  0E8E               	movlw	142
  4181   0010A4  5E45               	subwf	___fttol@exp1^0,f,c
  4182   0010A6  AE45               	btfss	___fttol@exp1^0,7,c
  4183   0010A8  D00D               	goto	l2676
  4184   0010AA  5045               	movf	___fttol@exp1^0,w,c
  4185   0010AC  0A80               	xorlw	128
  4186   0010AE  0F8F               	addlw	143
  4187   0010B0  A0D8               	btfss	status,0,c
  4188   0010B2  D7CD               	goto	u2200
  4189   0010B4                     l2672:
  4190   0010B4  90D8               	bcf	status,0,c
  4191   0010B6  3244               	rrcf	(___fttol@lval+3)^0,f,c
  4192   0010B8  3243               	rrcf	(___fttol@lval+2)^0,f,c
  4193   0010BA  3242               	rrcf	(___fttol@lval+1)^0,f,c
  4194   0010BC  3241               	rrcf	___fttol@lval^0,f,c
  4195   0010BE  3E45               	incfsz	___fttol@exp1^0,f,c
  4196   0010C0  D7F9               	goto	l2672
  4197   0010C2  D00D               	goto	u2250
  4198   0010C4                     l2676:
  4199   0010C4  0E17               	movlw	23
  4200   0010C6  6445               	cpfsgt	___fttol@exp1^0,c
  4201   0010C8  D007               	goto	l2684
  4202   0010CA  D7C1               	goto	u2200
  4203   0010CC                     l2682:
  4204   0010CC  90D8               	bcf	status,0,c
  4205   0010CE  3641               	rlcf	___fttol@lval^0,f,c
  4206   0010D0  3642               	rlcf	(___fttol@lval+1)^0,f,c
  4207   0010D2  3643               	rlcf	(___fttol@lval+2)^0,f,c
  4208   0010D4  3644               	rlcf	(___fttol@lval+3)^0,f,c
  4209   0010D6  0645               	decf	___fttol@exp1^0,f,c
  4210   0010D8                     l2684:
  4211   0010D8  5045               	movf	___fttol@exp1^0,w,c
  4212   0010DA  A4D8               	btfss	status,2,c
  4213   0010DC  D7F7               	goto	l2682
  4214   0010DE                     u2250:
  4215   0010DE  5040               	movf	___fttol@sign1^0,w,c
  4216   0010E0  B4D8               	btfsc	status,2,c
  4217   0010E2  D008               	goto	l2690
  4218   0010E4  1E44               	comf	(___fttol@lval+3)^0,f,c
  4219   0010E6  1E43               	comf	(___fttol@lval+2)^0,f,c
  4220   0010E8  1E42               	comf	(___fttol@lval+1)^0,f,c
  4221   0010EA  6C41               	negf	___fttol@lval^0,c
  4222   0010EC  0E00               	movlw	0
  4223   0010EE  2242               	addwfc	(___fttol@lval+1)^0,f,c
  4224   0010F0  2243               	addwfc	(___fttol@lval+2)^0,f,c
  4225   0010F2  2244               	addwfc	(___fttol@lval+3)^0,f,c
  4226   0010F4                     l2690:
  4227   0010F4  C041  F037         	movff	___fttol@lval,?___fttol
  4228   0010F8  C042  F038         	movff	___fttol@lval+1,?___fttol+1
  4229   0010FC  C043  F039         	movff	___fttol@lval+2,?___fttol+2
  4230   001100  C044  F03A         	movff	___fttol@lval+3,?___fttol+3
  4231   001104  0012               	return		;funcret
  4232   001106                     __end_of___fttol:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function ___ftmul *****************
  4236 ;; Defined at:
  4237 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftmul.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  f1              3   12[COMRAM] float 
  4240 ;;  f2              3   15[COMRAM] float 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  4243 ;;  sign            1   26[COMRAM] unsigned char 
  4244 ;;  cntr            1   25[COMRAM] unsigned char 
  4245 ;;  exp             1   21[COMRAM] unsigned char 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  3   12[COMRAM] float 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2, status,0, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4255 ;;      Params:         6       0       0       0       0       0       0       0       0
  4256 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4257 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4258 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4259 ;;Total ram usage:       15 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; Hardware stack levels required when called: 2
  4262 ;; This function calls:
  4263 ;;		___ftpack
  4264 ;; This function is called by:
  4265 ;;		_choose_scale_temperature_and_fill_buffers
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text32
  4270   000D74                     __ptext32:
  4271                           	callstack 0
  4272   000D74                     ___ftmul:
  4273                           	callstack 27
  4274                           
  4275                           ;incstack = 0
  4276   000D74  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  4277   000D78  6A14               	clrf	(??___ftmul+1)^0,c
  4278   000D7A  6A15               	clrf	(??___ftmul+2)^0,c
  4279   000D7C  340E               	rlcf	(___ftmul@f1+1)^0,w,c
  4280   000D7E  3613               	rlcf	??___ftmul^0,f,c
  4281   000D80  E301               	bnc	u2131
  4282   000D82  8014               	bsf	(??___ftmul+1)^0,0,c
  4283   000D84                     u2131:
  4284   000D84  5013               	movf	??___ftmul^0,w,c
  4285   000D86  6E16               	movwf	___ftmul@exp^0,c
  4286   000D88  5016               	movf	___ftmul@exp^0,w,c
  4287   000D8A  A4D8               	btfss	status,2,c
  4288   000D8C  D007               	goto	l2606
  4289   000D8E  0E00               	movlw	0
  4290   000D90  6E0D               	movwf	?___ftmul^0,c
  4291   000D92  0E00               	movlw	0
  4292   000D94  6E0E               	movwf	(?___ftmul+1)^0,c
  4293   000D96  0E00               	movlw	0
  4294   000D98  6E0F               	movwf	(?___ftmul+2)^0,c
  4295   000D9A  0012               	return	
  4296   000D9C                     l2606:
  4297   000D9C  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  4298   000DA0  6A14               	clrf	(??___ftmul+1)^0,c
  4299   000DA2  6A15               	clrf	(??___ftmul+2)^0,c
  4300   000DA4  3411               	rlcf	(___ftmul@f2+1)^0,w,c
  4301   000DA6  3613               	rlcf	??___ftmul^0,f,c
  4302   000DA8  E301               	bnc	u2151
  4303   000DAA  8014               	bsf	(??___ftmul+1)^0,0,c
  4304   000DAC                     u2151:
  4305   000DAC  5013               	movf	??___ftmul^0,w,c
  4306   000DAE  6E1B               	movwf	___ftmul@sign^0,c
  4307   000DB0  501B               	movf	___ftmul@sign^0,w,c
  4308   000DB2  A4D8               	btfss	status,2,c
  4309   000DB4  D007               	goto	l2612
  4310   000DB6  0E00               	movlw	0
  4311   000DB8  6E0D               	movwf	?___ftmul^0,c
  4312   000DBA  0E00               	movlw	0
  4313   000DBC  6E0E               	movwf	(?___ftmul+1)^0,c
  4314   000DBE  0E00               	movlw	0
  4315   000DC0  6E0F               	movwf	(?___ftmul+2)^0,c
  4316   000DC2  0012               	return	
  4317   000DC4                     l2612:
  4318   000DC4  501B               	movf	___ftmul@sign^0,w,c
  4319   000DC6  0F7B               	addlw	123
  4320   000DC8  2616               	addwf	___ftmul@exp^0,f,c
  4321   000DCA  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  4322   000DCE  5012               	movf	(___ftmul@f2+2)^0,w,c
  4323   000DD0  1A1B               	xorwf	___ftmul@sign^0,f,c
  4324   000DD2  0E80               	movlw	128
  4325   000DD4  161B               	andwf	___ftmul@sign^0,f,c
  4326   000DD6  8E0E               	bsf	(___ftmul@f1+1)^0,7,c
  4327   000DD8  8E11               	bsf	(___ftmul@f2+1)^0,7,c
  4328   000DDA  0EFF               	movlw	255
  4329   000DDC  1610               	andwf	___ftmul@f2^0,f,c
  4330   000DDE  0EFF               	movlw	255
  4331   000DE0  1611               	andwf	(___ftmul@f2+1)^0,f,c
  4332   000DE2  0E00               	movlw	0
  4333   000DE4  1612               	andwf	(___ftmul@f2+2)^0,f,c
  4334   000DE6  0E00               	movlw	0
  4335   000DE8  6E17               	movwf	___ftmul@f3_as_product^0,c
  4336   000DEA  0E00               	movlw	0
  4337   000DEC  6E18               	movwf	(___ftmul@f3_as_product+1)^0,c
  4338   000DEE  0E00               	movlw	0
  4339   000DF0  6E19               	movwf	(___ftmul@f3_as_product+2)^0,c
  4340   000DF2  0E07               	movlw	7
  4341   000DF4  6E1A               	movwf	___ftmul@cntr^0,c
  4342   000DF6                     l2626:
  4343   000DF6  A00D               	btfss	___ftmul@f1^0,0,c
  4344   000DF8  D006               	goto	l2630
  4345   000DFA  5010               	movf	___ftmul@f2^0,w,c
  4346   000DFC  2617               	addwf	___ftmul@f3_as_product^0,f,c
  4347   000DFE  5011               	movf	(___ftmul@f2+1)^0,w,c
  4348   000E00  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4349   000E02  5012               	movf	(___ftmul@f2+2)^0,w,c
  4350   000E04  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4351   000E06                     l2630:
  4352   000E06  90D8               	bcf	status,0,c
  4353   000E08  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  4354   000E0A  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  4355   000E0C  320D               	rrcf	___ftmul@f1^0,f,c
  4356   000E0E  90D8               	bcf	status,0,c
  4357   000E10  3610               	rlcf	___ftmul@f2^0,f,c
  4358   000E12  3611               	rlcf	(___ftmul@f2+1)^0,f,c
  4359   000E14  3612               	rlcf	(___ftmul@f2+2)^0,f,c
  4360   000E16  2E1A               	decfsz	___ftmul@cntr^0,f,c
  4361   000E18  D7EE               	goto	l2626
  4362   000E1A  0E09               	movlw	9
  4363   000E1C  6E1A               	movwf	___ftmul@cntr^0,c
  4364   000E1E                     l2636:
  4365   000E1E  A00D               	btfss	___ftmul@f1^0,0,c
  4366   000E20  D006               	goto	l2640
  4367   000E22  5010               	movf	___ftmul@f2^0,w,c
  4368   000E24  2617               	addwf	___ftmul@f3_as_product^0,f,c
  4369   000E26  5011               	movf	(___ftmul@f2+1)^0,w,c
  4370   000E28  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4371   000E2A  5012               	movf	(___ftmul@f2+2)^0,w,c
  4372   000E2C  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4373   000E2E                     l2640:
  4374   000E2E  90D8               	bcf	status,0,c
  4375   000E30  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  4376   000E32  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  4377   000E34  320D               	rrcf	___ftmul@f1^0,f,c
  4378   000E36  90D8               	bcf	status,0,c
  4379   000E38  3219               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  4380   000E3A  3218               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  4381   000E3C  3217               	rrcf	___ftmul@f3_as_product^0,f,c
  4382   000E3E  2E1A               	decfsz	___ftmul@cntr^0,f,c
  4383   000E40  D7EE               	goto	l2636
  4384   000E42  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4385   000E46  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4386   000E4A  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4387   000E4E  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  4388   000E52  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  4389   000E56  EC83  F008         	call	___ftpack	;wreg free
  4390   000E5A  C001  F00D         	movff	?___ftpack,?___ftmul
  4391   000E5E  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  4392   000E62  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  4393   000E66  0012               	return		;funcret
  4394   000E68                     __end_of___ftmul:
  4395                           	callstack 0
  4396                           
  4397 ;; *************** function ___ftdiv *****************
  4398 ;; Defined at:
  4399 ;;		line 54 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftdiv.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  f1              3   27[COMRAM] float 
  4402 ;;  f2              3   30[COMRAM] float 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  f3              3   37[COMRAM] float 
  4405 ;;  sign            1   41[COMRAM] unsigned char 
  4406 ;;  exp             1   40[COMRAM] unsigned char 
  4407 ;;  cntr            1   36[COMRAM] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  3   27[COMRAM] float 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4417 ;;      Params:         6       0       0       0       0       0       0       0       0
  4418 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4419 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4420 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4421 ;;Total ram usage:       15 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; Hardware stack levels required when called: 2
  4424 ;; This function calls:
  4425 ;;		___ftpack
  4426 ;; This function is called by:
  4427 ;;		_choose_scale_temperature_and_fill_buffers
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text33
  4432   000F4E                     __ptext33:
  4433                           	callstack 0
  4434   000F4E                     ___ftdiv:
  4435                           	callstack 27
  4436                           
  4437                           ;incstack = 0
  4438   000F4E  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  4439   000F52  6A23               	clrf	(??___ftdiv+1)^0,c
  4440   000F54  6A24               	clrf	(??___ftdiv+2)^0,c
  4441   000F56  341D               	rlcf	(___ftdiv@f1+1)^0,w,c
  4442   000F58  3622               	rlcf	??___ftdiv^0,f,c
  4443   000F5A  E301               	bnc	u2081
  4444   000F5C  8023               	bsf	(??___ftdiv+1)^0,0,c
  4445   000F5E                     u2081:
  4446   000F5E  5022               	movf	??___ftdiv^0,w,c
  4447   000F60  6E29               	movwf	___ftdiv@exp^0,c
  4448   000F62  5029               	movf	___ftdiv@exp^0,w,c
  4449   000F64  A4D8               	btfss	status,2,c
  4450   000F66  D007               	goto	l2560
  4451   000F68  0E00               	movlw	0
  4452   000F6A  6E1C               	movwf	?___ftdiv^0,c
  4453   000F6C  0E00               	movlw	0
  4454   000F6E  6E1D               	movwf	(?___ftdiv+1)^0,c
  4455   000F70  0E00               	movlw	0
  4456   000F72  6E1E               	movwf	(?___ftdiv+2)^0,c
  4457   000F74  0012               	return	
  4458   000F76                     l2560:
  4459   000F76  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  4460   000F7A  6A23               	clrf	(??___ftdiv+1)^0,c
  4461   000F7C  6A24               	clrf	(??___ftdiv+2)^0,c
  4462   000F7E  3420               	rlcf	(___ftdiv@f2+1)^0,w,c
  4463   000F80  3622               	rlcf	??___ftdiv^0,f,c
  4464   000F82  E301               	bnc	u2101
  4465   000F84  8023               	bsf	(??___ftdiv+1)^0,0,c
  4466   000F86                     u2101:
  4467   000F86  5022               	movf	??___ftdiv^0,w,c
  4468   000F88  6E2A               	movwf	___ftdiv@sign^0,c
  4469   000F8A  502A               	movf	___ftdiv@sign^0,w,c
  4470   000F8C  A4D8               	btfss	status,2,c
  4471   000F8E  D007               	goto	l2566
  4472   000F90  0E00               	movlw	0
  4473   000F92  6E1C               	movwf	?___ftdiv^0,c
  4474   000F94  0E00               	movlw	0
  4475   000F96  6E1D               	movwf	(?___ftdiv+1)^0,c
  4476   000F98  0E00               	movlw	0
  4477   000F9A  6E1E               	movwf	(?___ftdiv+2)^0,c
  4478   000F9C  0012               	return	
  4479   000F9E                     l2566:
  4480   000F9E  0E00               	movlw	0
  4481   000FA0  6E26               	movwf	___ftdiv@f3^0,c
  4482   000FA2  0E00               	movlw	0
  4483   000FA4  6E27               	movwf	(___ftdiv@f3+1)^0,c
  4484   000FA6  0E00               	movlw	0
  4485   000FA8  6E28               	movwf	(___ftdiv@f3+2)^0,c
  4486   000FAA  502A               	movf	___ftdiv@sign^0,w,c
  4487   000FAC  0F89               	addlw	137
  4488   000FAE  5E29               	subwf	___ftdiv@exp^0,f,c
  4489   000FB0  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  4490   000FB4  5021               	movf	(___ftdiv@f2+2)^0,w,c
  4491   000FB6  1A2A               	xorwf	___ftdiv@sign^0,f,c
  4492   000FB8  0E80               	movlw	128
  4493   000FBA  162A               	andwf	___ftdiv@sign^0,f,c
  4494   000FBC  8E1D               	bsf	(___ftdiv@f1+1)^0,7,c
  4495   000FBE  0EFF               	movlw	255
  4496   000FC0  161C               	andwf	___ftdiv@f1^0,f,c
  4497   000FC2  0EFF               	movlw	255
  4498   000FC4  161D               	andwf	(___ftdiv@f1+1)^0,f,c
  4499   000FC6  0E00               	movlw	0
  4500   000FC8  161E               	andwf	(___ftdiv@f1+2)^0,f,c
  4501   000FCA  8E20               	bsf	(___ftdiv@f2+1)^0,7,c
  4502   000FCC  0EFF               	movlw	255
  4503   000FCE  161F               	andwf	___ftdiv@f2^0,f,c
  4504   000FD0  0EFF               	movlw	255
  4505   000FD2  1620               	andwf	(___ftdiv@f2+1)^0,f,c
  4506   000FD4  0E00               	movlw	0
  4507   000FD6  1621               	andwf	(___ftdiv@f2+2)^0,f,c
  4508   000FD8  0E18               	movlw	24
  4509   000FDA  6E25               	movwf	___ftdiv@cntr^0,c
  4510   000FDC                     l2586:
  4511   000FDC  90D8               	bcf	status,0,c
  4512   000FDE  3626               	rlcf	___ftdiv@f3^0,f,c
  4513   000FE0  3627               	rlcf	(___ftdiv@f3+1)^0,f,c
  4514   000FE2  3628               	rlcf	(___ftdiv@f3+2)^0,f,c
  4515   000FE4  501F               	movf	___ftdiv@f2^0,w,c
  4516   000FE6  5C1C               	subwf	___ftdiv@f1^0,w,c
  4517   000FE8  5020               	movf	(___ftdiv@f2+1)^0,w,c
  4518   000FEA  581D               	subwfb	(___ftdiv@f1+1)^0,w,c
  4519   000FEC  5021               	movf	(___ftdiv@f2+2)^0,w,c
  4520   000FEE  581E               	subwfb	(___ftdiv@f1+2)^0,w,c
  4521   000FF0  A0D8               	btfss	status,0,c
  4522   000FF2  D007               	goto	l750
  4523   000FF4  501F               	movf	___ftdiv@f2^0,w,c
  4524   000FF6  5E1C               	subwf	___ftdiv@f1^0,f,c
  4525   000FF8  5020               	movf	(___ftdiv@f2+1)^0,w,c
  4526   000FFA  5A1D               	subwfb	(___ftdiv@f1+1)^0,f,c
  4527   000FFC  5021               	movf	(___ftdiv@f2+2)^0,w,c
  4528   000FFE  5A1E               	subwfb	(___ftdiv@f1+2)^0,f,c
  4529   001000  8026               	bsf	___ftdiv@f3^0,0,c
  4530   001002                     l750:
  4531   001002  90D8               	bcf	status,0,c
  4532   001004  361C               	rlcf	___ftdiv@f1^0,f,c
  4533   001006  361D               	rlcf	(___ftdiv@f1+1)^0,f,c
  4534   001008  361E               	rlcf	(___ftdiv@f1+2)^0,f,c
  4535   00100A  2E25               	decfsz	___ftdiv@cntr^0,f,c
  4536   00100C  D7E7               	goto	l2586
  4537   00100E  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  4538   001012  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4539   001016  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4540   00101A  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  4541   00101E  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  4542   001022  EC83  F008         	call	___ftpack	;wreg free
  4543   001026  C001  F01C         	movff	?___ftpack,?___ftdiv
  4544   00102A  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  4545   00102E  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  4546   001032  0012               	return		;funcret
  4547   001034                     __end_of___ftdiv:
  4548                           	callstack 0
  4549                           
  4550 ;; *************** function ___ftadd *****************
  4551 ;; Defined at:
  4552 ;;		line 86 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftadd.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  f1              3   42[COMRAM] float 
  4555 ;;  f2              3   45[COMRAM] float 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  exp1            1   53[COMRAM] unsigned char 
  4558 ;;  exp2            1   52[COMRAM] unsigned char 
  4559 ;;  sign            1   51[COMRAM] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  3   42[COMRAM] float 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4569 ;;      Params:         6       0       0       0       0       0       0       0       0
  4570 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4571 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4572 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4573 ;;Total ram usage:       12 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; Hardware stack levels required when called: 2
  4576 ;; This function calls:
  4577 ;;		___ftpack
  4578 ;; This function is called by:
  4579 ;;		_choose_scale_temperature_and_fill_buffers
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text34
  4584   000A80                     __ptext34:
  4585                           	callstack 0
  4586   000A80                     ___ftadd:
  4587                           	callstack 27
  4588                           
  4589                           ;incstack = 0
  4590   000A80  C02D  F031         	movff	___ftadd@f1+2,??___ftadd
  4591   000A84  6A32               	clrf	(??___ftadd+1)^0,c
  4592   000A86  6A33               	clrf	(??___ftadd+2)^0,c
  4593   000A88  342C               	rlcf	(___ftadd@f1+1)^0,w,c
  4594   000A8A  3631               	rlcf	??___ftadd^0,f,c
  4595   000A8C  E301               	bnc	u1871
  4596   000A8E  8032               	bsf	(??___ftadd+1)^0,0,c
  4597   000A90                     u1871:
  4598   000A90  5031               	movf	??___ftadd^0,w,c
  4599   000A92  6E36               	movwf	___ftadd@exp1^0,c
  4600   000A94  C030  F031         	movff	___ftadd@f2+2,??___ftadd
  4601   000A98  6A32               	clrf	(??___ftadd+1)^0,c
  4602   000A9A  6A33               	clrf	(??___ftadd+2)^0,c
  4603   000A9C  342F               	rlcf	(___ftadd@f2+1)^0,w,c
  4604   000A9E  3631               	rlcf	??___ftadd^0,f,c
  4605   000AA0  E301               	bnc	u1881
  4606   000AA2  8032               	bsf	(??___ftadd+1)^0,0,c
  4607   000AA4                     u1881:
  4608   000AA4  5031               	movf	??___ftadd^0,w,c
  4609   000AA6  6E35               	movwf	___ftadd@exp2^0,c
  4610   000AA8  5036               	movf	___ftadd@exp1^0,w,c
  4611   000AAA  B4D8               	btfsc	status,2,c
  4612   000AAC  D00A               	goto	u1910
  4613   000AAE  5035               	movf	___ftadd@exp2^0,w,c
  4614   000AB0  5C36               	subwf	___ftadd@exp1^0,w,c
  4615   000AB2  B0D8               	btfsc	status,0,c
  4616   000AB4  D00D               	goto	l2492
  4617   000AB6  5036               	movf	___ftadd@exp1^0,w,c
  4618   000AB8  5C35               	subwf	___ftadd@exp2^0,w,c
  4619   000ABA  6E31               	movwf	??___ftadd^0,c
  4620   000ABC  0E18               	movlw	24
  4621   000ABE  6431               	cpfsgt	??___ftadd^0,c
  4622   000AC0  D007               	goto	l2492
  4623   000AC2                     u1910:
  4624   000AC2  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  4625   000AC6  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  4626   000ACA  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  4627   000ACE  0012               	return	
  4628   000AD0                     l2492:
  4629   000AD0  5035               	movf	___ftadd@exp2^0,w,c
  4630   000AD2  B4D8               	btfsc	status,2,c
  4631   000AD4  D00A               	goto	u1940
  4632   000AD6  5036               	movf	___ftadd@exp1^0,w,c
  4633   000AD8  5C35               	subwf	___ftadd@exp2^0,w,c
  4634   000ADA  B0D8               	btfsc	status,0,c
  4635   000ADC  D00D               	goto	l2498
  4636   000ADE  5035               	movf	___ftadd@exp2^0,w,c
  4637   000AE0  5C36               	subwf	___ftadd@exp1^0,w,c
  4638   000AE2  6E31               	movwf	??___ftadd^0,c
  4639   000AE4  0E18               	movlw	24
  4640   000AE6  6431               	cpfsgt	??___ftadd^0,c
  4641   000AE8  D007               	goto	l2498
  4642   000AEA                     u1940:
  4643   000AEA  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  4644   000AEE  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  4645   000AF2  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  4646   000AF6  0012               	return	
  4647   000AF8                     l2498:
  4648   000AF8  0E06               	movlw	6
  4649   000AFA  6E34               	movwf	___ftadd@sign^0,c
  4650   000AFC  BE2D               	btfsc	(___ftadd@f1+2)^0,7,c
  4651   000AFE  8E34               	bsf	___ftadd@sign^0,7,c
  4652   000B00  BE30               	btfsc	(___ftadd@f2+2)^0,7,c
  4653   000B02  8C34               	bsf	___ftadd@sign^0,6,c
  4654   000B04  8E2C               	bsf	(___ftadd@f1+1)^0,7,c
  4655   000B06  0EFF               	movlw	255
  4656   000B08  162B               	andwf	___ftadd@f1^0,f,c
  4657   000B0A  0EFF               	movlw	255
  4658   000B0C  162C               	andwf	(___ftadd@f1+1)^0,f,c
  4659   000B0E  0E00               	movlw	0
  4660   000B10  162D               	andwf	(___ftadd@f1+2)^0,f,c
  4661   000B12  8E2F               	bsf	(___ftadd@f2+1)^0,7,c
  4662   000B14  0EFF               	movlw	255
  4663   000B16  162E               	andwf	___ftadd@f2^0,f,c
  4664   000B18  0EFF               	movlw	255
  4665   000B1A  162F               	andwf	(___ftadd@f2+1)^0,f,c
  4666   000B1C  0E00               	movlw	0
  4667   000B1E  1630               	andwf	(___ftadd@f2+2)^0,f,c
  4668   000B20  5035               	movf	___ftadd@exp2^0,w,c
  4669   000B22  5C36               	subwf	___ftadd@exp1^0,w,c
  4670   000B24  B0D8               	btfsc	status,0,c
  4671   000B26  D01B               	goto	l2524
  4672   000B28                     u1970:
  4673   000B28  90D8               	bcf	status,0,c
  4674   000B2A  362E               	rlcf	___ftadd@f2^0,f,c
  4675   000B2C  362F               	rlcf	(___ftadd@f2+1)^0,f,c
  4676   000B2E  3630               	rlcf	(___ftadd@f2+2)^0,f,c
  4677   000B30  0635               	decf	___ftadd@exp2^0,f,c
  4678   000B32  5036               	movf	___ftadd@exp1^0,w,c
  4679   000B34  1835               	xorwf	___ftadd@exp2^0,w,c
  4680   000B36  B4D8               	btfsc	status,2,c
  4681   000B38  D00D               	goto	l2522
  4682   000B3A  0634               	decf	___ftadd@sign^0,f,c
  4683   000B3C  C034  F031         	movff	___ftadd@sign,??___ftadd
  4684   000B40  0E07               	movlw	7
  4685   000B42  1631               	andwf	??___ftadd^0,f,c
  4686   000B44  B4D8               	btfsc	status,2,c
  4687   000B46  D006               	goto	l2522
  4688   000B48  D7EF               	goto	u1970
  4689   000B4A                     l2520:
  4690   000B4A  90D8               	bcf	status,0,c
  4691   000B4C  322D               	rrcf	(___ftadd@f1+2)^0,f,c
  4692   000B4E  322C               	rrcf	(___ftadd@f1+1)^0,f,c
  4693   000B50  322B               	rrcf	___ftadd@f1^0,f,c
  4694   000B52  2A36               	incf	___ftadd@exp1^0,f,c
  4695   000B54                     l2522:
  4696   000B54  5035               	movf	___ftadd@exp2^0,w,c
  4697   000B56  1836               	xorwf	___ftadd@exp1^0,w,c
  4698   000B58  B4D8               	btfsc	status,2,c
  4699   000B5A  D01F               	goto	u2040
  4700   000B5C  D7F6               	goto	l2520
  4701   000B5E                     l2524:
  4702   000B5E  5036               	movf	___ftadd@exp1^0,w,c
  4703   000B60  5C35               	subwf	___ftadd@exp2^0,w,c
  4704   000B62  B0D8               	btfsc	status,0,c
  4705   000B64  D01A               	goto	u2040
  4706   000B66                     u2010:
  4707   000B66  90D8               	bcf	status,0,c
  4708   000B68  362B               	rlcf	___ftadd@f1^0,f,c
  4709   000B6A  362C               	rlcf	(___ftadd@f1+1)^0,f,c
  4710   000B6C  362D               	rlcf	(___ftadd@f1+2)^0,f,c
  4711   000B6E  0636               	decf	___ftadd@exp1^0,f,c
  4712   000B70  5036               	movf	___ftadd@exp1^0,w,c
  4713   000B72  1835               	xorwf	___ftadd@exp2^0,w,c
  4714   000B74  B4D8               	btfsc	status,2,c
  4715   000B76  D00D               	goto	l2534
  4716   000B78  0634               	decf	___ftadd@sign^0,f,c
  4717   000B7A  C034  F031         	movff	___ftadd@sign,??___ftadd
  4718   000B7E  0E07               	movlw	7
  4719   000B80  1631               	andwf	??___ftadd^0,f,c
  4720   000B82  B4D8               	btfsc	status,2,c
  4721   000B84  D006               	goto	l2534
  4722   000B86  D7EF               	goto	u2010
  4723   000B88                     l2532:
  4724   000B88  90D8               	bcf	status,0,c
  4725   000B8A  3230               	rrcf	(___ftadd@f2+2)^0,f,c
  4726   000B8C  322F               	rrcf	(___ftadd@f2+1)^0,f,c
  4727   000B8E  322E               	rrcf	___ftadd@f2^0,f,c
  4728   000B90  2A35               	incf	___ftadd@exp2^0,f,c
  4729   000B92                     l2534:
  4730   000B92  5035               	movf	___ftadd@exp2^0,w,c
  4731   000B94  1836               	xorwf	___ftadd@exp1^0,w,c
  4732   000B96  A4D8               	btfss	status,2,c
  4733   000B98  D7F7               	goto	l2532
  4734   000B9A                     u2040:
  4735   000B9A  AE34               	btfss	___ftadd@sign^0,7,c
  4736   000B9C  D00C               	goto	l739
  4737   000B9E  0EFF               	movlw	255
  4738   000BA0  1A2B               	xorwf	___ftadd@f1^0,f,c
  4739   000BA2  0EFF               	movlw	255
  4740   000BA4  1A2C               	xorwf	(___ftadd@f1+1)^0,f,c
  4741   000BA6  0EFF               	movlw	255
  4742   000BA8  1A2D               	xorwf	(___ftadd@f1+2)^0,f,c
  4743   000BAA  0E01               	movlw	1
  4744   000BAC  262B               	addwf	___ftadd@f1^0,f,c
  4745   000BAE  0E00               	movlw	0
  4746   000BB0  222C               	addwfc	(___ftadd@f1+1)^0,f,c
  4747   000BB2  0E00               	movlw	0
  4748   000BB4  222D               	addwfc	(___ftadd@f1+2)^0,f,c
  4749   000BB6                     l739:
  4750   000BB6  AC34               	btfss	___ftadd@sign^0,6,c
  4751   000BB8  D00C               	goto	l2540
  4752   000BBA  0EFF               	movlw	255
  4753   000BBC  1A2E               	xorwf	___ftadd@f2^0,f,c
  4754   000BBE  0EFF               	movlw	255
  4755   000BC0  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  4756   000BC2  0EFF               	movlw	255
  4757   000BC4  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  4758   000BC6  0E01               	movlw	1
  4759   000BC8  262E               	addwf	___ftadd@f2^0,f,c
  4760   000BCA  0E00               	movlw	0
  4761   000BCC  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  4762   000BCE  0E00               	movlw	0
  4763   000BD0  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  4764   000BD2                     l2540:
  4765   000BD2  0E00               	movlw	0
  4766   000BD4  6E34               	movwf	___ftadd@sign^0,c
  4767   000BD6  502B               	movf	___ftadd@f1^0,w,c
  4768   000BD8  262E               	addwf	___ftadd@f2^0,f,c
  4769   000BDA  502C               	movf	(___ftadd@f1+1)^0,w,c
  4770   000BDC  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  4771   000BDE  502D               	movf	(___ftadd@f1+2)^0,w,c
  4772   000BE0  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  4773   000BE2  AE30               	btfss	(___ftadd@f2+2)^0,7,c
  4774   000BE4  D00E               	goto	l2550
  4775   000BE6  0EFF               	movlw	255
  4776   000BE8  1A2E               	xorwf	___ftadd@f2^0,f,c
  4777   000BEA  0EFF               	movlw	255
  4778   000BEC  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  4779   000BEE  0EFF               	movlw	255
  4780   000BF0  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  4781   000BF2  0E01               	movlw	1
  4782   000BF4  262E               	addwf	___ftadd@f2^0,f,c
  4783   000BF6  0E00               	movlw	0
  4784   000BF8  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  4785   000BFA  0E00               	movlw	0
  4786   000BFC  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  4787   000BFE  0E01               	movlw	1
  4788   000C00  6E34               	movwf	___ftadd@sign^0,c
  4789   000C02                     l2550:
  4790   000C02  C02E  F001         	movff	___ftadd@f2,___ftpack@arg
  4791   000C06  C02F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4792   000C0A  C030  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4793   000C0E  C036  F004         	movff	___ftadd@exp1,___ftpack@exp
  4794   000C12  C034  F005         	movff	___ftadd@sign,___ftpack@sign
  4795   000C16  EC83  F008         	call	___ftpack	;wreg free
  4796   000C1A  C001  F02B         	movff	?___ftpack,?___ftadd
  4797   000C1E  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  4798   000C22  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  4799   000C26  0012               	return		;funcret
  4800   000C28                     __end_of___ftadd:
  4801                           	callstack 0
  4802                           
  4803 ;; *************** function ___ftpack *****************
  4804 ;; Defined at:
  4805 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/float.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  arg             3    0[COMRAM] unsigned um
  4808 ;;  exp             1    3[COMRAM] unsigned char 
  4809 ;;  sign            1    4[COMRAM] unsigned char 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  3    0[COMRAM] float 
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4821 ;;      Params:         5       0       0       0       0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4823 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4824 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4825 ;;Total ram usage:        8 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; Hardware stack levels required when called: 1
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		___ftadd
  4832 ;;		___ftdiv
  4833 ;;		___ftmul
  4834 ;;		___lbtoft
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text35
  4839   001106                     __ptext35:
  4840                           	callstack 0
  4841   001106                     ___ftpack:
  4842                           	callstack 27
  4843                           
  4844                           ;incstack = 0
  4845   001106  5004               	movf	___ftpack@exp^0,w,c
  4846   001108  B4D8               	btfsc	status,2,c
  4847   00110A  D005               	goto	u1320
  4848   00110C  5001               	movf	___ftpack@arg^0,w,c
  4849   00110E  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  4850   001110  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  4851   001112  A4D8               	btfss	status,2,c
  4852   001114  D00C               	goto	l2132
  4853   001116                     u1320:
  4854   001116  0E00               	movlw	0
  4855   001118  6E01               	movwf	?___ftpack^0,c
  4856   00111A  0E00               	movlw	0
  4857   00111C  6E02               	movwf	(?___ftpack+1)^0,c
  4858   00111E  0E00               	movlw	0
  4859   001120  6E03               	movwf	(?___ftpack+2)^0,c
  4860   001122  0012               	return	
  4861   001124                     l2130:
  4862   001124  2A04               	incf	___ftpack@exp^0,f,c
  4863   001126  90D8               	bcf	status,0,c
  4864   001128  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  4865   00112A  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  4866   00112C  3201               	rrcf	___ftpack@arg^0,f,c
  4867   00112E                     l2132:
  4868   00112E  0E00               	movlw	0
  4869   001130  1401               	andwf	___ftpack@arg^0,w,c
  4870   001132  6E06               	movwf	??___ftpack^0,c
  4871   001134  0E00               	movlw	0
  4872   001136  1402               	andwf	(___ftpack@arg+1)^0,w,c
  4873   001138  6E07               	movwf	(??___ftpack+1)^0,c
  4874   00113A  0EFE               	movlw	254
  4875   00113C  1403               	andwf	(___ftpack@arg+2)^0,w,c
  4876   00113E  6E08               	movwf	(??___ftpack+2)^0,c
  4877   001140  5006               	movf	??___ftpack^0,w,c
  4878   001142  1007               	iorwf	(??___ftpack+1)^0,w,c
  4879   001144  1008               	iorwf	(??___ftpack+2)^0,w,c
  4880   001146  B4D8               	btfsc	status,2,c
  4881   001148  D00C               	goto	l2138
  4882   00114A  D7EC               	goto	l2130
  4883   00114C                     l2134:
  4884   00114C  2A04               	incf	___ftpack@exp^0,f,c
  4885   00114E  0E01               	movlw	1
  4886   001150  2601               	addwf	___ftpack@arg^0,f,c
  4887   001152  0E00               	movlw	0
  4888   001154  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  4889   001156  0E00               	movlw	0
  4890   001158  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  4891   00115A  90D8               	bcf	status,0,c
  4892   00115C  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  4893   00115E  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  4894   001160  3201               	rrcf	___ftpack@arg^0,f,c
  4895   001162                     l2138:
  4896   001162  0E00               	movlw	0
  4897   001164  1401               	andwf	___ftpack@arg^0,w,c
  4898   001166  6E06               	movwf	??___ftpack^0,c
  4899   001168  0E00               	movlw	0
  4900   00116A  1402               	andwf	(___ftpack@arg+1)^0,w,c
  4901   00116C  6E07               	movwf	(??___ftpack+1)^0,c
  4902   00116E  0EFF               	movlw	255
  4903   001170  1403               	andwf	(___ftpack@arg+2)^0,w,c
  4904   001172  6E08               	movwf	(??___ftpack+2)^0,c
  4905   001174  5006               	movf	??___ftpack^0,w,c
  4906   001176  1007               	iorwf	(??___ftpack+1)^0,w,c
  4907   001178  1008               	iorwf	(??___ftpack+2)^0,w,c
  4908   00117A  B4D8               	btfsc	status,2,c
  4909   00117C  D006               	goto	l2142
  4910   00117E  D7E6               	goto	l2134
  4911   001180                     l2140:
  4912   001180  0604               	decf	___ftpack@exp^0,f,c
  4913   001182  90D8               	bcf	status,0,c
  4914   001184  3601               	rlcf	___ftpack@arg^0,f,c
  4915   001186  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  4916   001188  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  4917   00118A                     l2142:
  4918   00118A  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  4919   00118C  D003               	goto	u1360
  4920   00118E  0E02               	movlw	2
  4921   001190  6004               	cpfslt	___ftpack@exp^0,c
  4922   001192  D7F6               	goto	l2140
  4923   001194                     u1360:
  4924   001194  A004               	btfss	___ftpack@exp^0,0,c
  4925   001196  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  4926   001198  90D8               	bcf	status,0,c
  4927   00119A  3204               	rrcf	___ftpack@exp^0,f,c
  4928   00119C  5004               	movf	___ftpack@exp^0,w,c
  4929   00119E  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  4930   0011A0  5005               	movf	___ftpack@sign^0,w,c
  4931   0011A2  A4D8               	btfss	status,2,c
  4932   0011A4  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  4933   0011A6  C001  F001         	movff	___ftpack@arg,?___ftpack
  4934   0011AA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4935   0011AE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4936   0011B2  0012               	return		;funcret
  4937   0011B4                     __end_of___ftpack:
  4938                           	callstack 0
  4939                           
  4940 ;; *************** function _check_potentiometer_voltaje *****************
  4941 ;; Defined at:
  4942 ;;		line 277 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4956 ;;      Params:         0       0       0       0       0       0       0       0       0
  4957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4960 ;;Total ram usage:        0 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 1
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_main
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text36
  4971   001884                     __ptext36:
  4972                           	callstack 0
  4973   001884                     _check_potentiometer_voltaje:
  4974                           	callstack 29
  4975                           
  4976                           ;LAB05.c: 278: ADON=1;
  4977                           
  4978                           ;incstack = 0
  4979   001884  80C2               	bsf	4034,0,c	;volatile
  4980                           
  4981                           ;LAB05.c: 279: GO=1;
  4982   001886  82C2               	bsf	4034,1,c	;volatile
  4983   001888                     l296:
  4984   001888  B2C2               	btfsc	4034,1,c	;volatile
  4985   00188A  D7FE               	goto	l296
  4986                           
  4987                           ;LAB05.c: 281: if(ADRES > 511)
  4988   00188C  0E00               	movlw	0
  4989   00188E  5CC3               	subwf	195,w,c	;volatile
  4990   001890  0E02               	movlw	2
  4991   001892  58C4               	subwfb	196,w,c	;volatile
  4992   001894  A0D8               	btfss	status,0,c
  4993   001896  D002               	goto	l299
  4994                           
  4995                           ;LAB05.c: 282: LATB0 = 1;
  4996   001898  808A               	bsf	3978,0,c	;volatile
  4997   00189A  D001               	goto	l300
  4998   00189C                     l299:
  4999                           
  5000                           ;LAB05.c: 283: else;LAB05.c: 284: LATB0 = 0;
  5001   00189C  908A               	bcf	3978,0,c	;volatile
  5002   00189E                     l300:
  5003                           
  5004                           ;LAB05.c: 285: ADON=0;
  5005   00189E  90C2               	bcf	4034,0,c	;volatile
  5006                           
  5007                           ;LAB05.c: 286: return;
  5008   0018A0  0012               	return		;funcret
  5009   0018A2                     __end_of_check_potentiometer_voltaje:
  5010                           	callstack 0
  5011                           
  5012 ;; *************** function _ISR *****************
  5013 ;; Defined at:
  5014 ;;		line 450 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;		None
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;		None
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      void 
  5021 ;; Registers used:
  5022 ;;		wreg, status,2
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5028 ;;      Params:         0       0       0       0       0       0       0       0       0
  5029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5031 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5032 ;;Total ram usage:        0 bytes
  5033 ;; Hardware stack levels used: 1
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		Interrupt level 2
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	intcode
  5042   000008                     __pintcode:
  5043                           	callstack 0
  5044   000008                     _ISR:
  5045                           	callstack 25
  5046                           
  5047                           ;incstack = 0
  5048   000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5049   00000A  ED10  F00C         	call	int_func,f	;refresh shadow registers
  5050                           
  5051                           	psect	intcode_body
  5052   001820                     __pintcode_body:
  5053                           	callstack 25
  5054   001820                     int_func:
  5055                           	callstack 25
  5056   001820  0006               	pop		; remove dummy address from shadow register refresh
  5057                           
  5058                           ;LAB05.c: 451: if(TMR0IF==1){
  5059   001822  A4F2               	btfss	4082,2,c	;volatile
  5060   001824  D00D               	goto	i2l368
  5061                           
  5062                           ;LAB05.c: 452: TMR0=3036;
  5063   001826  0E0B               	movlw	11
  5064   001828  6ED7               	movwf	215,c	;volatile
  5065   00182A  0EDC               	movlw	220
  5066   00182C  6ED6               	movwf	214,c	;volatile
  5067                           
  5068                           ;LAB05.c: 453: TMR0IF=0;
  5069   00182E  94F2               	bcf	4082,2,c	;volatile
  5070                           
  5071                           ;LAB05.c: 454: LATC2=~LATC2;
  5072   001830  B48B               	btfsc	3979,2,c	;volatile
  5073   001832  D002               	goto	i2u255_40
  5074   001834  848B               	bsf	3979,2,c	;volatile
  5075   001836  D001               	goto	i2u256_45
  5076   001838                     i2u255_40:
  5077   001838  948B               	bcf	3979,2,c	;volatile
  5078   00183A                     i2u256_45:
  5079                           
  5080                           ;LAB05.c: 455: Enable_sample=1;
  5081   00183A  0E01               	movlw	1
  5082   00183C  0100               	movlb	0	; () banked
  5083   00183E  6F86               	movwf	_Enable_sample& (0+255),b
  5084   001840                     i2l368:
  5085   001840  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5086   001842  0011               	retfie		f
  5087   001844                     __end_of_ISR:
  5088                           	callstack 0
  5089                           
  5090                           	psect	rparam
  5091   000000                     
  5092                           	psect	temp
  5093   00004D                     btemp:
  5094                           	callstack 0
  5095   00004D                     	ds	1
  5096   000000                     int$flags	set	btemp
  5097   000000                     wtemp8	set	btemp+1
  5098   000000                     ttemp5	set	btemp+1
  5099   000000                     ttemp6	set	btemp+4
  5100   000000                     ttemp7	set	btemp+8
  5101                           
  5102                           	psect	idloc
  5103                           
  5104                           ;Config register IDLOC0 @ 0x200000
  5105                           ;	unspecified, using default values
  5106   200000                     	org	2097152
  5107   200000  FF                 	db	255
  5108                           
  5109                           ;Config register IDLOC1 @ 0x200001
  5110                           ;	unspecified, using default values
  5111   200001                     	org	2097153
  5112   200001  FF                 	db	255
  5113                           
  5114                           ;Config register IDLOC2 @ 0x200002
  5115                           ;	unspecified, using default values
  5116   200002                     	org	2097154
  5117   200002  FF                 	db	255
  5118                           
  5119                           ;Config register IDLOC3 @ 0x200003
  5120                           ;	unspecified, using default values
  5121   200003                     	org	2097155
  5122   200003  FF                 	db	255
  5123                           
  5124                           ;Config register IDLOC4 @ 0x200004
  5125                           ;	unspecified, using default values
  5126   200004                     	org	2097156
  5127   200004  FF                 	db	255
  5128                           
  5129                           ;Config register IDLOC5 @ 0x200005
  5130                           ;	unspecified, using default values
  5131   200005                     	org	2097157
  5132   200005  FF                 	db	255
  5133                           
  5134                           ;Config register IDLOC6 @ 0x200006
  5135                           ;	unspecified, using default values
  5136   200006                     	org	2097158
  5137   200006  FF                 	db	255
  5138                           
  5139                           ;Config register IDLOC7 @ 0x200007
  5140                           ;	unspecified, using default values
  5141   200007                     	org	2097159
  5142   200007  FF                 	db	255
  5143                           
  5144                           	psect	config
  5145                           
  5146                           ;Config register CONFIG1L @ 0x300000
  5147                           ;	unspecified, using default values
  5148                           ;	PLL Prescaler Selection bits
  5149                           ;	PLLDIV = 0x0, unprogrammed default
  5150                           ;	System Clock Postscaler Selection bits
  5151                           ;	CPUDIV = 0x0, unprogrammed default
  5152                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5153                           ;	USBDIV = 0x0, unprogrammed default
  5154   300000                     	org	3145728
  5155   300000  00                 	db	0
  5156                           
  5157                           ;Config register CONFIG1H @ 0x300001
  5158                           ;	Oscillator Selection bits
  5159                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5160                           ;	Fail-Safe Clock Monitor Enable bit
  5161                           ;	FCMEN = 0x0, unprogrammed default
  5162                           ;	Internal/External Oscillator Switchover bit
  5163                           ;	IESO = 0x0, unprogrammed default
  5164   300001                     	org	3145729
  5165   300001  09                 	db	9
  5166                           
  5167                           ;Config register CONFIG2L @ 0x300002
  5168                           ;	unspecified, using default values
  5169                           ;	Power-up Timer Enable bit
  5170                           ;	PWRT = 0x1, unprogrammed default
  5171                           ;	Brown-out Reset Enable bits
  5172                           ;	BOR = 0x3, unprogrammed default
  5173                           ;	Brown-out Reset Voltage bits
  5174                           ;	BORV = 0x3, unprogrammed default
  5175                           ;	USB Voltage Regulator Enable bit
  5176                           ;	VREGEN = 0x0, unprogrammed default
  5177   300002                     	org	3145730
  5178   300002  1F                 	db	31
  5179                           
  5180                           ;Config register CONFIG2H @ 0x300003
  5181                           ;	Watchdog Timer Enable bit
  5182                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5183                           ;	Watchdog Timer Postscale Select bits
  5184                           ;	WDTPS = 512, 1:512
  5185   300003                     	org	3145731
  5186   300003  12                 	db	18
  5187                           
  5188                           ; Padding undefined space
  5189   300004                     	org	3145732
  5190   300004  FF                 	db	255
  5191                           
  5192                           ;Config register CONFIG3H @ 0x300005
  5193                           ;	unspecified, using default values
  5194                           ;	CCP2 MUX bit
  5195                           ;	CCP2MX = 0x1, unprogrammed default
  5196                           ;	PORTB A/D Enable bit
  5197                           ;	PBADEN = 0x1, unprogrammed default
  5198                           ;	Low-Power Timer 1 Oscillator Enable bit
  5199                           ;	LPT1OSC = 0x0, unprogrammed default
  5200                           ;	MCLR Pin Enable bit
  5201                           ;	MCLRE = 0x1, unprogrammed default
  5202   300005                     	org	3145733
  5203   300005  83                 	db	131
  5204                           
  5205                           ;Config register CONFIG4L @ 0x300006
  5206                           ;	unspecified, using default values
  5207                           ;	Stack Full/Underflow Reset Enable bit
  5208                           ;	STVREN = 0x1, unprogrammed default
  5209                           ;	Single-Supply ICSP Enable bit
  5210                           ;	LVP = 0x1, unprogrammed default
  5211                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5212                           ;	ICPRT = 0x0, unprogrammed default
  5213                           ;	Extended Instruction Set Enable bit
  5214                           ;	XINST = 0x0, unprogrammed default
  5215                           ;	Background Debugger Enable bit
  5216                           ;	DEBUG = 0x1, unprogrammed default
  5217   300006                     	org	3145734
  5218   300006  85                 	db	133
  5219                           
  5220                           ; Padding undefined space
  5221   300007                     	org	3145735
  5222   300007  FF                 	db	255
  5223                           
  5224                           ;Config register CONFIG5L @ 0x300008
  5225                           ;	unspecified, using default values
  5226                           ;	Code Protection bit
  5227                           ;	CP0 = 0x1, unprogrammed default
  5228                           ;	Code Protection bit
  5229                           ;	CP1 = 0x1, unprogrammed default
  5230                           ;	Code Protection bit
  5231                           ;	CP2 = 0x1, unprogrammed default
  5232                           ;	Code Protection bit
  5233                           ;	CP3 = 0x1, unprogrammed default
  5234   300008                     	org	3145736
  5235   300008  0F                 	db	15
  5236                           
  5237                           ;Config register CONFIG5H @ 0x300009
  5238                           ;	unspecified, using default values
  5239                           ;	Boot Block Code Protection bit
  5240                           ;	CPB = 0x1, unprogrammed default
  5241                           ;	Data EEPROM Code Protection bit
  5242                           ;	CPD = 0x1, unprogrammed default
  5243   300009                     	org	3145737
  5244   300009  C0                 	db	192
  5245                           
  5246                           ;Config register CONFIG6L @ 0x30000A
  5247                           ;	unspecified, using default values
  5248                           ;	Write Protection bit
  5249                           ;	WRT0 = 0x1, unprogrammed default
  5250                           ;	Write Protection bit
  5251                           ;	WRT1 = 0x1, unprogrammed default
  5252                           ;	Write Protection bit
  5253                           ;	WRT2 = 0x1, unprogrammed default
  5254                           ;	Write Protection bit
  5255                           ;	WRT3 = 0x1, unprogrammed default
  5256   30000A                     	org	3145738
  5257   30000A  0F                 	db	15
  5258                           
  5259                           ;Config register CONFIG6H @ 0x30000B
  5260                           ;	unspecified, using default values
  5261                           ;	Configuration Register Write Protection bit
  5262                           ;	WRTC = 0x1, unprogrammed default
  5263                           ;	Boot Block Write Protection bit
  5264                           ;	WRTB = 0x1, unprogrammed default
  5265                           ;	Data EEPROM Write Protection bit
  5266                           ;	WRTD = 0x1, unprogrammed default
  5267   30000B                     	org	3145739
  5268   30000B  E0                 	db	224
  5269                           
  5270                           ;Config register CONFIG7L @ 0x30000C
  5271                           ;	unspecified, using default values
  5272                           ;	Table Read Protection bit
  5273                           ;	EBTR0 = 0x1, unprogrammed default
  5274                           ;	Table Read Protection bit
  5275                           ;	EBTR1 = 0x1, unprogrammed default
  5276                           ;	Table Read Protection bit
  5277                           ;	EBTR2 = 0x1, unprogrammed default
  5278                           ;	Table Read Protection bit
  5279                           ;	EBTR3 = 0x1, unprogrammed default
  5280   30000C                     	org	3145740
  5281   30000C  0F                 	db	15
  5282                           
  5283                           ;Config register CONFIG7H @ 0x30000D
  5284                           ;	unspecified, using default values
  5285                           ;	Boot Block Table Read Protection bit
  5286                           ;	EBTRB = 0x1, unprogrammed default
  5287   30000D                     	org	3145741
  5288   30000D  40                 	db	64
  5289                           tosu	equ	0xFFF
  5290                           tosh	equ	0xFFE
  5291                           tosl	equ	0xFFD
  5292                           stkptr	equ	0xFFC
  5293                           pclatu	equ	0xFFB
  5294                           pclath	equ	0xFFA
  5295                           pcl	equ	0xFF9
  5296                           tblptru	equ	0xFF8
  5297                           tblptrh	equ	0xFF7
  5298                           tblptrl	equ	0xFF6
  5299                           tablat	equ	0xFF5
  5300                           prodh	equ	0xFF4
  5301                           prodl	equ	0xFF3
  5302                           indf0	equ	0xFEF
  5303                           postinc0	equ	0xFEE
  5304                           postdec0	equ	0xFED
  5305                           preinc0	equ	0xFEC
  5306                           plusw0	equ	0xFEB
  5307                           fsr0h	equ	0xFEA
  5308                           fsr0l	equ	0xFE9
  5309                           wreg	equ	0xFE8
  5310                           indf1	equ	0xFE7
  5311                           postinc1	equ	0xFE6
  5312                           postdec1	equ	0xFE5
  5313                           preinc1	equ	0xFE4
  5314                           plusw1	equ	0xFE3
  5315                           fsr1h	equ	0xFE2
  5316                           fsr1l	equ	0xFE1
  5317                           bsr	equ	0xFE0
  5318                           indf2	equ	0xFDF
  5319                           postinc2	equ	0xFDE
  5320                           postdec2	equ	0xFDD
  5321                           preinc2	equ	0xFDC
  5322                           plusw2	equ	0xFDB
  5323                           fsr2h	equ	0xFDA
  5324                           fsr2l	equ	0xFD9
  5325                           status	equ	0xFD8

Data Sizes:
    Strings     107
    Constant    10
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      76
    BANK0           160     37      41
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[9]), STR_14(CODE[9]), STR_13(CODE[8]), STR_12(CODE[9]), 
		 -> STR_11(CODE[9]), STR_10(CODE[9]), STR_9(CODE[8]), STR_8(CODE[9]), 
		 -> STR_7(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> send_temperature_RS232@buffer_RS232(COMRAM[12]), main@buffer_LCD_row_2(BANK0[17]), main@buffer_LCD_row_1(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    show_temperature_LCD@buffer_LCD_row_2	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_2(BANK0[17]), 

    show_temperature_LCD@buffer_LCD_row_1	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_1(BANK0[17]), 

    choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_2(BANK0[17]), 

    choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_1(BANK0[17]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[3]), STR_5(CODE[5]), STR_4(CODE[17]), STR_3(CODE[13]), 
		 -> STR_2(CODE[8]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_choose_scale_temperature_and_fill_buffers
    _welcome_operations->_EscribeLCD_n8
    _MensajeLCD_Var->_DireccionaLCD
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _show_temperature_LCD->_DireccionaLCD
    _show_temperature_LCD->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _send_temperature_RS232->_sprintf
    _save_temperature_c_EEPROM->_EEPROM_Write
    _measure_temperature_c_humidity_per->_DHT11_ReadData
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD
    _choose_scale_temperature_and_fill_buffers->___fttol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   30603
                                              0 BANK0     37    37      0
        _check_potentiometer_voltaje
_choose_scale_temperature_and_fill_b
                 _init_configuration
 _measure_temperature_c_humidity_per
          _save_temperature_c_EEPROM
             _send_temperature_RS232
               _show_temperature_LCD
             _show_temperature_c_RGB
                 _welcome_operations
 ---------------------------------------------------------------------------------
 (1) _welcome_operations                                   2     2      0    2548
                                             13 COMRAM     2     2      0
                           _BorraLCD
                        _EEPROM_Read
                      _EscribeLCD_n8
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       3     2      1    1009
                                              5 COMRAM     3     2      1
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1    1407
                                              8 COMRAM     5     4      1
                        _EEPROM_Read (ARG)
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     539
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _show_temperature_c_RGB                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _show_temperature_LCD                                 6     1      5     936
                                              5 COMRAM     6     1      5
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _DireccionaLCD                                        1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _send_temperature_RS232                              15    15      0    5709
                                             25 COMRAM    15    15      0
                         _Transmitir
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _save_temperature_c_EEPROM                            0     0      0     120
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _measure_temperature_c_humidity_per                   0     0      0     115
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       3     3      0     115
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_configuration                                   2     2      0     286
                                              4 COMRAM     2     2      0
                       _ConfiguraLCD
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (2) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfiguraLCD                                         1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _choose_scale_temperature_and_fill_buffers            5     3      2   20705
                                             69 COMRAM     5     3      2
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    5563
                                             12 COMRAM    13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    2075
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1574
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2866
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     480
                                             54 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3602
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3404
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4392
                                             42 COMRAM    12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _check_potentiometer_voltaje                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_potentiometer_voltaje
   _choose_scale_temperature_and_fill_buffers
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
       ___ftmul (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
     ___ftdiv
     ___ftmul
     ___fttol
       ___ftadd (ARG)
       ___ftdiv (ARG)
       ___ftmul (ARG)
       ___lbtoft (ARG)
     ___lbtoft
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_configuration
     _ConfiguraLCD
     _InicializaLCD
       _BorraLCD
         _EnviaDato
           _HabilitaLCD
           _RetardoLCD
         _HabilitaLCD
         _RetardoLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _measure_temperature_c_humidity_per
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _save_temperature_c_EEPROM
     _EEPROM_Write
   _send_temperature_RS232
     _Transmitir
     _sprintf
   _show_temperature_LCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _show_temperature_c_RGB
   _welcome_operations
     _BorraLCD
     _EEPROM_Read
     _EscribeLCD_n8
       _EEPROM_Read (ARG)
       _EnviaDato (ARG)
       _HabilitaLCD (ARG)
       _RetardoLCD (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
     _MensajeLCD_Var
       _BorraLCD
       _DireccionaLCD
       _EscribeLCD_c

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      29       5       25.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      4C       1       80.9%
BITBIGSFRlll        20      0       0      33        0.0%
BITBIGSFRhhhhl      1A      0       0      21        0.0%
BITBIGSFRhllhll      F      0       0      29        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhlhhh       B      0       0      24        0.0%
BITBIGSFRhlhlh       8      0       0      26        0.0%
BITBIGSFRlh          7      0       0      31        0.0%
BITBIGSFRhlhhl       7      0       0      25        0.0%
BITBIGSFRhllll       5      0       0      30        0.0%
BITBIGSFRhllhh       1      0       0      28        0.0%
BITBIGSFRllh         1      0       0      32        0.0%
BITBIGSFRhlhll       1      0       0      27        0.0%
BITBIGSFRhhhl        1      0       0      22        0.0%
BITBIGSFRhhl         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      75      34        0.0%
DATA                 0      0      75       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun  4 03:10:14 2023

                                        Transmitir@BufferT 0001  
                                 ??_show_temperature_c_RGB 0001  
                                                       _GO 7E11  
                                                       _RD 7D30  
                                                       _TO 7E83  
                                                       _WR 7D31  
                                               EnviaDato@a 0004  
               __end_of_measure_temperature_c_humidity_per 17FC  
                     ??_measure_temperature_c_humidity_per 0004  
                      ?_measure_temperature_c_humidity_per 0001  
                       _measure_temperature_c_humidity_per 17D6  
                                             ___ftadd@exp1 0036  
                                             ___ftadd@exp2 0035  
                                              main@Temp_n1 0082  
                                             ___ftadd@sign 0034  
                                                      l300 189E  
                                            _InicializaLCD 11B4  
                                                      l324 08C2  
                                                      l326 093A  
                                                      l270 159C  
                                                      l319 14C0  
                                                      l328 09CE  
                                                      l275 15CE  
                                                      l371 187C  
                                                      l296 1888  
                                                      l299 189C  
                                                      l750 1002  
                                                      l739 0BB6  
                                                      l888 1632  
                                                      l898 170A  
                                                      _GIE 7F97  
                                                      _RA2 7C02  
                                                      _RA3 7C03  
                                                      _RC1 7C11  
                                                      _ISR 0008  
                                                      _Che 004B  
                                                      _Hum 0087  
                                                      wreg 0FE8  
                                                     ?_ISR 0001  
                                             ___ftdiv@cntr 0025  
                                             ___ftdiv@sign 002A  
                                                     l2130 1124  
                                                     l2140 1180  
                                                     l2132 112E  
                                                     l2142 118A  
                                                     l2134 114C  
                                                     l2206 1600  
                                                     l2208 1608  
                                                     l2072 1532  
                                                     l2304 0E8E  
                                                     l2138 1162  
                                                     l2218 1628  
                                                     l2234 1700  
                                                     l2226 16E0  
                                                     l2074 1544  
                                                     l2082 1578  
                                                     l2314 0ED4  
                                                     l2330 0F38  
                                                     l2228 16E8  
                                                     l2420 0C4A  
                                                     l2412 0C2E  
                                                     l2076 1564  
                                                     l2164 1726  
                                                     l2180 174A  
                                                     l2340 1306  
                                                     l2430 0C5A  
                                                     l2078 156E  
                                                     l2094 16C4  
                                                     l2334 12E6  
                                                     l2520 0B4A  
                                                     l2432 0C88  
                                                     l2248 11C6  
                                                     l2176 1742  
                                                     l2168 172C  
                                                     l2344 131C  
                                                     l2352 134A  
                                                     l2522 0B54  
                                                     l2442 0CAA  
                                                     l2418 0C44  
                                                     l2258 11E4  
                                                     l2194 17CE  
                                                     l2186 17B6  
                                                     l2540 0BD2  
                                                     l2532 0B88  
                                                     l2524 0B5E  
                                                     l2612 0DC4  
                                                     l2268 1202  
                                                     l2348 1332  
                                                     l2550 0C02  
                                                     l2534 0B92  
                                                     l2630 0E06  
                                                     l2606 0D9C  
                                                     l2470 0D48  
                                                     l2462 0CF2  
                                                     l2560 0F76  
                                                     l2640 0E2E  
                                                     l2464 0CF8  
                                                     l2448 0CAE  
                                                     l2288 123A  
                                                     l2626 0DF6  
                                                     l2802 1664  
                                                     l2298 0E6E  
                                                     l2492 0AD0  
                                                     l2636 0E1E  
                                                     l2388 15C8  
                                                     l2566 0F9E  
                                                     l2654 1060  
                                                     l2478 1916  
                                                     l2910 12B0  
                                                     l2902 1294  
                                                     l2672 10B4  
                                                     l2920 12D8  
                                                     l2498 0AF8  
                                                     l2586 0FDC  
                                                     l2690 10F4  
                                                     l2682 10CC  
                                                     l2914 12C0  
                                                     l2684 10D8  
                                                     l2676 10C4  
                                                     l2916 12D0  
                                                     l2860 146C  
                                                     l2756 1374  
                                                     l2940 14DA  
                                                     l2880 14B2  
                                                     l2872 1496  
                                                     l2864 147A  
                                                     l2892 126C  
                                                     l2876 14A4  
                                                     l2868 1488  
                                                     l2798 1654  
                                                     l2896 127C  
                                                     l2898 128C  
                                                     _ADON 7E10  
                                                     STR_1 081C  
                                                     STR_2 0869  
                                                     STR_3 0829  
                                                     STR_4 080B  
                                                     STR_5 0871  
                                                     STR_6 0856  
                                                     STR_7 0851  
                                                     STR_8 0848  
                                                     STR_9 0861  
                                                     u2010 0B66  
                                                     u2101 0F86  
                                                     u1320 1116  
                                                     u2040 0B9A  
                                                     u2200 104E  
                                                     u1400 1730  
                                                     u2210 107E  
                                                     u2131 0D84  
                                                     u1500 18B4  
                                                     u2151 0DAC  
                                                     u2215 1076  
                                                     u1360 1194  
                                                     u1440 160C  
                                                     _LATD 0F8C  
                                                     u2081 0F5E  
                                                     _LATE 0F8D  
                                                     u2250 10DE  
                                                     u1610 175E  
                                                     u1620 1768  
                                                     u1470 16EC  
                                                     u1710 15BC  
                                                     u2191 1044  
                                                     u1640 176E  
                                                     u1608 175A  
                                                     u1650 1778  
                                                     u2450 1264  
                                                     u1820 0CDA  
                                                     u1740 15D8  
                                                     u1910 0AC2  
                                                     u1638 176A  
                                                     u1590 1758  
                                                     u2470 129A  
                                                     u2607 184E  
                                                     u1840 0D50  
                                                     u1728 15BE  
                                                     u1680 15A6  
                                                     u2617 185A  
                                                     u1850 0D6A  
                                                     u2707 18FE  
                                                     u2627 15AE  
                                                     u1940 0AEA  
                                                     u1668 177A  
                                                     u2717 087E  
                                                     u2637 13EA  
                                                     u1790 0C36  
                                                     u1758 15DA  
                                                     u1871 0A90  
                                                     u2647 144E  
                                                     u1881 0AA4  
                                                     u2657 1538  
                                                     u2577 1392  
                                                     u1970 0B28  
                                                     u1698 15A8  
                                                     u2667 154A  
                                                     u2587 13D2  
                                                     u2677 1554  
                                                     u2597 167C  
                                                     u2687 1566  
                                                     u2697 1570  
                                                     _TMR0 0FD6  
                                                     _TRMT 7D61  
                                                     _WREN 7D32  
                                           ??_EscribeLCD_c 0005  
                                                     _Temp 0088  
                                                     _main 14C8  
                                             ___ftpack@arg 0001  
                                             ___ftpack@exp 0004  
                                                     fsr2h 0FDA  
                                                     indf2 0FDF  
                                                     fsr2l 0FD9  
                                                     btemp 004D  
                                     main@buffer_LCD_row_1 0060  
                                     main@buffer_LCD_row_2 0071  
                                                     prodl 0FF3  
                                                     start 000E  
                                         ??_DHT11_ReadData 0001  
                                             ___ftmul@cntr 001A  
                                             ___param_bank 0000  
                                             ___ftmul@sign 001B  
                                                    ??_ISR 0001  
                                             ___fttol@exp1 0045  
                                     __end_of_EEPROM_Write 1884  
                                             ___fttol@lval 0041  
                              ??_save_temperature_c_EEPROM 0003  
                                           ?_InicializaLCD 0001  
                                                    ?_main 0001  
        __end_of_choose_scale_temperature_and_fill_buffers 0A80  
              ??_choose_scale_temperature_and_fill_buffers 0048  
               ?_choose_scale_temperature_and_fill_buffers 0046  
                _choose_scale_temperature_and_fill_buffers 0878  
                                          __end_of___lbdiv 174E  
                                                    _ADRES 0FC3  
                                                    _EEADR 0FA9  
                                          __end_of___ftadd 0C28  
                                                    STR_10 0848  
                                                    STR_11 083F  
                                                    STR_12 0848  
                                                    STR_13 0859  
                                                    STR_14 0848  
                                                    STR_15 0836  
                                            EscribeLCD_c@a 0005  
                                          __end_of___lbmod 17D6  
                                          __end_of___ftdiv 1034  
                                          __end_of___ftmul 0E68  
                                                    _T0CON 0FD5  
                                          __end_of___fttol 1106  
                                                    _LATB0 7C50  
                                                    _LATC1 7C59  
                                                    _LATC2 7C5A  
                                                    _LATD0 7C60  
                                                    _LATD1 7C61  
                                                    _LATE0 7C68  
                                                    _LATE1 7C69  
                                                    _LATE2 7C6A  
                                          __end_of___lwdiv 163C  
                                          __end_of___lwmod 1714  
                                                    i2l368 1840  
                                                    _RCSTA 0FAB  
                                                    _SPBRG 0FAF  
                                                    _TRISD 0F95  
                                                    _TRISE 0F96  
                                                    _TXREG 0FAD  
                                                    _TXSTA 0FAC  
                                          ??_EscribeLCD_n8 000A  
                                          __end_of_dpowers 080B  
                                            ___ftpack@sign 0005  
  choose_scale_temperature_and_fill_buffers@temp_converted 0049  
                                                    tablat 0FF5  
                                              _HabilitaLCD 18FA  
                                                    ttemp5 004E  
                                                    ttemp6 0051  
                                                    ttemp7 0055  
                                                    status 0FD8  
                                                    wtemp8 004E  
                                          __end_of_sprintf 0D74  
                                          ___lbdiv@divisor 0005  
                                         EEPROM_Write@data 0001  
                                          ___lbdiv@counter 0007  
                                         __end_of_BorraLCD 18FA  
                                          __initialization 1780  
                                             __end_of_main 152E  
                                                   ??_main 004B  
                                     __end_of_ConfiguraLCD 18BA  
                                            ___fttol@sign1 0040  
                                    MensajeLCD_Var@counter 0008  
                                            __activetblptr 0002  
                                                   _ADCON0 0FC2  
                                                   _ADCON1 0FC1  
                                                   _ADCON2 0FC0  
                                                   _EEDATA 0FA8  
                                           DireccionaLCD@a 0005  
                                                   _EECON2 0FA7  
                                           EscribeLCD_n8@a 000D  
                                           EscribeLCD_n8@b 0009  
                                      _DHT11_CheckResponse 174E  
                                         __end_of___ftpack 11B4  
                                         __end_of___lbtoft 1820  
                                _save_temperature_c_EEPROM 1920  
                                                   _OSCCON 0FD3  
                                                   _TMR0IE 7F95  
                                                   _TMR0IF 7F92  
                                                   _TMR0ON 7EAF  
                                                   _TRISB0 7C98  
                                                   _TRISC1 7CA1  
                                                   _TRISC2 7CA2  
                                                   _SWDTEN 7E88  
                                    __end_of_DireccionaLCD 18E6  
                                               _RetardoLCD 152E  
choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1 0046  
choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2 0047  
                                     EscribeLCD_n8@centena 000A  
                            send_temperature_RS232@counter 0028  
                                                ??___lbdiv 0006  
                                                ??___ftadd 0031  
                                                ??___lbmod 0002  
                                                ??___ftdiv 0022  
                                     ?_DHT11_CheckResponse 0001  
                                                ??___ftmul 0013  
                                                ??___fttol 003B  
                                                ??___lwdiv 0005  
                                                ??___lwmod 000C  
                                          ??_InicializaLCD 0005  
                                                   isa$std 0001  
                                     __end_of_EscribeLCD_c 18D0  
                                    ___ftmul@f3_as_product 0017  
                                             __pdataCOMRAM 004C  
                                             __mediumconst 0000  
                                   _send_temperature_RS232 163C  
                                                   tblptrh 0FF7  
                                                   tblptrl 0FF6  
                                                   tblptru 0FF8  
                                                ??_sprintf 0013  
                                               _Transmitir 1914  
                                         ___lbdiv@dividend 0006  
                                   _show_temperature_c_RGB 145C  
                                          ___lbmod@divisor 0001  
                                               __accesstop 0060  
                                  __end_of__initialization 179E  
                                          ___lbmod@counter 0003  
                                               ___ftadd@f1 002B  
                                               ___ftadd@f2 002E  
                                            ___rparam_used 0001  
                                               ___ftdiv@f1 001C  
                                               ___ftdiv@f2 001F  
                                               ___ftdiv@f3 0026  
                               __end_of_welcome_operations 13E0  
                                               ___lbtoft@c 000C  
                                               ___ftmul@f1 000D  
                                               ___ftmul@f2 0010  
                                               ___fttol@f1 0037  
                                           __pcstackCOMRAM 0001  
                                    ??_DHT11_CheckResponse 0001  
                                        __end_of_EnviaDato 16D2  
                                         ___lbdiv@quotient 0008  
                                                ?_BorraLCD 0001  
                                           _MensajeLCD_Var 12E0  
                               __end_of_init_configuration 145C  
                                             _EEPROM_Write 1866  
                                               __pbssBANK0 0085  
                                          MensajeLCD_Var@a 0006  
                                              ?_RetardoLCD 0001  
                                              RetardoLCD@a 0002  
                                                  _BAUDCON 0FB8  
                                                ?___ftpack 0001  
                                                ?___lbtoft 0009  
                                   __end_of_MensajeLCD_Var 1364  
                                               ??_BorraLCD 0005  
                                              ?_Transmitir 0001  
                                             ?_HabilitaLCD 0001  
                                            ??_DHT11_Start 0001  
                 show_temperature_LCD@Scale_Temperature_n1 000A  
                                             _ConfiguraLCD 18A2  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                                  ___lbdiv 1714  
                                                  ___ftadd 0A80  
                                                  ___lbmod 17AC  
                                                  ___ftdiv 0F4E  
                                                  ___ftmul 0D74  
                                                  ___fttol 1034  
                                                  ___lwdiv 15EA  
                                                  ___lwmod 16D2  
                                             __psmallconst 0800  
                                                  __pcinit 1780  
                                               ??___ftpack 0006  
                                               ??___lbtoft 000C  
                                                  __ramtop 0800  
                                                  __ptext0 14C8  
                                                  __ptext1 1364  
                                                  __ptext2 12E0  
                                                  __ptext3 0E68  
                                                  __ptext4 17AC  
                                                  __ptext5 1714  
                                                  __ptext6 1908  
                                                  __ptext7 145C  
                                                  __ptext8 1250  
                                                  __ptext9 18BA  
                                                  _dpowers 0801  
                      __end_of_check_potentiometer_voltaje 18A2  
                              _check_potentiometer_voltaje 1884  
                                          ?_MensajeLCD_Var 0006  
                                    __end_of_EscribeLCD_n8 0F4E  
                                                  _sprintf 0C28  
                                           __pintcode_body 1820  
                                     end_of_initialization 179E  
                            ??_check_potentiometer_voltaje 0001  
                                            ??_EEPROM_Read 0001  
                                            __Lmediumconst 0000  
                                                  int_func 1820  
                                             _EscribeLCD_c 18BA  
                                      __end_of_DHT11_Start 1866  
                                                  postdec2 0FDD  
                        __end_of_save_temperature_c_EEPROM 192C  
                                                  postinc2 0FDE  
                                  ?_send_temperature_RS232 0001  
                                         ___lbmod@dividend 0002  
                                  ?_show_temperature_c_RGB 0001  
                                               main@Hum_n1 0083  
                                              ___lbmod@rem 0004  
                                              ___ftdiv@exp 0029  
                                       DHT11_ReadData@data 0003  
                                              ___ftmul@exp 0016  
                                        _Scale_Temperature 0085  
                                      __end_of_EEPROM_Read 1914  
                           __end_of_send_temperature_RS232 168C  
                              show_temperature_LCD@Temp_n1 0008  
                                            __pidataCOMRAM 192C  
                                    __end_of_InicializaLCD 1250  
                                       _welcome_operations 1364  
                                                _EnviaDato 168C  
                           __end_of_show_temperature_c_RGB 14C8  
                                      start_initialization 1780  
                                              __end_of_ISR 1844  
                                      ?_welcome_operations 0001  
                              show_temperature_LCD@counter 000B  
                                             ??_RetardoLCD 0001  
                                              _DHT11_Start 1844  
                              __end_of_DHT11_CheckResponse 1780  
                                      EscribeLCD_n8@decena 000B  
                                     ??_welcome_operations 000E  
                                       _init_configuration 13E0  
                                      EscribeLCD_n8@unidad 000C  
                                      ?_init_configuration 0001  
                                            _Enable_sample 0086  
                                               ?_EnviaDato 0001  
                                              __pbssCOMRAM 004B  
                                       __end_of_RetardoLCD 1594  
                                            __pcstackBANK0 0060  
                             __end_of_show_temperature_LCD 12E0  
                                             ??_Transmitir 0001  
                                     ??_init_configuration 0005  
                                              sprintf@flag 0014  
                                              _EEPROM_Read 1908  
                                              sprintf@prec 0015  
                                            _DireccionaLCD 18D0  
                                         ___lwdiv@dividend 0001  
                                                __pintcode 0008  
                                                 ?___lbdiv 0005  
                                                 ?___ftadd 002B  
                                                 ?___lbmod 0001  
                                                 ?___ftdiv 001C  
                                                 ?___ftmul 000D  
                                                 ?___fttol 0037  
                                                 ?___lwdiv 0001  
                                                 ?___lwmod 0008  
                                       __end_of_Transmitir 1920  
                                           _DHT11_ReadData 1594  
                                         ??_MensajeLCD_Var 0007  
                       send_temperature_RS232@buffer_RS232 001C  
                                              __smallconst 0800  
                                         ___lwdiv@quotient 0005  
                                                 ?_sprintf 000D  
                                           ?_DireccionaLCD 0001  
                                                 i2u255_40 1838  
                                                 i2u256_45 183A  
                                   __end_of_DHT11_ReadData 15EA  
                                              ??_EnviaDato 0003  
                               show_temperature_LCD@Hum_n1 0009  
                                                 _BorraLCD 18E6  
                                                 __Hrparam 0000  
                                                 __Lrparam 0000  
                                     _show_temperature_LCD 1250  
                                          ?_DHT11_ReadData 0001  
                               ?_save_temperature_c_EEPROM 0001  
                                                 ___ftpack 1106  
                                                 ___lbtoft 17FC  
                                          DHT11_ReadData@i 0002  
                                            ConfiguraLCD@a 0001  
                                               sprintf@val 0017  
                                          ___lwdiv@divisor 0003  
                                          ___lwdiv@counter 0007  
                                                 __ptext10 18D0  
                                                 __ptext11 163C  
                                                 __ptext20 11B4  
                                                 __ptext12 1914  
                                                 __ptext21 18E6  
                                                 __ptext13 1920  
                                                 __ptext30 17FC  
                                                 __ptext22 168C  
                                                 __ptext14 1866  
                                                 __ptext31 1034  
                                                 __ptext23 152E  
                                                 __ptext15 17D6  
                                                 __ptext32 0D74  
                                                 __ptext24 18FA  
                                                 __ptext16 1844  
                                                 __ptext33 0F4E  
                                                 __ptext25 18A2  
                                                 __ptext17 1594  
                                                 __ptext34 0A80  
                                                 __ptext26 0878  
                                                 __ptext18 174E  
                                                 __ptext35 1106  
                                                 __ptext27 0C28  
                                                 __ptext19 13E0  
                                                 __ptext36 1884  
                                                 __ptext28 16D2  
                                                 __ptext29 15EA  
                                            ?_EEPROM_Write 0001  
                                          ??_DireccionaLCD 0005  
                                             ?_DHT11_Start 0001  
                                                 _interfaz 004C  
                                 main@Scale_Temperature_n1 0084  
                                                 isa$xinst 0000  
                                    ?_show_temperature_LCD 0006  
                                                 int$flags 004D  
                     show_temperature_LCD@buffer_LCD_row_1 0006  
                     show_temperature_LCD@buffer_LCD_row_2 0007  
                                           ??_EEPROM_Write 0002  
                                            _EscribeLCD_n8 0E68  
                                                 intlevel2 0000  
                                                sprintf@ap 0016  
                                            ??_HabilitaLCD 0001  
                                                sprintf@sp 000D  
                                         ___lwmod@dividend 0008  
                                             ?_EEPROM_Read 0001  
                                            ?_ConfiguraLCD 0001  
                                       EEPROM_Read@address 0001  
                                                 sprintf@c 0019  
                                                 sprintf@f 000E  
                                          ___lwmod@divisor 000A  
                                          ___lwmod@counter 000C  
                             ?_check_potentiometer_voltaje 0001  
                                           ?_EscribeLCD_n8 0009  
                                           ??_ConfiguraLCD 0001  
                                            ?_EscribeLCD_c 0001  
                                      EEPROM_Write@address 0002  
                                 ??_send_temperature_RS232 001A  
                                      __end_of_HabilitaLCD 1908  
                                   ??_show_temperature_LCD 000B  
