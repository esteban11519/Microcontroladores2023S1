

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jun  2 00:22:25 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Generated 09/02/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4550 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	idataCOMRAM
    77   000FCE                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for _PreloadTMR0
    81   000FCE  0BDC               	dw	3036
    82                           
    83                           ;initializer for _interfaz
    84   000FD0  08                 	db	8
    85                           
    86                           	psect	smallconst
    87   000800                     __psmallconst:
    88                           	callstack 0
    89   000800  00                 	db	0
    90   000801                     _dpowers:
    91                           	callstack 0
    92   000801  0001               	dw	1
    93   000803  000A               	dw	10
    94   000805  0064               	dw	100
    95   000807  03E8               	dw	1000
    96   000809  2710               	dw	10000
    97   00080B                     __end_of_dpowers:
    98                           	callstack 0
    99   000000                     _TRISD	set	3989
   100   000000                     _TRISB0	set	31896
   101   000000                     _TRISC2	set	31906
   102   000000                     _RC2	set	31762
   103   000000                     _TRMT	set	32097
   104   000000                     _RA2	set	31746
   105   000000                     _RE1	set	31777
   106   000000                     _RE2	set	31778
   107   000000                     _GO	set	32273
   108   000000                     _ADON	set	32272
   109   000000                     _TMR0ON	set	32431
   110   000000                     _GIE	set	32663
   111   000000                     _TMR0IE	set	32661
   112   000000                     _LATC2	set	31834
   113   000000                     _LATD1	set	31841
   114   000000                     _LATD0	set	31840
   115   000000                     _LATD	set	3980
   116   000000                     _RA1	set	31745
   117   000000                     _RB0	set	31752
   118   000000                     _LATB0	set	31824
   119   000000                     _LATC1	set	31833
   120   000000                     _TRISA	set	3986
   121   000000                     _LATE	set	3981
   122   000000                     _TRISE	set	3990
   123   000000                     _RCSTA	set	4011
   124   000000                     _TXSTA	set	4012
   125   000000                     _OSCCON	set	4051
   126   000000                     _T0CON	set	4053
   127   000000                     _TXREG	set	4013
   128   000000                     _SPBRG	set	4015
   129   000000                     _BAUDCON	set	4024
   130   000000                     _ADCON2	set	4032
   131   000000                     _ADCON1	set	4033
   132   000000                     _ADRES	set	4035
   133   000000                     _ADCON0	set	4034
   134   000000                     _TMR0	set	4054
   135   000000                     _TMR0IF	set	32658
   136   000000                     _RC1	set	31761
   137   000000                     _RE0	set	31776
   138   00080B                     STR_1:
   139   00080B  42                 	db	66	;'B'
   140   00080C  69                 	db	105	;'i'
   141   00080D  65                 	db	101	;'e'
   142   00080E  6E                 	db	110	;'n'
   143   00080F  76                 	db	118	;'v'
   144   000810  65                 	db	101	;'e'
   145   000811  6E                 	db	110	;'n'
   146   000812  69                 	db	105	;'i'
   147   000813  64                 	db	100	;'d'
   148   000814  6F                 	db	111	;'o'
   149   000815  20                 	db	32
   150   000816  61                 	db	97	;'a'
   151   000817  20                 	db	32
   152   000818  53                 	db	83	;'S'
   153   000819  65                 	db	101	;'e'
   154   00081A  6E                 	db	110	;'n'
   155   00081B  73                 	db	115	;'s'
   156   00081C  6F                 	db	111	;'o'
   157   00081D  72                 	db	114	;'r'
   158   00081E  00                 	db	0
   159   00081F                     STR_8:
   160   00081F  54                 	db	84	;'T'
   161   000820  3A                 	db	58	;':'
   162   000821  20                 	db	32
   163   000822  25                 	db	37
   164   000823  69                 	db	105	;'i'
   165   000824  20                 	db	32
   166   000825  52                 	db	82	;'R'
   167   000826  61                 	db	97	;'a'
   168   000827  0A                 	db	10
   169   000828  48                 	db	72	;'H'
   170   000829  3A                 	db	58	;':'
   171   00082A  20                 	db	32
   172   00082B  25                 	db	37
   173   00082C  69                 	db	105	;'i'
   174   00082D  20                 	db	32
   175   00082E  25                 	db	37
   176   00082F  63                 	db	99	;'c'
   177   000830  00                 	db	0
   178   000831                     STR_6:
   179   000831  54                 	db	84	;'T'
   180   000832  3A                 	db	58	;':'
   181   000833  20                 	db	32
   182   000834  25                 	db	37
   183   000835  69                 	db	105	;'i'
   184   000836  20                 	db	32
   185   000837  43                 	db	67	;'C'
   186   000838  0A                 	db	10
   187   000839  48                 	db	72	;'H'
   188   00083A  3A                 	db	58	;':'
   189   00083B  20                 	db	32
   190   00083C  25                 	db	37
   191   00083D  69                 	db	105	;'i'
   192   00083E  20                 	db	32
   193   00083F  25                 	db	37
   194   000840  63                 	db	99	;'c'
   195   000841  00                 	db	0
   196   000842                     STR_9:
   197   000842  54                 	db	84	;'T'
   198   000843  3A                 	db	58	;':'
   199   000844  20                 	db	32
   200   000845  25                 	db	37
   201   000846  69                 	db	105	;'i'
   202   000847  20                 	db	32
   203   000848  46                 	db	70	;'F'
   204   000849  0A                 	db	10
   205   00084A  48                 	db	72	;'H'
   206   00084B  3A                 	db	58	;':'
   207   00084C  20                 	db	32
   208   00084D  25                 	db	37
   209   00084E  69                 	db	105	;'i'
   210   00084F  20                 	db	32
   211   000850  25                 	db	37
   212   000851  63                 	db	99	;'c'
   213   000852  00                 	db	0
   214   000853                     STR_7:
   215   000853  54                 	db	84	;'T'
   216   000854  3A                 	db	58	;':'
   217   000855  20                 	db	32
   218   000856  25                 	db	37
   219   000857  69                 	db	105	;'i'
   220   000858  20                 	db	32
   221   000859  4B                 	db	75	;'K'
   222   00085A  0A                 	db	10
   223   00085B  48                 	db	72	;'H'
   224   00085C  3A                 	db	58	;':'
   225   00085D  20                 	db	32
   226   00085E  25                 	db	37
   227   00085F  69                 	db	105	;'i'
   228   000860  20                 	db	32
   229   000861  25                 	db	37
   230   000862  63                 	db	99	;'c'
   231   000863  00                 	db	0
   232   000864                     STR_2:
   233   000864  44                 	db	68	;'D'
   234   000865  69                 	db	105	;'i'
   235   000866  6F                 	db	111	;'o'
   236   000867  73                 	db	115	;'s'
   237   000868  20                 	db	32
   238   000869  65                 	db	101	;'e'
   239   00086A  73                 	db	115	;'s'
   240   00086B  20                 	db	32
   241   00086C  62                 	db	98	;'b'
   242   00086D  75                 	db	117	;'u'
   243   00086E  65                 	db	101	;'e'
   244   00086F  6E                 	db	110	;'n'
   245   000870  6F                 	db	111	;'o'
   246   000871  00                 	db	0
   247   000872                     STR_3:
   248   000872  54                 	db	84	;'T'
   249   000873  3A                 	db	58	;':'
   250   000874  20                 	db	32
   251   000875  25                 	db	37
   252   000876  69                 	db	105	;'i'
   253   000877  20                 	db	32
   254   000878  43                 	db	67	;'C'
   255   000879  0A                 	db	10
   256   00087A  00                 	db	0
   257   00087B                     STR_10:
   258   00087B  28                 	db	40
   259   00087C  6E                 	db	110	;'n'
   260   00087D  75                 	db	117	;'u'
   261   00087E  6C                 	db	108	;'l'
   262   00087F  6C                 	db	108	;'l'
   263   000880  29                 	db	41
   264   000881  00                 	db	0
   265   000882                     STR_5:
   266   000882  48                 	db	72	;'H'
   267   000883  6F                 	db	111	;'o'
   268   000884  6C                 	db	108	;'l'
   269   000885  61                 	db	97	;'a'
   270   000886  00                 	db	0
   271   000887                     STR_4:
   272   000887  25                 	db	37
   273   000888  73                 	db	115	;'s'
   274   000889  00                 	db	0
   275   00088A  00                 	db	0	; dummy byte at the end
   276   000000                     
   277                           ; #config settings
   278                           
   279                           	psect	cinit
   280   000E7C                     __pcinit:
   281                           	callstack 0
   282   000E7C                     start_initialization:
   283                           	callstack 0
   284   000E7C                     __initialization:
   285                           	callstack 0
   286                           
   287                           ; Initialize objects allocated to COMRAM (3 bytes)
   288                           ; load TBLPTR registers with __pidataCOMRAM
   289   000E7C  0ECE               	movlw	low __pidataCOMRAM
   290   000E7E  6EF6               	movwf	tblptrl,c
   291   000E80  0E0F               	movlw	high __pidataCOMRAM
   292   000E82  6EF7               	movwf	tblptrh,c
   293   000E84  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   294   000E86  6EF8               	movwf	tblptru,c
   295   000E88  0009               	tblrd		*+	;fetch initializer
   296   000E8A  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   297   000E8E  0009               	tblrd		*+	;fetch initializer
   298   000E90  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   299   000E94  0009               	tblrd		*+	;fetch initializer
   300   000E96  CFF5 F050          	movff	tablat,__pdataCOMRAM+2
   301                           
   302                           ; Clear objects allocated to COMRAM (48 bytes)
   303   000E9A  EE00  F001         	lfsr	0,__pbssCOMRAM
   304   000E9E  0E30               	movlw	48
   305   000EA0                     clear_0:
   306   000EA0  6AEE               	clrf	postinc0,c
   307   000EA2  06E8               	decf	wreg,f,c
   308   000EA4  E1FD               	bnz	clear_0
   309   000EA6                     end_of_initialization:
   310                           	callstack 0
   311   000EA6                     __end_of__initialization:
   312                           	callstack 0
   313   000EA6  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   314   000EA8  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   315   000EAA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   316   000EAC  6EF8               	movwf	tblptru,c
   317   000EAE  0100               	movlb	0
   318   000EB0  EF72  F007         	goto	_main	;jump to C main() function
   319                           
   320                           	psect	bssCOMRAM
   321   000001                     __pbssCOMRAM:
   322                           	callstack 0
   323   000001                     _Enable_sample:
   324                           	callstack 0
   325   000001                     	ds	1
   326   000002                     _Che:
   327                           	callstack 0
   328   000002                     	ds	1
   329   000003                     _Hum:
   330                           	callstack 0
   331   000003                     	ds	1
   332   000004                     _Temp:
   333                           	callstack 0
   334   000004                     	ds	1
   335   000005                     _Buffer_LCD:
   336                           	callstack 0
   337   000005                     	ds	32
   338   000025                     _Buffer_RS232:
   339                           	callstack 0
   340   000025                     	ds	12
   341                           
   342                           	psect	dataCOMRAM
   343   00004E                     __pdataCOMRAM:
   344                           	callstack 0
   345   00004E                     _PreloadTMR0:
   346                           	callstack 0
   347   00004E                     	ds	2
   348   000050                     _interfaz:
   349                           	callstack 0
   350   000050                     	ds	1
   351                           
   352                           	psect	cstackCOMRAM
   353   000031                     __pcstackCOMRAM:
   354                           	callstack 0
   355   000031                     ??_RetardoLCD:
   356   000031                     ?___lwdiv:
   357                           	callstack 0
   358   000031                     ConfiguraLCD@a:
   359                           	callstack 0
   360   000031                     Transmitir@BufferT:
   361                           	callstack 0
   362   000031                     ___lwdiv@dividend:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x0
   366   000031                     	ds	1
   367   000032                     ??_send_temperature_RS232:
   368   000032                     RetardoLCD@a:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x1
   372   000032                     	ds	1
   373   000033                     ??_EnviaDato:
   374   000033                     ___lwdiv@divisor:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x2
   378   000033                     	ds	1
   379   000034                     EnviaDato@a:
   380                           	callstack 0
   381   000034                     send_temperature_RS232@counter:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x3
   385   000034                     	ds	1
   386   000035                     ??_init_configuration:
   387   000035                     EscribeLCD_c@a:
   388                           	callstack 0
   389   000035                     DireccionaLCD@a:
   390                           	callstack 0
   391   000035                     ___lwdiv@quotient:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x4
   395   000035                     	ds	1
   396   000036                     MensajeLCD_Var@a:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x5
   400   000036                     	ds	1
   401   000037                     ??_MensajeLCD_Var:
   402   000037                     show_temperature_LCD@counter:
   403                           	callstack 0
   404   000037                     ___lwdiv@counter:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x6
   408   000037                     	ds	1
   409   000038                     ?___lwmod:
   410                           	callstack 0
   411   000038                     MensajeLCD_Var@counter:
   412                           	callstack 0
   413   000038                     ___lwmod@dividend:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x7
   417   000038                     	ds	1
   418   000039                     ??_welcome_operations:
   419                           
   420                           ; 1 bytes @ 0x8
   421   000039                     	ds	1
   422   00003A                     ___lwmod@divisor:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x9
   426   00003A                     	ds	2
   427   00003C                     ___lwmod@counter:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0xB
   431   00003C                     	ds	1
   432   00003D                     ?_sprintf:
   433                           	callstack 0
   434   00003D                     sprintf@sp:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0xC
   438   00003D                     	ds	1
   439   00003E                     sprintf@f:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0xD
   443   00003E                     	ds	7
   444   000045                     ??_sprintf:
   445                           
   446                           ; 1 bytes @ 0x14
   447   000045                     	ds	1
   448   000046                     sprintf@flag:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x15
   452   000046                     	ds	1
   453   000047                     sprintf@prec:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x16
   457   000047                     	ds	1
   458   000048                     sprintf@cp:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x17
   462   000048                     	ds	2
   463   00004A                     sprintf@ap:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x19
   467   00004A                     	ds	1
   468   00004B                     sprintf@val:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x1A
   472   00004B                     	ds	2
   473   00004D                     sprintf@c:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x1C
   477   00004D                     	ds	1
   478   00004E                     
   479                           ; 1 bytes @ 0x1D
   480 ;;
   481 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   482 ;;
   483 ;; *************** function _main *****************
   484 ;; Defined at:
   485 ;;		line 79 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   499 ;;      Params:         0       0       0       0       0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels required when called: 6
   505 ;; This function calls:
   506 ;;		_check_potentiometer_voltaje
   507 ;;		_choose_scale_temperature_and_fill_buffers
   508 ;;		_init_configuration
   509 ;;		_save_temperature_c_EEPROM
   510 ;;		_send_temperature_RS232
   511 ;;		_show_temperature_LCD
   512 ;;		_show_temperature_c_RGB
   513 ;;		_welcome_operations
   514 ;; This function is called by:
   515 ;;		Startup code after reset
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text0
   520   000EE4                     __ptext0:
   521                           	callstack 0
   522   000EE4                     _main:
   523                           	callstack 25
   524                           
   525                           ;LAB05.c: 80: init_configuration();
   526                           
   527                           ;incstack = 0
   528   000EE4  ECEC  F005         	call	_init_configuration	;wreg free
   529                           
   530                           ;LAB05.c: 81: welcome_operations();
   531   000EE8  EC5A  F007         	call	_welcome_operations	;wreg free
   532   000EEC                     l1993:
   533                           
   534                           ;LAB05.c: 84: if(Enable_sample){
   535   000EEC  5001               	movf	_Enable_sample^0,w,c
   536   000EEE  B4D8               	btfsc	status,2,c
   537   000EF0  D7FD               	goto	l1993
   538                           
   539                           ;LAB05.c: 87: check_potentiometer_voltaje();
   540   000EF2  EC88  F007         	call	_check_potentiometer_voltaje	;wreg free
   541                           
   542                           ;LAB05.c: 88: save_temperature_c_EEPROM();
   543   000EF6  ECE9  F007         	call	_save_temperature_c_EEPROM	;wreg free
   544                           
   545                           ;LAB05.c: 89: choose_scale_temperature_and_fill_buffers();
   546   000EFA  EC2F  F005         	call	_choose_scale_temperature_and_fill_buffers	;wreg free
   547                           
   548                           ;LAB05.c: 90: send_temperature_RS232();
   549   000EFE  EC1F  F007         	call	_send_temperature_RS232	;wreg free
   550                           
   551                           ;LAB05.c: 91: show_temperature_c_RGB();
   552   000F02  ECE3  F007         	call	_show_temperature_c_RGB	;wreg free
   553                           
   554                           ;LAB05.c: 92: show_temperature_LCD();
   555   000F06  ECDD  F006         	call	_show_temperature_LCD	;wreg free
   556                           
   557                           ;LAB05.c: 93: Enable_sample = 0;
   558   000F0A  0E00               	movlw	0
   559   000F0C  6E01               	movwf	_Enable_sample^0,c
   560   000F0E  D7EE               	goto	l1993
   561   000F10                     __end_of_main:
   562                           	callstack 0
   563                           
   564 ;; *************** function _welcome_operations *****************
   565 ;; Defined at:
   566 ;;		line 172 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   580 ;;      Params:         0       0       0       0       0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0       0       0
   582 ;;      Temps:          2       0       0       0       0       0       0       0       0
   583 ;;      Totals:         2       0       0       0       0       0       0       0       0
   584 ;;Total ram usage:        2 bytes
   585 ;; Hardware stack levels used: 1
   586 ;; Hardware stack levels required when called: 5
   587 ;; This function calls:
   588 ;;		_BorraLCD
   589 ;;		_MensajeLCD_Var
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text1
   596   000EB4                     __ptext1:
   597                           	callstack 0
   598   000EB4                     _welcome_operations:
   599                           	callstack 25
   600                           
   601                           ;LAB05.c: 174: BorraLCD();
   602                           
   603                           ;incstack = 0
   604   000EB4  ECCC  F007         	call	_BorraLCD	;wreg free
   605                           
   606                           ;LAB05.c: 175: MensajeLCD_Var("Bienvenido a Sensor");
   607   000EB8  0E0B               	movlw	low STR_1
   608   000EBA  6E36               	movwf	MensajeLCD_Var@a^0,c
   609   000EBC  EC5F  F006         	call	_MensajeLCD_Var	;wreg free
   610                           
   611                           ;LAB05.c: 176: MensajeLCD_Var("Dios es bueno");
   612   000EC0  0E64               	movlw	low STR_2
   613   000EC2  6E36               	movwf	MensajeLCD_Var@a^0,c
   614   000EC4  EC5F  F006         	call	_MensajeLCD_Var	;wreg free
   615                           
   616                           ;LAB05.c: 177: _delay((unsigned long)((1000)*(8000000/4000.0)));
   617   000EC8  0E0B               	movlw	11
   618   000ECA  6E3A               	movwf	(??_welcome_operations+1)^0,c
   619   000ECC  0E26               	movlw	38
   620   000ECE  6E39               	movwf	??_welcome_operations^0,c
   621   000ED0  0E5E               	movlw	94
   622   000ED2                     u1247:
   623   000ED2  2EE8               	decfsz	wreg,f,c
   624   000ED4  D7FE               	bra	u1247
   625   000ED6  2E39               	decfsz	??_welcome_operations^0,f,c
   626   000ED8  D7FC               	bra	u1247
   627   000EDA  2E3A               	decfsz	(??_welcome_operations+1)^0,f,c
   628   000EDC  D7FA               	bra	u1247
   629                           
   630                           ;LAB05.c: 178: BorraLCD();
   631   000EDE  ECCC  F007         	call	_BorraLCD	;wreg free
   632   000EE2  0012               	return		;funcret
   633   000EE4                     __end_of_welcome_operations:
   634                           	callstack 0
   635                           
   636 ;; *************** function _MensajeLCD_Var *****************
   637 ;; Defined at:
   638 ;;		line 232 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
   639 ;; Parameters:    Size  Location     Type
   640 ;;  a               1    5[COMRAM] PTR unsigned char 
   641 ;;		 -> STR_2(14), STR_1(20), 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  counter         1    7[COMRAM] unsigned char 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   653 ;;      Params:         1       0       0       0       0       0       0       0       0
   654 ;;      Locals:         1       0       0       0       0       0       0       0       0
   655 ;;      Temps:          1       0       0       0       0       0       0       0       0
   656 ;;      Totals:         3       0       0       0       0       0       0       0       0
   657 ;;Total ram usage:        3 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; Hardware stack levels required when called: 4
   660 ;; This function calls:
   661 ;;		_BorraLCD
   662 ;;		_DireccionaLCD
   663 ;;		_EscribeLCD_c
   664 ;; This function is called by:
   665 ;;		_welcome_operations
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text2
   670   000CBE                     __ptext2:
   671                           	callstack 0
   672   000CBE                     _MensajeLCD_Var:
   673                           	callstack 25
   674                           
   675                           ;LibLCDXC8.h: 237: unsigned char counter=0;
   676                           
   677                           ;incstack = 0
   678   000CBE  0E00               	movlw	0
   679   000CC0  6E38               	movwf	MensajeLCD_Var@counter^0,c
   680                           
   681                           ;LibLCDXC8.h: 238: while(a[counter]!='\0' && counter<=255){
   682   000CC2  D022               	goto	l1859
   683   000CC4                     l1847:
   684                           
   685                           ;LibLCDXC8.h: 240: if((counter+1)%32==0){
   686   000CC4  C038  F037         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
   687   000CC8  0E01               	movlw	1
   688   000CCA  2637               	addwf	??_MensajeLCD_Var^0,f,c
   689   000CCC  0E1F               	movlw	31
   690   000CCE  1637               	andwf	??_MensajeLCD_Var^0,f,c
   691   000CD0  A4D8               	btfss	status,2,c
   692   000CD2  D003               	goto	l1851
   693                           
   694                           ;LibLCDXC8.h: 241: BorraLCD();
   695   000CD4  ECCC  F007         	call	_BorraLCD	;wreg free
   696                           
   697                           ;LibLCDXC8.h: 242: }
   698   000CD8  D00B               	goto	l1855
   699   000CDA                     l1851:
   700                           
   701                           ;LibLCDXC8.h: 243: else if((counter+1)%16==0){
   702   000CDA  C038  F037         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
   703   000CDE  0E01               	movlw	1
   704   000CE0  2637               	addwf	??_MensajeLCD_Var^0,f,c
   705   000CE2  0E0F               	movlw	15
   706   000CE4  1637               	andwf	??_MensajeLCD_Var^0,f,c
   707   000CE6  A4D8               	btfss	status,2,c
   708   000CE8  D003               	goto	l1855
   709                           
   710                           ;LibLCDXC8.h: 244: DireccionaLCD(0xC0);
   711   000CEA  0EC0               	movlw	192
   712   000CEC  ECC1  F007         	call	_DireccionaLCD
   713   000CF0                     l1855:
   714                           
   715                           ;LibLCDXC8.h: 245: };LibLCDXC8.h: 247: EscribeLCD_c(a[counter]);
   716   000CF0  5036               	movf	MensajeLCD_Var@a^0,w,c
   717   000CF2  2438               	addwf	MensajeLCD_Var@counter^0,w,c
   718   000CF4  6E37               	movwf	??_MensajeLCD_Var^0,c
   719   000CF6  C037  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   720   000CFA                     	if	1	;There is more than 1 active tblptr byte
   721   000CFA  0E08               	movlw	high __smallconst
   722   000CFC  6EF7               	movwf	tblptrh,c
   723   000CFE                     	endif
   724   000CFE                     	if	0	;tblptru may be non-zero
   725   000CFE                     	endif
   726   000CFE                     	if	0	;tblptru may be non-zero
   727   000CFE                     	endif
   728   000CFE  0008               	tblrd		*
   729   000D00  50F5               	movf	tablat,w,c
   730   000D02  ECB6  F007         	call	_EscribeLCD_c
   731                           
   732                           ;LibLCDXC8.h: 248: counter++;
   733   000D06  2A38               	incf	MensajeLCD_Var@counter^0,f,c
   734   000D08                     l1859:
   735   000D08  5036               	movf	MensajeLCD_Var@a^0,w,c
   736   000D0A  2438               	addwf	MensajeLCD_Var@counter^0,w,c
   737   000D0C  6E37               	movwf	??_MensajeLCD_Var^0,c
   738   000D0E  C037  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   739   000D12                     	if	1	;There is more than 1 active tblptr byte
   740   000D12  0E08               	movlw	high __smallconst
   741   000D14  6EF7               	movwf	tblptrh,c
   742   000D16                     	endif
   743   000D16                     	if	0	;tblptru may be non-zero
   744   000D16                     	endif
   745   000D16                     	if	0	;tblptru may be non-zero
   746   000D16                     	endif
   747   000D16  0008               	tblrd		*
   748   000D18  50F5               	movf	tablat,w,c
   749   000D1A  0900               	iorlw	0
   750   000D1C  B4D8               	btfsc	status,2,c
   751   000D1E  0012               	return	
   752   000D20  D7D1               	goto	l1847
   753   000D22                     __end_of_MensajeLCD_Var:
   754                           	callstack 0
   755                           
   756 ;; *************** function _show_temperature_c_RGB *****************
   757 ;; Defined at:
   758 ;;		line 204 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		None
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   772 ;;      Params:         0       0       0       0       0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0       0       0       0       0
   775 ;;      Totals:         0       0       0       0       0       0       0       0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; Hardware stack levels required when called: 1
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text3
   787   000FC6                     __ptext3:
   788                           	callstack 0
   789   000FC6                     _show_temperature_c_RGB:
   790                           	callstack 29
   791                           
   792                           ;LAB05.c: 207: RE0=1;
   793                           
   794                           ;incstack = 0
   795   000FC6  8084               	bsf	3972,0,c	;volatile
   796                           
   797                           ;LAB05.c: 208: RE2=1;
   798   000FC8  8484               	bsf	3972,2,c	;volatile
   799                           
   800                           ;LAB05.c: 209: RE1=1;
   801   000FCA  8284               	bsf	3972,1,c	;volatile
   802                           
   803                           ;LAB05.c: 210: }
   804   000FCC  0012               	return		;funcret
   805   000FCE                     __end_of_show_temperature_c_RGB:
   806                           	callstack 0
   807                           
   808 ;; *************** function _show_temperature_LCD *****************
   809 ;; Defined at:
   810 ;;		line 299 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  counter         1    6[COMRAM] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   824 ;;      Params:         0       0       0       0       0       0       0       0       0
   825 ;;      Locals:         1       0       0       0       0       0       0       0       0
   826 ;;      Temps:          1       0       0       0       0       0       0       0       0
   827 ;;      Totals:         2       0       0       0       0       0       0       0       0
   828 ;;Total ram usage:        2 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; Hardware stack levels required when called: 4
   831 ;; This function calls:
   832 ;;		_BorraLCD
   833 ;;		_DireccionaLCD
   834 ;;		_EscribeLCD_c
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text4
   841   000DBA                     __ptext4:
   842                           	callstack 0
   843   000DBA                     _show_temperature_LCD:
   844                           	callstack 26
   845                           
   846                           ;LAB05.c: 300: unsigned char counter=0;
   847                           
   848                           ;incstack = 0
   849   000DBA  0E00               	movlw	0
   850   000DBC  6E37               	movwf	show_temperature_LCD@counter^0,c
   851                           
   852                           ;LAB05.c: 301: BorraLCD();
   853   000DBE  ECCC  F007         	call	_BorraLCD	;wreg free
   854                           
   855                           ;LAB05.c: 302: while (Buffer_LCD[counter]!='\0') {
   856   000DC2  D014               	goto	l1527
   857   000DC4                     l1517:
   858                           
   859                           ;LAB05.c: 303: if(Buffer_LCD[counter]=='\n'){
   860   000DC4  5037               	movf	show_temperature_LCD@counter^0,w,c
   861   000DC6  0F05               	addlw	low _Buffer_LCD
   862   000DC8  6ED9               	movwf	fsr2l,c
   863   000DCA  6ADA               	clrf	fsr2h,c
   864   000DCC  0E0A               	movlw	10
   865   000DCE  18DE               	xorwf	postinc2,w,c
   866   000DD0  A4D8               	btfss	status,2,c
   867   000DD2  D004               	goto	l1523
   868                           
   869                           ;LAB05.c: 304: DireccionaLCD(0xC0);
   870   000DD4  0EC0               	movlw	192
   871   000DD6  ECC1  F007         	call	_DireccionaLCD
   872                           
   873                           ;LAB05.c: 305: counter++;
   874   000DDA  2A37               	incf	show_temperature_LCD@counter^0,f,c
   875   000DDC                     l1523:
   876                           
   877                           ;LAB05.c: 306: };LAB05.c: 307: EscribeLCD_c(Buffer_LCD[counter]);
   878   000DDC  5037               	movf	show_temperature_LCD@counter^0,w,c
   879   000DDE  0F05               	addlw	low _Buffer_LCD
   880   000DE0  6ED9               	movwf	fsr2l,c
   881   000DE2  6ADA               	clrf	fsr2h,c
   882   000DE4  50DF               	movf	indf2,w,c
   883   000DE6  ECB6  F007         	call	_EscribeLCD_c
   884                           
   885                           ;LAB05.c: 308: counter++;
   886   000DEA  2A37               	incf	show_temperature_LCD@counter^0,f,c
   887   000DEC                     l1527:
   888   000DEC  5037               	movf	show_temperature_LCD@counter^0,w,c
   889   000DEE  0F05               	addlw	low _Buffer_LCD
   890   000DF0  6ED9               	movwf	fsr2l,c
   891   000DF2  6ADA               	clrf	fsr2h,c
   892   000DF4  50DF               	movf	indf2,w,c
   893   000DF6  B4D8               	btfsc	status,2,c
   894   000DF8  0012               	return	
   895   000DFA  D7E4               	goto	l1517
   896   000DFC                     __end_of_show_temperature_LCD:
   897                           	callstack 0
   898                           
   899 ;; *************** function _EscribeLCD_c *****************
   900 ;; Defined at:
   901 ;;		line 136 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  a               1    wreg     unsigned char 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  a               1    4[COMRAM] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   915 ;;      Params:         0       0       0       0       0       0       0       0       0
   916 ;;      Locals:         1       0       0       0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0
   918 ;;      Totals:         1       0       0       0       0       0       0       0       0
   919 ;;Total ram usage:        1 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 3
   922 ;; This function calls:
   923 ;;		_EnviaDato
   924 ;;		_HabilitaLCD
   925 ;;		_RetardoLCD
   926 ;; This function is called by:
   927 ;;		_MensajeLCD_Var
   928 ;;		_show_temperature_LCD
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text5
   933   000F6C                     __ptext5:
   934                           	callstack 0
   935   000F6C                     _EscribeLCD_c:
   936                           	callstack 25
   937                           
   938                           ;incstack = 0
   939                           ;EscribeLCD_c@a stored from wreg
   940   000F6C  6E35               	movwf	EscribeLCD_c@a^0,c
   941                           
   942                           ;LibLCDXC8.h: 140: LATD0=1;
   943   000F6E  808C               	bsf	3980,0,c	;volatile
   944                           
   945                           ;LibLCDXC8.h: 141: EnviaDato(a);
   946   000F70  5035               	movf	EscribeLCD_c@a^0,w,c
   947   000F72  ECBA  F006         	call	_EnviaDato
   948                           
   949                           ;LibLCDXC8.h: 142: HabilitaLCD();
   950   000F76  ECD6  F007         	call	_HabilitaLCD	;wreg free
   951                           
   952                           ;LibLCDXC8.h: 143: RetardoLCD(4);
   953   000F7A  0E04               	movlw	4
   954   000F7C  EC2C  F006         	call	_RetardoLCD
   955   000F80  0012               	return		;funcret
   956   000F82                     __end_of_EscribeLCD_c:
   957                           	callstack 0
   958                           
   959 ;; *************** function _DireccionaLCD *****************
   960 ;; Defined at:
   961 ;;		line 252 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  a               1    wreg     unsigned char 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  a               1    4[COMRAM] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   975 ;;      Params:         0       0       0       0       0       0       0       0       0
   976 ;;      Locals:         1       0       0       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0
   978 ;;      Totals:         1       0       0       0       0       0       0       0       0
   979 ;;Total ram usage:        1 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 3
   982 ;; This function calls:
   983 ;;		_EnviaDato
   984 ;;		_HabilitaLCD
   985 ;;		_RetardoLCD
   986 ;; This function is called by:
   987 ;;		_MensajeLCD_Var
   988 ;;		_show_temperature_LCD
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text6
   993   000F82                     __ptext6:
   994                           	callstack 0
   995   000F82                     _DireccionaLCD:
   996                           	callstack 25
   997                           
   998                           ;incstack = 0
   999                           ;DireccionaLCD@a stored from wreg
  1000   000F82  6E35               	movwf	DireccionaLCD@a^0,c
  1001                           
  1002                           ;LibLCDXC8.h: 255: LATD0=0;
  1003   000F84  908C               	bcf	3980,0,c	;volatile
  1004                           
  1005                           ;LibLCDXC8.h: 256: EnviaDato(a);
  1006   000F86  5035               	movf	DireccionaLCD@a^0,w,c
  1007   000F88  ECBA  F006         	call	_EnviaDato
  1008                           
  1009                           ;LibLCDXC8.h: 257: HabilitaLCD();
  1010   000F8C  ECD6  F007         	call	_HabilitaLCD	;wreg free
  1011                           
  1012                           ;LibLCDXC8.h: 258: RetardoLCD(4);
  1013   000F90  0E04               	movlw	4
  1014   000F92  EC2C  F006         	call	_RetardoLCD
  1015   000F96  0012               	return		;funcret
  1016   000F98                     __end_of_DireccionaLCD:
  1017                           	callstack 0
  1018                           
  1019 ;; *************** function _send_temperature_RS232 *****************
  1020 ;; Defined at:
  1021 ;;		line 288 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  counter         1    3[COMRAM] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0
  1036 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1037 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1038 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1039 ;;Total ram usage:        3 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 2
  1042 ;; This function calls:
  1043 ;;		_Transmitir
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text7
  1050   000E3E                     __ptext7:
  1051                           	callstack 0
  1052   000E3E                     _send_temperature_RS232:
  1053                           	callstack 28
  1054                           
  1055                           ;LAB05.c: 289: unsigned char counter=0;
  1056                           
  1057                           ;incstack = 0
  1058   000E3E  0E00               	movlw	0
  1059   000E40  6E34               	movwf	send_temperature_RS232@counter^0,c
  1060                           
  1061                           ;LAB05.c: 291: while(Buffer_RS232[counter]!='\0'){
  1062   000E42  D008               	goto	l1505
  1063   000E44                     l1501:
  1064                           
  1065                           ;LAB05.c: 292: Transmitir(Buffer_RS232[counter]);
  1066   000E44  5034               	movf	send_temperature_RS232@counter^0,w,c
  1067   000E46  0F25               	addlw	low _Buffer_RS232
  1068   000E48  6ED9               	movwf	fsr2l,c
  1069   000E4A  6ADA               	clrf	fsr2h,c
  1070   000E4C  50DF               	movf	indf2,w,c
  1071   000E4E  ECDD  F007         	call	_Transmitir
  1072                           
  1073                           ;LAB05.c: 293: counter++;
  1074   000E52  2A34               	incf	send_temperature_RS232@counter^0,f,c
  1075   000E54                     l1505:
  1076   000E54  5034               	movf	send_temperature_RS232@counter^0,w,c
  1077   000E56  0F25               	addlw	low _Buffer_RS232
  1078   000E58  6ED9               	movwf	fsr2l,c
  1079   000E5A  6ADA               	clrf	fsr2h,c
  1080   000E5C  50DF               	movf	indf2,w,c
  1081   000E5E  A4D8               	btfss	status,2,c
  1082   000E60  D7F1               	goto	l1501
  1083                           
  1084                           ;LAB05.c: 294: };LAB05.c: 295: _delay((unsigned long)((200)*(8000000/4000.0)));
  1085   000E62  0E03               	movlw	3
  1086   000E64  6E33               	movwf	(??_send_temperature_RS232+1)^0,c
  1087   000E66  0E08               	movlw	8
  1088   000E68  6E32               	movwf	??_send_temperature_RS232^0,c
  1089   000E6A  0E77               	movlw	119
  1090   000E6C                     u1257:
  1091   000E6C  2EE8               	decfsz	wreg,f,c
  1092   000E6E  D7FE               	bra	u1257
  1093   000E70  2E32               	decfsz	??_send_temperature_RS232^0,f,c
  1094   000E72  D7FC               	bra	u1257
  1095   000E74  2E33               	decfsz	(??_send_temperature_RS232+1)^0,f,c
  1096   000E76  D7FA               	bra	u1257
  1097   000E78  F000               	nop	
  1098   000E7A  0012               	return		;funcret
  1099   000E7C                     __end_of_send_temperature_RS232:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function _Transmitir *****************
  1103 ;; Defined at:
  1104 ;;		line 359 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  BufferT         1    wreg     unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  BufferT         1    0[COMRAM] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1118 ;;      Params:         0       0       0       0       0       0       0       0       0
  1119 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1121 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1122 ;;Total ram usage:        1 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 1
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_send_temperature_RS232
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text8
  1133   000FBA                     __ptext8:
  1134                           	callstack 0
  1135   000FBA                     _Transmitir:
  1136                           	callstack 28
  1137                           
  1138                           ;incstack = 0
  1139                           ;Transmitir@BufferT stored from wreg
  1140   000FBA  6E31               	movwf	Transmitir@BufferT^0,c
  1141   000FBC                     
  1142                           ;LAB05.c: 360: while(TRMT==0);
  1143   000FBC  A2AC               	btfss	4012,1,c	;volatile
  1144   000FBE  D7FE               	goto	l1381
  1145                           
  1146                           ;LAB05.c: 361: TXREG=BufferT;
  1147   000FC0  C031  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1148   000FC4  0012               	return		;funcret
  1149   000FC6                     __end_of_Transmitir:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _save_temperature_c_EEPROM *****************
  1153 ;; Defined at:
  1154 ;;		line 201 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		None
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1171 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; Hardware stack levels required when called: 1
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text9
  1183   000FD2                     __ptext9:
  1184                           	callstack 0
  1185   000FD2                     _save_temperature_c_EEPROM:
  1186                           	callstack 29
  1187                           
  1188                           ;LAB05.c: 202: return;
  1189                           
  1190                           ;incstack = 0
  1191   000FD2  0012               	return		;funcret
  1192   000FD4                     __end_of_save_temperature_c_EEPROM:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function _init_configuration *****************
  1196 ;; Defined at:
  1197 ;;		line 102 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1211 ;;      Params:         0       0       0       0       0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1213 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1214 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1215 ;;Total ram usage:        2 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 5
  1218 ;; This function calls:
  1219 ;;		_ConfiguraLCD
  1220 ;;		_InicializaLCD
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text10
  1227   000BD8                     __ptext10:
  1228                           	callstack 0
  1229   000BD8                     _init_configuration:
  1230                           	callstack 25
  1231                           
  1232                           ;LAB05.c: 105: OSCCON=0b01110000;
  1233                           
  1234                           ;incstack = 0
  1235   000BD8  0E70               	movlw	112
  1236   000BDA  6ED3               	movwf	211,c	;volatile
  1237                           
  1238                           ;LAB05.c: 106: _delay((unsigned long)((1)*(8000000/4000.0)));
  1239   000BDC  0E03               	movlw	3
  1240   000BDE  6E35               	movwf	??_init_configuration^0,c
  1241   000BE0  0E98               	movlw	152
  1242   000BE2                     u1267:
  1243   000BE2  2EE8               	decfsz	wreg,f,c
  1244   000BE4  D7FE               	bra	u1267
  1245   000BE6  2E35               	decfsz	??_init_configuration^0,f,c
  1246   000BE8  D7FC               	bra	u1267
  1247                           
  1248                           ;LAB05.c: 109: LATC1=0;
  1249   000BEA  928B               	bcf	3979,1,c	;volatile
  1250                           
  1251                           ;LAB05.c: 112: TXSTA=0b00100000;
  1252   000BEC  0E20               	movlw	32
  1253   000BEE  6EAC               	movwf	172,c	;volatile
  1254                           
  1255                           ;LAB05.c: 113: RCSTA=0b10000000;
  1256   000BF0  0E80               	movlw	128
  1257   000BF2  6EAB               	movwf	171,c	;volatile
  1258                           
  1259                           ;LAB05.c: 114: BAUDCON=0b00000000;
  1260   000BF4  0E00               	movlw	0
  1261   000BF6  6EB8               	movwf	184,c	;volatile
  1262                           
  1263                           ;LAB05.c: 115: SPBRG=12;
  1264   000BF8  0E0C               	movlw	12
  1265   000BFA  6EAF               	movwf	175,c	;volatile
  1266                           
  1267                           ;LAB05.c: 118: ADCON1 = 14 ;
  1268   000BFC  0E0E               	movlw	14
  1269   000BFE  6EC1               	movwf	193,c	;volatile
  1270                           
  1271                           ;LAB05.c: 121: TRISE=0b11111000;
  1272   000C00  0EF8               	movlw	248
  1273   000C02  6E96               	movwf	150,c	;volatile
  1274                           
  1275                           ;LAB05.c: 122: LATE=1;
  1276   000C04  0E01               	movlw	1
  1277   000C06  6E8D               	movwf	141,c	;volatile
  1278                           
  1279                           ;LAB05.c: 125: TRISA = 0xff;
  1280   000C08  6892               	setf	146,c	;volatile
  1281                           
  1282                           ;LAB05.c: 128: TRISC2=0;
  1283   000C0A  9494               	bcf	3988,2,c	;volatile
  1284                           
  1285                           ;LAB05.c: 129: LATC2=0;
  1286   000C0C  948B               	bcf	3979,2,c	;volatile
  1287                           
  1288                           ;LAB05.c: 132: TRISB0=0;
  1289   000C0E  9093               	bcf	3987,0,c	;volatile
  1290                           
  1291                           ;LAB05.c: 133: LATB0=0;
  1292   000C10  908A               	bcf	3978,0,c	;volatile
  1293                           
  1294                           ;LAB05.c: 137: ADCON0=0b00000001;
  1295   000C12  0E01               	movlw	1
  1296   000C14  6EC2               	movwf	194,c	;volatile
  1297                           
  1298                           ;LAB05.c: 139: ADCON2=0b11001000;
  1299   000C16  0EC8               	movlw	200
  1300   000C18  6EC0               	movwf	192,c	;volatile
  1301                           
  1302                           ;LAB05.c: 151: T0CON=0b00000100;
  1303   000C1A  0E04               	movlw	4
  1304   000C1C  6ED5               	movwf	213,c	;volatile
  1305                           
  1306                           ;LAB05.c: 152: TMR0=PreloadTMR0;
  1307   000C1E  C04E  FFD6         	movff	_PreloadTMR0,4054	;volatile
  1308   000C22  C04F  FFD7         	movff	_PreloadTMR0+1,4055	;volatile
  1309                           
  1310                           ;LAB05.c: 156: TMR0IF=0;
  1311   000C26  94F2               	bcf	4082,2,c	;volatile
  1312                           
  1313                           ;LAB05.c: 157: TMR0IE=1;
  1314   000C28  8AF2               	bsf	4082,5,c	;volatile
  1315                           
  1316                           ;LAB05.c: 158: GIE=1;
  1317   000C2A  8EF2               	bsf	4082,7,c	;volatile
  1318                           
  1319                           ;LAB05.c: 160: TMR0ON=1;
  1320   000C2C  8ED5               	bsf	4053,7,c	;volatile
  1321                           
  1322                           ;LAB05.c: 163: TRISD=0;
  1323   000C2E  0E00               	movlw	0
  1324   000C30  6E95               	movwf	149,c	;volatile
  1325                           
  1326                           ;LAB05.c: 164: LATD=0;
  1327   000C32  0E00               	movlw	0
  1328   000C34  6E8C               	movwf	140,c	;volatile
  1329                           
  1330                           ;LAB05.c: 165: ConfiguraLCD(4);
  1331   000C36  0E04               	movlw	4
  1332   000C38  ECAA  F007         	call	_ConfiguraLCD
  1333                           
  1334                           ;LAB05.c: 166: InicializaLCD();
  1335   000C3C  EC9E  F005         	call	_InicializaLCD	;wreg free
  1336                           
  1337                           ;LAB05.c: 167: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1338   000C40  0E0B               	movlw	11
  1339   000C42  6E36               	movwf	(??_init_configuration+1)^0,c
  1340   000C44  0E26               	movlw	38
  1341   000C46  6E35               	movwf	??_init_configuration^0,c
  1342   000C48  0E5E               	movlw	94
  1343   000C4A                     u1277:
  1344   000C4A  2EE8               	decfsz	wreg,f,c
  1345   000C4C  D7FE               	bra	u1277
  1346   000C4E  2E35               	decfsz	??_init_configuration^0,f,c
  1347   000C50  D7FC               	bra	u1277
  1348   000C52  2E36               	decfsz	(??_init_configuration+1)^0,f,c
  1349   000C54  D7FA               	bra	u1277
  1350   000C56  0012               	return		;funcret
  1351   000C58                     __end_of_init_configuration:
  1352                           	callstack 0
  1353                           
  1354 ;; *************** function _InicializaLCD *****************
  1355 ;; Defined at:
  1356 ;;		line 71 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1373 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 4
  1377 ;; This function calls:
  1378 ;;		_BorraLCD
  1379 ;;		_EnviaDato
  1380 ;;		_HabilitaLCD
  1381 ;;		_RetardoLCD
  1382 ;; This function is called by:
  1383 ;;		_init_configuration
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text11
  1388   000B3C                     __ptext11:
  1389                           	callstack 0
  1390   000B3C                     _InicializaLCD:
  1391                           	callstack 25
  1392                           
  1393                           ;LibLCDXC8.h: 73: LATD0=0;
  1394                           
  1395                           ;incstack = 0
  1396   000B3C  908C               	bcf	3980,0,c	;volatile
  1397                           
  1398                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1399   000B3E  0E04               	movlw	4
  1400   000B40  1850               	xorwf	_interfaz^0,w,c
  1401   000B42  A4D8               	btfss	status,2,c
  1402   000B44  D004               	goto	l1233
  1403                           
  1404                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
  1405   000B46  508C               	movf	140,w,c	;volatile
  1406   000B48  0B0F               	andlw	15
  1407   000B4A  0930               	iorlw	48
  1408   000B4C  D001               	goto	L1
  1409   000B4E                     l1233:
  1410                           
  1411                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1412   000B4E  0E3F               	movlw	63
  1413   000B50                     L1:
  1414   000B50  6E8C               	movwf	140,c	;volatile
  1415                           
  1416                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1417   000B52  ECD6  F007         	call	_HabilitaLCD	;wreg free
  1418                           
  1419                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1420   000B56  0E01               	movlw	1
  1421   000B58  EC2C  F006         	call	_RetardoLCD
  1422                           
  1423                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1424   000B5C  0E04               	movlw	4
  1425   000B5E  1850               	xorwf	_interfaz^0,w,c
  1426   000B60  A4D8               	btfss	status,2,c
  1427   000B62  D004               	goto	l1243
  1428                           
  1429                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
  1430   000B64  508C               	movf	140,w,c	;volatile
  1431   000B66  0B0F               	andlw	15
  1432   000B68  0930               	iorlw	48
  1433   000B6A  D001               	goto	L2
  1434   000B6C                     l1243:
  1435                           
  1436                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1437   000B6C  0E3F               	movlw	63
  1438   000B6E                     L2:
  1439   000B6E  6E8C               	movwf	140,c	;volatile
  1440                           
  1441                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1442   000B70  ECD6  F007         	call	_HabilitaLCD	;wreg free
  1443                           
  1444                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1445   000B74  0E03               	movlw	3
  1446   000B76  EC2C  F006         	call	_RetardoLCD
  1447                           
  1448                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1449   000B7A  0E04               	movlw	4
  1450   000B7C  1850               	xorwf	_interfaz^0,w,c
  1451   000B7E  A4D8               	btfss	status,2,c
  1452   000B80  D004               	goto	l1253
  1453                           
  1454                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
  1455   000B82  508C               	movf	140,w,c	;volatile
  1456   000B84  0B0F               	andlw	15
  1457   000B86  0930               	iorlw	48
  1458   000B88  D001               	goto	L3
  1459   000B8A                     l1253:
  1460                           
  1461                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1462   000B8A  0E3F               	movlw	63
  1463   000B8C                     L3:
  1464   000B8C  6E8C               	movwf	140,c	;volatile
  1465                           
  1466                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1467   000B8E  ECD6  F007         	call	_HabilitaLCD	;wreg free
  1468                           
  1469                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1470   000B92  0E04               	movlw	4
  1471   000B94  EC2C  F006         	call	_RetardoLCD
  1472                           
  1473                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1474   000B98  0E04               	movlw	4
  1475   000B9A  1850               	xorwf	_interfaz^0,w,c
  1476   000B9C  A4D8               	btfss	status,2,c
  1477   000B9E  D011               	goto	l1273
  1478                           
  1479                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
  1480   000BA0  508C               	movf	140,w,c	;volatile
  1481   000BA2  0B0F               	andlw	15
  1482   000BA4  0920               	iorlw	32
  1483   000BA6  6E8C               	movwf	140,c	;volatile
  1484                           
  1485                           ;LibLCDXC8.h: 94: HabilitaLCD();
  1486   000BA8  ECD6  F007         	call	_HabilitaLCD	;wreg free
  1487                           
  1488                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  1489   000BAC  0E04               	movlw	4
  1490   000BAE  EC2C  F006         	call	_RetardoLCD
  1491                           
  1492                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
  1493   000BB2  0E2F               	movlw	47
  1494   000BB4  ECBA  F006         	call	_EnviaDato
  1495                           
  1496                           ;LibLCDXC8.h: 97: HabilitaLCD();
  1497   000BB8  ECD6  F007         	call	_HabilitaLCD	;wreg free
  1498                           
  1499                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  1500   000BBC  0E04               	movlw	4
  1501   000BBE  EC2C  F006         	call	_RetardoLCD
  1502   000BC2                     l1273:
  1503                           
  1504                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1505   000BC2  ECCC  F007         	call	_BorraLCD	;wreg free
  1506                           
  1507                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1508   000BC6  0E0F               	movlw	15
  1509   000BC8  ECBA  F006         	call	_EnviaDato
  1510                           
  1511                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1512   000BCC  ECD6  F007         	call	_HabilitaLCD	;wreg free
  1513                           
  1514                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1515   000BD0  0E04               	movlw	4
  1516   000BD2  EC2C  F006         	call	_RetardoLCD
  1517   000BD6  0012               	return		;funcret
  1518   000BD8                     __end_of_InicializaLCD:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _ConfiguraLCD *****************
  1522 ;; Defined at:
  1523 ;;		line 55 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  a               1    wreg     unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  a               1    0[COMRAM] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1537 ;;      Params:         0       0       0       0       0       0       0       0       0
  1538 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1540 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1541 ;;Total ram usage:        1 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_init_configuration
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text12
  1552   000F54                     __ptext12:
  1553                           	callstack 0
  1554   000F54                     _ConfiguraLCD:
  1555                           	callstack 28
  1556                           
  1557                           ;incstack = 0
  1558                           ;ConfiguraLCD@a stored from wreg
  1559   000F54  6E31               	movwf	ConfiguraLCD@a^0,c
  1560                           
  1561                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
  1562   000F56  0E04               	movlw	4
  1563   000F58  1831               	xorwf	ConfiguraLCD@a^0,w,c
  1564   000F5A  B4D8               	btfsc	status,2,c
  1565   000F5C  D004               	goto	u100
  1566   000F5E  0E08               	movlw	8
  1567   000F60  1831               	xorwf	ConfiguraLCD@a^0,w,c
  1568   000F62  A4D8               	btfss	status,2,c
  1569   000F64  0012               	return	
  1570   000F66                     u100:
  1571                           
  1572                           ;LibLCDXC8.h: 57: interfaz=a;
  1573   000F66  C031  F050         	movff	ConfiguraLCD@a,_interfaz
  1574   000F6A  0012               	return		;funcret
  1575   000F6C                     __end_of_ConfiguraLCD:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _choose_scale_temperature_and_fill_buffers *****************
  1579 ;; Defined at:
  1580 ;;		line 259 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  temp_convert    2    0        int 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1594 ;;      Params:         0       0       0       0       0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 3
  1601 ;; This function calls:
  1602 ;;		_sprintf
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text13
  1609   000A5E                     __ptext13:
  1610                           	callstack 0
  1611   000A5E                     _choose_scale_temperature_and_fill_buffers:
  1612                           	callstack 27
  1613                           
  1614                           ;LAB05.c: 262: sprintf(Buffer_RS232, "T: %i C\n",Temp);
  1615                           
  1616                           ;incstack = 0
  1617   000A5E  0E25               	movlw	low _Buffer_RS232
  1618   000A60  6E3D               	movwf	sprintf@sp^0,c
  1619   000A62  0E72               	movlw	low STR_3
  1620   000A64  6E3E               	movwf	sprintf@f^0,c
  1621   000A66  0E00               	movlw	0
  1622   000A68  6E40               	movwf	(?_sprintf+3)^0,c
  1623   000A6A  0E00               	movlw	0
  1624   000A6C  6E3F               	movwf	(?_sprintf+2)^0,c
  1625   000A6E  EC46  F004         	call	_sprintf	;wreg free
  1626                           
  1627                           ;LAB05.c: 263: sprintf(Buffer_LCD, "%s","Hola");
  1628   000A72  0E05               	movlw	low _Buffer_LCD
  1629   000A74  6E3D               	movwf	sprintf@sp^0,c
  1630   000A76  0E87               	movlw	low STR_4
  1631   000A78  6E3E               	movwf	sprintf@f^0,c
  1632   000A7A  0E82               	movlw	low STR_5
  1633   000A7C  6E3F               	movwf	(?_sprintf+2)^0,c
  1634   000A7E  503F               	movf	(?_sprintf+2)^0,w,c
  1635   000A80  A4D8               	btfss	status,2,c
  1636   000A82  0E08               	movlw	high __smallconst
  1637   000A84  6E40               	movwf	(?_sprintf+3)^0,c
  1638   000A86  EC46  F004         	call	_sprintf	;wreg free
  1639                           
  1640                           ;LAB05.c: 265: if(RA1==0 && RA2==0){
  1641   000A8A  A280               	btfss	3968,1,c	;volatile
  1642   000A8C  B480               	btfsc	3968,2,c	;volatile
  1643   000A8E  D013               	goto	l282
  1644                           
  1645                           ;LAB05.c: 267: sprintf(Buffer_LCD, "T: %i C\nH: %i %c",Temp,Hum,37);
  1646   000A90  0E05               	movlw	low _Buffer_LCD
  1647   000A92  6E3D               	movwf	sprintf@sp^0,c
  1648   000A94  0E31               	movlw	low STR_6
  1649   000A96  6E3E               	movwf	sprintf@f^0,c
  1650   000A98  0E00               	movlw	0
  1651   000A9A  6E40               	movwf	(?_sprintf+3)^0,c
  1652   000A9C  0E00               	movlw	0
  1653   000A9E  6E3F               	movwf	(?_sprintf+2)^0,c
  1654   000AA0  0E00               	movlw	0
  1655   000AA2  6E42               	movwf	(?_sprintf+5)^0,c
  1656   000AA4  0E00               	movlw	0
  1657   000AA6  6E41               	movwf	(?_sprintf+4)^0,c
  1658   000AA8  0E00               	movlw	0
  1659   000AAA  6E44               	movwf	(?_sprintf+7)^0,c
  1660   000AAC  0E25               	movlw	37
  1661   000AAE  6E43               	movwf	(?_sprintf+6)^0,c
  1662   000AB0  EC46  F004         	call	_sprintf	;wreg free
  1663                           
  1664                           ;LAB05.c: 268: }
  1665   000AB4  0012               	return	
  1666   000AB6                     l282:
  1667                           
  1668                           ;LAB05.c: 269: else if(RA1==0 && RA2==1){
  1669   000AB6  A280               	btfss	3968,1,c	;volatile
  1670   000AB8  A480               	btfss	3968,2,c	;volatile
  1671   000ABA  D013               	goto	l284
  1672                           
  1673                           ;LAB05.c: 272: sprintf(Buffer_LCD, "T: %i K\nH: %i %c", temp_converted,Hum,37);
  1674   000ABC  0E05               	movlw	low _Buffer_LCD
  1675   000ABE  6E3D               	movwf	sprintf@sp^0,c
  1676   000AC0  0E53               	movlw	low STR_7
  1677   000AC2  6E3E               	movwf	sprintf@f^0,c
  1678   000AC4  0E01               	movlw	1
  1679   000AC6  6E40               	movwf	(?_sprintf+3)^0,c
  1680   000AC8  0E11               	movlw	17
  1681   000ACA  6E3F               	movwf	(?_sprintf+2)^0,c
  1682   000ACC  0E00               	movlw	0
  1683   000ACE  6E42               	movwf	(?_sprintf+5)^0,c
  1684   000AD0  0E00               	movlw	0
  1685   000AD2  6E41               	movwf	(?_sprintf+4)^0,c
  1686   000AD4  0E00               	movlw	0
  1687   000AD6  6E44               	movwf	(?_sprintf+7)^0,c
  1688   000AD8  0E25               	movlw	37
  1689   000ADA  6E43               	movwf	(?_sprintf+6)^0,c
  1690   000ADC  EC46  F004         	call	_sprintf	;wreg free
  1691                           
  1692                           ;LAB05.c: 273: }
  1693   000AE0  0012               	return	
  1694   000AE2                     l284:
  1695                           
  1696                           ;LAB05.c: 274: else if(RA1==1 && RA2==0){
  1697   000AE2  B280               	btfsc	3968,1,c	;volatile
  1698   000AE4  B480               	btfsc	3968,2,c	;volatile
  1699   000AE6  D013               	goto	l286
  1700                           
  1701                           ;LAB05.c: 277: sprintf(Buffer_LCD, "T: %i Ra\nH: %i %c", temp_converted,Hum,37);
  1702   000AE8  0E05               	movlw	low _Buffer_LCD
  1703   000AEA  6E3D               	movwf	sprintf@sp^0,c
  1704   000AEC  0E1F               	movlw	low STR_8
  1705   000AEE  6E3E               	movwf	sprintf@f^0,c
  1706   000AF0  0E01               	movlw	1
  1707   000AF2  6E40               	movwf	(?_sprintf+3)^0,c
  1708   000AF4  0EEB               	movlw	235
  1709   000AF6  6E3F               	movwf	(?_sprintf+2)^0,c
  1710   000AF8  0E00               	movlw	0
  1711   000AFA  6E42               	movwf	(?_sprintf+5)^0,c
  1712   000AFC  0E00               	movlw	0
  1713   000AFE  6E41               	movwf	(?_sprintf+4)^0,c
  1714   000B00  0E00               	movlw	0
  1715   000B02  6E44               	movwf	(?_sprintf+7)^0,c
  1716   000B04  0E25               	movlw	37
  1717   000B06  6E43               	movwf	(?_sprintf+6)^0,c
  1718   000B08  EC46  F004         	call	_sprintf	;wreg free
  1719                           
  1720                           ;LAB05.c: 278: }
  1721   000B0C  0012               	return	
  1722   000B0E                     l286:
  1723                           
  1724                           ;LAB05.c: 279: else if(RA1==1 && RA2==1){
  1725   000B0E  A280               	btfss	3968,1,c	;volatile
  1726   000B10  0012               	return	
  1727   000B12  A480               	btfss	3968,2,c	;volatile
  1728   000B14  0012               	return	
  1729                           
  1730                           ;LAB05.c: 282: sprintf(Buffer_LCD, "T: %i F\nH: %i %c", temp_converted,Hum,37);
  1731   000B16  0E05               	movlw	low _Buffer_LCD
  1732   000B18  6E3D               	movwf	sprintf@sp^0,c
  1733   000B1A  0E42               	movlw	low STR_9
  1734   000B1C  6E3E               	movwf	sprintf@f^0,c
  1735   000B1E  0E00               	movlw	0
  1736   000B20  6E40               	movwf	(?_sprintf+3)^0,c
  1737   000B22  0E20               	movlw	32
  1738   000B24  6E3F               	movwf	(?_sprintf+2)^0,c
  1739   000B26  0E00               	movlw	0
  1740   000B28  6E42               	movwf	(?_sprintf+5)^0,c
  1741   000B2A  0E00               	movlw	0
  1742   000B2C  6E41               	movwf	(?_sprintf+4)^0,c
  1743   000B2E  0E00               	movlw	0
  1744   000B30  6E44               	movwf	(?_sprintf+7)^0,c
  1745   000B32  0E25               	movlw	37
  1746   000B34  6E43               	movwf	(?_sprintf+6)^0,c
  1747   000B36  EC46  F004         	call	_sprintf	;wreg free
  1748   000B3A  0012               	return	
  1749   000B3C                     __end_of_choose_scale_temperature_and_fill_buffers:
  1750                           	callstack 0
  1751                           
  1752 ;; *************** function _sprintf *****************
  1753 ;; Defined at:
  1754 ;;		line 505 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/doprnt.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  sp              1   12[COMRAM] PTR unsigned char 
  1757 ;;		 -> Buffer_LCD(32), Buffer_RS232(12), 
  1758 ;;  f               1   13[COMRAM] PTR const unsigned char 
  1759 ;;		 -> STR_9(17), STR_8(18), STR_7(17), STR_6(17), 
  1760 ;;		 -> STR_4(3), STR_3(9), 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  tmpval          4    0        struct .
  1763 ;;  val             2   26[COMRAM] unsigned int 
  1764 ;;  cp              2   23[COMRAM] PTR const unsigned char 
  1765 ;;		 -> STR_10(7), ?_sprintf(2), STR_5(5), 
  1766 ;;  len             2    0        unsigned int 
  1767 ;;  c               1   28[COMRAM] unsigned char 
  1768 ;;  ap              1   25[COMRAM] PTR void [1]
  1769 ;;		 -> ?_sprintf(2), 
  1770 ;;  prec            1   22[COMRAM] char 
  1771 ;;  flag            1   21[COMRAM] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  2   12[COMRAM] int 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1781 ;;      Params:         8       0       0       0       0       0       0       0       0
  1782 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1783 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1784 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1785 ;;Total ram usage:       17 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 2
  1788 ;; This function calls:
  1789 ;;		___lwdiv
  1790 ;;		___lwmod
  1791 ;; This function is called by:
  1792 ;;		_choose_scale_temperature_and_fill_buffers
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text14
  1797   00088C                     __ptext14:
  1798                           	callstack 0
  1799   00088C                     _sprintf:
  1800                           	callstack 27
  1801                           
  1802                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1803                           
  1804                           ;incstack = 0
  1805   00088C  0E3F               	movlw	low (?_sprintf+2)
  1806   00088E  6E4A               	movwf	sprintf@ap^0,c
  1807                           
  1808                           ;doprnt.c: 553: while((c = *f++)) {
  1809   000890  D0D4               	goto	u1130
  1810   000892                     l1863:
  1811                           
  1812                           ;doprnt.c: 555: if(c != '%')
  1813   000892  0E25               	movlw	37
  1814   000894  184D               	xorwf	sprintf@c^0,w,c
  1815   000896  B4D8               	btfsc	status,2,c
  1816   000898  D007               	goto	l1869
  1817   00089A                     u1040:
  1818                           
  1819                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1820   00089A  503D               	movf	sprintf@sp^0,w,c
  1821   00089C  6ED9               	movwf	fsr2l,c
  1822   00089E  6ADA               	clrf	fsr2h,c
  1823   0008A0  C04D  FFDF         	movff	sprintf@c,indf2
  1824   0008A4  2A3D               	incf	sprintf@sp^0,f,c
  1825                           
  1826                           ;doprnt.c: 559: continue;
  1827   0008A6  D0C9               	goto	u1130
  1828   0008A8                     l1869:
  1829                           
  1830                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1831   0008A8  0E00               	movlw	0
  1832   0008AA  6E46               	movwf	sprintf@flag^0,c
  1833                           
  1834                           ;doprnt.c: 661: switch(c = *f++) {
  1835   0008AC  D047               	goto	l1897
  1836   0008AE                     l1871:
  1837                           
  1838                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  1839   0008AE  504A               	movf	sprintf@ap^0,w,c
  1840   0008B0  6ED9               	movwf	fsr2l,c
  1841   0008B2  6ADA               	clrf	fsr2h,c
  1842   0008B4  CFDE F048          	movff	postinc2,sprintf@cp
  1843   0008B8  CFDD F049          	movff	postdec2,sprintf@cp+1
  1844   0008BC  0E02               	movlw	2
  1845   0008BE  264A               	addwf	sprintf@ap^0,f,c
  1846                           
  1847                           ;doprnt.c: 766: if(!cp)
  1848   0008C0  5048               	movf	sprintf@cp^0,w,c
  1849   0008C2  1049               	iorwf	(sprintf@cp+1)^0,w,c
  1850   0008C4  A4D8               	btfss	status,2,c
  1851   0008C6  D01E               	goto	l1885
  1852                           
  1853                           ;doprnt.c: 767: cp = "(null)";
  1854   0008C8  0E7B               	movlw	low STR_10
  1855   0008CA  6E48               	movwf	sprintf@cp^0,c
  1856   0008CC  5048               	movf	sprintf@cp^0,w,c
  1857   0008CE  A4D8               	btfss	status,2,c
  1858   0008D0  0E08               	movlw	high __smallconst
  1859   0008D2  6E49               	movwf	(sprintf@cp+1)^0,c
  1860   0008D4  D017               	goto	l1885
  1861   0008D6                     l1879:
  1862                           
  1863                           ;doprnt.c: 804: ((*sp++ = (*cp++)));
  1864   0008D6  C048  FFF6         	movff	sprintf@cp,tblptrl
  1865   0008DA  C049  FFF7         	movff	sprintf@cp+1,tblptrh
  1866   0008DE  6AF8               	clrf	tblptru,c
  1867   0008E0  503D               	movf	sprintf@sp^0,w,c
  1868   0008E2  6ED9               	movwf	fsr2l,c
  1869   0008E4  6ADA               	clrf	fsr2h,c
  1870   0008E6  0E07               	movlw	(high __ramtop+-1)
  1871   0008E8  64F7               	cpfsgt	tblptrh,c
  1872   0008EA  D003               	bra	u1067
  1873   0008EC  0008               	tblrd		*
  1874   0008EE  50F5               	movf	tablat,w,c
  1875   0008F0  D005               	bra	u1060
  1876   0008F2                     u1067:
  1877   0008F2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1878   0008F6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1879   0008FA  50EF               	movf	indf0,w,c
  1880   0008FC                     u1060:
  1881   0008FC  6EDF               	movwf	indf2,c
  1882   0008FE  4A48               	infsnz	sprintf@cp^0,f,c
  1883   000900  2A49               	incf	(sprintf@cp+1)^0,f,c
  1884   000902  2A3D               	incf	sprintf@sp^0,f,c
  1885   000904                     l1885:
  1886   000904  C048  FFF6         	movff	sprintf@cp,tblptrl
  1887   000908  C049  FFF7         	movff	sprintf@cp+1,tblptrh
  1888   00090C  6AF8               	clrf	tblptru,c
  1889   00090E  0E07               	movlw	(high __ramtop+-1)
  1890   000910  64F7               	cpfsgt	tblptrh,c
  1891   000912  D003               	bra	u1077
  1892   000914  0008               	tblrd		*
  1893   000916  50F5               	movf	tablat,w,c
  1894   000918  D005               	bra	u1070
  1895   00091A                     u1077:
  1896   00091A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1897   00091E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1898   000922  50EF               	movf	indf0,w,c
  1899   000924                     u1070:
  1900   000924  0900               	iorlw	0
  1901   000926  B4D8               	btfsc	status,2,c
  1902   000928  D088               	goto	u1130
  1903   00092A  D7D5               	goto	l1879
  1904   00092C                     l1887:
  1905                           
  1906                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  1907   00092C  504A               	movf	sprintf@ap^0,w,c
  1908   00092E  6ED9               	movwf	fsr2l,c
  1909   000930  6ADA               	clrf	fsr2h,c
  1910   000932  50DF               	movf	indf2,w,c
  1911   000934  6E4D               	movwf	sprintf@c^0,c
  1912   000936  0E02               	movlw	2
  1913   000938  264A               	addwf	sprintf@ap^0,f,c
  1914   00093A  D7AF               	goto	u1040
  1915   00093C                     l1897:
  1916   00093C  2A3E               	incf	sprintf@f^0,f,c
  1917   00093E  043E               	decf	sprintf@f^0,w,c
  1918   000940  6E45               	movwf	??_sprintf^0,c
  1919   000942  C045  FFF6         	movff	??_sprintf,tblptrl
  1920   000946                     	if	1	;There is more than 1 active tblptr byte
  1921   000946  0E08               	movlw	high __smallconst
  1922   000948  6EF7               	movwf	tblptrh,c
  1923   00094A                     	endif
  1924   00094A                     	if	0	;tblptru may be non-zero
  1925   00094A                     	endif
  1926   00094A                     	if	0	;tblptru may be non-zero
  1927   00094A                     	endif
  1928   00094A  0008               	tblrd		*
  1929   00094C  CFF5 F04D          	movff	tablat,sprintf@c
  1930   000950  504D               	movf	sprintf@c^0,w,c
  1931                           
  1932                           ; Switch size 1, requested type "simple"
  1933                           ; Number of cases is 5, Range of values is 0 to 115
  1934                           ; switch strategies available:
  1935                           ; Name         Instructions Cycles
  1936                           ; simple_byte           16     9 (average)
  1937                           ;	Chosen strategy is simple_byte
  1938   000952  0A00               	xorlw	0	; case 0
  1939   000954  B4D8               	btfsc	status,2,c
  1940   000956  D07E               	goto	u1140
  1941   000958  0A63               	xorlw	99	; case 99
  1942   00095A  B4D8               	btfsc	status,2,c
  1943   00095C  D7E7               	goto	l1887
  1944   00095E  0A07               	xorlw	7	; case 100
  1945   000960  B4D8               	btfsc	status,2,c
  1946   000962  D007               	goto	l1899
  1947   000964  0A0D               	xorlw	13	; case 105
  1948   000966  B4D8               	btfsc	status,2,c
  1949   000968  D004               	goto	l1899
  1950   00096A  0A1A               	xorlw	26	; case 115
  1951   00096C  B4D8               	btfsc	status,2,c
  1952   00096E  D79F               	goto	l1871
  1953   000970  D794               	goto	u1040
  1954   000972                     l1899:
  1955                           
  1956                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  1957   000972  504A               	movf	sprintf@ap^0,w,c
  1958   000974  6ED9               	movwf	fsr2l,c
  1959   000976  6ADA               	clrf	fsr2h,c
  1960   000978  CFDE F04B          	movff	postinc2,sprintf@val
  1961   00097C  CFDD F04C          	movff	postdec2,sprintf@val+1
  1962   000980  0E02               	movlw	2
  1963   000982  264A               	addwf	sprintf@ap^0,f,c
  1964                           
  1965                           ;doprnt.c: 1287: if((int)val < 0) {
  1966   000984  AE4C               	btfss	(sprintf@val+1)^0,7,c
  1967   000986  D006               	goto	l1909
  1968                           
  1969                           ;doprnt.c: 1288: flag |= 0x03;
  1970   000988  0E03               	movlw	3
  1971   00098A  1246               	iorwf	sprintf@flag^0,f,c
  1972                           
  1973                           ;doprnt.c: 1289: val = -val;
  1974   00098C  6C4B               	negf	sprintf@val^0,c
  1975   00098E  1E4C               	comf	(sprintf@val+1)^0,f,c
  1976   000990  B0D8               	btfsc	status,0,c
  1977   000992  2A4C               	incf	(sprintf@val+1)^0,f,c
  1978   000994                     l1909:
  1979                           
  1980                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  1981   000994  0E01               	movlw	1
  1982   000996  6E4D               	movwf	sprintf@c^0,c
  1983   000998                     l1915:
  1984                           
  1985                           ;doprnt.c: 1332: if(val < dpowers[c])
  1986   000998  504D               	movf	sprintf@c^0,w,c
  1987   00099A  0D02               	mullw	2
  1988   00099C  50F3               	movf	243,w,c
  1989   00099E  0F01               	addlw	low _dpowers
  1990   0009A0  6E45               	movwf	??_sprintf^0,c
  1991   0009A2  C045  FFF6         	movff	??_sprintf,tblptrl
  1992   0009A6                     	if	1	;There is more than 1 active tblptr byte
  1993   0009A6  0E08               	movlw	high __smallconst
  1994   0009A8  6EF7               	movwf	tblptrh,c
  1995   0009AA                     	endif
  1996   0009AA                     	if	0	;tblptru may be non-zero
  1997   0009AA                     	endif
  1998   0009AA                     	if	0	;tblptru may be non-zero
  1999   0009AA                     	endif
  2000   0009AA  0009               	tblrd		*+
  2001   0009AC  50F5               	movf	tablat,w,c
  2002   0009AE  5C4B               	subwf	sprintf@val^0,w,c
  2003   0009B0  0009               	tblrd		*+
  2004   0009B2  50F5               	movf	tablat,w,c
  2005   0009B4  584C               	subwfb	(sprintf@val+1)^0,w,c
  2006   0009B6  A0D8               	btfss	status,0,c
  2007   0009B8  D005               	goto	u1110
  2008   0009BA  2A4D               	incf	sprintf@c^0,f,c
  2009   0009BC  0E05               	movlw	5
  2010   0009BE  184D               	xorwf	sprintf@c^0,w,c
  2011   0009C0  A4D8               	btfss	status,2,c
  2012   0009C2  D7EA               	goto	l1915
  2013   0009C4                     u1110:
  2014                           
  2015                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2016   0009C4  C046  F045         	movff	sprintf@flag,??_sprintf
  2017   0009C8  0E03               	movlw	3
  2018   0009CA  1645               	andwf	??_sprintf^0,f,c
  2019   0009CC  B4D8               	btfsc	status,2,c
  2020   0009CE  D006               	goto	l1929
  2021                           
  2022                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2023   0009D0  503D               	movf	sprintf@sp^0,w,c
  2024   0009D2  6ED9               	movwf	fsr2l,c
  2025   0009D4  6ADA               	clrf	fsr2h,c
  2026   0009D6  0E2D               	movlw	45
  2027   0009D8  6EDF               	movwf	indf2,c
  2028   0009DA  2A3D               	incf	sprintf@sp^0,f,c
  2029   0009DC                     l1929:
  2030                           
  2031                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2032   0009DC  C04D  F047         	movff	sprintf@c,sprintf@prec
  2033                           
  2034                           ;doprnt.c: 1500: while(prec--) {
  2035   0009E0  D028               	goto	l1937
  2036   0009E2                     l1931:
  2037                           
  2038                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2039   0009E2  5047               	movf	sprintf@prec^0,w,c
  2040   0009E4  0D02               	mullw	2
  2041   0009E6  50F3               	movf	243,w,c
  2042   0009E8  0F01               	addlw	low _dpowers
  2043   0009EA  6E45               	movwf	??_sprintf^0,c
  2044   0009EC  C045  FFF6         	movff	??_sprintf,tblptrl
  2045   0009F0                     	if	1	;There is more than 1 active tblptr byte
  2046   0009F0  0E08               	movlw	high __smallconst
  2047   0009F2  6EF7               	movwf	tblptrh,c
  2048   0009F4                     	endif
  2049   0009F4                     	if	0	;tblptru may be non-zero
  2050   0009F4                     	endif
  2051   0009F4                     	if	0	;tblptru may be non-zero
  2052   0009F4                     	endif
  2053   0009F4  0009               	tblrd		*+
  2054   0009F6  CFF5 F033          	movff	tablat,___lwdiv@divisor
  2055   0009FA  000A               	tblrd		*-
  2056   0009FC  CFF5 F034          	movff	tablat,___lwdiv@divisor+1
  2057   000A00  C04B  F031         	movff	sprintf@val,___lwdiv@dividend
  2058   000A04  C04C  F032         	movff	sprintf@val+1,___lwdiv@dividend+1
  2059   000A08  EC91  F006         	call	___lwdiv	;wreg free
  2060   000A0C  C031  F038         	movff	?___lwdiv,___lwmod@dividend
  2061   000A10  C032  F039         	movff	?___lwdiv+1,___lwmod@dividend+1
  2062   000A14  0E00               	movlw	0
  2063   000A16  6E3B               	movwf	(___lwmod@divisor+1)^0,c
  2064   000A18  0E0A               	movlw	10
  2065   000A1A  6E3A               	movwf	___lwmod@divisor^0,c
  2066   000A1C  ECFE  F006         	call	___lwmod	;wreg free
  2067   000A20  5038               	movf	?___lwmod^0,w,c
  2068   000A22  0F30               	addlw	48
  2069   000A24  6E4D               	movwf	sprintf@c^0,c
  2070                           
  2071                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2072   000A26  503D               	movf	sprintf@sp^0,w,c
  2073   000A28  6ED9               	movwf	fsr2l,c
  2074   000A2A  6ADA               	clrf	fsr2h,c
  2075   000A2C  C04D  FFDF         	movff	sprintf@c,indf2
  2076   000A30  2A3D               	incf	sprintf@sp^0,f,c
  2077   000A32                     l1937:
  2078   000A32  0647               	decf	sprintf@prec^0,f,c
  2079   000A34  2847               	incf	sprintf@prec^0,w,c
  2080   000A36  A4D8               	btfss	status,2,c
  2081   000A38  D7D4               	goto	l1931
  2082   000A3A                     u1130:
  2083   000A3A  2A3E               	incf	sprintf@f^0,f,c
  2084   000A3C  043E               	decf	sprintf@f^0,w,c
  2085   000A3E  6E45               	movwf	??_sprintf^0,c
  2086   000A40  C045  FFF6         	movff	??_sprintf,tblptrl
  2087   000A44                     	if	1	;There is more than 1 active tblptr byte
  2088   000A44  0E08               	movlw	high __smallconst
  2089   000A46  6EF7               	movwf	tblptrh,c
  2090   000A48                     	endif
  2091   000A48                     	if	0	;tblptru may be non-zero
  2092   000A48                     	endif
  2093   000A48                     	if	0	;tblptru may be non-zero
  2094   000A48                     	endif
  2095   000A48  0008               	tblrd		*
  2096   000A4A  CFF5 F04D          	movff	tablat,sprintf@c
  2097   000A4E  504D               	movf	sprintf@c^0,w,c
  2098   000A50  A4D8               	btfss	status,2,c
  2099   000A52  D71F               	goto	l1863
  2100   000A54                     u1140:
  2101                           
  2102                           ;doprnt.c: 1564: *sp = 0;
  2103   000A54  503D               	movf	sprintf@sp^0,w,c
  2104   000A56  6ED9               	movwf	fsr2l,c
  2105   000A58  6ADA               	clrf	fsr2h,c
  2106   000A5A  6ADF               	clrf	indf2,c
  2107   000A5C  0012               	return		;funcret
  2108   000A5E                     __end_of_sprintf:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function ___lwmod *****************
  2112 ;; Defined at:
  2113 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwmod.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  dividend        2    7[COMRAM] unsigned int 
  2116 ;;  divisor         2    9[COMRAM] unsigned int 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  counter         1   11[COMRAM] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  2    7[COMRAM] unsigned int 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2128 ;;      Params:         4       0       0       0       0       0       0       0       0
  2129 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2131 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2132 ;;Total ram usage:        5 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 1
  2135 ;; This function calls:
  2136 ;;		Nothing
  2137 ;; This function is called by:
  2138 ;;		_sprintf
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text15
  2143   000DFC                     __ptext15:
  2144                           	callstack 0
  2145   000DFC                     ___lwmod:
  2146                           	callstack 27
  2147                           
  2148                           ;incstack = 0
  2149   000DFC  503A               	movf	___lwmod@divisor^0,w,c
  2150   000DFE  103B               	iorwf	(___lwmod@divisor+1)^0,w,c
  2151   000E00  B4D8               	btfsc	status,2,c
  2152   000E02  D018               	goto	l871
  2153   000E04  0E01               	movlw	1
  2154   000E06  6E3C               	movwf	___lwmod@counter^0,c
  2155   000E08  D004               	goto	l1835
  2156   000E0A                     l1833:
  2157   000E0A  90D8               	bcf	status,0,c
  2158   000E0C  363A               	rlcf	___lwmod@divisor^0,f,c
  2159   000E0E  363B               	rlcf	(___lwmod@divisor+1)^0,f,c
  2160   000E10  2A3C               	incf	___lwmod@counter^0,f,c
  2161   000E12                     l1835:
  2162   000E12  AE3B               	btfss	(___lwmod@divisor+1)^0,7,c
  2163   000E14  D7FA               	goto	l1833
  2164   000E16                     u990:
  2165   000E16  503A               	movf	___lwmod@divisor^0,w,c
  2166   000E18  5C38               	subwf	___lwmod@dividend^0,w,c
  2167   000E1A  503B               	movf	(___lwmod@divisor+1)^0,w,c
  2168   000E1C  5839               	subwfb	(___lwmod@dividend+1)^0,w,c
  2169   000E1E  A0D8               	btfss	status,0,c
  2170   000E20  D004               	goto	l1841
  2171   000E22  503A               	movf	___lwmod@divisor^0,w,c
  2172   000E24  5E38               	subwf	___lwmod@dividend^0,f,c
  2173   000E26  503B               	movf	(___lwmod@divisor+1)^0,w,c
  2174   000E28  5A39               	subwfb	(___lwmod@dividend+1)^0,f,c
  2175   000E2A                     l1841:
  2176   000E2A  90D8               	bcf	status,0,c
  2177   000E2C  323B               	rrcf	(___lwmod@divisor+1)^0,f,c
  2178   000E2E  323A               	rrcf	___lwmod@divisor^0,f,c
  2179   000E30  2E3C               	decfsz	___lwmod@counter^0,f,c
  2180   000E32  D7F1               	goto	u990
  2181   000E34                     l871:
  2182   000E34  C038  F038         	movff	___lwmod@dividend,?___lwmod
  2183   000E38  C039  F039         	movff	___lwmod@dividend+1,?___lwmod+1
  2184   000E3C  0012               	return		;funcret
  2185   000E3E                     __end_of___lwmod:
  2186                           	callstack 0
  2187                           
  2188 ;; *************** function ___lwdiv *****************
  2189 ;; Defined at:
  2190 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwdiv.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  dividend        2    0[COMRAM] unsigned int 
  2193 ;;  divisor         2    2[COMRAM] unsigned int 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  quotient        2    4[COMRAM] unsigned int 
  2196 ;;  counter         1    6[COMRAM] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  2    0[COMRAM] unsigned int 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2206 ;;      Params:         4       0       0       0       0       0       0       0       0
  2207 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2209 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2210 ;;Total ram usage:        7 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 1
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_sprintf
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text16
  2221   000D22                     __ptext16:
  2222                           	callstack 0
  2223   000D22                     ___lwdiv:
  2224                           	callstack 27
  2225                           
  2226                           ;incstack = 0
  2227   000D22  0E00               	movlw	0
  2228   000D24  6E36               	movwf	(___lwdiv@quotient+1)^0,c
  2229   000D26  0E00               	movlw	0
  2230   000D28  6E35               	movwf	___lwdiv@quotient^0,c
  2231   000D2A  5033               	movf	___lwdiv@divisor^0,w,c
  2232   000D2C  1034               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2233   000D2E  B4D8               	btfsc	status,2,c
  2234   000D30  D01C               	goto	l861
  2235   000D32  0E01               	movlw	1
  2236   000D34  6E37               	movwf	___lwdiv@counter^0,c
  2237   000D36  D004               	goto	l1815
  2238   000D38                     l1813:
  2239   000D38  90D8               	bcf	status,0,c
  2240   000D3A  3633               	rlcf	___lwdiv@divisor^0,f,c
  2241   000D3C  3634               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2242   000D3E  2A37               	incf	___lwdiv@counter^0,f,c
  2243   000D40                     l1815:
  2244   000D40  AE34               	btfss	(___lwdiv@divisor+1)^0,7,c
  2245   000D42  D7FA               	goto	l1813
  2246   000D44                     u960:
  2247   000D44  90D8               	bcf	status,0,c
  2248   000D46  3635               	rlcf	___lwdiv@quotient^0,f,c
  2249   000D48  3636               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2250   000D4A  5033               	movf	___lwdiv@divisor^0,w,c
  2251   000D4C  5C31               	subwf	___lwdiv@dividend^0,w,c
  2252   000D4E  5034               	movf	(___lwdiv@divisor+1)^0,w,c
  2253   000D50  5832               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2254   000D52  A0D8               	btfss	status,0,c
  2255   000D54  D005               	goto	l1825
  2256   000D56  5033               	movf	___lwdiv@divisor^0,w,c
  2257   000D58  5E31               	subwf	___lwdiv@dividend^0,f,c
  2258   000D5A  5034               	movf	(___lwdiv@divisor+1)^0,w,c
  2259   000D5C  5A32               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2260   000D5E  8035               	bsf	___lwdiv@quotient^0,0,c
  2261   000D60                     l1825:
  2262   000D60  90D8               	bcf	status,0,c
  2263   000D62  3234               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2264   000D64  3233               	rrcf	___lwdiv@divisor^0,f,c
  2265   000D66  2E37               	decfsz	___lwdiv@counter^0,f,c
  2266   000D68  D7ED               	goto	u960
  2267   000D6A                     l861:
  2268   000D6A  C035  F031         	movff	___lwdiv@quotient,?___lwdiv
  2269   000D6E  C036  F032         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2270   000D72  0012               	return		;funcret
  2271   000D74                     __end_of___lwdiv:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _check_potentiometer_voltaje *****************
  2275 ;; Defined at:
  2276 ;;		line 187 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2293 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 4
  2297 ;; This function calls:
  2298 ;;		_BorraLCD
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text17
  2305   000F10                     __ptext17:
  2306                           	callstack 0
  2307   000F10                     _check_potentiometer_voltaje:
  2308                           	callstack 26
  2309                           
  2310                           ;LAB05.c: 188: ADON=1;
  2311                           
  2312                           ;incstack = 0
  2313   000F10  80C2               	bsf	4034,0,c	;volatile
  2314                           
  2315                           ;LAB05.c: 189: GO=1;
  2316   000F12  82C2               	bsf	4034,1,c	;volatile
  2317   000F14                     l254:
  2318   000F14  B2C2               	btfsc	4034,1,c	;volatile
  2319   000F16  D7FE               	goto	l254
  2320                           
  2321                           ;LAB05.c: 191: BorraLCD();
  2322   000F18  ECCC  F007         	call	_BorraLCD	;wreg free
  2323                           
  2324                           ;LAB05.c: 193: if(ADRES > 511)
  2325   000F1C  0E00               	movlw	0
  2326   000F1E  5CC3               	subwf	195,w,c	;volatile
  2327   000F20  0E02               	movlw	2
  2328   000F22  58C4               	subwfb	196,w,c	;volatile
  2329   000F24  A0D8               	btfss	status,0,c
  2330   000F26  D002               	goto	l257
  2331                           
  2332                           ;LAB05.c: 194: RB0 = 1;
  2333   000F28  8081               	bsf	3969,0,c	;volatile
  2334   000F2A  D001               	goto	l258
  2335   000F2C                     l257:
  2336                           
  2337                           ;LAB05.c: 195: else;LAB05.c: 196: RB0 = 0;
  2338   000F2C  9081               	bcf	3969,0,c	;volatile
  2339   000F2E                     l258:
  2340                           
  2341                           ;LAB05.c: 198: ADON=0;
  2342   000F2E  90C2               	bcf	4034,0,c	;volatile
  2343                           
  2344                           ;LAB05.c: 199: return;
  2345   000F30  0012               	return		;funcret
  2346   000F32                     __end_of_check_potentiometer_voltaje:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _BorraLCD *****************
  2350 ;; Defined at:
  2351 ;;		line 112 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2365 ;;      Params:         0       0       0       0       0       0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2368 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2369 ;;Total ram usage:        0 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 3
  2372 ;; This function calls:
  2373 ;;		_EnviaDato
  2374 ;;		_HabilitaLCD
  2375 ;;		_RetardoLCD
  2376 ;; This function is called by:
  2377 ;;		_InicializaLCD
  2378 ;;		_MensajeLCD_Var
  2379 ;;		_welcome_operations
  2380 ;;		_check_potentiometer_voltaje
  2381 ;;		_show_temperature_LCD
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text18
  2386   000F98                     __ptext18:
  2387                           	callstack 0
  2388   000F98                     _BorraLCD:
  2389                           	callstack 25
  2390                           
  2391                           ;LibLCDXC8.h: 114: LATD0=0;
  2392                           
  2393                           ;incstack = 0
  2394   000F98  908C               	bcf	3980,0,c	;volatile
  2395                           
  2396                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2397   000F9A  0E01               	movlw	1
  2398   000F9C  ECBA  F006         	call	_EnviaDato
  2399                           
  2400                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2401   000FA0  ECD6  F007         	call	_HabilitaLCD	;wreg free
  2402                           
  2403                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2404   000FA4  0E02               	movlw	2
  2405   000FA6  EC2C  F006         	call	_RetardoLCD
  2406   000FAA  0012               	return		;funcret
  2407   000FAC                     __end_of_BorraLCD:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function _EnviaDato *****************
  2411 ;; Defined at:
  2412 ;;		line 59 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  a               1    wreg     unsigned char 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  a               1    3[COMRAM] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0
  2427 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2428 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2429 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2430 ;;Total ram usage:        2 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 2
  2433 ;; This function calls:
  2434 ;;		_HabilitaLCD
  2435 ;;		_RetardoLCD
  2436 ;; This function is called by:
  2437 ;;		_InicializaLCD
  2438 ;;		_BorraLCD
  2439 ;;		_EscribeLCD_c
  2440 ;;		_DireccionaLCD
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text19
  2445   000D74                     __ptext19:
  2446                           	callstack 0
  2447   000D74                     _EnviaDato:
  2448                           	callstack 25
  2449                           
  2450                           ;incstack = 0
  2451                           ;EnviaDato@a stored from wreg
  2452   000D74  6E34               	movwf	EnviaDato@a^0,c
  2453                           
  2454                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2455   000D76  0E04               	movlw	4
  2456   000D78  1850               	xorwf	_interfaz^0,w,c
  2457   000D7A  A4D8               	btfss	status,2,c
  2458   000D7C  D017               	goto	l1157
  2459                           
  2460                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2461   000D7E  C034  F033         	movff	EnviaDato@a,??_EnviaDato
  2462   000D82  0EF0               	movlw	240
  2463   000D84  1633               	andwf	??_EnviaDato^0,f,c
  2464   000D86  508C               	movf	140,w,c	;volatile
  2465   000D88  0B0F               	andlw	15
  2466   000D8A  1033               	iorwf	??_EnviaDato^0,w,c
  2467   000D8C  6E8C               	movwf	140,c	;volatile
  2468                           
  2469                           ;LibLCDXC8.h: 62: HabilitaLCD();
  2470   000D8E  ECD6  F007         	call	_HabilitaLCD	;wreg free
  2471                           
  2472                           ;LibLCDXC8.h: 63: RetardoLCD(1);
  2473   000D92  0E01               	movlw	1
  2474   000D94  EC2C  F006         	call	_RetardoLCD
  2475                           
  2476                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
  2477   000D98  C034  F033         	movff	EnviaDato@a,??_EnviaDato
  2478   000D9C  3A33               	swapf	??_EnviaDato^0,f,c
  2479   000D9E  0EF0               	movlw	240
  2480   000DA0  1633               	andwf	??_EnviaDato^0,f,c
  2481   000DA2  508C               	movf	140,w,c	;volatile
  2482   000DA4  0B0F               	andlw	15
  2483   000DA6  1033               	iorwf	??_EnviaDato^0,w,c
  2484   000DA8  6E8C               	movwf	140,c	;volatile
  2485                           
  2486                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
  2487   000DAA  0012               	return	
  2488   000DAC                     l1157:
  2489   000DAC  0E08               	movlw	8
  2490   000DAE  1850               	xorwf	_interfaz^0,w,c
  2491   000DB0  A4D8               	btfss	status,2,c
  2492   000DB2  0012               	return	
  2493                           
  2494                           ;LibLCDXC8.h: 68: LATD=a;
  2495   000DB4  C034  FF8C         	movff	EnviaDato@a,3980	;volatile
  2496   000DB8  0012               	return		;funcret
  2497   000DBA                     __end_of_EnviaDato:
  2498                           	callstack 0
  2499                           
  2500 ;; *************** function _RetardoLCD *****************
  2501 ;; Defined at:
  2502 ;;		line 288 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  a               1    wreg     unsigned char 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  a               1    1[COMRAM] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2516 ;;      Params:         0       0       0       0       0       0       0       0       0
  2517 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2518 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2519 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2520 ;;Total ram usage:        2 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 1
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_EnviaDato
  2527 ;;		_InicializaLCD
  2528 ;;		_BorraLCD
  2529 ;;		_EscribeLCD_c
  2530 ;;		_DireccionaLCD
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text20
  2535   000C58                     __ptext20:
  2536                           	callstack 0
  2537   000C58                     _RetardoLCD:
  2538                           	callstack 26
  2539                           
  2540                           ;incstack = 0
  2541                           ;RetardoLCD@a stored from wreg
  2542   000C58  6E32               	movwf	RetardoLCD@a^0,c
  2543                           
  2544                           ;LibLCDXC8.h: 289: switch(a){
  2545   000C5A  D023               	goto	l1145
  2546   000C5C                     l1135:
  2547   000C5C  0E27               	movlw	39
  2548   000C5E  6E31               	movwf	??_RetardoLCD^0,c
  2549   000C60  0EF5               	movlw	245
  2550   000C62                     u1287:
  2551   000C62  2EE8               	decfsz	wreg,f,c
  2552   000C64  D7FE               	bra	u1287
  2553   000C66  2E31               	decfsz	??_RetardoLCD^0,f,c
  2554   000C68  D7FC               	bra	u1287
  2555   000C6A  F000               	nop	
  2556                           
  2557                           ;LibLCDXC8.h: 292: break;
  2558   000C6C  0012               	return	
  2559   000C6E                     l1137:
  2560   000C6E  0E03               	movlw	3
  2561   000C70  6E31               	movwf	??_RetardoLCD^0,c
  2562   000C72  0E98               	movlw	152
  2563   000C74                     u1297:
  2564   000C74  2EE8               	decfsz	wreg,f,c
  2565   000C76  D7FE               	bra	u1297
  2566   000C78  2E31               	decfsz	??_RetardoLCD^0,f,c
  2567   000C7A  D7FC               	bra	u1297
  2568                           
  2569                           ;LibLCDXC8.h: 294: _delay((unsigned long)((640)*(8000000/4000000.0)));
  2570   000C7C  0EB6               	movlw	182
  2571   000C7E                     u1307:
  2572   000C7E  D000               	nop2	
  2573   000C80  D000               	nop2	
  2574   000C82  2EE8               	decfsz	wreg,f,c
  2575   000C84  D7FC               	bra	u1307
  2576   000C86  D000               	nop2	
  2577   000C88  D000               	nop2	
  2578   000C8A  D000               	nop2	
  2579                           
  2580                           ;LibLCDXC8.h: 296: break;
  2581   000C8C  0012               	return	
  2582   000C8E                     l1139:
  2583   000C8E  0E42               	movlw	66
  2584   000C90                     u1317:
  2585   000C90  2EE8               	decfsz	wreg,f,c
  2586   000C92  D7FE               	bra	u1317
  2587   000C94  D000               	nop2	
  2588                           
  2589                           ;LibLCDXC8.h: 299: break;
  2590   000C96  0012               	return	
  2591   000C98                     l1141:
  2592   000C98  0E1A               	movlw	26
  2593   000C9A                     u1327:
  2594   000C9A  2EE8               	decfsz	wreg,f,c
  2595   000C9C  D7FE               	bra	u1327
  2596   000C9E  D000               	nop2	
  2597                           
  2598                           ;LibLCDXC8.h: 302: break;
  2599   000CA0  0012               	return	
  2600   000CA2                     l1145:
  2601   000CA2  5032               	movf	RetardoLCD@a^0,w,c
  2602                           
  2603                           ; Switch size 1, requested type "simple"
  2604                           ; Number of cases is 4, Range of values is 1 to 4
  2605                           ; switch strategies available:
  2606                           ; Name         Instructions Cycles
  2607                           ; simple_byte           13     7 (average)
  2608                           ;	Chosen strategy is simple_byte
  2609   000CA4  0A01               	xorlw	1	; case 1
  2610   000CA6  B4D8               	btfsc	status,2,c
  2611   000CA8  D7D9               	goto	l1135
  2612   000CAA  0A03               	xorlw	3	; case 2
  2613   000CAC  B4D8               	btfsc	status,2,c
  2614   000CAE  D7DF               	goto	l1137
  2615   000CB0  0A01               	xorlw	1	; case 3
  2616   000CB2  B4D8               	btfsc	status,2,c
  2617   000CB4  D7EC               	goto	l1139
  2618   000CB6  0A07               	xorlw	7	; case 4
  2619   000CB8  A4D8               	btfss	status,2,c
  2620   000CBA  0012               	return	
  2621   000CBC  D7ED               	goto	l1141
  2622   000CBE                     __end_of_RetardoLCD:
  2623                           	callstack 0
  2624                           
  2625 ;; *************** function _HabilitaLCD *****************
  2626 ;; Defined at:
  2627 ;;		line 105 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2641 ;;      Params:         0       0       0       0       0       0       0       0       0
  2642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2645 ;;Total ram usage:        0 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_EnviaDato
  2652 ;;		_InicializaLCD
  2653 ;;		_BorraLCD
  2654 ;;		_EscribeLCD_c
  2655 ;;		_DireccionaLCD
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text21
  2660   000FAC                     __ptext21:
  2661                           	callstack 0
  2662   000FAC                     _HabilitaLCD:
  2663                           	callstack 26
  2664                           
  2665                           ;LibLCDXC8.h: 107: LATD1=1;
  2666                           
  2667                           ;incstack = 0
  2668   000FAC  828C               	bsf	3980,1,c	;volatile
  2669                           
  2670                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
  2671   000FAE  0E1A               	movlw	26
  2672   000FB0                     u1337:
  2673   000FB0  2EE8               	decfsz	wreg,f,c
  2674   000FB2  D7FE               	bra	u1337
  2675   000FB4  D000               	nop2	
  2676                           
  2677                           ;LibLCDXC8.h: 110: LATD1=0;
  2678   000FB6  928C               	bcf	3980,1,c	;volatile
  2679   000FB8  0012               	return		;funcret
  2680   000FBA                     __end_of_HabilitaLCD:
  2681                           	callstack 0
  2682                           
  2683 ;; *************** function _ISR *****************
  2684 ;; Defined at:
  2685 ;;		line 365 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2699 ;;      Params:         0       0       0       0       0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		Interrupt level 2
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	intcode
  2713   000008                     __pintcode:
  2714                           	callstack 0
  2715   000008                     _ISR:
  2716                           	callstack 25
  2717                           
  2718                           ;incstack = 0
  2719   000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2720   00000A  ED99  F007         	call	int_func,f	;refresh shadow registers
  2721                           
  2722                           	psect	intcode_body
  2723   000F32                     __pintcode_body:
  2724                           	callstack 25
  2725   000F32                     int_func:
  2726                           	callstack 25
  2727   000F32  0006               	pop		; remove dummy address from shadow register refresh
  2728                           
  2729                           ;LAB05.c: 366: if(TMR0IF==1){
  2730   000F34  A4F2               	btfss	4082,2,c	;volatile
  2731   000F36  D00C               	goto	i2l345
  2732                           
  2733                           ;LAB05.c: 367: TMR0=PreloadTMR0;
  2734   000F38  C04E  FFD6         	movff	_PreloadTMR0,4054	;volatile
  2735   000F3C  C04F  FFD7         	movff	_PreloadTMR0+1,4055	;volatile
  2736                           
  2737                           ;LAB05.c: 368: TMR0IF=0;
  2738   000F40  94F2               	bcf	4082,2,c	;volatile
  2739                           
  2740                           ;LAB05.c: 369: RC2=~RC2;
  2741   000F42  B482               	btfsc	3970,2,c	;volatile
  2742   000F44  D002               	goto	i2u74_40
  2743   000F46  8482               	bsf	3970,2,c	;volatile
  2744   000F48  D001               	goto	i2u75_45
  2745   000F4A                     i2u74_40:
  2746   000F4A  9482               	bcf	3970,2,c	;volatile
  2747   000F4C                     i2u75_45:
  2748                           
  2749                           ;LAB05.c: 370: Enable_sample=1;
  2750   000F4C  0E01               	movlw	1
  2751   000F4E  6E01               	movwf	_Enable_sample^0,c
  2752   000F50                     i2l345:
  2753   000F50  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2754   000F52  0011               	retfie		f
  2755   000F54                     __end_of_ISR:
  2756                           	callstack 0
  2757                           
  2758                           	psect	rparam
  2759   000000                     
  2760                           	psect	temp
  2761   000051                     btemp:
  2762                           	callstack 0
  2763   000051                     	ds	1
  2764   000000                     int$flags	set	btemp
  2765   000000                     wtemp8	set	btemp+1
  2766   000000                     ttemp5	set	btemp+1
  2767   000000                     ttemp6	set	btemp+4
  2768   000000                     ttemp7	set	btemp+8
  2769                           
  2770                           	psect	idloc
  2771                           
  2772                           ;Config register IDLOC0 @ 0x200000
  2773                           ;	unspecified, using default values
  2774   200000                     	org	2097152
  2775   200000  FF                 	db	255
  2776                           
  2777                           ;Config register IDLOC1 @ 0x200001
  2778                           ;	unspecified, using default values
  2779   200001                     	org	2097153
  2780   200001  FF                 	db	255
  2781                           
  2782                           ;Config register IDLOC2 @ 0x200002
  2783                           ;	unspecified, using default values
  2784   200002                     	org	2097154
  2785   200002  FF                 	db	255
  2786                           
  2787                           ;Config register IDLOC3 @ 0x200003
  2788                           ;	unspecified, using default values
  2789   200003                     	org	2097155
  2790   200003  FF                 	db	255
  2791                           
  2792                           ;Config register IDLOC4 @ 0x200004
  2793                           ;	unspecified, using default values
  2794   200004                     	org	2097156
  2795   200004  FF                 	db	255
  2796                           
  2797                           ;Config register IDLOC5 @ 0x200005
  2798                           ;	unspecified, using default values
  2799   200005                     	org	2097157
  2800   200005  FF                 	db	255
  2801                           
  2802                           ;Config register IDLOC6 @ 0x200006
  2803                           ;	unspecified, using default values
  2804   200006                     	org	2097158
  2805   200006  FF                 	db	255
  2806                           
  2807                           ;Config register IDLOC7 @ 0x200007
  2808                           ;	unspecified, using default values
  2809   200007                     	org	2097159
  2810   200007  FF                 	db	255
  2811                           
  2812                           	psect	config
  2813                           
  2814                           ;Config register CONFIG1L @ 0x300000
  2815                           ;	unspecified, using default values
  2816                           ;	PLL Prescaler Selection bits
  2817                           ;	PLLDIV = 0x0, unprogrammed default
  2818                           ;	System Clock Postscaler Selection bits
  2819                           ;	CPUDIV = 0x0, unprogrammed default
  2820                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2821                           ;	USBDIV = 0x0, unprogrammed default
  2822   300000                     	org	3145728
  2823   300000  00                 	db	0
  2824                           
  2825                           ;Config register CONFIG1H @ 0x300001
  2826                           ;	Oscillator Selection bits
  2827                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2828                           ;	Fail-Safe Clock Monitor Enable bit
  2829                           ;	FCMEN = 0x0, unprogrammed default
  2830                           ;	Internal/External Oscillator Switchover bit
  2831                           ;	IESO = 0x0, unprogrammed default
  2832   300001                     	org	3145729
  2833   300001  09                 	db	9
  2834                           
  2835                           ;Config register CONFIG2L @ 0x300002
  2836                           ;	unspecified, using default values
  2837                           ;	Power-up Timer Enable bit
  2838                           ;	PWRT = 0x1, unprogrammed default
  2839                           ;	Brown-out Reset Enable bits
  2840                           ;	BOR = 0x3, unprogrammed default
  2841                           ;	Brown-out Reset Voltage bits
  2842                           ;	BORV = 0x3, unprogrammed default
  2843                           ;	USB Voltage Regulator Enable bit
  2844                           ;	VREGEN = 0x0, unprogrammed default
  2845   300002                     	org	3145730
  2846   300002  1F                 	db	31
  2847                           
  2848                           ;Config register CONFIG2H @ 0x300003
  2849                           ;	Watchdog Timer Enable bit
  2850                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2851                           ;	Watchdog Timer Postscale Select bits
  2852                           ;	WDTPS = 0xF, unprogrammed default
  2853   300003                     	org	3145731
  2854   300003  1E                 	db	30
  2855                           
  2856                           ; Padding undefined space
  2857   300004                     	org	3145732
  2858   300004  FF                 	db	255
  2859                           
  2860                           ;Config register CONFIG3H @ 0x300005
  2861                           ;	unspecified, using default values
  2862                           ;	CCP2 MUX bit
  2863                           ;	CCP2MX = 0x1, unprogrammed default
  2864                           ;	PORTB A/D Enable bit
  2865                           ;	PBADEN = 0x1, unprogrammed default
  2866                           ;	Low-Power Timer 1 Oscillator Enable bit
  2867                           ;	LPT1OSC = 0x0, unprogrammed default
  2868                           ;	MCLR Pin Enable bit
  2869                           ;	MCLRE = 0x1, unprogrammed default
  2870   300005                     	org	3145733
  2871   300005  83                 	db	131
  2872                           
  2873                           ;Config register CONFIG4L @ 0x300006
  2874                           ;	unspecified, using default values
  2875                           ;	Stack Full/Underflow Reset Enable bit
  2876                           ;	STVREN = 0x1, unprogrammed default
  2877                           ;	Single-Supply ICSP Enable bit
  2878                           ;	LVP = 0x1, unprogrammed default
  2879                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2880                           ;	ICPRT = 0x0, unprogrammed default
  2881                           ;	Extended Instruction Set Enable bit
  2882                           ;	XINST = 0x0, unprogrammed default
  2883                           ;	Background Debugger Enable bit
  2884                           ;	DEBUG = 0x1, unprogrammed default
  2885   300006                     	org	3145734
  2886   300006  85                 	db	133
  2887                           
  2888                           ; Padding undefined space
  2889   300007                     	org	3145735
  2890   300007  FF                 	db	255
  2891                           
  2892                           ;Config register CONFIG5L @ 0x300008
  2893                           ;	unspecified, using default values
  2894                           ;	Code Protection bit
  2895                           ;	CP0 = 0x1, unprogrammed default
  2896                           ;	Code Protection bit
  2897                           ;	CP1 = 0x1, unprogrammed default
  2898                           ;	Code Protection bit
  2899                           ;	CP2 = 0x1, unprogrammed default
  2900                           ;	Code Protection bit
  2901                           ;	CP3 = 0x1, unprogrammed default
  2902   300008                     	org	3145736
  2903   300008  0F                 	db	15
  2904                           
  2905                           ;Config register CONFIG5H @ 0x300009
  2906                           ;	unspecified, using default values
  2907                           ;	Boot Block Code Protection bit
  2908                           ;	CPB = 0x1, unprogrammed default
  2909                           ;	Data EEPROM Code Protection bit
  2910                           ;	CPD = 0x1, unprogrammed default
  2911   300009                     	org	3145737
  2912   300009  C0                 	db	192
  2913                           
  2914                           ;Config register CONFIG6L @ 0x30000A
  2915                           ;	unspecified, using default values
  2916                           ;	Write Protection bit
  2917                           ;	WRT0 = 0x1, unprogrammed default
  2918                           ;	Write Protection bit
  2919                           ;	WRT1 = 0x1, unprogrammed default
  2920                           ;	Write Protection bit
  2921                           ;	WRT2 = 0x1, unprogrammed default
  2922                           ;	Write Protection bit
  2923                           ;	WRT3 = 0x1, unprogrammed default
  2924   30000A                     	org	3145738
  2925   30000A  0F                 	db	15
  2926                           
  2927                           ;Config register CONFIG6H @ 0x30000B
  2928                           ;	unspecified, using default values
  2929                           ;	Configuration Register Write Protection bit
  2930                           ;	WRTC = 0x1, unprogrammed default
  2931                           ;	Boot Block Write Protection bit
  2932                           ;	WRTB = 0x1, unprogrammed default
  2933                           ;	Data EEPROM Write Protection bit
  2934                           ;	WRTD = 0x1, unprogrammed default
  2935   30000B                     	org	3145739
  2936   30000B  E0                 	db	224
  2937                           
  2938                           ;Config register CONFIG7L @ 0x30000C
  2939                           ;	unspecified, using default values
  2940                           ;	Table Read Protection bit
  2941                           ;	EBTR0 = 0x1, unprogrammed default
  2942                           ;	Table Read Protection bit
  2943                           ;	EBTR1 = 0x1, unprogrammed default
  2944                           ;	Table Read Protection bit
  2945                           ;	EBTR2 = 0x1, unprogrammed default
  2946                           ;	Table Read Protection bit
  2947                           ;	EBTR3 = 0x1, unprogrammed default
  2948   30000C                     	org	3145740
  2949   30000C  0F                 	db	15
  2950                           
  2951                           ;Config register CONFIG7H @ 0x30000D
  2952                           ;	unspecified, using default values
  2953                           ;	Boot Block Table Read Protection bit
  2954                           ;	EBTRB = 0x1, unprogrammed default
  2955   30000D                     	org	3145741
  2956   30000D  40                 	db	64
  2957                           tosu	equ	0xFFF
  2958                           tosh	equ	0xFFE
  2959                           tosl	equ	0xFFD
  2960                           stkptr	equ	0xFFC
  2961                           pclatu	equ	0xFFB
  2962                           pclath	equ	0xFFA
  2963                           pcl	equ	0xFF9
  2964                           tblptru	equ	0xFF8
  2965                           tblptrh	equ	0xFF7
  2966                           tblptrl	equ	0xFF6
  2967                           tablat	equ	0xFF5
  2968                           prodh	equ	0xFF4
  2969                           prodl	equ	0xFF3
  2970                           indf0	equ	0xFEF
  2971                           postinc0	equ	0xFEE
  2972                           postdec0	equ	0xFED
  2973                           preinc0	equ	0xFEC
  2974                           plusw0	equ	0xFEB
  2975                           fsr0h	equ	0xFEA
  2976                           fsr0l	equ	0xFE9
  2977                           wreg	equ	0xFE8
  2978                           indf1	equ	0xFE7
  2979                           postinc1	equ	0xFE6
  2980                           postdec1	equ	0xFE5
  2981                           preinc1	equ	0xFE4
  2982                           plusw1	equ	0xFE3
  2983                           fsr1h	equ	0xFE2
  2984                           fsr1l	equ	0xFE1
  2985                           bsr	equ	0xFE0
  2986                           indf2	equ	0xFDF
  2987                           postinc2	equ	0xFDE
  2988                           postdec2	equ	0xFDD
  2989                           preinc2	equ	0xFDC
  2990                           plusw2	equ	0xFDB
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8

Data Sizes:
    Strings     127
    Constant    10
    Data        3
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      80
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_9(CODE[17]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_10(CODE[7]), ?_sprintf(COMRAM[2]), STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 32
		 -> Buffer_LCD(COMRAM[32]), Buffer_RS232(COMRAM[12]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_2(CODE[14]), STR_1(CODE[20]), 


Critical Paths under _main in COMRAM

    _welcome_operations->_MensajeLCD_Var
    _MensajeLCD_Var->_DireccionaLCD
    _MensajeLCD_Var->_EscribeLCD_c
    _show_temperature_LCD->_DireccionaLCD
    _show_temperature_LCD->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _send_temperature_RS232->_Transmitir
    _InicializaLCD->_EnviaDato
    _choose_scale_temperature_and_fill_buffers->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6523
        _check_potentiometer_voltaje
_choose_scale_temperature_and_fill_b
                 _init_configuration
          _save_temperature_c_EEPROM
             _send_temperature_RS232
               _show_temperature_LCD
             _show_temperature_c_RGB
                 _welcome_operations
 ---------------------------------------------------------------------------------
 (1) _welcome_operations                                   2     2      0     616
                                              8 COMRAM     2     2      0
                           _BorraLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       3     2      1     541
                                              5 COMRAM     3     2      1
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _show_temperature_c_RGB                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _show_temperature_LCD                                 2     2      0     300
                                              5 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _DireccionaLCD                                        1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _send_temperature_RS232                               3     3      0      45
                                              1 COMRAM     3     3      0
                         _Transmitir
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _save_temperature_c_EEPROM                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_configuration                                   2     2      0     195
                                              4 COMRAM     2     2      0
                       _ConfiguraLCD
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (2) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _choose_scale_temperature_and_fill_buffers            2     2      0    5292
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8    5222
                                             12 COMRAM    17     9      8
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    2075
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1574
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_potentiometer_voltaje                          0     0      0      75
                           _BorraLCD
 ---------------------------------------------------------------------------------
 (3) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      60
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_potentiometer_voltaje
     _BorraLCD
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
   _choose_scale_temperature_and_fill_buffers
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_configuration
     _ConfiguraLCD
     _InicializaLCD
       _BorraLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _save_temperature_c_EEPROM
   _send_temperature_RS232
     _Transmitir
   _show_temperature_LCD
     _BorraLCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _show_temperature_c_RGB
   _welcome_operations
     _BorraLCD
     _MensajeLCD_Var
       _BorraLCD
       _DireccionaLCD
       _EscribeLCD_c

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      50       1       85.1%
BITBIGSFRll         20      0       0      31        0.0%
BITBIGSFRhhhl       1A      0       0      21        0.0%
BITBIGSFRhllh       14      0       0      27        0.0%
BITBIGSFRhlhhh       E      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhlhlh       8      0       0      25        0.0%
BITBIGSFRhlhhl       7      0       0      24        0.0%
BITBIGSFRlhh         5      0       0      29        0.0%
BITBIGSFRhllll       4      0       0      28        0.0%
BITBIGSFRlhl         1      0       0      30        0.0%
BITBIGSFRhlhll       1      0       0      26        0.0%
BITBIGSFRhhl         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      32        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jun  2 00:22:25 2023

                                Transmitir@BufferT 0031                           ??_show_temperature_c_RGB 0031  
                                               _GO 7E11                                         EnviaDato@a 0034  
                                    _InicializaLCD 0B3C                                                l254 0F14  
                                              l257 0F2C                                                l258 0F2E  
                                              l282 0AB6                                                l284 0AE2  
                                              l286 0B0E                                                l861 0D6A  
                                              l871 0E34                                                _GIE 7F97  
                                              _RA1 7C01                                                _RB0 7C08  
                                              _RA2 7C02                                                _RC1 7C11  
                                              _RC2 7C12                                                _RE0 7C20  
                                              _RE1 7C21                                                u100 0F66  
                                              _RE2 7C22                                                _ISR 0008  
                                              u960 0D44                                                u990 0E16  
                                              _Che 0002                                                _Hum 0003  
                                              wreg 0FE8                                               ?_ISR 0031  
                                             l1141 0C98                                               l1135 0C5C  
                                             l1137 0C6E                                               l1145 0CA2  
                                             l1233 0B4E                                               l1139 0C8E  
                                             l1243 0B6C                                               l1157 0DAC  
                                             l1253 0B8A                                               l1501 0E44  
                                             l1273 0BC2                                               l1505 0E54  
                                             l1523 0DDC                                               l1381 0FBC  
                                             l1517 0DC4                                               l1527 0DEC  
                                             l1813 0D38                                               l1815 0D40  
                                             l1825 0D60                                               l1841 0E2A  
                                             l1833 0E0A                                               l1835 0E12  
                                             l1931 09E2                                               l1915 0998  
                                             l1851 0CDA                                               l1909 0994  
                                             l1871 08AE                                               l1863 0892  
                                             l1855 0CF0                                               l1847 0CC4  
                                             l1937 0A32                                               l1929 09DC  
                                             l1859 0D08                                               l1885 0904  
                                             l1869 08A8                                               l1887 092C  
                                             l1879 08D6                                               l1897 093C  
                                             l1993 0EEC                                               l1899 0972  
                                             _ADON 7E10                                               STR_1 080B  
                                             STR_2 0864                                               STR_3 0872  
                                             STR_4 0887                                               STR_5 0882  
                                             STR_6 0831                                               STR_7 0853  
                                             STR_8 081F                                               STR_9 0842  
                                             u1110 09C4                                               u1040 089A  
                                             u1130 0A3A                                               u1140 0A54  
                                             u1060 08FC                                               u1070 0924  
                                             u1307 0C7E                                               u1067 08F2  
                                             u1317 0C90                                               u1077 091A  
                                             u1327 0C9A                                               u1247 0ED2  
                                             _LATD 0F8C                                               u1337 0FB0  
                                             u1257 0E6C                                               _LATE 0F8D  
                                             u1267 0BE2                                               u1277 0C4A  
                                             u1287 0C62                                               u1297 0C74  
                                             _TMR0 0FD6                                               _TRMT 7D61  
                                   ??_EscribeLCD_c 0035                                               _Temp 0004  
                                             _main 0EE4                                               fsr0h 0FEA  
                                             indf0 0FEF                                               fsr2h 0FDA  
                                             fsr0l 0FE9                                               indf2 0FDF  
                                             fsr2l 0FD9                                               btemp 0051  
                                             prodl 0FF3                                               start 000E  
                                     ___param_bank 0000                                              ??_ISR 0031  
                      ??_save_temperature_c_EEPROM 0031                                     ?_InicializaLCD 0031  
                                            ?_main 0031  __end_of_choose_scale_temperature_and_fill_buffers 0B3C  
      ??_choose_scale_temperature_and_fill_buffers 004E         ?_choose_scale_temperature_and_fill_buffers 0031  
        _choose_scale_temperature_and_fill_buffers 0A5E                                              _ADRES 0FC3  
                                            STR_10 087B                                      EscribeLCD_c@a 0035  
                                            _T0CON 0FD5                                              _LATB0 7C50  
                                            _LATC1 7C59                                              _LATD0 7C60  
                                            _LATC2 7C5A                                              _LATD1 7C61  
                                  __end_of___lwdiv 0D74                                    __end_of___lwmod 0E3E  
                                            i2l345 0F50                                         _Buffer_LCD 0005  
                                            _RCSTA 0FAB                                              _SPBRG 0FAF  
                                            _TRISA 0F92                                              _TRISD 0F95  
                                            _TRISE 0F96                                              _TXREG 0FAD  
                                            _TXSTA 0FAC                                    __end_of_dpowers 080B  
                                            tablat 0FF5                                        _HabilitaLCD 0FAC  
                                            ttemp5 0052                                              ttemp6 0055  
                                            ttemp7 0059                                              status 0FD8  
                                            wtemp8 0052                                    __end_of_sprintf 0A5E  
                                 __end_of_BorraLCD 0FAC                                    __initialization 0E7C  
                                     __end_of_main 0F10                                             ??_main 004E  
                             __end_of_ConfiguraLCD 0F6C                              MensajeLCD_Var@counter 0038  
                                    __activetblptr 0002                                             _ADCON0 0FC2  
                                           _ADCON1 0FC1                                             _ADCON2 0FC0  
                                   DireccionaLCD@a 0035                          _save_temperature_c_EEPROM 0FD2  
                                           _OSCCON 0FD3                                             _TMR0IE 7F95  
                                           _TMR0IF 7F92                                             _TMR0ON 7EAF  
                                           _TRISB0 7C98                                             _TRISC2 7CA2  
                            __end_of_DireccionaLCD 0F98                                         _RetardoLCD 0C58  
                    send_temperature_RS232@counter 0034                                          ??___lwdiv 0035  
                                        ??___lwmod 003C                                    ??_InicializaLCD 0035  
                                           clear_0 0EA0                                             isa$std 0001  
                             __end_of_EscribeLCD_c 0F82                                       __pdataCOMRAM 004E  
                                     __mediumconst 0000                             _send_temperature_RS232 0E3E  
                                           tblptrh 0FF7                                             tblptrl 0FF6  
                                           tblptru 0FF8                                          ??_sprintf 0045  
                                       _Transmitir 0FBA                             _show_temperature_c_RGB 0FC6  
                                       __accesstop 0060                            __end_of__initialization 0EA6  
                                    ___rparam_used 0001                         __end_of_welcome_operations 0EE4  
                                   __pcstackCOMRAM 0031                                  __end_of_EnviaDato 0DBA  
                                        ?_BorraLCD 0031                                     _MensajeLCD_Var 0CBE  
                       __end_of_init_configuration 0C58                                    MensajeLCD_Var@a 0036  
                                      ?_RetardoLCD 0031                                        RetardoLCD@a 0032  
                                          _BAUDCON 0FB8                                       _Buffer_RS232 0025  
                           __end_of_MensajeLCD_Var 0D22                                            i2u74_40 0F4A  
                                          i2u75_45 0F4C                                         ??_BorraLCD 0035  
                                      ?_Transmitir 0031                                       ?_HabilitaLCD 0031  
                                     _ConfiguraLCD 0F54                                            __Hparam 0000  
                                          __Lparam 0000                                        _PreloadTMR0 004E  
                                          ___lwdiv 0D22                                            ___lwmod 0DFC  
                                     __psmallconst 0800                                            __pcinit 0E7C  
                                          __ramtop 0800                                            __ptext0 0EE4  
                                          __ptext1 0EB4                                            __ptext2 0CBE  
                                          __ptext3 0FC6                                            __ptext4 0DBA  
                                          __ptext5 0F6C                                            __ptext6 0F82  
                                          __ptext7 0E3E                                            __ptext8 0FBA  
                                          __ptext9 0FD2                                            _dpowers 0801  
              __end_of_check_potentiometer_voltaje 0F32                        _check_potentiometer_voltaje 0F10  
                                  ?_MensajeLCD_Var 0036                                            _sprintf 088C  
                                   __pintcode_body 0F32                               end_of_initialization 0EA6  
                    ??_check_potentiometer_voltaje 0035                                      __Lmediumconst 0000  
                                          int_func 0F32                                       _EscribeLCD_c 0F6C  
                                          postdec2 0FDD                  __end_of_save_temperature_c_EEPROM 0FD4  
                                          postinc0 0FEE                                            postinc2 0FDE  
                          ?_send_temperature_RS232 0031                            ?_show_temperature_c_RGB 0031  
                   __end_of_send_temperature_RS232 0E7C                                      __pidataCOMRAM 0FCE  
                            __end_of_InicializaLCD 0BD8                                 _welcome_operations 0EB4  
                                        _EnviaDato 0D74                     __end_of_show_temperature_c_RGB 0FCE  
                              start_initialization 0E7C                                        __end_of_ISR 0F54  
                              ?_welcome_operations 0031                        show_temperature_LCD@counter 0037  
                                     ??_RetardoLCD 0031                               ??_welcome_operations 0039  
                               _init_configuration 0BD8                                ?_init_configuration 0031  
                                    _Enable_sample 0001                                         ?_EnviaDato 0031  
                                      __pbssCOMRAM 0001                                 __end_of_RetardoLCD 0CBE  
                     __end_of_show_temperature_LCD 0DFC                                       ??_Transmitir 0031  
                             ??_init_configuration 0035                                        sprintf@flag 0046  
                                      sprintf@prec 0047                                      _DireccionaLCD 0F82  
                                 ___lwdiv@dividend 0031                                          __pintcode 0008  
                                         ?___lwdiv 0031                                           ?___lwmod 0038  
                               __end_of_Transmitir 0FC6                                   ??_MensajeLCD_Var 0037  
                                      __smallconst 0800                                   ___lwdiv@quotient 0035  
                                         ?_sprintf 003D                                     ?_DireccionaLCD 0031  
                                      ??_EnviaDato 0033                                           _BorraLCD 0F98  
                                         __Hrparam 0000                                           __Lrparam 0000  
                             _show_temperature_LCD 0DBA                         ?_save_temperature_c_EEPROM 0031  
                                    ConfiguraLCD@a 0031                                         sprintf@val 004B  
                                  ___lwdiv@divisor 0033                                    ___lwdiv@counter 0037  
                                         __ptext10 0BD8                                           __ptext11 0B3C  
                                         __ptext20 0C58                                           __ptext12 0F54  
                                         __ptext21 0FAC                                           __ptext13 0A5E  
                                         __ptext14 088C                                           __ptext15 0DFC  
                                         __ptext16 0D22                                           __ptext17 0F10  
                                         __ptext18 0F98                                           __ptext19 0D74  
                                  ??_DireccionaLCD 0035                                           _interfaz 0050  
                                         isa$xinst 0000                              ?_show_temperature_LCD 0031  
                                         int$flags 0051                                           intlevel2 0000  
                                        sprintf@ap 004A                                          sprintf@cp 0048  
                                    ??_HabilitaLCD 0031                                          sprintf@sp 003D  
                                 ___lwmod@dividend 0038                                      ?_ConfiguraLCD 0031  
                                         sprintf@c 004D                                           sprintf@f 003E  
                                  ___lwmod@divisor 003A                                    ___lwmod@counter 003C  
                     ?_check_potentiometer_voltaje 0031                                     ??_ConfiguraLCD 0031  
                                    ?_EscribeLCD_c 0031                           ??_send_temperature_RS232 0032  
                              __end_of_HabilitaLCD 0FBA                             ??_show_temperature_LCD 0036  
