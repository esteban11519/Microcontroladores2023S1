

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jun  3 01:17:28 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 09/02/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4550 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataCOMRAM
    85   001660                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _interfaz
    89   001660  08                 	db	8
    90                           
    91                           	psect	smallconst
    92   000800                     __psmallconst:
    93                           	callstack 0
    94   000800  00                 	db	0
    95   000801                     _dpowers:
    96                           	callstack 0
    97   000801  0001               	dw	1
    98   000803  000A               	dw	10
    99   000805  0064               	dw	100
   100   000807  03E8               	dw	1000
   101   000809  2710               	dw	10000
   102   00080B                     __end_of_dpowers:
   103                           	callstack 0
   104   000000                     _TRISD	set	3989
   105   000000                     _TRISB0	set	31896
   106   000000                     _TRISC2	set	31906
   107   000000                     _RC2	set	31762
   108   000000                     _TRMT	set	32097
   109   000000                     _RA2	set	31746
   110   000000                     _RE1	set	31777
   111   000000                     _RE2	set	31778
   112   000000                     _GO	set	32273
   113   000000                     _ADON	set	32272
   114   000000                     _TMR0ON	set	32431
   115   000000                     _GIE	set	32663
   116   000000                     _TMR0IE	set	32661
   117   000000                     _LATC2	set	31834
   118   000000                     _LATD1	set	31841
   119   000000                     _LATD0	set	31840
   120   000000                     _LATD	set	3980
   121   000000                     _RA1	set	31745
   122   000000                     _RB0	set	31752
   123   000000                     _LATB0	set	31824
   124   000000                     _LATC1	set	31833
   125   000000                     _TRISA	set	3986
   126   000000                     _LATE	set	3981
   127   000000                     _TRISE	set	3990
   128   000000                     _RCSTA	set	4011
   129   000000                     _TXSTA	set	4012
   130   000000                     _SWDTEN	set	32392
   131   000000                     _OSCCON	set	4051
   132   000000                     _T0CON	set	4053
   133   000000                     _TXREG	set	4013
   134   000000                     _SPBRG	set	4015
   135   000000                     _BAUDCON	set	4024
   136   000000                     _ADCON2	set	4032
   137   000000                     _ADCON1	set	4033
   138   000000                     _ADRES	set	4035
   139   000000                     _ADCON0	set	4034
   140   000000                     _TO	set	32387
   141   000000                     _TMR0	set	4054
   142   000000                     _TMR0IF	set	32658
   143   000000                     _RC1	set	31761
   144   000000                     _RE0	set	31776
   145   00080B                     STR_1:
   146   00080B  46                 	db	70	;'F'
   147   00080C  61                 	db	97	;'a'
   148   00080D  69                 	db	105	;'i'
   149   00080E  6C                 	db	108	;'l'
   150   00080F  65                 	db	101	;'e'
   151   000810  64                 	db	100	;'d'
   152   000811  20                 	db	32
   153   000812  44                 	db	68	;'D'
   154   000813  48                 	db	72	;'H'
   155   000814  54                 	db	84	;'T'
   156   000815  31                 	db	49	;'1'
   157   000816  31                 	db	49	;'1'
   158   000817  00                 	db	0
   159   000818                     STR_3:
   160   000818  0A                 	db	10
   161   000819  47                 	db	71	;'G'
   162   00081A  6F                 	db	111	;'o'
   163   00081B  64                 	db	100	;'d'
   164   00081C  20                 	db	32
   165   00081D  69                 	db	105	;'i'
   166   00081E  73                 	db	115	;'s'
   167   00081F  20                 	db	32
   168   000820  67                 	db	103	;'g'
   169   000821  6F                 	db	111	;'o'
   170   000822  6F                 	db	111	;'o'
   171   000823  64                 	db	100	;'d'
   172   000824  00                 	db	0
   173   000825                     STR_12:
   174   000825  54                 	db	84	;'T'
   175   000826  3A                 	db	58	;':'
   176   000827  20                 	db	32
   177   000828  25                 	db	37
   178   000829  69                 	db	105	;'i'
   179   00082A  20                 	db	32
   180   00082B  43                 	db	67	;'C'
   181   00082C  0A                 	db	10
   182   00082D  00                 	db	0
   183   00082E                     STR_8:
   184   00082E  54                 	db	84	;'T'
   185   00082F  3A                 	db	58	;':'
   186   000830  20                 	db	32
   187   000831  25                 	db	37
   188   000832  69                 	db	105	;'i'
   189   000833  20                 	db	32
   190   000834  52                 	db	82	;'R'
   191   000835  61                 	db	97	;'a'
   192   000836  00                 	db	0
   193   000837                     STR_5:
   194   000837  48                 	db	72	;'H'
   195   000838  3A                 	db	58	;':'
   196   000839  20                 	db	32
   197   00083A  25                 	db	37
   198   00083B  69                 	db	105	;'i'
   199   00083C  20                 	db	32
   200   00083D  25                 	db	37
   201   00083E  63                 	db	99	;'c'
   202   00083F  00                 	db	0
   203   000840                     STR_4:
   204   000840  54                 	db	84	;'T'
   205   000841  3A                 	db	58	;':'
   206   000842  20                 	db	32
   207   000843  25                 	db	37
   208   000844  69                 	db	105	;'i'
   209   000845  20                 	db	32
   210   000846  43                 	db	67	;'C'
   211   000847  00                 	db	0
   212   000848                     STR_10:
   213   000848  54                 	db	84	;'T'
   214   000849  3A                 	db	58	;':'
   215   00084A  20                 	db	32
   216   00084B  25                 	db	37
   217   00084C  69                 	db	105	;'i'
   218   00084D  20                 	db	32
   219   00084E  46                 	db	70	;'F'
   220   00084F  00                 	db	0
   221   000850                     STR_6:
   222   000850  54                 	db	84	;'T'
   223   000851  3A                 	db	58	;':'
   224   000852  20                 	db	32
   225   000853  25                 	db	37
   226   000854  69                 	db	105	;'i'
   227   000855  20                 	db	32
   228   000856  4B                 	db	75	;'K'
   229   000857  00                 	db	0
   230   000858                     STR_2:
   231   000858  53                 	db	83	;'S'
   232   000859  65                 	db	101	;'e'
   233   00085A  6E                 	db	110	;'n'
   234   00085B  73                 	db	115	;'s'
   235   00085C  6F                 	db	111	;'o'
   236   00085D  72                 	db	114	;'r'
   237   00085E  73                 	db	115	;'s'
   238   00085F  00                 	db	0
   239   000860  00                 	db	0	; dummy byte at the end
   240   000000                     
   241                           ; #config settings
   242                           
   243                           	psect	cinit
   244   00155C                     __pcinit:
   245                           	callstack 0
   246   00155C                     start_initialization:
   247                           	callstack 0
   248   00155C                     __initialization:
   249                           	callstack 0
   250                           
   251                           ; Initialize objects allocated to COMRAM (1 bytes)
   252                           ; load TBLPTR registers with __pidataCOMRAM
   253   00155C  0E60               	movlw	low __pidataCOMRAM
   254   00155E  6EF6               	movwf	tblptrl,c
   255   001560  0E16               	movlw	high __pidataCOMRAM
   256   001562  6EF7               	movwf	tblptrh,c
   257   001564  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   258   001566  6EF8               	movwf	tblptru,c
   259   001568  0009               	tblrd		*+	;fetch initializer
   260   00156A  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   261                           
   262                           ; Clear objects allocated to BANK0 (3 bytes)
   263   00156E  0100               	movlb	0
   264   001570  6B86               	clrf	(__pbssBANK0+2)& (0+255),b
   265   001572  6B85               	clrf	(__pbssBANK0+1)& (0+255),b
   266   001574  6B84               	clrf	__pbssBANK0& (0+255),b
   267                           
   268                           ; Clear objects allocated to COMRAM (1 bytes)
   269   001576  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   270   001578                     end_of_initialization:
   271                           	callstack 0
   272   001578                     __end_of__initialization:
   273                           	callstack 0
   274   001578  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   275   00157A  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   276   00157C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   277   00157E  6EF8               	movwf	tblptru,c
   278   001580  0100               	movlb	0
   279   001582  EFC7  F009         	goto	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMRAM
   282   00004A                     __pbssCOMRAM:
   283                           	callstack 0
   284   00004A                     _Che:
   285                           	callstack 0
   286   00004A                     	ds	1
   287                           
   288                           	psect	dataCOMRAM
   289   00004B                     __pdataCOMRAM:
   290                           	callstack 0
   291   00004B                     _interfaz:
   292                           	callstack 0
   293   00004B                     	ds	1
   294                           
   295                           	psect	bssBANK0
   296   000084                     __pbssBANK0:
   297                           	callstack 0
   298   000084                     _Enable_sample:
   299                           	callstack 0
   300   000084                     	ds	1
   301   000085                     _Hum:
   302                           	callstack 0
   303   000085                     	ds	1
   304   000086                     _Temp:
   305                           	callstack 0
   306   000086                     	ds	1
   307                           
   308                           	psect	cstackBANK0
   309   000060                     __pcstackBANK0:
   310                           	callstack 0
   311   000060                     main@buffer_LCD_row_1:
   312                           	callstack 0
   313                           
   314                           ; 17 bytes @ 0x0
   315   000060                     	ds	17
   316   000071                     main@buffer_LCD_row_2:
   317                           	callstack 0
   318                           
   319                           ; 17 bytes @ 0x11
   320   000071                     	ds	17
   321   000082                     main@Temp_n1:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x22
   325   000082                     	ds	1
   326   000083                     main@Hum_n1:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x23
   330   000083                     	ds	1
   331                           
   332                           	psect	cstackCOMRAM
   333   000001                     __pcstackCOMRAM:
   334                           	callstack 0
   335   000001                     ??_RetardoLCD:
   336   000001                     ?___lwdiv:
   337                           	callstack 0
   338   000001                     ?___ftpack:
   339                           	callstack 0
   340   000001                     ConfiguraLCD@a:
   341                           	callstack 0
   342   000001                     Transmitir@BufferT:
   343                           	callstack 0
   344   000001                     ___lwdiv@dividend:
   345                           	callstack 0
   346   000001                     ___ftpack@arg:
   347                           	callstack 0
   348                           
   349                           ; 3 bytes @ 0x0
   350   000001                     	ds	1
   351   000002                     RetardoLCD@a:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x1
   355   000002                     	ds	1
   356   000003                     ??_EnviaDato:
   357   000003                     ___lwdiv@divisor:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x2
   361   000003                     	ds	1
   362   000004                     EnviaDato@a:
   363                           	callstack 0
   364   000004                     ___ftpack@exp:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x3
   368   000004                     	ds	1
   369   000005                     ??_init_configuration:
   370   000005                     EscribeLCD_c@a:
   371                           	callstack 0
   372   000005                     DireccionaLCD@a:
   373                           	callstack 0
   374   000005                     ___ftpack@sign:
   375                           	callstack 0
   376   000005                     ___lwdiv@quotient:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x4
   380   000005                     	ds	1
   381   000006                     ??___ftpack:
   382   000006                     MensajeLCD_Var@a:
   383                           	callstack 0
   384   000006                     show_temperature_LCD@buffer_LCD_row_1:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x5
   388   000006                     	ds	1
   389   000007                     ??_MensajeLCD_Var:
   390   000007                     show_temperature_LCD@buffer_LCD_row_2:
   391                           	callstack 0
   392   000007                     ___lwdiv@counter:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x6
   396   000007                     	ds	1
   397   000008                     ?___lwmod:
   398                           	callstack 0
   399   000008                     MensajeLCD_Var@counter:
   400                           	callstack 0
   401   000008                     show_temperature_LCD@Temp_n1:
   402                           	callstack 0
   403   000008                     ___lwmod@dividend:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x7
   407   000008                     	ds	1
   408   000009                     ??_welcome_operations:
   409   000009                     ?___lbtoft:
   410                           	callstack 0
   411   000009                     show_temperature_LCD@Hum_n1:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x8
   415   000009                     	ds	1
   416   00000A                     show_temperature_LCD@counter:
   417                           	callstack 0
   418   00000A                     ___lwmod@divisor:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x9
   422   00000A                     	ds	2
   423   00000C                     ___lbtoft@c:
   424                           	callstack 0
   425   00000C                     ___lwmod@counter:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0xB
   429   00000C                     	ds	1
   430   00000D                     ?_sprintf:
   431                           	callstack 0
   432   00000D                     ?___ftmul:
   433                           	callstack 0
   434   00000D                     sprintf@sp:
   435                           	callstack 0
   436   00000D                     ___ftmul@f1:
   437                           	callstack 0
   438                           
   439                           ; 3 bytes @ 0xC
   440   00000D                     	ds	1
   441   00000E                     sprintf@f:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0xD
   445   00000E                     	ds	2
   446   000010                     ___ftmul@f2:
   447                           	callstack 0
   448                           
   449                           ; 3 bytes @ 0xF
   450   000010                     	ds	3
   451   000013                     ??_sprintf:
   452   000013                     ??___ftmul:
   453                           
   454                           ; 1 bytes @ 0x12
   455   000013                     	ds	1
   456   000014                     sprintf@flag:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x13
   460   000014                     	ds	1
   461   000015                     sprintf@prec:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x14
   465   000015                     	ds	1
   466   000016                     sprintf@ap:
   467                           	callstack 0
   468   000016                     ___ftmul@exp:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x15
   472   000016                     	ds	1
   473   000017                     sprintf@val:
   474                           	callstack 0
   475   000017                     ___ftmul@f3_as_product:
   476                           	callstack 0
   477                           
   478                           ; 3 bytes @ 0x16
   479   000017                     	ds	2
   480   000019                     sprintf@c:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x18
   484   000019                     	ds	1
   485   00001A                     ??_send_temperature_RS232:
   486   00001A                     ___ftmul@cntr:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x19
   490   00001A                     	ds	1
   491   00001B                     ___ftmul@sign:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x1A
   495   00001B                     	ds	1
   496   00001C                     ?___ftdiv:
   497                           	callstack 0
   498   00001C                     ___ftdiv@f1:
   499                           	callstack 0
   500   00001C                     send_temperature_RS232@buffer_RS232:
   501                           	callstack 0
   502                           
   503                           ; 12 bytes @ 0x1B
   504   00001C                     	ds	3
   505   00001F                     ___ftdiv@f2:
   506                           	callstack 0
   507                           
   508                           ; 3 bytes @ 0x1E
   509   00001F                     	ds	3
   510   000022                     ??___ftdiv:
   511                           
   512                           ; 1 bytes @ 0x21
   513   000022                     	ds	3
   514   000025                     ___ftdiv@cntr:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x24
   518   000025                     	ds	1
   519   000026                     ___ftdiv@f3:
   520                           	callstack 0
   521                           
   522                           ; 3 bytes @ 0x25
   523   000026                     	ds	2
   524   000028                     send_temperature_RS232@counter:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x27
   528   000028                     	ds	1
   529   000029                     ___ftdiv@exp:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x28
   533   000029                     	ds	1
   534   00002A                     ___ftdiv@sign:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x29
   538   00002A                     	ds	1
   539   00002B                     ?___ftadd:
   540                           	callstack 0
   541   00002B                     ___ftadd@f1:
   542                           	callstack 0
   543                           
   544                           ; 3 bytes @ 0x2A
   545   00002B                     	ds	3
   546   00002E                     ___ftadd@f2:
   547                           	callstack 0
   548                           
   549                           ; 3 bytes @ 0x2D
   550   00002E                     	ds	3
   551   000031                     ??___ftadd:
   552                           
   553                           ; 1 bytes @ 0x30
   554   000031                     	ds	3
   555   000034                     ___ftadd@sign:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x33
   559   000034                     	ds	1
   560   000035                     ___ftadd@exp2:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x34
   564   000035                     	ds	1
   565   000036                     ___ftadd@exp1:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x35
   569   000036                     	ds	1
   570   000037                     ?___fttol:
   571                           	callstack 0
   572   000037                     ___fttol@f1:
   573                           	callstack 0
   574                           
   575                           ; 3 bytes @ 0x36
   576   000037                     	ds	4
   577   00003B                     ??___fttol:
   578                           
   579                           ; 1 bytes @ 0x3A
   580   00003B                     	ds	5
   581   000040                     ___fttol@sign1:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x3F
   585   000040                     	ds	1
   586   000041                     ___fttol@lval:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x40
   590   000041                     	ds	4
   591   000045                     ___fttol@exp1:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x44
   595   000045                     	ds	1
   596   000046                     choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x45
   600   000046                     	ds	1
   601   000047                     choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x46
   605   000047                     	ds	1
   606   000048                     choose_scale_temperature_and_fill_buffers@temp_converted:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x47
   610   000048                     	ds	2
   611   00004A                     
   612                           ; 1 bytes @ 0x49
   613 ;;
   614 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   615 ;;
   616 ;; *************** function _main *****************
   617 ;; Defined at:
   618 ;;		line 79 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  buffer_LCD_r   17   17[BANK0 ] unsigned char [17]
   623 ;;  buffer_LCD_r   17    0[BANK0 ] unsigned char [17]
   624 ;;  Hum_n1          1   35[BANK0 ] unsigned char 
   625 ;;  Temp_n1         1   34[BANK0 ] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 3F/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   635 ;;      Params:         0       0       0       0       0       0       0       0       0
   636 ;;      Locals:         0      36       0       0       0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0
   638 ;;      Totals:         0      36       0       0       0       0       0       0       0
   639 ;;Total ram usage:       36 bytes
   640 ;; Hardware stack levels required when called: 6
   641 ;; This function calls:
   642 ;;		_check_potentiometer_voltaje
   643 ;;		_choose_scale_temperature_and_fill_buffers
   644 ;;		_init_configuration
   645 ;;		_save_temperature_c_EEPROM
   646 ;;		_send_temperature_RS232
   647 ;;		_show_temperature_LCD
   648 ;;		_show_temperature_c_RGB
   649 ;;		_welcome_operations
   650 ;; This function is called by:
   651 ;;		Startup code after reset
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text0
   656   00138E                     __ptext0:
   657                           	callstack 0
   658   00138E                     _main:
   659                           	callstack 25
   660                           
   661                           ;LAB05.c: 80: init_configuration();
   662                           
   663                           ;incstack = 0
   664   00138E  EC1E  F009         	call	_init_configuration	;wreg free
   665                           
   666                           ;LAB05.c: 81: welcome_operations();
   667   001392  EC8E  F00A         	call	_welcome_operations	;wreg free
   668                           
   669                           ;LAB05.c: 84: SWDTEN = 1;
   670   001396  80D1               	bsf	4049,0,c	;volatile
   671                           
   672                           ;LAB05.c: 88: unsigned char buffer_LCD_row_1[17];;LAB05.c: 89: unsigned char buffer_LCD_
      +                          row_2[17];;LAB05.c: 92: unsigned char Temp_n1=255;
   673   001398  0100               	movlb	0	; () banked
   674   00139A  6982               	setf	main@Temp_n1& (0+255),b
   675                           
   676                           ; BSR set to: 0
   677                           ;LAB05.c: 93: unsigned char Hum_n1=255;
   678   00139C  6983               	setf	main@Hum_n1& (0+255),b
   679   00139E                     l2568:
   680                           
   681                           ; BSR set to: 0
   682                           ;LAB05.c: 97: if(Enable_sample){
   683   00139E  5184               	movf	_Enable_sample& (0+255),w,b
   684   0013A0  B4D8               	btfsc	status,2,c
   685   0013A2  D7FD               	goto	l2568
   686                           
   687                           ; BSR set to: 0
   688                           ;LAB05.c: 99: Temp++;
   689   0013A4  2B86               	incf	_Temp& (0+255),f,b
   690                           
   691                           ; BSR set to: 0
   692                           ;LAB05.c: 100: if(Temp > 50) Temp = 18;
   693   0013A6  0E32               	movlw	50
   694   0013A8  6586               	cpfsgt	_Temp& (0+255),b
   695   0013AA  D002               	goto	l237
   696                           
   697                           ; BSR set to: 0
   698   0013AC  0E12               	movlw	18
   699   0013AE  6F86               	movwf	_Temp& (0+255),b
   700   0013B0                     l237:
   701                           
   702                           ; BSR set to: 0
   703   0013B0  0004               	clrwdt		;# 
   704                           
   705                           ;LAB05.c: 106: send_temperature_RS232();
   706   0013B2  EC22  F00A         	call	_send_temperature_RS232	;wreg free
   707                           
   708                           ;LAB05.c: 107: save_temperature_c_EEPROM();
   709   0013B6  EC2F  F00B         	call	_save_temperature_c_EEPROM	;wreg free
   710                           
   711                           ;LAB05.c: 108: choose_scale_temperature_and_fill_buffers(buffer_LCD_row_1,buffer_LCD_row
      +                          _2);
   712   0013BA  0E60               	movlw	low main@buffer_LCD_row_1
   713   0013BC  6E46               	movwf	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1^0,c
   714   0013BE  0E71               	movlw	low main@buffer_LCD_row_2
   715   0013C0  6E47               	movwf	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2^0,c
   716   0013C2  EC31  F004         	call	_choose_scale_temperature_and_fill_buffers	;wreg free
   717                           
   718                           ;LAB05.c: 109: show_temperature_c_RGB();
   719   0013C6  EC5E  F009         	call	_show_temperature_c_RGB	;wreg free
   720                           
   721                           ; BSR set to: 0
   722                           ;LAB05.c: 110: show_temperature_LCD(buffer_LCD_row_1, buffer_LCD_row_2, Temp_n1, Hum_n1)
      +                          ;
   723   0013CA  0E60               	movlw	low main@buffer_LCD_row_1
   724   0013CC  6E06               	movwf	show_temperature_LCD@buffer_LCD_row_1^0,c
   725   0013CE  0E71               	movlw	low main@buffer_LCD_row_2
   726   0013D0  6E07               	movwf	show_temperature_LCD@buffer_LCD_row_2^0,c
   727   0013D2  C082  F008         	movff	main@Temp_n1,show_temperature_LCD@Temp_n1
   728   0013D6  C083  F009         	movff	main@Hum_n1,show_temperature_LCD@Hum_n1
   729   0013DA  ECDC  F008         	call	_show_temperature_LCD	;wreg free
   730                           
   731                           ;LAB05.c: 111: check_potentiometer_voltaje();
   732   0013DE  ECE7  F00A         	call	_check_potentiometer_voltaje	;wreg free
   733                           
   734                           ;LAB05.c: 112: Enable_sample = 0;
   735   0013E2  0E00               	movlw	0
   736   0013E4  0100               	movlb	0	; () banked
   737   0013E6  6F84               	movwf	_Enable_sample& (0+255),b
   738                           
   739                           ; BSR set to: 0
   740                           ;LAB05.c: 115: Temp_n1=Temp;
   741   0013E8  C086  F082         	movff	_Temp,main@Temp_n1
   742                           
   743                           ; BSR set to: 0
   744                           ;LAB05.c: 116: Hum_n1=Hum;
   745   0013EC  0E00               	movlw	0
   746   0013EE  6F83               	movwf	main@Hum_n1& (0+255),b
   747   0013F0  D7D6               	goto	l2568
   748   0013F2                     __end_of_main:
   749                           	callstack 0
   750                           
   751 ;; *************** function _welcome_operations *****************
   752 ;; Defined at:
   753 ;;		line 194 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   767 ;;      Params:         0       0       0       0       0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0       0       0
   769 ;;      Temps:          2       0       0       0       0       0       0       0       0
   770 ;;      Totals:         2       0       0       0       0       0       0       0       0
   771 ;;Total ram usage:        2 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; Hardware stack levels required when called: 5
   774 ;; This function calls:
   775 ;;		_BorraLCD
   776 ;;		_MensajeLCD_Var
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text1
   783   00151C                     __ptext1:
   784                           	callstack 0
   785   00151C                     _welcome_operations:
   786                           	callstack 25
   787                           
   788                           ;LAB05.c: 197: if(TO==0){
   789                           
   790                           ; BSR set to: 0
   791                           ;incstack = 0
   792   00151C  B6D0               	btfsc	4048,3,c	;volatile
   793   00151E  D006               	goto	l2428
   794                           
   795                           ;LAB05.c: 198: TO=1;
   796   001520  86D0               	bsf	4048,3,c	;volatile
   797                           
   798                           ;LAB05.c: 199: MensajeLCD_Var("Failed DHT11");
   799   001522  0E0B               	movlw	low STR_1
   800   001524  6E06               	movwf	MensajeLCD_Var@a^0,c
   801   001526  EC9A  F008         	call	_MensajeLCD_Var	;wreg free
   802   00152A  0003               	sleep		;# 
   803   00152C                     l2428:
   804                           
   805                           ;LAB05.c: 201: };LAB05.c: 203: BorraLCD();
   806   00152C  EC18  F00B         	call	_BorraLCD	;wreg free
   807                           
   808                           ;LAB05.c: 204: MensajeLCD_Var("Sensors");
   809   001530  0E58               	movlw	low STR_2
   810   001532  6E06               	movwf	MensajeLCD_Var@a^0,c
   811   001534  EC9A  F008         	call	_MensajeLCD_Var	;wreg free
   812                           
   813                           ;LAB05.c: 205: MensajeLCD_Var("\nGod is good");
   814   001538  0E18               	movlw	low STR_3
   815   00153A  6E06               	movwf	MensajeLCD_Var@a^0,c
   816   00153C  EC9A  F008         	call	_MensajeLCD_Var	;wreg free
   817                           
   818                           ;LAB05.c: 206: _delay((unsigned long)((1000)*(8000000/4000.0)));
   819   001540  0E0B               	movlw	11
   820   001542  6E0A               	movwf	(??_welcome_operations+1)^0,c
   821   001544  0E26               	movlw	38
   822   001546  6E09               	movwf	??_welcome_operations^0,c
   823   001548  0E5E               	movlw	94
   824   00154A                     u2097:
   825   00154A  2EE8               	decfsz	wreg,f,c
   826   00154C  D7FE               	bra	u2097
   827   00154E  2E09               	decfsz	??_welcome_operations^0,f,c
   828   001550  D7FC               	bra	u2097
   829   001552  2E0A               	decfsz	(??_welcome_operations+1)^0,f,c
   830   001554  D7FA               	bra	u2097
   831                           
   832                           ;LAB05.c: 207: BorraLCD();
   833   001556  EC18  F00B         	call	_BorraLCD	;wreg free
   834   00155A  0012               	return		;funcret
   835   00155C                     __end_of_welcome_operations:
   836                           	callstack 0
   837                           
   838 ;; *************** function _MensajeLCD_Var *****************
   839 ;; Defined at:
   840 ;;		line 232 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  a               1    5[COMRAM] PTR unsigned char 
   843 ;;		 -> STR_3(13), STR_2(8), STR_1(13), 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  counter         1    7[COMRAM] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   855 ;;      Params:         1       0       0       0       0       0       0       0       0
   856 ;;      Locals:         1       0       0       0       0       0       0       0       0
   857 ;;      Temps:          1       0       0       0       0       0       0       0       0
   858 ;;      Totals:         3       0       0       0       0       0       0       0       0
   859 ;;Total ram usage:        3 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 4
   862 ;; This function calls:
   863 ;;		_BorraLCD
   864 ;;		_DireccionaLCD
   865 ;;		_EscribeLCD_c
   866 ;; This function is called by:
   867 ;;		_welcome_operations
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text2
   872   001134                     __ptext2:
   873                           	callstack 0
   874   001134                     _MensajeLCD_Var:
   875                           	callstack 25
   876                           
   877                           ;LibLCDXC8.h: 237: unsigned char counter=0;
   878                           
   879                           ;incstack = 0
   880   001134  0E00               	movlw	0
   881   001136  6E08               	movwf	MensajeLCD_Var@counter^0,c
   882                           
   883                           ;LibLCDXC8.h: 238: while(a[counter]!='\0' && counter<=255){
   884   001138  D032               	goto	l2076
   885   00113A                     l2058:
   886                           
   887                           ;LibLCDXC8.h: 240: if(a[counter]=='\n'){
   888   00113A  5006               	movf	MensajeLCD_Var@a^0,w,c
   889   00113C  2408               	addwf	MensajeLCD_Var@counter^0,w,c
   890   00113E  6E07               	movwf	??_MensajeLCD_Var^0,c
   891   001140  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   892   001144                     	if	1	;There is more than 1 active tblptr byte
   893   001144  0E08               	movlw	high __smallconst
   894   001146  6EF7               	movwf	tblptrh,c
   895   001148                     	endif
   896   001148                     	if	0	;tblptru may be non-zero
   897   001148                     	endif
   898   001148                     	if	0	;tblptru may be non-zero
   899   001148                     	endif
   900   001148  0008               	tblrd		*
   901   00114A  50F5               	movf	tablat,w,c
   902   00114C  0A0A               	xorlw	10
   903   00114E  A4D8               	btfss	status,2,c
   904   001150  D004               	goto	l2064
   905                           
   906                           ;LibLCDXC8.h: 241: DireccionaLCD(0xC0);
   907   001152  0EC0               	movlw	192
   908   001154  EC0D  F00B         	call	_DireccionaLCD
   909                           
   910                           ;LibLCDXC8.h: 242: counter++;
   911   001158  2A08               	incf	MensajeLCD_Var@counter^0,f,c
   912   00115A                     l2064:
   913                           
   914                           ;LibLCDXC8.h: 243: };LibLCDXC8.h: 245: if((counter+1)%32==0){
   915   00115A  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
   916   00115E  0E01               	movlw	1
   917   001160  2607               	addwf	??_MensajeLCD_Var^0,f,c
   918   001162  0E1F               	movlw	31
   919   001164  1607               	andwf	??_MensajeLCD_Var^0,f,c
   920   001166  A4D8               	btfss	status,2,c
   921   001168  D003               	goto	l2068
   922                           
   923                           ;LibLCDXC8.h: 246: BorraLCD();
   924   00116A  EC18  F00B         	call	_BorraLCD	;wreg free
   925                           
   926                           ;LibLCDXC8.h: 247: }
   927   00116E  D00B               	goto	l2072
   928   001170                     l2068:
   929                           
   930                           ;LibLCDXC8.h: 248: else if((counter+1)%16==0){
   931   001170  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
   932   001174  0E01               	movlw	1
   933   001176  2607               	addwf	??_MensajeLCD_Var^0,f,c
   934   001178  0E0F               	movlw	15
   935   00117A  1607               	andwf	??_MensajeLCD_Var^0,f,c
   936   00117C  A4D8               	btfss	status,2,c
   937   00117E  D003               	goto	l2072
   938                           
   939                           ;LibLCDXC8.h: 249: DireccionaLCD(0xC0);
   940   001180  0EC0               	movlw	192
   941   001182  EC0D  F00B         	call	_DireccionaLCD
   942   001186                     l2072:
   943                           
   944                           ;LibLCDXC8.h: 250: };LibLCDXC8.h: 252: EscribeLCD_c(a[counter]);
   945   001186  5006               	movf	MensajeLCD_Var@a^0,w,c
   946   001188  2408               	addwf	MensajeLCD_Var@counter^0,w,c
   947   00118A  6E07               	movwf	??_MensajeLCD_Var^0,c
   948   00118C  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   949   001190                     	if	1	;There is more than 1 active tblptr byte
   950   001190  0E08               	movlw	high __smallconst
   951   001192  6EF7               	movwf	tblptrh,c
   952   001194                     	endif
   953   001194                     	if	0	;tblptru may be non-zero
   954   001194                     	endif
   955   001194                     	if	0	;tblptru may be non-zero
   956   001194                     	endif
   957   001194  0008               	tblrd		*
   958   001196  50F5               	movf	tablat,w,c
   959   001198  EC02  F00B         	call	_EscribeLCD_c
   960                           
   961                           ;LibLCDXC8.h: 253: counter++;
   962   00119C  2A08               	incf	MensajeLCD_Var@counter^0,f,c
   963   00119E                     l2076:
   964   00119E  5006               	movf	MensajeLCD_Var@a^0,w,c
   965   0011A0  2408               	addwf	MensajeLCD_Var@counter^0,w,c
   966   0011A2  6E07               	movwf	??_MensajeLCD_Var^0,c
   967   0011A4  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   968   0011A8                     	if	1	;There is more than 1 active tblptr byte
   969   0011A8  0E08               	movlw	high __smallconst
   970   0011AA  6EF7               	movwf	tblptrh,c
   971   0011AC                     	endif
   972   0011AC                     	if	0	;tblptru may be non-zero
   973   0011AC                     	endif
   974   0011AC                     	if	0	;tblptru may be non-zero
   975   0011AC                     	endif
   976   0011AC  0008               	tblrd		*
   977   0011AE  50F5               	movf	tablat,w,c
   978   0011B0  0900               	iorlw	0
   979   0011B2  B4D8               	btfsc	status,2,c
   980   0011B4  0012               	return	
   981   0011B6  D7C1               	goto	l2058
   982   0011B8                     __end_of_MensajeLCD_Var:
   983                           	callstack 0
   984                           
   985 ;; *************** function _show_temperature_c_RGB *****************
   986 ;; Defined at:
   987 ;;		line 231 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 3F/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1001 ;;      Params:         0       0       0       0       0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1004 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1005 ;;Total ram usage:        0 bytes
  1006 ;; Hardware stack levels used: 1
  1007 ;; Hardware stack levels required when called: 1
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text3
  1016   0012BC                     __ptext3:
  1017                           	callstack 0
  1018   0012BC                     _show_temperature_c_RGB:
  1019                           	callstack 29
  1020                           
  1021                           ;LAB05.c: 232: if(Temp<22){
  1022                           
  1023                           ;incstack = 0
  1024   0012BC  0E16               	movlw	22
  1025   0012BE  0100               	movlb	0	; () banked
  1026   0012C0  6186               	cpfslt	_Temp& (0+255),b
  1027   0012C2  D004               	goto	l2494
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;LAB05.c: 234: RE0=1;
  1031   0012C4  8084               	bsf	3972,0,c	;volatile
  1032                           
  1033                           ;LAB05.c: 235: RE2=1;
  1034   0012C6  8484               	bsf	3972,2,c	;volatile
  1035                           
  1036                           ;LAB05.c: 236: RE1=1;
  1037   0012C8  8284               	bsf	3972,1,c	;volatile
  1038                           
  1039                           ;LAB05.c: 237: }
  1040   0012CA  0012               	return	
  1041   0012CC                     l2494:
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;LAB05.c: 238: else if(Temp<25) {
  1045   0012CC  0E19               	movlw	25
  1046   0012CE  6186               	cpfslt	_Temp& (0+255),b
  1047   0012D0  D004               	goto	l2498
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;LAB05.c: 240: RE0=0;
  1051   0012D2  9084               	bcf	3972,0,c	;volatile
  1052                           
  1053                           ;LAB05.c: 241: RE2=1;
  1054   0012D4  8484               	bsf	3972,2,c	;volatile
  1055                           
  1056                           ;LAB05.c: 242: RE1=0;
  1057   0012D6  9284               	bcf	3972,1,c	;volatile
  1058                           
  1059                           ;LAB05.c: 243: }
  1060   0012D8  0012               	return	
  1061   0012DA                     l2498:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;LAB05.c: 244: else if(Temp<28){
  1065   0012DA  0E1C               	movlw	28
  1066   0012DC  6186               	cpfslt	_Temp& (0+255),b
  1067   0012DE  D004               	goto	l2502
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;LAB05.c: 246: RE0=1;
  1071   0012E0  8084               	bsf	3972,0,c	;volatile
  1072                           
  1073                           ;LAB05.c: 247: RE2=1;
  1074   0012E2  8484               	bsf	3972,2,c	;volatile
  1075                           
  1076                           ;LAB05.c: 248: RE1=0;
  1077   0012E4  9284               	bcf	3972,1,c	;volatile
  1078                           
  1079                           ;LAB05.c: 250: }
  1080   0012E6  0012               	return	
  1081   0012E8                     l2502:
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;LAB05.c: 251: else if(Temp<31){
  1085   0012E8  0E1F               	movlw	31
  1086   0012EA  6186               	cpfslt	_Temp& (0+255),b
  1087   0012EC  D004               	goto	l2506
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;LAB05.c: 253: RE0=1;
  1091   0012EE  8084               	bsf	3972,0,c	;volatile
  1092                           
  1093                           ;LAB05.c: 254: RE2=0;
  1094   0012F0  9484               	bcf	3972,2,c	;volatile
  1095                           
  1096                           ;LAB05.c: 255: RE1=0;
  1097   0012F2  9284               	bcf	3972,1,c	;volatile
  1098                           
  1099                           ;LAB05.c: 256: }
  1100   0012F4  0012               	return	
  1101   0012F6                     l2506:
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;LAB05.c: 257: else if(Temp<34){
  1105   0012F6  0E22               	movlw	34
  1106   0012F8  6186               	cpfslt	_Temp& (0+255),b
  1107   0012FA  D004               	goto	l2510
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;LAB05.c: 259: RE0=1;
  1111   0012FC  8084               	bsf	3972,0,c	;volatile
  1112                           
  1113                           ;LAB05.c: 260: RE2=0;
  1114   0012FE  9484               	bcf	3972,2,c	;volatile
  1115                           
  1116                           ;LAB05.c: 261: RE1=1;
  1117   001300  8284               	bsf	3972,1,c	;volatile
  1118                           
  1119                           ;LAB05.c: 262: }
  1120   001302  0012               	return	
  1121   001304                     l2510:
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;LAB05.c: 263: else if(Temp<37){
  1125   001304  0E25               	movlw	37
  1126   001306  6186               	cpfslt	_Temp& (0+255),b
  1127   001308  D004               	goto	l2514
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;LAB05.c: 265: RE0=0;
  1131   00130A  9084               	bcf	3972,0,c	;volatile
  1132                           
  1133                           ;LAB05.c: 266: RE2=0;
  1134   00130C  9484               	bcf	3972,2,c	;volatile
  1135                           
  1136                           ;LAB05.c: 267: RE1=1;
  1137   00130E  8284               	bsf	3972,1,c	;volatile
  1138                           
  1139                           ;LAB05.c: 268: }
  1140   001310  0012               	return	
  1141   001312                     l2514:
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;LAB05.c: 269: else if(Temp<40){
  1145   001312  0E28               	movlw	40
  1146   001314  6186               	cpfslt	_Temp& (0+255),b
  1147   001316  D004               	goto	l273
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;LAB05.c: 271: RE0=0;
  1151   001318  9084               	bcf	3972,0,c	;volatile
  1152                           
  1153                           ;LAB05.c: 272: RE2=1;
  1154   00131A  8484               	bsf	3972,2,c	;volatile
  1155                           
  1156                           ;LAB05.c: 273: RE1=1;
  1157   00131C  8284               	bsf	3972,1,c	;volatile
  1158                           
  1159                           ;LAB05.c: 274: }
  1160   00131E  0012               	return	
  1161   001320                     l273:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;LAB05.c: 275: else{;LAB05.c: 277: RE0=0;
  1165   001320  9084               	bcf	3972,0,c	;volatile
  1166                           
  1167                           ;LAB05.c: 278: RE2=0;
  1168   001322  9484               	bcf	3972,2,c	;volatile
  1169                           
  1170                           ;LAB05.c: 279: RE1=0;
  1171   001324  9284               	bcf	3972,1,c	;volatile
  1172                           
  1173                           ; BSR set to: 0
  1174   001326  0012               	return		;funcret
  1175   001328                     __end_of_show_temperature_c_RGB:
  1176                           	callstack 0
  1177                           
  1178 ;; *************** function _show_temperature_LCD *****************
  1179 ;; Defined at:
  1180 ;;		line 332 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;  buffer_LCD_r    1    5[COMRAM] PTR unsigned char 
  1183 ;;		 -> main@buffer_LCD_row_1(17), 
  1184 ;;  buffer_LCD_r    1    6[COMRAM] PTR unsigned char 
  1185 ;;		 -> main@buffer_LCD_row_2(17), 
  1186 ;;  Temp_n1         1    7[COMRAM] unsigned char 
  1187 ;;  Hum_n1          1    8[COMRAM] unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  counter         1    9[COMRAM] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 3F/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1199 ;;      Params:         4       0       0       0       0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1202 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1203 ;;Total ram usage:        5 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; Hardware stack levels required when called: 4
  1206 ;; This function calls:
  1207 ;;		_DireccionaLCD
  1208 ;;		_EscribeLCD_c
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text4
  1215   0011B8                     __ptext4:
  1216                           	callstack 0
  1217   0011B8                     _show_temperature_LCD:
  1218                           	callstack 26
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;LAB05.c: 333: unsigned char counter=0;
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;incstack = 0
  1225   0011B8  0E00               	movlw	0
  1226   0011BA  6E0A               	movwf	show_temperature_LCD@counter^0,c
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;LAB05.c: 335: if(Temp_n1!=Temp){
  1230   0011BC  5186               	movf	_Temp& (0+255),w,b
  1231   0011BE  1808               	xorwf	show_temperature_LCD@Temp_n1^0,w,c
  1232   0011C0  B4D8               	btfsc	status,2,c
  1233   0011C2  D01B               	goto	u1980
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;LAB05.c: 336: DireccionaLCD(0x80);
  1237   0011C4  0E80               	movlw	128
  1238   0011C6  EC0D  F00B         	call	_DireccionaLCD
  1239                           
  1240                           ;LAB05.c: 338: while (buffer_LCD_row_1[counter]!='\0') {
  1241   0011CA  D008               	goto	l2528
  1242   0011CC                     l2524:
  1243                           
  1244                           ;LAB05.c: 339: EscribeLCD_c(buffer_LCD_row_1[counter]);
  1245   0011CC  5006               	movf	show_temperature_LCD@buffer_LCD_row_1^0,w,c
  1246   0011CE  240A               	addwf	show_temperature_LCD@counter^0,w,c
  1247   0011D0  6ED9               	movwf	fsr2l,c
  1248   0011D2  6ADA               	clrf	fsr2h,c
  1249   0011D4  50DF               	movf	indf2,w,c
  1250   0011D6  EC02  F00B         	call	_EscribeLCD_c
  1251                           
  1252                           ;LAB05.c: 340: counter++;
  1253   0011DA  2A0A               	incf	show_temperature_LCD@counter^0,f,c
  1254   0011DC                     l2528:
  1255   0011DC  5006               	movf	show_temperature_LCD@buffer_LCD_row_1^0,w,c
  1256   0011DE  240A               	addwf	show_temperature_LCD@counter^0,w,c
  1257   0011E0  6ED9               	movwf	fsr2l,c
  1258   0011E2  6ADA               	clrf	fsr2h,c
  1259   0011E4  50DF               	movf	indf2,w,c
  1260   0011E6  B4D8               	btfsc	status,2,c
  1261   0011E8  D005               	goto	l2534
  1262   0011EA  D7F0               	goto	l2524
  1263   0011EC                     l2530:
  1264                           
  1265                           ;LAB05.c: 344: EscribeLCD_c(' ');
  1266   0011EC  0E20               	movlw	32
  1267   0011EE  EC02  F00B         	call	_EscribeLCD_c
  1268                           
  1269                           ;LAB05.c: 345: counter++;
  1270   0011F2  2A0A               	incf	show_temperature_LCD@counter^0,f,c
  1271   0011F4                     l2534:
  1272   0011F4  0E0F               	movlw	15
  1273   0011F6  640A               	cpfsgt	show_temperature_LCD@counter^0,c
  1274   0011F8  D7F9               	goto	l2530
  1275   0011FA                     u1980:
  1276                           
  1277                           ;LAB05.c: 346: };LAB05.c: 347: };LAB05.c: 349: counter=0;
  1278   0011FA  0E00               	movlw	0
  1279   0011FC  6E0A               	movwf	show_temperature_LCD@counter^0,c
  1280                           
  1281                           ;LAB05.c: 351: if(Hum_n1!=Hum){
  1282   0011FE  5009               	movf	show_temperature_LCD@Hum_n1^0,w,c
  1283   001200  B4D8               	btfsc	status,2,c
  1284   001202  0012               	return	
  1285                           
  1286                           ;LAB05.c: 352: DireccionaLCD(0xC0);
  1287   001204  0EC0               	movlw	192
  1288   001206  EC0D  F00B         	call	_DireccionaLCD
  1289                           
  1290                           ;LAB05.c: 355: while (buffer_LCD_row_2[counter]!='\0') {
  1291   00120A  D008               	goto	l2544
  1292   00120C                     l2540:
  1293                           
  1294                           ;LAB05.c: 356: EscribeLCD_c(buffer_LCD_row_2[counter]);
  1295   00120C  5007               	movf	show_temperature_LCD@buffer_LCD_row_2^0,w,c
  1296   00120E  240A               	addwf	show_temperature_LCD@counter^0,w,c
  1297   001210  6ED9               	movwf	fsr2l,c
  1298   001212  6ADA               	clrf	fsr2h,c
  1299   001214  50DF               	movf	indf2,w,c
  1300   001216  EC02  F00B         	call	_EscribeLCD_c
  1301                           
  1302                           ;LAB05.c: 357: counter++;
  1303   00121A  2A0A               	incf	show_temperature_LCD@counter^0,f,c
  1304   00121C                     l2544:
  1305   00121C  5007               	movf	show_temperature_LCD@buffer_LCD_row_2^0,w,c
  1306   00121E  240A               	addwf	show_temperature_LCD@counter^0,w,c
  1307   001220  6ED9               	movwf	fsr2l,c
  1308   001222  6ADA               	clrf	fsr2h,c
  1309   001224  50DF               	movf	indf2,w,c
  1310   001226  B4D8               	btfsc	status,2,c
  1311   001228  D005               	goto	l2550
  1312   00122A  D7F0               	goto	l2540
  1313   00122C                     l2546:
  1314                           
  1315                           ;LAB05.c: 362: EscribeLCD_c(' ');
  1316   00122C  0E20               	movlw	32
  1317   00122E  EC02  F00B         	call	_EscribeLCD_c
  1318                           
  1319                           ;LAB05.c: 363: counter++;
  1320   001232  2A0A               	incf	show_temperature_LCD@counter^0,f,c
  1321   001234                     l2550:
  1322   001234  0E0F               	movlw	15
  1323   001236  640A               	cpfsgt	show_temperature_LCD@counter^0,c
  1324   001238  D7F9               	goto	l2546
  1325   00123A  0012               	return	
  1326   00123C                     __end_of_show_temperature_LCD:
  1327                           	callstack 0
  1328                           
  1329 ;; *************** function _EscribeLCD_c *****************
  1330 ;; Defined at:
  1331 ;;		line 136 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  a               1    wreg     unsigned char 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  a               1    4[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1345 ;;      Params:         0       0       0       0       0       0       0       0       0
  1346 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1348 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1349 ;;Total ram usage:        1 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 3
  1352 ;; This function calls:
  1353 ;;		_EnviaDato
  1354 ;;		_HabilitaLCD
  1355 ;;		_RetardoLCD
  1356 ;; This function is called by:
  1357 ;;		_MensajeLCD_Var
  1358 ;;		_show_temperature_LCD
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text5
  1363   001604                     __ptext5:
  1364                           	callstack 0
  1365   001604                     _EscribeLCD_c:
  1366                           	callstack 25
  1367                           
  1368                           ;incstack = 0
  1369                           ;EscribeLCD_c@a stored from wreg
  1370   001604  6E05               	movwf	EscribeLCD_c@a^0,c
  1371                           
  1372                           ;LibLCDXC8.h: 140: LATD0=1;
  1373   001606  808C               	bsf	3980,0,c	;volatile
  1374                           
  1375                           ;LibLCDXC8.h: 141: EnviaDato(a);
  1376   001608  5005               	movf	EscribeLCD_c@a^0,w,c
  1377   00160A  EC4A  F00A         	call	_EnviaDato
  1378                           
  1379                           ;LibLCDXC8.h: 142: HabilitaLCD();
  1380   00160E  EC22  F00B         	call	_HabilitaLCD	;wreg free
  1381                           
  1382                           ;LibLCDXC8.h: 143: RetardoLCD(4);
  1383   001612  0E04               	movlw	4
  1384   001614  EC94  F009         	call	_RetardoLCD
  1385   001618  0012               	return		;funcret
  1386   00161A                     __end_of_EscribeLCD_c:
  1387                           	callstack 0
  1388                           
  1389 ;; *************** function _DireccionaLCD *****************
  1390 ;; Defined at:
  1391 ;;		line 257 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  a               1    wreg     unsigned char 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  a               1    4[COMRAM] unsigned char 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      void 
  1398 ;; Registers used:
  1399 ;;		wreg, status,2, status,0, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1405 ;;      Params:         0       0       0       0       0       0       0       0       0
  1406 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1408 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1409 ;;Total ram usage:        1 bytes
  1410 ;; Hardware stack levels used: 1
  1411 ;; Hardware stack levels required when called: 3
  1412 ;; This function calls:
  1413 ;;		_EnviaDato
  1414 ;;		_HabilitaLCD
  1415 ;;		_RetardoLCD
  1416 ;; This function is called by:
  1417 ;;		_MensajeLCD_Var
  1418 ;;		_show_temperature_LCD
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text6
  1423   00161A                     __ptext6:
  1424                           	callstack 0
  1425   00161A                     _DireccionaLCD:
  1426                           	callstack 25
  1427                           
  1428                           ;incstack = 0
  1429                           ;DireccionaLCD@a stored from wreg
  1430   00161A  6E05               	movwf	DireccionaLCD@a^0,c
  1431                           
  1432                           ;LibLCDXC8.h: 260: LATD0=0;
  1433   00161C  908C               	bcf	3980,0,c	;volatile
  1434                           
  1435                           ;LibLCDXC8.h: 261: EnviaDato(a);
  1436   00161E  5005               	movf	DireccionaLCD@a^0,w,c
  1437   001620  EC4A  F00A         	call	_EnviaDato
  1438                           
  1439                           ;LibLCDXC8.h: 262: HabilitaLCD();
  1440   001624  EC22  F00B         	call	_HabilitaLCD	;wreg free
  1441                           
  1442                           ;LibLCDXC8.h: 263: RetardoLCD(4);
  1443   001628  0E04               	movlw	4
  1444   00162A  EC94  F009         	call	_RetardoLCD
  1445   00162E  0012               	return		;funcret
  1446   001630                     __end_of_DireccionaLCD:
  1447                           	callstack 0
  1448                           
  1449 ;; *************** function _send_temperature_RS232 *****************
  1450 ;; Defined at:
  1451 ;;		line 319 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  buffer_RS232   12   27[COMRAM] unsigned char [12]
  1456 ;;  counter         1   39[COMRAM] unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1466 ;;      Params:         0       0       0       0       0       0       0       0       0
  1467 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1468 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1469 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1470 ;;Total ram usage:       15 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; Hardware stack levels required when called: 3
  1473 ;; This function calls:
  1474 ;;		_Transmitir
  1475 ;;		_sprintf
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text7
  1482   001444                     __ptext7:
  1483                           	callstack 0
  1484   001444                     _send_temperature_RS232:
  1485                           	callstack 27
  1486                           
  1487                           ;LAB05.c: 320: unsigned char counter=0;
  1488                           
  1489                           ;incstack = 0
  1490   001444  0E00               	movlw	0
  1491   001446  6E28               	movwf	send_temperature_RS232@counter^0,c
  1492                           
  1493                           ;LAB05.c: 321: unsigned char buffer_RS232[12];;LAB05.c: 322: sprintf(buffer_RS232, "T: %
      +                          i C\n",Temp);
  1494   001448  0E1C               	movlw	low send_temperature_RS232@buffer_RS232
  1495   00144A  6E0D               	movwf	sprintf@sp^0,c
  1496   00144C  0E25               	movlw	low STR_12
  1497   00144E  6E0E               	movwf	sprintf@f^0,c
  1498   001450  C086  F00F         	movff	_Temp,?_sprintf+2
  1499   001454  6A10               	clrf	(?_sprintf+3)^0,c
  1500   001456  ECF9  F005         	call	_sprintf	;wreg free
  1501                           
  1502                           ;LAB05.c: 324: while(buffer_RS232[counter]!='\0'){
  1503   00145A  D008               	goto	l2448
  1504   00145C                     l2444:
  1505                           
  1506                           ;LAB05.c: 325: Transmitir(buffer_RS232[counter]);
  1507   00145C  5028               	movf	send_temperature_RS232@counter^0,w,c
  1508   00145E  0F1C               	addlw	low send_temperature_RS232@buffer_RS232
  1509   001460  6ED9               	movwf	fsr2l,c
  1510   001462  6ADA               	clrf	fsr2h,c
  1511   001464  50DF               	movf	indf2,w,c
  1512   001466  EC29  F00B         	call	_Transmitir
  1513                           
  1514                           ;LAB05.c: 326: counter++;
  1515   00146A  2A28               	incf	send_temperature_RS232@counter^0,f,c
  1516   00146C                     l2448:
  1517   00146C  5028               	movf	send_temperature_RS232@counter^0,w,c
  1518   00146E  0F1C               	addlw	low send_temperature_RS232@buffer_RS232
  1519   001470  6ED9               	movwf	fsr2l,c
  1520   001472  6ADA               	clrf	fsr2h,c
  1521   001474  50DF               	movf	indf2,w,c
  1522   001476  A4D8               	btfss	status,2,c
  1523   001478  D7F1               	goto	l2444
  1524                           
  1525                           ;LAB05.c: 327: };LAB05.c: 328: _delay((unsigned long)((200)*(8000000/4000.0)));
  1526   00147A  0E03               	movlw	3
  1527   00147C  6E1B               	movwf	(??_send_temperature_RS232+1)^0,c
  1528   00147E  0E08               	movlw	8
  1529   001480  6E1A               	movwf	??_send_temperature_RS232^0,c
  1530   001482  0E77               	movlw	119
  1531   001484                     u2107:
  1532   001484  2EE8               	decfsz	wreg,f,c
  1533   001486  D7FE               	bra	u2107
  1534   001488  2E1A               	decfsz	??_send_temperature_RS232^0,f,c
  1535   00148A  D7FC               	bra	u2107
  1536   00148C  2E1B               	decfsz	(??_send_temperature_RS232+1)^0,f,c
  1537   00148E  D7FA               	bra	u2107
  1538   001490  F000               	nop	
  1539   001492  0012               	return		;funcret
  1540   001494                     __end_of_send_temperature_RS232:
  1541                           	callstack 0
  1542                           
  1543 ;; *************** function _Transmitir *****************
  1544 ;; Defined at:
  1545 ;;		line 416 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  BufferT         1    wreg     unsigned char 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  BufferT         1    0[COMRAM] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1559 ;;      Params:         0       0       0       0       0       0       0       0       0
  1560 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1562 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1563 ;;Total ram usage:        1 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 1
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_send_temperature_RS232
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text8
  1574   001652                     __ptext8:
  1575                           	callstack 0
  1576   001652                     _Transmitir:
  1577                           	callstack 28
  1578                           
  1579                           ;incstack = 0
  1580                           ;Transmitir@BufferT stored from wreg
  1581   001652  6E01               	movwf	Transmitir@BufferT^0,c
  1582   001654                     
  1583                           ;LAB05.c: 417: while(TRMT==0);
  1584   001654  A2AC               	btfss	4012,1,c	;volatile
  1585   001656  D7FE               	goto	l2146
  1586                           
  1587                           ;LAB05.c: 418: TXREG=BufferT;
  1588   001658  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1589   00165C  0012               	return		;funcret
  1590   00165E                     __end_of_Transmitir:
  1591                           	callstack 0
  1592                           
  1593 ;; *************** function _save_temperature_c_EEPROM *****************
  1594 ;; Defined at:
  1595 ;;		line 228 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		None
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1609 ;;      Params:         0       0       0       0       0       0       0       0       0
  1610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1613 ;;Total ram usage:        0 bytes
  1614 ;; Hardware stack levels used: 1
  1615 ;; Hardware stack levels required when called: 1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_main
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text9
  1624   00165E                     __ptext9:
  1625                           	callstack 0
  1626   00165E                     _save_temperature_c_EEPROM:
  1627                           	callstack 29
  1628                           
  1629                           ;LAB05.c: 229: return;
  1630                           
  1631                           ;incstack = 0
  1632   00165E  0012               	return		;funcret
  1633   001660                     __end_of_save_temperature_c_EEPROM:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _init_configuration *****************
  1637 ;; Defined at:
  1638 ;;		line 124 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1654 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1655 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1656 ;;Total ram usage:        2 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 5
  1659 ;; This function calls:
  1660 ;;		_ConfiguraLCD
  1661 ;;		_InicializaLCD
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text10
  1668   00123C                     __ptext10:
  1669                           	callstack 0
  1670   00123C                     _init_configuration:
  1671                           	callstack 25
  1672                           
  1673                           ;LAB05.c: 127: OSCCON=0b01110000;
  1674                           
  1675                           ;incstack = 0
  1676   00123C  0E70               	movlw	112
  1677   00123E  6ED3               	movwf	211,c	;volatile
  1678                           
  1679                           ;LAB05.c: 128: _delay((unsigned long)((1)*(8000000/4000.0)));
  1680   001240  0E03               	movlw	3
  1681   001242  6E05               	movwf	??_init_configuration^0,c
  1682   001244  0E98               	movlw	152
  1683   001246                     u2117:
  1684   001246  2EE8               	decfsz	wreg,f,c
  1685   001248  D7FE               	bra	u2117
  1686   00124A  2E05               	decfsz	??_init_configuration^0,f,c
  1687   00124C  D7FC               	bra	u2117
  1688                           
  1689                           ;LAB05.c: 131: LATC1=0;
  1690   00124E  928B               	bcf	3979,1,c	;volatile
  1691                           
  1692                           ;LAB05.c: 134: TXSTA=0b00100000;
  1693   001250  0E20               	movlw	32
  1694   001252  6EAC               	movwf	172,c	;volatile
  1695                           
  1696                           ;LAB05.c: 135: RCSTA=0b10000000;
  1697   001254  0E80               	movlw	128
  1698   001256  6EAB               	movwf	171,c	;volatile
  1699                           
  1700                           ;LAB05.c: 136: BAUDCON=0b00000000;
  1701   001258  0E00               	movlw	0
  1702   00125A  6EB8               	movwf	184,c	;volatile
  1703                           
  1704                           ;LAB05.c: 137: SPBRG=12;
  1705   00125C  0E0C               	movlw	12
  1706   00125E  6EAF               	movwf	175,c	;volatile
  1707                           
  1708                           ;LAB05.c: 140: ADCON1=14;
  1709   001260  0E0E               	movlw	14
  1710   001262  6EC1               	movwf	193,c	;volatile
  1711                           
  1712                           ;LAB05.c: 143: TRISE=0b11111000;
  1713   001264  0EF8               	movlw	248
  1714   001266  6E96               	movwf	150,c	;volatile
  1715                           
  1716                           ;LAB05.c: 144: LATE=1;
  1717   001268  0E01               	movlw	1
  1718   00126A  6E8D               	movwf	141,c	;volatile
  1719                           
  1720                           ;LAB05.c: 147: TRISA = 0xff;
  1721   00126C  6892               	setf	146,c	;volatile
  1722                           
  1723                           ;LAB05.c: 150: TRISC2=0;
  1724   00126E  9494               	bcf	3988,2,c	;volatile
  1725                           
  1726                           ;LAB05.c: 151: LATC2=0;
  1727   001270  948B               	bcf	3979,2,c	;volatile
  1728                           
  1729                           ;LAB05.c: 154: TRISB0=0;
  1730   001272  9093               	bcf	3987,0,c	;volatile
  1731                           
  1732                           ;LAB05.c: 155: LATB0=0;
  1733   001274  908A               	bcf	3978,0,c	;volatile
  1734                           
  1735                           ;LAB05.c: 159: ADCON0=0b00000001;
  1736   001276  0E01               	movlw	1
  1737   001278  6EC2               	movwf	194,c	;volatile
  1738                           
  1739                           ;LAB05.c: 161: ADCON2=0b11001001;
  1740   00127A  0EC9               	movlw	201
  1741   00127C  6EC0               	movwf	192,c	;volatile
  1742                           
  1743                           ;LAB05.c: 173: T0CON=0b00000100;
  1744   00127E  0E04               	movlw	4
  1745   001280  6ED5               	movwf	213,c	;volatile
  1746                           
  1747                           ;LAB05.c: 174: TMR0=3036;
  1748   001282  0E0B               	movlw	11
  1749   001284  6ED7               	movwf	215,c	;volatile
  1750   001286  0EDC               	movlw	220
  1751   001288  6ED6               	movwf	214,c	;volatile
  1752                           
  1753                           ;LAB05.c: 178: TMR0IF=0;
  1754   00128A  94F2               	bcf	4082,2,c	;volatile
  1755                           
  1756                           ;LAB05.c: 179: TMR0IE=1;
  1757   00128C  8AF2               	bsf	4082,5,c	;volatile
  1758                           
  1759                           ;LAB05.c: 180: GIE=1;
  1760   00128E  8EF2               	bsf	4082,7,c	;volatile
  1761                           
  1762                           ;LAB05.c: 182: TMR0ON=1;
  1763   001290  8ED5               	bsf	4053,7,c	;volatile
  1764                           
  1765                           ;LAB05.c: 185: TRISD=0;
  1766   001292  0E00               	movlw	0
  1767   001294  6E95               	movwf	149,c	;volatile
  1768                           
  1769                           ;LAB05.c: 186: LATD=0;
  1770   001296  0E00               	movlw	0
  1771   001298  6E8C               	movwf	140,c	;volatile
  1772                           
  1773                           ;LAB05.c: 187: ConfiguraLCD(4);
  1774   00129A  0E04               	movlw	4
  1775   00129C  ECF6  F00A         	call	_ConfiguraLCD
  1776                           
  1777                           ;LAB05.c: 188: InicializaLCD();
  1778   0012A0  EC4C  F008         	call	_InicializaLCD	;wreg free
  1779                           
  1780                           ;LAB05.c: 189: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1781   0012A4  0E0B               	movlw	11
  1782   0012A6  6E06               	movwf	(??_init_configuration+1)^0,c
  1783   0012A8  0E26               	movlw	38
  1784   0012AA  6E05               	movwf	??_init_configuration^0,c
  1785   0012AC  0E5E               	movlw	94
  1786   0012AE                     u2127:
  1787   0012AE  2EE8               	decfsz	wreg,f,c
  1788   0012B0  D7FE               	bra	u2127
  1789   0012B2  2E05               	decfsz	??_init_configuration^0,f,c
  1790   0012B4  D7FC               	bra	u2127
  1791   0012B6  2E06               	decfsz	(??_init_configuration+1)^0,f,c
  1792   0012B8  D7FA               	bra	u2127
  1793   0012BA  0012               	return		;funcret
  1794   0012BC                     __end_of_init_configuration:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _InicializaLCD *****************
  1798 ;; Defined at:
  1799 ;;		line 71 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1813 ;;      Params:         0       0       0       0       0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1816 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; Hardware stack levels required when called: 4
  1820 ;; This function calls:
  1821 ;;		_BorraLCD
  1822 ;;		_EnviaDato
  1823 ;;		_HabilitaLCD
  1824 ;;		_RetardoLCD
  1825 ;; This function is called by:
  1826 ;;		_init_configuration
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text11
  1831   001098                     __ptext11:
  1832                           	callstack 0
  1833   001098                     _InicializaLCD:
  1834                           	callstack 25
  1835                           
  1836                           ;LibLCDXC8.h: 73: LATD0=0;
  1837                           
  1838                           ;incstack = 0
  1839   001098  908C               	bcf	3980,0,c	;volatile
  1840                           
  1841                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1842   00109A  0E04               	movlw	4
  1843   00109C  184B               	xorwf	_interfaz^0,w,c
  1844   00109E  A4D8               	btfss	status,2,c
  1845   0010A0  D004               	goto	l2008
  1846                           
  1847                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
  1848   0010A2  508C               	movf	140,w,c	;volatile
  1849   0010A4  0B0F               	andlw	15
  1850   0010A6  0930               	iorlw	48
  1851   0010A8  D001               	goto	L1
  1852   0010AA                     l2008:
  1853                           
  1854                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1855   0010AA  0E3F               	movlw	63
  1856   0010AC                     L1:
  1857   0010AC  6E8C               	movwf	140,c	;volatile
  1858                           
  1859                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1860   0010AE  EC22  F00B         	call	_HabilitaLCD	;wreg free
  1861                           
  1862                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1863   0010B2  0E01               	movlw	1
  1864   0010B4  EC94  F009         	call	_RetardoLCD
  1865                           
  1866                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1867   0010B8  0E04               	movlw	4
  1868   0010BA  184B               	xorwf	_interfaz^0,w,c
  1869   0010BC  A4D8               	btfss	status,2,c
  1870   0010BE  D004               	goto	l2018
  1871                           
  1872                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
  1873   0010C0  508C               	movf	140,w,c	;volatile
  1874   0010C2  0B0F               	andlw	15
  1875   0010C4  0930               	iorlw	48
  1876   0010C6  D001               	goto	L2
  1877   0010C8                     l2018:
  1878                           
  1879                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1880   0010C8  0E3F               	movlw	63
  1881   0010CA                     L2:
  1882   0010CA  6E8C               	movwf	140,c	;volatile
  1883                           
  1884                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1885   0010CC  EC22  F00B         	call	_HabilitaLCD	;wreg free
  1886                           
  1887                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1888   0010D0  0E03               	movlw	3
  1889   0010D2  EC94  F009         	call	_RetardoLCD
  1890                           
  1891                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1892   0010D6  0E04               	movlw	4
  1893   0010D8  184B               	xorwf	_interfaz^0,w,c
  1894   0010DA  A4D8               	btfss	status,2,c
  1895   0010DC  D004               	goto	l2028
  1896                           
  1897                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
  1898   0010DE  508C               	movf	140,w,c	;volatile
  1899   0010E0  0B0F               	andlw	15
  1900   0010E2  0930               	iorlw	48
  1901   0010E4  D001               	goto	L3
  1902   0010E6                     l2028:
  1903                           
  1904                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1905   0010E6  0E3F               	movlw	63
  1906   0010E8                     L3:
  1907   0010E8  6E8C               	movwf	140,c	;volatile
  1908                           
  1909                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1910   0010EA  EC22  F00B         	call	_HabilitaLCD	;wreg free
  1911                           
  1912                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1913   0010EE  0E04               	movlw	4
  1914   0010F0  EC94  F009         	call	_RetardoLCD
  1915                           
  1916                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1917   0010F4  0E04               	movlw	4
  1918   0010F6  184B               	xorwf	_interfaz^0,w,c
  1919   0010F8  A4D8               	btfss	status,2,c
  1920   0010FA  D011               	goto	l2048
  1921                           
  1922                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
  1923   0010FC  508C               	movf	140,w,c	;volatile
  1924   0010FE  0B0F               	andlw	15
  1925   001100  0920               	iorlw	32
  1926   001102  6E8C               	movwf	140,c	;volatile
  1927                           
  1928                           ;LibLCDXC8.h: 94: HabilitaLCD();
  1929   001104  EC22  F00B         	call	_HabilitaLCD	;wreg free
  1930                           
  1931                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  1932   001108  0E04               	movlw	4
  1933   00110A  EC94  F009         	call	_RetardoLCD
  1934                           
  1935                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
  1936   00110E  0E2F               	movlw	47
  1937   001110  EC4A  F00A         	call	_EnviaDato
  1938                           
  1939                           ;LibLCDXC8.h: 97: HabilitaLCD();
  1940   001114  EC22  F00B         	call	_HabilitaLCD	;wreg free
  1941                           
  1942                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  1943   001118  0E04               	movlw	4
  1944   00111A  EC94  F009         	call	_RetardoLCD
  1945   00111E                     l2048:
  1946                           
  1947                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1948   00111E  EC18  F00B         	call	_BorraLCD	;wreg free
  1949                           
  1950                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1951   001122  0E0F               	movlw	15
  1952   001124  EC4A  F00A         	call	_EnviaDato
  1953                           
  1954                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1955   001128  EC22  F00B         	call	_HabilitaLCD	;wreg free
  1956                           
  1957                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1958   00112C  0E04               	movlw	4
  1959   00112E  EC94  F009         	call	_RetardoLCD
  1960   001132  0012               	return		;funcret
  1961   001134                     __end_of_InicializaLCD:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _BorraLCD *****************
  1965 ;; Defined at:
  1966 ;;		line 112 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 3
  1987 ;; This function calls:
  1988 ;;		_EnviaDato
  1989 ;;		_HabilitaLCD
  1990 ;;		_RetardoLCD
  1991 ;; This function is called by:
  1992 ;;		_InicializaLCD
  1993 ;;		_MensajeLCD_Var
  1994 ;;		_welcome_operations
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text12
  1999   001630                     __ptext12:
  2000                           	callstack 0
  2001   001630                     _BorraLCD:
  2002                           	callstack 25
  2003                           
  2004                           ;LibLCDXC8.h: 114: LATD0=0;
  2005                           
  2006                           ;incstack = 0
  2007   001630  908C               	bcf	3980,0,c	;volatile
  2008                           
  2009                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2010   001632  0E01               	movlw	1
  2011   001634  EC4A  F00A         	call	_EnviaDato
  2012                           
  2013                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2014   001638  EC22  F00B         	call	_HabilitaLCD	;wreg free
  2015                           
  2016                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2017   00163C  0E02               	movlw	2
  2018   00163E  EC94  F009         	call	_RetardoLCD
  2019   001642  0012               	return		;funcret
  2020   001644                     __end_of_BorraLCD:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _EnviaDato *****************
  2024 ;; Defined at:
  2025 ;;		line 59 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  a               1    wreg     unsigned char 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  a               1    3[COMRAM] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2039 ;;      Params:         0       0       0       0       0       0       0       0       0
  2040 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2041 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2042 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2043 ;;Total ram usage:        2 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 2
  2046 ;; This function calls:
  2047 ;;		_HabilitaLCD
  2048 ;;		_RetardoLCD
  2049 ;; This function is called by:
  2050 ;;		_InicializaLCD
  2051 ;;		_BorraLCD
  2052 ;;		_EscribeLCD_c
  2053 ;;		_DireccionaLCD
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text13
  2058   001494                     __ptext13:
  2059                           	callstack 0
  2060   001494                     _EnviaDato:
  2061                           	callstack 25
  2062                           
  2063                           ;incstack = 0
  2064                           ;EnviaDato@a stored from wreg
  2065   001494  6E04               	movwf	EnviaDato@a^0,c
  2066                           
  2067                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2068   001496  0E04               	movlw	4
  2069   001498  184B               	xorwf	_interfaz^0,w,c
  2070   00149A  A4D8               	btfss	status,2,c
  2071   00149C  D017               	goto	l1896
  2072                           
  2073                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2074   00149E  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  2075   0014A2  0EF0               	movlw	240
  2076   0014A4  1603               	andwf	??_EnviaDato^0,f,c
  2077   0014A6  508C               	movf	140,w,c	;volatile
  2078   0014A8  0B0F               	andlw	15
  2079   0014AA  1003               	iorwf	??_EnviaDato^0,w,c
  2080   0014AC  6E8C               	movwf	140,c	;volatile
  2081                           
  2082                           ;LibLCDXC8.h: 62: HabilitaLCD();
  2083   0014AE  EC22  F00B         	call	_HabilitaLCD	;wreg free
  2084                           
  2085                           ;LibLCDXC8.h: 63: RetardoLCD(1);
  2086   0014B2  0E01               	movlw	1
  2087   0014B4  EC94  F009         	call	_RetardoLCD
  2088                           
  2089                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
  2090   0014B8  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  2091   0014BC  3A03               	swapf	??_EnviaDato^0,f,c
  2092   0014BE  0EF0               	movlw	240
  2093   0014C0  1603               	andwf	??_EnviaDato^0,f,c
  2094   0014C2  508C               	movf	140,w,c	;volatile
  2095   0014C4  0B0F               	andlw	15
  2096   0014C6  1003               	iorwf	??_EnviaDato^0,w,c
  2097   0014C8  6E8C               	movwf	140,c	;volatile
  2098                           
  2099                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
  2100   0014CA  0012               	return	
  2101   0014CC                     l1896:
  2102   0014CC  0E08               	movlw	8
  2103   0014CE  184B               	xorwf	_interfaz^0,w,c
  2104   0014D0  A4D8               	btfss	status,2,c
  2105   0014D2  0012               	return	
  2106                           
  2107                           ;LibLCDXC8.h: 68: LATD=a;
  2108   0014D4  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  2109   0014D8  0012               	return		;funcret
  2110   0014DA                     __end_of_EnviaDato:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _RetardoLCD *****************
  2114 ;; Defined at:
  2115 ;;		line 293 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  a               1    wreg     unsigned char 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  a               1    1[COMRAM] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2129 ;;      Params:         0       0       0       0       0       0       0       0       0
  2130 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2131 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2132 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2133 ;;Total ram usage:        2 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 1
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_EnviaDato
  2140 ;;		_InicializaLCD
  2141 ;;		_BorraLCD
  2142 ;;		_EscribeLCD_c
  2143 ;;		_DireccionaLCD
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text14
  2148   001328                     __ptext14:
  2149                           	callstack 0
  2150   001328                     _RetardoLCD:
  2151                           	callstack 26
  2152                           
  2153                           ;incstack = 0
  2154                           ;RetardoLCD@a stored from wreg
  2155   001328  6E02               	movwf	RetardoLCD@a^0,c
  2156                           
  2157                           ;LibLCDXC8.h: 294: switch(a){
  2158   00132A  D023               	goto	l1884
  2159   00132C                     l1874:
  2160   00132C  0E27               	movlw	39
  2161   00132E  6E01               	movwf	??_RetardoLCD^0,c
  2162   001330  0EF5               	movlw	245
  2163   001332                     u2137:
  2164   001332  2EE8               	decfsz	wreg,f,c
  2165   001334  D7FE               	bra	u2137
  2166   001336  2E01               	decfsz	??_RetardoLCD^0,f,c
  2167   001338  D7FC               	bra	u2137
  2168   00133A  F000               	nop	
  2169                           
  2170                           ;LibLCDXC8.h: 297: break;
  2171   00133C  0012               	return	
  2172   00133E                     l1876:
  2173   00133E  0E03               	movlw	3
  2174   001340  6E01               	movwf	??_RetardoLCD^0,c
  2175   001342  0E98               	movlw	152
  2176   001344                     u2147:
  2177   001344  2EE8               	decfsz	wreg,f,c
  2178   001346  D7FE               	bra	u2147
  2179   001348  2E01               	decfsz	??_RetardoLCD^0,f,c
  2180   00134A  D7FC               	bra	u2147
  2181                           
  2182                           ;LibLCDXC8.h: 299: _delay((unsigned long)((640)*(8000000/4000000.0)));
  2183   00134C  0EB6               	movlw	182
  2184   00134E                     u2157:
  2185   00134E  D000               	nop2	
  2186   001350  D000               	nop2	
  2187   001352  2EE8               	decfsz	wreg,f,c
  2188   001354  D7FC               	bra	u2157
  2189   001356  D000               	nop2	
  2190   001358  D000               	nop2	
  2191   00135A  D000               	nop2	
  2192                           
  2193                           ;LibLCDXC8.h: 301: break;
  2194   00135C  0012               	return	
  2195   00135E                     l1878:
  2196   00135E  0E42               	movlw	66
  2197   001360                     u2167:
  2198   001360  2EE8               	decfsz	wreg,f,c
  2199   001362  D7FE               	bra	u2167
  2200   001364  D000               	nop2	
  2201                           
  2202                           ;LibLCDXC8.h: 304: break;
  2203   001366  0012               	return	
  2204   001368                     l1880:
  2205   001368  0E1A               	movlw	26
  2206   00136A                     u2177:
  2207   00136A  2EE8               	decfsz	wreg,f,c
  2208   00136C  D7FE               	bra	u2177
  2209   00136E  D000               	nop2	
  2210                           
  2211                           ;LibLCDXC8.h: 307: break;
  2212   001370  0012               	return	
  2213   001372                     l1884:
  2214   001372  5002               	movf	RetardoLCD@a^0,w,c
  2215                           
  2216                           ; Switch size 1, requested type "simple"
  2217                           ; Number of cases is 4, Range of values is 1 to 4
  2218                           ; switch strategies available:
  2219                           ; Name         Instructions Cycles
  2220                           ; simple_byte           13     7 (average)
  2221                           ;	Chosen strategy is simple_byte
  2222   001374  0A01               	xorlw	1	; case 1
  2223   001376  B4D8               	btfsc	status,2,c
  2224   001378  D7D9               	goto	l1874
  2225   00137A  0A03               	xorlw	3	; case 2
  2226   00137C  B4D8               	btfsc	status,2,c
  2227   00137E  D7DF               	goto	l1876
  2228   001380  0A01               	xorlw	1	; case 3
  2229   001382  B4D8               	btfsc	status,2,c
  2230   001384  D7EC               	goto	l1878
  2231   001386  0A07               	xorlw	7	; case 4
  2232   001388  A4D8               	btfss	status,2,c
  2233   00138A  0012               	return	
  2234   00138C  D7ED               	goto	l1880
  2235   00138E                     __end_of_RetardoLCD:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _HabilitaLCD *****************
  2239 ;; Defined at:
  2240 ;;		line 105 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2257 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_EnviaDato
  2265 ;;		_InicializaLCD
  2266 ;;		_BorraLCD
  2267 ;;		_EscribeLCD_c
  2268 ;;		_DireccionaLCD
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text15
  2273   001644                     __ptext15:
  2274                           	callstack 0
  2275   001644                     _HabilitaLCD:
  2276                           	callstack 26
  2277                           
  2278                           ;LibLCDXC8.h: 107: LATD1=1;
  2279                           
  2280                           ;incstack = 0
  2281   001644  828C               	bsf	3980,1,c	;volatile
  2282                           
  2283                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
  2284   001646  0E1A               	movlw	26
  2285   001648                     u2187:
  2286   001648  2EE8               	decfsz	wreg,f,c
  2287   00164A  D7FE               	bra	u2187
  2288   00164C  D000               	nop2	
  2289                           
  2290                           ;LibLCDXC8.h: 110: LATD1=0;
  2291   00164E  928C               	bcf	3980,1,c	;volatile
  2292   001650  0012               	return		;funcret
  2293   001652                     __end_of_HabilitaLCD:
  2294                           	callstack 0
  2295                           
  2296 ;; *************** function _ConfiguraLCD *****************
  2297 ;; Defined at:
  2298 ;;		line 55 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  a               1    wreg     unsigned char 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  a               1    0[COMRAM] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0
  2313 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2315 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2316 ;;Total ram usage:        1 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; Hardware stack levels required when called: 1
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_init_configuration
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text16
  2327   0015EC                     __ptext16:
  2328                           	callstack 0
  2329   0015EC                     _ConfiguraLCD:
  2330                           	callstack 28
  2331                           
  2332                           ;incstack = 0
  2333                           ;ConfiguraLCD@a stored from wreg
  2334   0015EC  6E01               	movwf	ConfiguraLCD@a^0,c
  2335                           
  2336                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
  2337   0015EE  0E04               	movlw	4
  2338   0015F0  1801               	xorwf	ConfiguraLCD@a^0,w,c
  2339   0015F2  B4D8               	btfsc	status,2,c
  2340   0015F4  D004               	goto	u1220
  2341   0015F6  0E08               	movlw	8
  2342   0015F8  1801               	xorwf	ConfiguraLCD@a^0,w,c
  2343   0015FA  A4D8               	btfss	status,2,c
  2344   0015FC  0012               	return	
  2345   0015FE                     u1220:
  2346                           
  2347                           ;LibLCDXC8.h: 57: interfaz=a;
  2348   0015FE  C001  F04B         	movff	ConfiguraLCD@a,_interfaz
  2349   001602  0012               	return		;funcret
  2350   001604                     __end_of_ConfiguraLCD:
  2351                           	callstack 0
  2352                           
  2353 ;; *************** function _choose_scale_temperature_and_fill_buffers *****************
  2354 ;; Defined at:
  2355 ;;		line 286 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  buffer_LCD_r    1   69[COMRAM] PTR unsigned char 
  2358 ;;		 -> main@buffer_LCD_row_1(17), 
  2359 ;;  buffer_LCD_r    1   70[COMRAM] PTR unsigned char 
  2360 ;;		 -> main@buffer_LCD_row_2(17), 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  temp_convert    2   71[COMRAM] int 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2372 ;;      Params:         2       0       0       0       0       0       0       0       0
  2373 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2375 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2376 ;;Total ram usage:        4 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 3
  2379 ;; This function calls:
  2380 ;;		___ftadd
  2381 ;;		___ftdiv
  2382 ;;		___ftmul
  2383 ;;		___fttol
  2384 ;;		___lbtoft
  2385 ;;		_sprintf
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text17
  2392   000862                     __ptext17:
  2393                           	callstack 0
  2394   000862                     _choose_scale_temperature_and_fill_buffers:
  2395                           	callstack 27
  2396                           
  2397                           ;LAB05.c: 289: if(RA1==0 && RA2==0){
  2398                           
  2399                           ;incstack = 0
  2400   000862  A280               	btfss	3968,1,c	;volatile
  2401   000864  B480               	btfsc	3968,2,c	;volatile
  2402   000866  D018               	goto	l278
  2403                           
  2404                           ;LAB05.c: 292: sprintf(buffer_LCD_row_1, "T: %i C",Temp);
  2405   000868  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  2406   00086C  0E40               	movlw	low STR_4
  2407   00086E  6E0E               	movwf	sprintf@f^0,c
  2408   000870  C086  F00F         	movff	_Temp,?_sprintf+2
  2409   000874  6A10               	clrf	(?_sprintf+3)^0,c
  2410   000876  ECF9  F005         	call	_sprintf	;wreg free
  2411                           
  2412                           ;LAB05.c: 293: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  2413   00087A  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  2414   00087E  0E37               	movlw	low STR_5
  2415   000880  6E0E               	movwf	sprintf@f^0,c
  2416   000882  0E00               	movlw	0
  2417   000884  6E10               	movwf	(?_sprintf+3)^0,c
  2418   000886  0E00               	movlw	0
  2419   000888  6E0F               	movwf	(?_sprintf+2)^0,c
  2420   00088A  0E00               	movlw	0
  2421   00088C  6E12               	movwf	(?_sprintf+5)^0,c
  2422   00088E  0E25               	movlw	37
  2423   000890  6E11               	movwf	(?_sprintf+4)^0,c
  2424   000892  ECF9  F005         	call	_sprintf	;wreg free
  2425                           
  2426                           ;LAB05.c: 294: }
  2427   000896  0012               	return	
  2428   000898                     l278:
  2429                           
  2430                           ;LAB05.c: 295: else if(RA1==0 && RA2==1){
  2431   000898  A280               	btfss	3968,1,c	;volatile
  2432   00089A  A480               	btfss	3968,2,c	;volatile
  2433   00089C  D037               	goto	l280
  2434                           
  2435                           ;LAB05.c: 297: temp_converted = Temp + 273.15;
  2436   00089E  0E93               	movlw	147
  2437   0008A0  6E2E               	movwf	___ftadd@f2^0,c
  2438   0008A2  0E88               	movlw	136
  2439   0008A4  6E2F               	movwf	(___ftadd@f2+1)^0,c
  2440   0008A6  0E43               	movlw	67
  2441   0008A8  6E30               	movwf	(___ftadd@f2+2)^0,c
  2442   0008AA  0100               	movlb	0	; () banked
  2443   0008AC  5186               	movf	_Temp& (0+255),w,b
  2444   0008AE  ECC3  F00A         	call	___lbtoft
  2445   0008B2  C009  F02B         	movff	?___lbtoft,___ftadd@f1
  2446   0008B6  C00A  F02C         	movff	?___lbtoft+1,___ftadd@f1+1
  2447   0008BA  C00B  F02D         	movff	?___lbtoft+2,___ftadd@f1+2
  2448   0008BE  EC25  F005         	call	___ftadd	;wreg free
  2449   0008C2  C02B  F037         	movff	?___ftadd,___fttol@f1
  2450   0008C6  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  2451   0008CA  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  2452   0008CE  EC8C  F007         	call	___fttol	;wreg free
  2453   0008D2  C037  F048         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  2454   0008D6  C038  F049         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  2455                           
  2456                           ;LAB05.c: 298: sprintf(buffer_LCD_row_1, "T: %i K",temp_converted);
  2457   0008DA  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  2458   0008DE  0E50               	movlw	low STR_6
  2459   0008E0  6E0E               	movwf	sprintf@f^0,c
  2460   0008E2  C048  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  2461   0008E6  C049  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  2462   0008EA  ECF9  F005         	call	_sprintf	;wreg free
  2463                           
  2464                           ;LAB05.c: 299: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  2465   0008EE  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  2466   0008F2  0E37               	movlw	low STR_5
  2467   0008F4  6E0E               	movwf	sprintf@f^0,c
  2468   0008F6  0E00               	movlw	0
  2469   0008F8  6E10               	movwf	(?_sprintf+3)^0,c
  2470   0008FA  0E00               	movlw	0
  2471   0008FC  6E0F               	movwf	(?_sprintf+2)^0,c
  2472   0008FE  0E00               	movlw	0
  2473   000900  6E12               	movwf	(?_sprintf+5)^0,c
  2474   000902  0E25               	movlw	37
  2475   000904  6E11               	movwf	(?_sprintf+4)^0,c
  2476   000906  ECF9  F005         	call	_sprintf	;wreg free
  2477                           
  2478                           ;LAB05.c: 300: }
  2479   00090A  0012               	return	
  2480   00090C                     l280:
  2481                           
  2482                           ;LAB05.c: 301: else if(RA1==1 && RA2==0){
  2483   00090C  B280               	btfsc	3968,1,c	;volatile
  2484   00090E  B480               	btfsc	3968,2,c	;volatile
  2485   000910  D045               	goto	l282
  2486                           
  2487                           ;LAB05.c: 303: temp_converted = Temp*1.8 + 491.67;
  2488   000912  0ED6               	movlw	214
  2489   000914  6E2E               	movwf	___ftadd@f2^0,c
  2490   000916  0EF5               	movlw	245
  2491   000918  6E2F               	movwf	(___ftadd@f2+1)^0,c
  2492   00091A  0E43               	movlw	67
  2493   00091C  6E30               	movwf	(___ftadd@f2+2)^0,c
  2494   00091E  0E66               	movlw	102
  2495   000920  6E10               	movwf	___ftmul@f2^0,c
  2496   000922  0EE6               	movlw	230
  2497   000924  6E11               	movwf	(___ftmul@f2+1)^0,c
  2498   000926  0E3F               	movlw	63
  2499   000928  6E12               	movwf	(___ftmul@f2+2)^0,c
  2500   00092A  0100               	movlb	0	; () banked
  2501   00092C  5186               	movf	_Temp& (0+255),w,b
  2502   00092E  ECC3  F00A         	call	___lbtoft
  2503   000932  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  2504   000936  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  2505   00093A  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  2506   00093E  EC9F  F006         	call	___ftmul	;wreg free
  2507   000942  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  2508   000946  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  2509   00094A  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  2510   00094E  EC25  F005         	call	___ftadd	;wreg free
  2511   000952  C02B  F037         	movff	?___ftadd,___fttol@f1
  2512   000956  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  2513   00095A  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  2514   00095E  EC8C  F007         	call	___fttol	;wreg free
  2515   000962  C037  F048         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  2516   000966  C038  F049         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  2517                           
  2518                           ;LAB05.c: 304: sprintf(buffer_LCD_row_1, "T: %i Ra",temp_converted);
  2519   00096A  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  2520   00096E  0E2E               	movlw	low STR_8
  2521   000970  6E0E               	movwf	sprintf@f^0,c
  2522   000972  C048  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  2523   000976  C049  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  2524   00097A  ECF9  F005         	call	_sprintf	;wreg free
  2525                           
  2526                           ;LAB05.c: 305: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  2527   00097E  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  2528   000982  0E37               	movlw	low STR_5
  2529   000984  6E0E               	movwf	sprintf@f^0,c
  2530   000986  0E00               	movlw	0
  2531   000988  6E10               	movwf	(?_sprintf+3)^0,c
  2532   00098A  0E00               	movlw	0
  2533   00098C  6E0F               	movwf	(?_sprintf+2)^0,c
  2534   00098E  0E00               	movlw	0
  2535   000990  6E12               	movwf	(?_sprintf+5)^0,c
  2536   000992  0E25               	movlw	37
  2537   000994  6E11               	movwf	(?_sprintf+4)^0,c
  2538   000996  ECF9  F005         	call	_sprintf	;wreg free
  2539                           
  2540                           ;LAB05.c: 307: }
  2541   00099A  0012               	return	
  2542   00099C                     l282:
  2543                           
  2544                           ;LAB05.c: 308: else if(RA1==1 && RA2==1){
  2545   00099C  A280               	btfss	3968,1,c	;volatile
  2546   00099E  0012               	return	
  2547   0009A0  A480               	btfss	3968,2,c	;volatile
  2548   0009A2  0012               	return	
  2549                           
  2550                           ;LAB05.c: 310: temp_converted = Temp*9.0/5.0 + 32.0;
  2551   0009A4  0E00               	movlw	0
  2552   0009A6  6E2E               	movwf	___ftadd@f2^0,c
  2553   0009A8  0E00               	movlw	0
  2554   0009AA  6E2F               	movwf	(___ftadd@f2+1)^0,c
  2555   0009AC  0E42               	movlw	66
  2556   0009AE  6E30               	movwf	(___ftadd@f2+2)^0,c
  2557   0009B0  0E00               	movlw	0
  2558   0009B2  6E1F               	movwf	___ftdiv@f2^0,c
  2559   0009B4  0EA0               	movlw	160
  2560   0009B6  6E20               	movwf	(___ftdiv@f2+1)^0,c
  2561   0009B8  0E40               	movlw	64
  2562   0009BA  6E21               	movwf	(___ftdiv@f2+2)^0,c
  2563   0009BC  0E00               	movlw	0
  2564   0009BE  6E10               	movwf	___ftmul@f2^0,c
  2565   0009C0  0E10               	movlw	16
  2566   0009C2  6E11               	movwf	(___ftmul@f2+1)^0,c
  2567   0009C4  0E41               	movlw	65
  2568   0009C6  6E12               	movwf	(___ftmul@f2+2)^0,c
  2569   0009C8  0100               	movlb	0	; () banked
  2570   0009CA  5186               	movf	_Temp& (0+255),w,b
  2571   0009CC  ECC3  F00A         	call	___lbtoft
  2572   0009D0  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  2573   0009D4  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  2574   0009D8  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  2575   0009DC  EC9F  F006         	call	___ftmul	;wreg free
  2576   0009E0  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2577   0009E4  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2578   0009E8  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2579   0009EC  EC19  F007         	call	___ftdiv	;wreg free
  2580   0009F0  C01C  F02B         	movff	?___ftdiv,___ftadd@f1
  2581   0009F4  C01D  F02C         	movff	?___ftdiv+1,___ftadd@f1+1
  2582   0009F8  C01E  F02D         	movff	?___ftdiv+2,___ftadd@f1+2
  2583   0009FC  EC25  F005         	call	___ftadd	;wreg free
  2584   000A00  C02B  F037         	movff	?___ftadd,___fttol@f1
  2585   000A04  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  2586   000A08  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  2587   000A0C  EC8C  F007         	call	___fttol	;wreg free
  2588   000A10  C037  F048         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  2589   000A14  C038  F049         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  2590                           
  2591                           ;LAB05.c: 312: sprintf(buffer_LCD_row_1, "T: %i F",temp_converted);
  2592   000A18  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  2593   000A1C  0E48               	movlw	low STR_10
  2594   000A1E  6E0E               	movwf	sprintf@f^0,c
  2595   000A20  C048  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  2596   000A24  C049  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  2597   000A28  ECF9  F005         	call	_sprintf	;wreg free
  2598                           
  2599                           ;LAB05.c: 313: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  2600   000A2C  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  2601   000A30  0E37               	movlw	low STR_5
  2602   000A32  6E0E               	movwf	sprintf@f^0,c
  2603   000A34  0E00               	movlw	0
  2604   000A36  6E10               	movwf	(?_sprintf+3)^0,c
  2605   000A38  0E00               	movlw	0
  2606   000A3A  6E0F               	movwf	(?_sprintf+2)^0,c
  2607   000A3C  0E00               	movlw	0
  2608   000A3E  6E12               	movwf	(?_sprintf+5)^0,c
  2609   000A40  0E25               	movlw	37
  2610   000A42  6E11               	movwf	(?_sprintf+4)^0,c
  2611   000A44  ECF9  F005         	call	_sprintf	;wreg free
  2612   000A48  0012               	return	
  2613   000A4A                     __end_of_choose_scale_temperature_and_fill_buffers:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _sprintf *****************
  2617 ;; Defined at:
  2618 ;;		line 505 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/doprnt.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  sp              1   12[COMRAM] PTR unsigned char 
  2621 ;;		 -> send_temperature_RS232@buffer_RS232(12), main@buffer_LCD_row_2(17), main@buffer_LCD_row_1(17), 
  2622 ;;  f               1   13[COMRAM] PTR const unsigned char 
  2623 ;;		 -> STR_12(9), STR_11(9), STR_10(8), STR_9(9), 
  2624 ;;		 -> STR_8(9), STR_7(9), STR_6(8), STR_5(9), 
  2625 ;;		 -> STR_4(8), 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  tmpval          4    0        struct .
  2628 ;;  cp              3    0        PTR const unsigned char 
  2629 ;;  val             2   22[COMRAM] unsigned int 
  2630 ;;  len             2    0        unsigned int 
  2631 ;;  c               1   24[COMRAM] unsigned char 
  2632 ;;  ap              1   21[COMRAM] PTR void [1]
  2633 ;;		 -> ?_sprintf(2), 
  2634 ;;  prec            1   20[COMRAM] char 
  2635 ;;  flag            1   19[COMRAM] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  2   12[COMRAM] int 
  2638 ;; Registers used:
  2639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2645 ;;      Params:         6       0       0       0       0       0       0       0       0
  2646 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2647 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2648 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2649 ;;Total ram usage:       13 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 2
  2652 ;; This function calls:
  2653 ;;		___lwdiv
  2654 ;;		___lwmod
  2655 ;; This function is called by:
  2656 ;;		_choose_scale_temperature_and_fill_buffers
  2657 ;;		_send_temperature_RS232
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text18
  2662   000BF2                     __ptext18:
  2663                           	callstack 0
  2664   000BF2                     _sprintf:
  2665                           	callstack 27
  2666                           
  2667                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2668                           
  2669                           ;incstack = 0
  2670   000BF2  0E0F               	movlw	low (?_sprintf+2)
  2671   000BF4  6E16               	movwf	sprintf@ap^0,c
  2672                           
  2673                           ;doprnt.c: 553: while((c = *f++)) {
  2674   000BF6  D091               	goto	u1360
  2675   000BF8                     l2080:
  2676                           
  2677                           ;doprnt.c: 555: if(c != '%')
  2678   000BF8  0E25               	movlw	37
  2679   000BFA  1819               	xorwf	sprintf@c^0,w,c
  2680   000BFC  B4D8               	btfsc	status,2,c
  2681   000BFE  D007               	goto	l2086
  2682   000C00                     u1310:
  2683                           
  2684                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2685   000C00  500D               	movf	sprintf@sp^0,w,c
  2686   000C02  6ED9               	movwf	fsr2l,c
  2687   000C04  6ADA               	clrf	fsr2h,c
  2688   000C06  C019  FFDF         	movff	sprintf@c,indf2
  2689   000C0A  2A0D               	incf	sprintf@sp^0,f,c
  2690                           
  2691                           ;doprnt.c: 559: continue;
  2692   000C0C  D086               	goto	u1360
  2693   000C0E                     l2086:
  2694                           
  2695                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2696   000C0E  0E00               	movlw	0
  2697   000C10  6E14               	movwf	sprintf@flag^0,c
  2698                           
  2699                           ;doprnt.c: 661: switch(c = *f++) {
  2700   000C12  D008               	goto	l2098
  2701   000C14                     l2088:
  2702                           
  2703                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  2704   000C14  5016               	movf	sprintf@ap^0,w,c
  2705   000C16  6ED9               	movwf	fsr2l,c
  2706   000C18  6ADA               	clrf	fsr2h,c
  2707   000C1A  50DF               	movf	indf2,w,c
  2708   000C1C  6E19               	movwf	sprintf@c^0,c
  2709   000C1E  0E02               	movlw	2
  2710   000C20  2616               	addwf	sprintf@ap^0,f,c
  2711   000C22  D7EE               	goto	u1310
  2712   000C24                     l2098:
  2713   000C24  2A0E               	incf	sprintf@f^0,f,c
  2714   000C26  040E               	decf	sprintf@f^0,w,c
  2715   000C28  6E13               	movwf	??_sprintf^0,c
  2716   000C2A  C013  FFF6         	movff	??_sprintf,tblptrl
  2717   000C2E                     	if	1	;There is more than 1 active tblptr byte
  2718   000C2E  0E08               	movlw	high __smallconst
  2719   000C30  6EF7               	movwf	tblptrh,c
  2720   000C32                     	endif
  2721   000C32                     	if	0	;tblptru may be non-zero
  2722   000C32                     	endif
  2723   000C32                     	if	0	;tblptru may be non-zero
  2724   000C32                     	endif
  2725   000C32  0008               	tblrd		*
  2726   000C34  CFF5 F019          	movff	tablat,sprintf@c
  2727   000C38  5019               	movf	sprintf@c^0,w,c
  2728                           
  2729                           ; Switch size 1, requested type "simple"
  2730                           ; Number of cases is 4, Range of values is 0 to 105
  2731                           ; switch strategies available:
  2732                           ; Name         Instructions Cycles
  2733                           ; simple_byte           13     7 (average)
  2734                           ;	Chosen strategy is simple_byte
  2735   000C3A  0A00               	xorlw	0	; case 0
  2736   000C3C  B4D8               	btfsc	status,2,c
  2737   000C3E  D07A               	goto	u1370
  2738   000C40  0A63               	xorlw	99	; case 99
  2739   000C42  B4D8               	btfsc	status,2,c
  2740   000C44  D7E7               	goto	l2088
  2741   000C46  0A07               	xorlw	7	; case 100
  2742   000C48  B4D8               	btfsc	status,2,c
  2743   000C4A  D003               	goto	l2100
  2744   000C4C  0A0D               	xorlw	13	; case 105
  2745   000C4E  A4D8               	btfss	status,2,c
  2746   000C50  D7D7               	goto	u1310
  2747   000C52                     l2100:
  2748                           
  2749                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2750   000C52  5016               	movf	sprintf@ap^0,w,c
  2751   000C54  6ED9               	movwf	fsr2l,c
  2752   000C56  6ADA               	clrf	fsr2h,c
  2753   000C58  CFDE F017          	movff	postinc2,sprintf@val
  2754   000C5C  CFDD F018          	movff	postdec2,sprintf@val+1
  2755   000C60  0E02               	movlw	2
  2756   000C62  2616               	addwf	sprintf@ap^0,f,c
  2757                           
  2758                           ;doprnt.c: 1287: if((int)val < 0) {
  2759   000C64  AE18               	btfss	(sprintf@val+1)^0,7,c
  2760   000C66  D006               	goto	l2110
  2761                           
  2762                           ;doprnt.c: 1288: flag |= 0x03;
  2763   000C68  0E03               	movlw	3
  2764   000C6A  1214               	iorwf	sprintf@flag^0,f,c
  2765                           
  2766                           ;doprnt.c: 1289: val = -val;
  2767   000C6C  6C17               	negf	sprintf@val^0,c
  2768   000C6E  1E18               	comf	(sprintf@val+1)^0,f,c
  2769   000C70  B0D8               	btfsc	status,0,c
  2770   000C72  2A18               	incf	(sprintf@val+1)^0,f,c
  2771   000C74                     l2110:
  2772                           
  2773                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2774   000C74  0E01               	movlw	1
  2775   000C76  6E19               	movwf	sprintf@c^0,c
  2776   000C78                     l2116:
  2777                           
  2778                           ;doprnt.c: 1332: if(val < dpowers[c])
  2779   000C78  5019               	movf	sprintf@c^0,w,c
  2780   000C7A  0D02               	mullw	2
  2781   000C7C  50F3               	movf	243,w,c
  2782   000C7E  0F01               	addlw	low _dpowers
  2783   000C80  6E13               	movwf	??_sprintf^0,c
  2784   000C82  C013  FFF6         	movff	??_sprintf,tblptrl
  2785   000C86                     	if	1	;There is more than 1 active tblptr byte
  2786   000C86  0E08               	movlw	high __smallconst
  2787   000C88  6EF7               	movwf	tblptrh,c
  2788   000C8A                     	endif
  2789   000C8A                     	if	0	;tblptru may be non-zero
  2790   000C8A                     	endif
  2791   000C8A                     	if	0	;tblptru may be non-zero
  2792   000C8A                     	endif
  2793   000C8A  0009               	tblrd		*+
  2794   000C8C  50F5               	movf	tablat,w,c
  2795   000C8E  5C17               	subwf	sprintf@val^0,w,c
  2796   000C90  0009               	tblrd		*+
  2797   000C92  50F5               	movf	tablat,w,c
  2798   000C94  5818               	subwfb	(sprintf@val+1)^0,w,c
  2799   000C96  A0D8               	btfss	status,0,c
  2800   000C98  D005               	goto	u1340
  2801   000C9A  2A19               	incf	sprintf@c^0,f,c
  2802   000C9C  0E05               	movlw	5
  2803   000C9E  1819               	xorwf	sprintf@c^0,w,c
  2804   000CA0  A4D8               	btfss	status,2,c
  2805   000CA2  D7EA               	goto	l2116
  2806   000CA4                     u1340:
  2807                           
  2808                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2809   000CA4  C014  F013         	movff	sprintf@flag,??_sprintf
  2810   000CA8  0E03               	movlw	3
  2811   000CAA  1613               	andwf	??_sprintf^0,f,c
  2812   000CAC  B4D8               	btfsc	status,2,c
  2813   000CAE  D006               	goto	l2130
  2814                           
  2815                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2816   000CB0  500D               	movf	sprintf@sp^0,w,c
  2817   000CB2  6ED9               	movwf	fsr2l,c
  2818   000CB4  6ADA               	clrf	fsr2h,c
  2819   000CB6  0E2D               	movlw	45
  2820   000CB8  6EDF               	movwf	indf2,c
  2821   000CBA  2A0D               	incf	sprintf@sp^0,f,c
  2822   000CBC                     l2130:
  2823                           
  2824                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2825   000CBC  C019  F015         	movff	sprintf@c,sprintf@prec
  2826                           
  2827                           ;doprnt.c: 1500: while(prec--) {
  2828   000CC0  D028               	goto	l2138
  2829   000CC2                     l2132:
  2830                           
  2831                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2832   000CC2  5015               	movf	sprintf@prec^0,w,c
  2833   000CC4  0D02               	mullw	2
  2834   000CC6  50F3               	movf	243,w,c
  2835   000CC8  0F01               	addlw	low _dpowers
  2836   000CCA  6E13               	movwf	??_sprintf^0,c
  2837   000CCC  C013  FFF6         	movff	??_sprintf,tblptrl
  2838   000CD0                     	if	1	;There is more than 1 active tblptr byte
  2839   000CD0  0E08               	movlw	high __smallconst
  2840   000CD2  6EF7               	movwf	tblptrh,c
  2841   000CD4                     	endif
  2842   000CD4                     	if	0	;tblptru may be non-zero
  2843   000CD4                     	endif
  2844   000CD4                     	if	0	;tblptru may be non-zero
  2845   000CD4                     	endif
  2846   000CD4  0009               	tblrd		*+
  2847   000CD6  CFF5 F003          	movff	tablat,___lwdiv@divisor
  2848   000CDA  000A               	tblrd		*-
  2849   000CDC  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  2850   000CE0  C017  F001         	movff	sprintf@val,___lwdiv@dividend
  2851   000CE4  C018  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  2852   000CE8  ECF9  F009         	call	___lwdiv	;wreg free
  2853   000CEC  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2854   000CF0  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2855   000CF4  0E00               	movlw	0
  2856   000CF6  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  2857   000CF8  0E0A               	movlw	10
  2858   000CFA  6E0A               	movwf	___lwmod@divisor^0,c
  2859   000CFC  EC6D  F00A         	call	___lwmod	;wreg free
  2860   000D00  5008               	movf	?___lwmod^0,w,c
  2861   000D02  0F30               	addlw	48
  2862   000D04  6E19               	movwf	sprintf@c^0,c
  2863                           
  2864                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2865   000D06  500D               	movf	sprintf@sp^0,w,c
  2866   000D08  6ED9               	movwf	fsr2l,c
  2867   000D0A  6ADA               	clrf	fsr2h,c
  2868   000D0C  C019  FFDF         	movff	sprintf@c,indf2
  2869   000D10  2A0D               	incf	sprintf@sp^0,f,c
  2870   000D12                     l2138:
  2871   000D12  0615               	decf	sprintf@prec^0,f,c
  2872   000D14  2815               	incf	sprintf@prec^0,w,c
  2873   000D16  A4D8               	btfss	status,2,c
  2874   000D18  D7D4               	goto	l2132
  2875   000D1A                     u1360:
  2876   000D1A  2A0E               	incf	sprintf@f^0,f,c
  2877   000D1C  040E               	decf	sprintf@f^0,w,c
  2878   000D1E  6E13               	movwf	??_sprintf^0,c
  2879   000D20  C013  FFF6         	movff	??_sprintf,tblptrl
  2880   000D24                     	if	1	;There is more than 1 active tblptr byte
  2881   000D24  0E08               	movlw	high __smallconst
  2882   000D26  6EF7               	movwf	tblptrh,c
  2883   000D28                     	endif
  2884   000D28                     	if	0	;tblptru may be non-zero
  2885   000D28                     	endif
  2886   000D28                     	if	0	;tblptru may be non-zero
  2887   000D28                     	endif
  2888   000D28  0008               	tblrd		*
  2889   000D2A  CFF5 F019          	movff	tablat,sprintf@c
  2890   000D2E  5019               	movf	sprintf@c^0,w,c
  2891   000D30  A4D8               	btfss	status,2,c
  2892   000D32  D762               	goto	l2080
  2893   000D34                     u1370:
  2894                           
  2895                           ;doprnt.c: 1564: *sp = 0;
  2896   000D34  500D               	movf	sprintf@sp^0,w,c
  2897   000D36  6ED9               	movwf	fsr2l,c
  2898   000D38  6ADA               	clrf	fsr2h,c
  2899   000D3A  6ADF               	clrf	indf2,c
  2900   000D3C  0012               	return		;funcret
  2901   000D3E                     __end_of_sprintf:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function ___lwmod *****************
  2905 ;; Defined at:
  2906 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwmod.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  dividend        2    7[COMRAM] unsigned int 
  2909 ;;  divisor         2    9[COMRAM] unsigned int 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  counter         1   11[COMRAM] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2    7[COMRAM] unsigned int 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2921 ;;      Params:         4       0       0       0       0       0       0       0       0
  2922 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2924 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2925 ;;Total ram usage:        5 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 1
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_sprintf
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text19
  2936   0014DA                     __ptext19:
  2937                           	callstack 0
  2938   0014DA                     ___lwmod:
  2939                           	callstack 27
  2940                           
  2941                           ;incstack = 0
  2942   0014DA  500A               	movf	___lwmod@divisor^0,w,c
  2943   0014DC  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  2944   0014DE  B4D8               	btfsc	status,2,c
  2945   0014E0  D018               	goto	l872
  2946   0014E2  0E01               	movlw	1
  2947   0014E4  6E0C               	movwf	___lwmod@counter^0,c
  2948   0014E6  D004               	goto	l1988
  2949   0014E8                     l1986:
  2950   0014E8  90D8               	bcf	status,0,c
  2951   0014EA  360A               	rlcf	___lwmod@divisor^0,f,c
  2952   0014EC  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  2953   0014EE  2A0C               	incf	___lwmod@counter^0,f,c
  2954   0014F0                     l1988:
  2955   0014F0  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  2956   0014F2  D7FA               	goto	l1986
  2957   0014F4                     u1190:
  2958   0014F4  500A               	movf	___lwmod@divisor^0,w,c
  2959   0014F6  5C08               	subwf	___lwmod@dividend^0,w,c
  2960   0014F8  500B               	movf	(___lwmod@divisor+1)^0,w,c
  2961   0014FA  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  2962   0014FC  A0D8               	btfss	status,0,c
  2963   0014FE  D004               	goto	l1994
  2964   001500  500A               	movf	___lwmod@divisor^0,w,c
  2965   001502  5E08               	subwf	___lwmod@dividend^0,f,c
  2966   001504  500B               	movf	(___lwmod@divisor+1)^0,w,c
  2967   001506  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  2968   001508                     l1994:
  2969   001508  90D8               	bcf	status,0,c
  2970   00150A  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  2971   00150C  320A               	rrcf	___lwmod@divisor^0,f,c
  2972   00150E  2E0C               	decfsz	___lwmod@counter^0,f,c
  2973   001510  D7F1               	goto	u1190
  2974   001512                     l872:
  2975   001512  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2976   001516  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2977   00151A  0012               	return		;funcret
  2978   00151C                     __end_of___lwmod:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function ___lwdiv *****************
  2982 ;; Defined at:
  2983 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwdiv.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  dividend        2    0[COMRAM] unsigned int 
  2986 ;;  divisor         2    2[COMRAM] unsigned int 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  quotient        2    4[COMRAM] unsigned int 
  2989 ;;  counter         1    6[COMRAM] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  2    0[COMRAM] unsigned int 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2999 ;;      Params:         4       0       0       0       0       0       0       0       0
  3000 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3002 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3003 ;;Total ram usage:        7 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 1
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_sprintf
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text20
  3014   0013F2                     __ptext20:
  3015                           	callstack 0
  3016   0013F2                     ___lwdiv:
  3017                           	callstack 27
  3018                           
  3019                           ;incstack = 0
  3020   0013F2  0E00               	movlw	0
  3021   0013F4  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3022   0013F6  0E00               	movlw	0
  3023   0013F8  6E05               	movwf	___lwdiv@quotient^0,c
  3024   0013FA  5003               	movf	___lwdiv@divisor^0,w,c
  3025   0013FC  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3026   0013FE  B4D8               	btfsc	status,2,c
  3027   001400  D01C               	goto	l862
  3028   001402  0E01               	movlw	1
  3029   001404  6E07               	movwf	___lwdiv@counter^0,c
  3030   001406  D004               	goto	l1968
  3031   001408                     l1966:
  3032   001408  90D8               	bcf	status,0,c
  3033   00140A  3603               	rlcf	___lwdiv@divisor^0,f,c
  3034   00140C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3035   00140E  2A07               	incf	___lwdiv@counter^0,f,c
  3036   001410                     l1968:
  3037   001410  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3038   001412  D7FA               	goto	l1966
  3039   001414                     u1160:
  3040   001414  90D8               	bcf	status,0,c
  3041   001416  3605               	rlcf	___lwdiv@quotient^0,f,c
  3042   001418  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3043   00141A  5003               	movf	___lwdiv@divisor^0,w,c
  3044   00141C  5C01               	subwf	___lwdiv@dividend^0,w,c
  3045   00141E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3046   001420  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3047   001422  A0D8               	btfss	status,0,c
  3048   001424  D005               	goto	l1978
  3049   001426  5003               	movf	___lwdiv@divisor^0,w,c
  3050   001428  5E01               	subwf	___lwdiv@dividend^0,f,c
  3051   00142A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3052   00142C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3053   00142E  8005               	bsf	___lwdiv@quotient^0,0,c
  3054   001430                     l1978:
  3055   001430  90D8               	bcf	status,0,c
  3056   001432  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3057   001434  3203               	rrcf	___lwdiv@divisor^0,f,c
  3058   001436  2E07               	decfsz	___lwdiv@counter^0,f,c
  3059   001438  D7ED               	goto	u1160
  3060   00143A                     l862:
  3061   00143A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3062   00143E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3063   001442  0012               	return		;funcret
  3064   001444                     __end_of___lwdiv:
  3065                           	callstack 0
  3066                           
  3067 ;; *************** function ___lbtoft *****************
  3068 ;; Defined at:
  3069 ;;		line 27 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbtoft.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  c               1    wreg     unsigned char 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  c               1   11[COMRAM] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  3    8[COMRAM] float 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 3F/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3083 ;;      Params:         3       0       0       0       0       0       0       0       0
  3084 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3086 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3087 ;;Total ram usage:        4 bytes
  3088 ;; Hardware stack levels used: 1
  3089 ;; Hardware stack levels required when called: 2
  3090 ;; This function calls:
  3091 ;;		___ftpack
  3092 ;; This function is called by:
  3093 ;;		_choose_scale_temperature_and_fill_buffers
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text21
  3098   001586                     __ptext21:
  3099                           	callstack 0
  3100   001586                     ___lbtoft:
  3101                           	callstack 27
  3102                           
  3103                           ;incstack = 0
  3104                           ;___lbtoft@c stored from wreg
  3105   001586  6E0C               	movwf	___lbtoft@c^0,c
  3106   001588  500C               	movf	___lbtoft@c^0,w,c
  3107   00158A  6E01               	movwf	___ftpack@arg^0,c
  3108   00158C  6A02               	clrf	(___ftpack@arg+1)^0,c
  3109   00158E  6A03               	clrf	(___ftpack@arg+2)^0,c
  3110   001590  0E8E               	movlw	142
  3111   001592  6E04               	movwf	___ftpack@exp^0,c
  3112   001594  0E00               	movlw	0
  3113   001596  6E05               	movwf	___ftpack@sign^0,c
  3114   001598  ECF5  F007         	call	___ftpack	;wreg free
  3115   00159C  C001  F009         	movff	?___ftpack,?___lbtoft
  3116   0015A0  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  3117   0015A4  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  3118   0015A8  0012               	return		;funcret
  3119   0015AA                     __end_of___lbtoft:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function ___fttol *****************
  3123 ;; Defined at:
  3124 ;;		line 44 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/fttol.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  f1              3   54[COMRAM] float 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  lval            4   64[COMRAM] unsigned long 
  3129 ;;  exp1            1   68[COMRAM] unsigned char 
  3130 ;;  sign1           1   63[COMRAM] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  4   54[COMRAM] long 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3140 ;;      Params:         4       0       0       0       0       0       0       0       0
  3141 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3142 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3143 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3144 ;;Total ram usage:       15 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 1
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_choose_scale_temperature_and_fill_buffers
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           	psect	text22
  3155   000F18                     __ptext22:
  3156                           	callstack 0
  3157   000F18                     ___fttol:
  3158                           	callstack 28
  3159                           
  3160                           ;incstack = 0
  3161   000F18  C039  F03B         	movff	___fttol@f1+2,??___fttol
  3162   000F1C  6A3C               	clrf	(??___fttol+1)^0,c
  3163   000F1E  6A3D               	clrf	(??___fttol+2)^0,c
  3164   000F20  3438               	rlcf	(___fttol@f1+1)^0,w,c
  3165   000F22  363B               	rlcf	??___fttol^0,f,c
  3166   000F24  E301               	bnc	u1711
  3167   000F26  803C               	bsf	(??___fttol+1)^0,0,c
  3168   000F28                     u1711:
  3169   000F28  503B               	movf	??___fttol^0,w,c
  3170   000F2A  6E45               	movwf	___fttol@exp1^0,c
  3171   000F2C  5045               	movf	___fttol@exp1^0,w,c
  3172   000F2E  A4D8               	btfss	status,2,c
  3173   000F30  D009               	goto	l2322
  3174   000F32                     u1720:
  3175   000F32  0E00               	movlw	0
  3176   000F34  6E37               	movwf	?___fttol^0,c
  3177   000F36  0E00               	movlw	0
  3178   000F38  6E38               	movwf	(?___fttol+1)^0,c
  3179   000F3A  0E00               	movlw	0
  3180   000F3C  6E39               	movwf	(?___fttol+2)^0,c
  3181   000F3E  0E00               	movlw	0
  3182   000F40  6E3A               	movwf	(?___fttol+3)^0,c
  3183   000F42  0012               	return	
  3184   000F44                     l2322:
  3185   000F44  0E17               	movlw	23
  3186   000F46  6E3B               	movwf	??___fttol^0,c
  3187   000F48  C037  F03C         	movff	___fttol@f1,??___fttol+1
  3188   000F4C  C038  F03D         	movff	___fttol@f1+1,??___fttol+2
  3189   000F50  C039  F03E         	movff	___fttol@f1+2,??___fttol+3
  3190   000F54  283B               	incf	??___fttol^0,w,c
  3191   000F56  6E3F               	movwf	(??___fttol+4)^0,c
  3192   000F58  D004               	goto	u1730
  3193   000F5A                     u1735:
  3194   000F5A  90D8               	bcf	status,0,c
  3195   000F5C  323E               	rrcf	(??___fttol+3)^0,f,c
  3196   000F5E  323D               	rrcf	(??___fttol+2)^0,f,c
  3197   000F60  323C               	rrcf	(??___fttol+1)^0,f,c
  3198   000F62                     u1730:
  3199   000F62  2E3F               	decfsz	(??___fttol+4)^0,f,c
  3200   000F64  D7FA               	goto	u1735
  3201   000F66  503C               	movf	(??___fttol+1)^0,w,c
  3202   000F68  6E40               	movwf	___fttol@sign1^0,c
  3203   000F6A  8E38               	bsf	(___fttol@f1+1)^0,7,c
  3204   000F6C  0EFF               	movlw	255
  3205   000F6E  1637               	andwf	___fttol@f1^0,f,c
  3206   000F70  0EFF               	movlw	255
  3207   000F72  1638               	andwf	(___fttol@f1+1)^0,f,c
  3208   000F74  0E00               	movlw	0
  3209   000F76  1639               	andwf	(___fttol@f1+2)^0,f,c
  3210   000F78  5037               	movf	___fttol@f1^0,w,c
  3211   000F7A  6E41               	movwf	___fttol@lval^0,c
  3212   000F7C  5038               	movf	(___fttol@f1+1)^0,w,c
  3213   000F7E  6E42               	movwf	(___fttol@lval+1)^0,c
  3214   000F80  5039               	movf	(___fttol@f1+2)^0,w,c
  3215   000F82  6E43               	movwf	(___fttol@lval+2)^0,c
  3216   000F84  6A44               	clrf	(___fttol@lval+3)^0,c
  3217   000F86  0E8E               	movlw	142
  3218   000F88  5E45               	subwf	___fttol@exp1^0,f,c
  3219   000F8A  AE45               	btfss	___fttol@exp1^0,7,c
  3220   000F8C  D00D               	goto	l2344
  3221   000F8E  5045               	movf	___fttol@exp1^0,w,c
  3222   000F90  0A80               	xorlw	128
  3223   000F92  0F8F               	addlw	143
  3224   000F94  A0D8               	btfss	status,0,c
  3225   000F96  D7CD               	goto	u1720
  3226   000F98                     l2340:
  3227   000F98  90D8               	bcf	status,0,c
  3228   000F9A  3244               	rrcf	(___fttol@lval+3)^0,f,c
  3229   000F9C  3243               	rrcf	(___fttol@lval+2)^0,f,c
  3230   000F9E  3242               	rrcf	(___fttol@lval+1)^0,f,c
  3231   000FA0  3241               	rrcf	___fttol@lval^0,f,c
  3232   000FA2  3E45               	incfsz	___fttol@exp1^0,f,c
  3233   000FA4  D7F9               	goto	l2340
  3234   000FA6  D00D               	goto	u1770
  3235   000FA8                     l2344:
  3236   000FA8  0E17               	movlw	23
  3237   000FAA  6445               	cpfsgt	___fttol@exp1^0,c
  3238   000FAC  D007               	goto	l2352
  3239   000FAE  D7C1               	goto	u1720
  3240   000FB0                     l2350:
  3241   000FB0  90D8               	bcf	status,0,c
  3242   000FB2  3641               	rlcf	___fttol@lval^0,f,c
  3243   000FB4  3642               	rlcf	(___fttol@lval+1)^0,f,c
  3244   000FB6  3643               	rlcf	(___fttol@lval+2)^0,f,c
  3245   000FB8  3644               	rlcf	(___fttol@lval+3)^0,f,c
  3246   000FBA  0645               	decf	___fttol@exp1^0,f,c
  3247   000FBC                     l2352:
  3248   000FBC  5045               	movf	___fttol@exp1^0,w,c
  3249   000FBE  A4D8               	btfss	status,2,c
  3250   000FC0  D7F7               	goto	l2350
  3251   000FC2                     u1770:
  3252   000FC2  5040               	movf	___fttol@sign1^0,w,c
  3253   000FC4  B4D8               	btfsc	status,2,c
  3254   000FC6  D008               	goto	l2358
  3255   000FC8  1E44               	comf	(___fttol@lval+3)^0,f,c
  3256   000FCA  1E43               	comf	(___fttol@lval+2)^0,f,c
  3257   000FCC  1E42               	comf	(___fttol@lval+1)^0,f,c
  3258   000FCE  6C41               	negf	___fttol@lval^0,c
  3259   000FD0  0E00               	movlw	0
  3260   000FD2  2242               	addwfc	(___fttol@lval+1)^0,f,c
  3261   000FD4  2243               	addwfc	(___fttol@lval+2)^0,f,c
  3262   000FD6  2244               	addwfc	(___fttol@lval+3)^0,f,c
  3263   000FD8                     l2358:
  3264   000FD8  C041  F037         	movff	___fttol@lval,?___fttol
  3265   000FDC  C042  F038         	movff	___fttol@lval+1,?___fttol+1
  3266   000FE0  C043  F039         	movff	___fttol@lval+2,?___fttol+2
  3267   000FE4  C044  F03A         	movff	___fttol@lval+3,?___fttol+3
  3268   000FE8  0012               	return		;funcret
  3269   000FEA                     __end_of___fttol:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function ___ftmul *****************
  3273 ;; Defined at:
  3274 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftmul.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  f1              3   12[COMRAM] float 
  3277 ;;  f2              3   15[COMRAM] float 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3280 ;;  sign            1   26[COMRAM] unsigned char 
  3281 ;;  cntr            1   25[COMRAM] unsigned char 
  3282 ;;  exp             1   21[COMRAM] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  3   12[COMRAM] float 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3292 ;;      Params:         6       0       0       0       0       0       0       0       0
  3293 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3294 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3295 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3296 ;;Total ram usage:       15 bytes
  3297 ;; Hardware stack levels used: 1
  3298 ;; Hardware stack levels required when called: 2
  3299 ;; This function calls:
  3300 ;;		___ftpack
  3301 ;; This function is called by:
  3302 ;;		_choose_scale_temperature_and_fill_buffers
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text23
  3307   000D3E                     __ptext23:
  3308                           	callstack 0
  3309   000D3E                     ___ftmul:
  3310                           	callstack 27
  3311                           
  3312                           ;incstack = 0
  3313   000D3E  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3314   000D42  6A14               	clrf	(??___ftmul+1)^0,c
  3315   000D44  6A15               	clrf	(??___ftmul+2)^0,c
  3316   000D46  340E               	rlcf	(___ftmul@f1+1)^0,w,c
  3317   000D48  3613               	rlcf	??___ftmul^0,f,c
  3318   000D4A  E301               	bnc	u1651
  3319   000D4C  8014               	bsf	(??___ftmul+1)^0,0,c
  3320   000D4E                     u1651:
  3321   000D4E  5013               	movf	??___ftmul^0,w,c
  3322   000D50  6E16               	movwf	___ftmul@exp^0,c
  3323   000D52  5016               	movf	___ftmul@exp^0,w,c
  3324   000D54  A4D8               	btfss	status,2,c
  3325   000D56  D007               	goto	l2274
  3326   000D58  0E00               	movlw	0
  3327   000D5A  6E0D               	movwf	?___ftmul^0,c
  3328   000D5C  0E00               	movlw	0
  3329   000D5E  6E0E               	movwf	(?___ftmul+1)^0,c
  3330   000D60  0E00               	movlw	0
  3331   000D62  6E0F               	movwf	(?___ftmul+2)^0,c
  3332   000D64  0012               	return	
  3333   000D66                     l2274:
  3334   000D66  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3335   000D6A  6A14               	clrf	(??___ftmul+1)^0,c
  3336   000D6C  6A15               	clrf	(??___ftmul+2)^0,c
  3337   000D6E  3411               	rlcf	(___ftmul@f2+1)^0,w,c
  3338   000D70  3613               	rlcf	??___ftmul^0,f,c
  3339   000D72  E301               	bnc	u1671
  3340   000D74  8014               	bsf	(??___ftmul+1)^0,0,c
  3341   000D76                     u1671:
  3342   000D76  5013               	movf	??___ftmul^0,w,c
  3343   000D78  6E1B               	movwf	___ftmul@sign^0,c
  3344   000D7A  501B               	movf	___ftmul@sign^0,w,c
  3345   000D7C  A4D8               	btfss	status,2,c
  3346   000D7E  D007               	goto	l2280
  3347   000D80  0E00               	movlw	0
  3348   000D82  6E0D               	movwf	?___ftmul^0,c
  3349   000D84  0E00               	movlw	0
  3350   000D86  6E0E               	movwf	(?___ftmul+1)^0,c
  3351   000D88  0E00               	movlw	0
  3352   000D8A  6E0F               	movwf	(?___ftmul+2)^0,c
  3353   000D8C  0012               	return	
  3354   000D8E                     l2280:
  3355   000D8E  501B               	movf	___ftmul@sign^0,w,c
  3356   000D90  0F7B               	addlw	123
  3357   000D92  2616               	addwf	___ftmul@exp^0,f,c
  3358   000D94  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3359   000D98  5012               	movf	(___ftmul@f2+2)^0,w,c
  3360   000D9A  1A1B               	xorwf	___ftmul@sign^0,f,c
  3361   000D9C  0E80               	movlw	128
  3362   000D9E  161B               	andwf	___ftmul@sign^0,f,c
  3363   000DA0  8E0E               	bsf	(___ftmul@f1+1)^0,7,c
  3364   000DA2  8E11               	bsf	(___ftmul@f2+1)^0,7,c
  3365   000DA4  0EFF               	movlw	255
  3366   000DA6  1610               	andwf	___ftmul@f2^0,f,c
  3367   000DA8  0EFF               	movlw	255
  3368   000DAA  1611               	andwf	(___ftmul@f2+1)^0,f,c
  3369   000DAC  0E00               	movlw	0
  3370   000DAE  1612               	andwf	(___ftmul@f2+2)^0,f,c
  3371   000DB0  0E00               	movlw	0
  3372   000DB2  6E17               	movwf	___ftmul@f3_as_product^0,c
  3373   000DB4  0E00               	movlw	0
  3374   000DB6  6E18               	movwf	(___ftmul@f3_as_product+1)^0,c
  3375   000DB8  0E00               	movlw	0
  3376   000DBA  6E19               	movwf	(___ftmul@f3_as_product+2)^0,c
  3377   000DBC  0E07               	movlw	7
  3378   000DBE  6E1A               	movwf	___ftmul@cntr^0,c
  3379   000DC0                     l2294:
  3380   000DC0  A00D               	btfss	___ftmul@f1^0,0,c
  3381   000DC2  D006               	goto	l2298
  3382   000DC4  5010               	movf	___ftmul@f2^0,w,c
  3383   000DC6  2617               	addwf	___ftmul@f3_as_product^0,f,c
  3384   000DC8  5011               	movf	(___ftmul@f2+1)^0,w,c
  3385   000DCA  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  3386   000DCC  5012               	movf	(___ftmul@f2+2)^0,w,c
  3387   000DCE  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  3388   000DD0                     l2298:
  3389   000DD0  90D8               	bcf	status,0,c
  3390   000DD2  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  3391   000DD4  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  3392   000DD6  320D               	rrcf	___ftmul@f1^0,f,c
  3393   000DD8  90D8               	bcf	status,0,c
  3394   000DDA  3610               	rlcf	___ftmul@f2^0,f,c
  3395   000DDC  3611               	rlcf	(___ftmul@f2+1)^0,f,c
  3396   000DDE  3612               	rlcf	(___ftmul@f2+2)^0,f,c
  3397   000DE0  2E1A               	decfsz	___ftmul@cntr^0,f,c
  3398   000DE2  D7EE               	goto	l2294
  3399   000DE4  0E09               	movlw	9
  3400   000DE6  6E1A               	movwf	___ftmul@cntr^0,c
  3401   000DE8                     l2304:
  3402   000DE8  A00D               	btfss	___ftmul@f1^0,0,c
  3403   000DEA  D006               	goto	l2308
  3404   000DEC  5010               	movf	___ftmul@f2^0,w,c
  3405   000DEE  2617               	addwf	___ftmul@f3_as_product^0,f,c
  3406   000DF0  5011               	movf	(___ftmul@f2+1)^0,w,c
  3407   000DF2  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  3408   000DF4  5012               	movf	(___ftmul@f2+2)^0,w,c
  3409   000DF6  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  3410   000DF8                     l2308:
  3411   000DF8  90D8               	bcf	status,0,c
  3412   000DFA  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  3413   000DFC  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  3414   000DFE  320D               	rrcf	___ftmul@f1^0,f,c
  3415   000E00  90D8               	bcf	status,0,c
  3416   000E02  3219               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  3417   000E04  3218               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  3418   000E06  3217               	rrcf	___ftmul@f3_as_product^0,f,c
  3419   000E08  2E1A               	decfsz	___ftmul@cntr^0,f,c
  3420   000E0A  D7EE               	goto	l2304
  3421   000E0C  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3422   000E10  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3423   000E14  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3424   000E18  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3425   000E1C  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3426   000E20  ECF5  F007         	call	___ftpack	;wreg free
  3427   000E24  C001  F00D         	movff	?___ftpack,?___ftmul
  3428   000E28  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3429   000E2C  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3430   000E30  0012               	return		;funcret
  3431   000E32                     __end_of___ftmul:
  3432                           	callstack 0
  3433                           
  3434 ;; *************** function ___ftdiv *****************
  3435 ;; Defined at:
  3436 ;;		line 54 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftdiv.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  f1              3   27[COMRAM] float 
  3439 ;;  f2              3   30[COMRAM] float 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  f3              3   37[COMRAM] float 
  3442 ;;  sign            1   41[COMRAM] unsigned char 
  3443 ;;  exp             1   40[COMRAM] unsigned char 
  3444 ;;  cntr            1   36[COMRAM] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  3   27[COMRAM] float 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3454 ;;      Params:         6       0       0       0       0       0       0       0       0
  3455 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3456 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3457 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3458 ;;Total ram usage:       15 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 2
  3461 ;; This function calls:
  3462 ;;		___ftpack
  3463 ;; This function is called by:
  3464 ;;		_choose_scale_temperature_and_fill_buffers
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text24
  3469   000E32                     __ptext24:
  3470                           	callstack 0
  3471   000E32                     ___ftdiv:
  3472                           	callstack 27
  3473                           
  3474                           ;incstack = 0
  3475   000E32  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  3476   000E36  6A23               	clrf	(??___ftdiv+1)^0,c
  3477   000E38  6A24               	clrf	(??___ftdiv+2)^0,c
  3478   000E3A  341D               	rlcf	(___ftdiv@f1+1)^0,w,c
  3479   000E3C  3622               	rlcf	??___ftdiv^0,f,c
  3480   000E3E  E301               	bnc	u1601
  3481   000E40  8023               	bsf	(??___ftdiv+1)^0,0,c
  3482   000E42                     u1601:
  3483   000E42  5022               	movf	??___ftdiv^0,w,c
  3484   000E44  6E29               	movwf	___ftdiv@exp^0,c
  3485   000E46  5029               	movf	___ftdiv@exp^0,w,c
  3486   000E48  A4D8               	btfss	status,2,c
  3487   000E4A  D007               	goto	l2228
  3488   000E4C  0E00               	movlw	0
  3489   000E4E  6E1C               	movwf	?___ftdiv^0,c
  3490   000E50  0E00               	movlw	0
  3491   000E52  6E1D               	movwf	(?___ftdiv+1)^0,c
  3492   000E54  0E00               	movlw	0
  3493   000E56  6E1E               	movwf	(?___ftdiv+2)^0,c
  3494   000E58  0012               	return	
  3495   000E5A                     l2228:
  3496   000E5A  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  3497   000E5E  6A23               	clrf	(??___ftdiv+1)^0,c
  3498   000E60  6A24               	clrf	(??___ftdiv+2)^0,c
  3499   000E62  3420               	rlcf	(___ftdiv@f2+1)^0,w,c
  3500   000E64  3622               	rlcf	??___ftdiv^0,f,c
  3501   000E66  E301               	bnc	u1621
  3502   000E68  8023               	bsf	(??___ftdiv+1)^0,0,c
  3503   000E6A                     u1621:
  3504   000E6A  5022               	movf	??___ftdiv^0,w,c
  3505   000E6C  6E2A               	movwf	___ftdiv@sign^0,c
  3506   000E6E  502A               	movf	___ftdiv@sign^0,w,c
  3507   000E70  A4D8               	btfss	status,2,c
  3508   000E72  D007               	goto	l2234
  3509   000E74  0E00               	movlw	0
  3510   000E76  6E1C               	movwf	?___ftdiv^0,c
  3511   000E78  0E00               	movlw	0
  3512   000E7A  6E1D               	movwf	(?___ftdiv+1)^0,c
  3513   000E7C  0E00               	movlw	0
  3514   000E7E  6E1E               	movwf	(?___ftdiv+2)^0,c
  3515   000E80  0012               	return	
  3516   000E82                     l2234:
  3517   000E82  0E00               	movlw	0
  3518   000E84  6E26               	movwf	___ftdiv@f3^0,c
  3519   000E86  0E00               	movlw	0
  3520   000E88  6E27               	movwf	(___ftdiv@f3+1)^0,c
  3521   000E8A  0E00               	movlw	0
  3522   000E8C  6E28               	movwf	(___ftdiv@f3+2)^0,c
  3523   000E8E  502A               	movf	___ftdiv@sign^0,w,c
  3524   000E90  0F89               	addlw	137
  3525   000E92  5E29               	subwf	___ftdiv@exp^0,f,c
  3526   000E94  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3527   000E98  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3528   000E9A  1A2A               	xorwf	___ftdiv@sign^0,f,c
  3529   000E9C  0E80               	movlw	128
  3530   000E9E  162A               	andwf	___ftdiv@sign^0,f,c
  3531   000EA0  8E1D               	bsf	(___ftdiv@f1+1)^0,7,c
  3532   000EA2  0EFF               	movlw	255
  3533   000EA4  161C               	andwf	___ftdiv@f1^0,f,c
  3534   000EA6  0EFF               	movlw	255
  3535   000EA8  161D               	andwf	(___ftdiv@f1+1)^0,f,c
  3536   000EAA  0E00               	movlw	0
  3537   000EAC  161E               	andwf	(___ftdiv@f1+2)^0,f,c
  3538   000EAE  8E20               	bsf	(___ftdiv@f2+1)^0,7,c
  3539   000EB0  0EFF               	movlw	255
  3540   000EB2  161F               	andwf	___ftdiv@f2^0,f,c
  3541   000EB4  0EFF               	movlw	255
  3542   000EB6  1620               	andwf	(___ftdiv@f2+1)^0,f,c
  3543   000EB8  0E00               	movlw	0
  3544   000EBA  1621               	andwf	(___ftdiv@f2+2)^0,f,c
  3545   000EBC  0E18               	movlw	24
  3546   000EBE  6E25               	movwf	___ftdiv@cntr^0,c
  3547   000EC0                     l2254:
  3548   000EC0  90D8               	bcf	status,0,c
  3549   000EC2  3626               	rlcf	___ftdiv@f3^0,f,c
  3550   000EC4  3627               	rlcf	(___ftdiv@f3+1)^0,f,c
  3551   000EC6  3628               	rlcf	(___ftdiv@f3+2)^0,f,c
  3552   000EC8  501F               	movf	___ftdiv@f2^0,w,c
  3553   000ECA  5C1C               	subwf	___ftdiv@f1^0,w,c
  3554   000ECC  5020               	movf	(___ftdiv@f2+1)^0,w,c
  3555   000ECE  581D               	subwfb	(___ftdiv@f1+1)^0,w,c
  3556   000ED0  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3557   000ED2  581E               	subwfb	(___ftdiv@f1+2)^0,w,c
  3558   000ED4  A0D8               	btfss	status,0,c
  3559   000ED6  D007               	goto	l724
  3560   000ED8  501F               	movf	___ftdiv@f2^0,w,c
  3561   000EDA  5E1C               	subwf	___ftdiv@f1^0,f,c
  3562   000EDC  5020               	movf	(___ftdiv@f2+1)^0,w,c
  3563   000EDE  5A1D               	subwfb	(___ftdiv@f1+1)^0,f,c
  3564   000EE0  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3565   000EE2  5A1E               	subwfb	(___ftdiv@f1+2)^0,f,c
  3566   000EE4  8026               	bsf	___ftdiv@f3^0,0,c
  3567   000EE6                     l724:
  3568   000EE6  90D8               	bcf	status,0,c
  3569   000EE8  361C               	rlcf	___ftdiv@f1^0,f,c
  3570   000EEA  361D               	rlcf	(___ftdiv@f1+1)^0,f,c
  3571   000EEC  361E               	rlcf	(___ftdiv@f1+2)^0,f,c
  3572   000EEE  2E25               	decfsz	___ftdiv@cntr^0,f,c
  3573   000EF0  D7E7               	goto	l2254
  3574   000EF2  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  3575   000EF6  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3576   000EFA  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3577   000EFE  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  3578   000F02  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  3579   000F06  ECF5  F007         	call	___ftpack	;wreg free
  3580   000F0A  C001  F01C         	movff	?___ftpack,?___ftdiv
  3581   000F0E  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  3582   000F12  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  3583   000F16  0012               	return		;funcret
  3584   000F18                     __end_of___ftdiv:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function ___ftadd *****************
  3588 ;; Defined at:
  3589 ;;		line 86 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftadd.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  f1              3   42[COMRAM] float 
  3592 ;;  f2              3   45[COMRAM] float 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  exp1            1   53[COMRAM] unsigned char 
  3595 ;;  exp2            1   52[COMRAM] unsigned char 
  3596 ;;  sign            1   51[COMRAM] unsigned char 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  3   42[COMRAM] float 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3606 ;;      Params:         6       0       0       0       0       0       0       0       0
  3607 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3608 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3609 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3610 ;;Total ram usage:       12 bytes
  3611 ;; Hardware stack levels used: 1
  3612 ;; Hardware stack levels required when called: 2
  3613 ;; This function calls:
  3614 ;;		___ftpack
  3615 ;; This function is called by:
  3616 ;;		_choose_scale_temperature_and_fill_buffers
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text25
  3621   000A4A                     __ptext25:
  3622                           	callstack 0
  3623   000A4A                     ___ftadd:
  3624                           	callstack 27
  3625                           
  3626                           ;incstack = 0
  3627   000A4A  C02D  F031         	movff	___ftadd@f1+2,??___ftadd
  3628   000A4E  6A32               	clrf	(??___ftadd+1)^0,c
  3629   000A50  6A33               	clrf	(??___ftadd+2)^0,c
  3630   000A52  342C               	rlcf	(___ftadd@f1+1)^0,w,c
  3631   000A54  3631               	rlcf	??___ftadd^0,f,c
  3632   000A56  E301               	bnc	u1391
  3633   000A58  8032               	bsf	(??___ftadd+1)^0,0,c
  3634   000A5A                     u1391:
  3635   000A5A  5031               	movf	??___ftadd^0,w,c
  3636   000A5C  6E36               	movwf	___ftadd@exp1^0,c
  3637   000A5E  C030  F031         	movff	___ftadd@f2+2,??___ftadd
  3638   000A62  6A32               	clrf	(??___ftadd+1)^0,c
  3639   000A64  6A33               	clrf	(??___ftadd+2)^0,c
  3640   000A66  342F               	rlcf	(___ftadd@f2+1)^0,w,c
  3641   000A68  3631               	rlcf	??___ftadd^0,f,c
  3642   000A6A  E301               	bnc	u1401
  3643   000A6C  8032               	bsf	(??___ftadd+1)^0,0,c
  3644   000A6E                     u1401:
  3645   000A6E  5031               	movf	??___ftadd^0,w,c
  3646   000A70  6E35               	movwf	___ftadd@exp2^0,c
  3647   000A72  5036               	movf	___ftadd@exp1^0,w,c
  3648   000A74  B4D8               	btfsc	status,2,c
  3649   000A76  D00A               	goto	u1430
  3650   000A78  5035               	movf	___ftadd@exp2^0,w,c
  3651   000A7A  5C36               	subwf	___ftadd@exp1^0,w,c
  3652   000A7C  B0D8               	btfsc	status,0,c
  3653   000A7E  D00D               	goto	l2160
  3654   000A80  5036               	movf	___ftadd@exp1^0,w,c
  3655   000A82  5C35               	subwf	___ftadd@exp2^0,w,c
  3656   000A84  6E31               	movwf	??___ftadd^0,c
  3657   000A86  0E18               	movlw	24
  3658   000A88  6431               	cpfsgt	??___ftadd^0,c
  3659   000A8A  D007               	goto	l2160
  3660   000A8C                     u1430:
  3661   000A8C  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  3662   000A90  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  3663   000A94  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  3664   000A98  0012               	return	
  3665   000A9A                     l2160:
  3666   000A9A  5035               	movf	___ftadd@exp2^0,w,c
  3667   000A9C  B4D8               	btfsc	status,2,c
  3668   000A9E  D00A               	goto	u1460
  3669   000AA0  5036               	movf	___ftadd@exp1^0,w,c
  3670   000AA2  5C35               	subwf	___ftadd@exp2^0,w,c
  3671   000AA4  B0D8               	btfsc	status,0,c
  3672   000AA6  D00D               	goto	l2166
  3673   000AA8  5035               	movf	___ftadd@exp2^0,w,c
  3674   000AAA  5C36               	subwf	___ftadd@exp1^0,w,c
  3675   000AAC  6E31               	movwf	??___ftadd^0,c
  3676   000AAE  0E18               	movlw	24
  3677   000AB0  6431               	cpfsgt	??___ftadd^0,c
  3678   000AB2  D007               	goto	l2166
  3679   000AB4                     u1460:
  3680   000AB4  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  3681   000AB8  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  3682   000ABC  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  3683   000AC0  0012               	return	
  3684   000AC2                     l2166:
  3685   000AC2  0E06               	movlw	6
  3686   000AC4  6E34               	movwf	___ftadd@sign^0,c
  3687   000AC6  BE2D               	btfsc	(___ftadd@f1+2)^0,7,c
  3688   000AC8  8E34               	bsf	___ftadd@sign^0,7,c
  3689   000ACA  BE30               	btfsc	(___ftadd@f2+2)^0,7,c
  3690   000ACC  8C34               	bsf	___ftadd@sign^0,6,c
  3691   000ACE  8E2C               	bsf	(___ftadd@f1+1)^0,7,c
  3692   000AD0  0EFF               	movlw	255
  3693   000AD2  162B               	andwf	___ftadd@f1^0,f,c
  3694   000AD4  0EFF               	movlw	255
  3695   000AD6  162C               	andwf	(___ftadd@f1+1)^0,f,c
  3696   000AD8  0E00               	movlw	0
  3697   000ADA  162D               	andwf	(___ftadd@f1+2)^0,f,c
  3698   000ADC  8E2F               	bsf	(___ftadd@f2+1)^0,7,c
  3699   000ADE  0EFF               	movlw	255
  3700   000AE0  162E               	andwf	___ftadd@f2^0,f,c
  3701   000AE2  0EFF               	movlw	255
  3702   000AE4  162F               	andwf	(___ftadd@f2+1)^0,f,c
  3703   000AE6  0E00               	movlw	0
  3704   000AE8  1630               	andwf	(___ftadd@f2+2)^0,f,c
  3705   000AEA  5035               	movf	___ftadd@exp2^0,w,c
  3706   000AEC  5C36               	subwf	___ftadd@exp1^0,w,c
  3707   000AEE  B0D8               	btfsc	status,0,c
  3708   000AF0  D01B               	goto	l2192
  3709   000AF2                     u1490:
  3710   000AF2  90D8               	bcf	status,0,c
  3711   000AF4  362E               	rlcf	___ftadd@f2^0,f,c
  3712   000AF6  362F               	rlcf	(___ftadd@f2+1)^0,f,c
  3713   000AF8  3630               	rlcf	(___ftadd@f2+2)^0,f,c
  3714   000AFA  0635               	decf	___ftadd@exp2^0,f,c
  3715   000AFC  5036               	movf	___ftadd@exp1^0,w,c
  3716   000AFE  1835               	xorwf	___ftadd@exp2^0,w,c
  3717   000B00  B4D8               	btfsc	status,2,c
  3718   000B02  D00D               	goto	l2190
  3719   000B04  0634               	decf	___ftadd@sign^0,f,c
  3720   000B06  C034  F031         	movff	___ftadd@sign,??___ftadd
  3721   000B0A  0E07               	movlw	7
  3722   000B0C  1631               	andwf	??___ftadd^0,f,c
  3723   000B0E  B4D8               	btfsc	status,2,c
  3724   000B10  D006               	goto	l2190
  3725   000B12  D7EF               	goto	u1490
  3726   000B14                     l2188:
  3727   000B14  90D8               	bcf	status,0,c
  3728   000B16  322D               	rrcf	(___ftadd@f1+2)^0,f,c
  3729   000B18  322C               	rrcf	(___ftadd@f1+1)^0,f,c
  3730   000B1A  322B               	rrcf	___ftadd@f1^0,f,c
  3731   000B1C  2A36               	incf	___ftadd@exp1^0,f,c
  3732   000B1E                     l2190:
  3733   000B1E  5035               	movf	___ftadd@exp2^0,w,c
  3734   000B20  1836               	xorwf	___ftadd@exp1^0,w,c
  3735   000B22  B4D8               	btfsc	status,2,c
  3736   000B24  D01F               	goto	u1560
  3737   000B26  D7F6               	goto	l2188
  3738   000B28                     l2192:
  3739   000B28  5036               	movf	___ftadd@exp1^0,w,c
  3740   000B2A  5C35               	subwf	___ftadd@exp2^0,w,c
  3741   000B2C  B0D8               	btfsc	status,0,c
  3742   000B2E  D01A               	goto	u1560
  3743   000B30                     u1530:
  3744   000B30  90D8               	bcf	status,0,c
  3745   000B32  362B               	rlcf	___ftadd@f1^0,f,c
  3746   000B34  362C               	rlcf	(___ftadd@f1+1)^0,f,c
  3747   000B36  362D               	rlcf	(___ftadd@f1+2)^0,f,c
  3748   000B38  0636               	decf	___ftadd@exp1^0,f,c
  3749   000B3A  5036               	movf	___ftadd@exp1^0,w,c
  3750   000B3C  1835               	xorwf	___ftadd@exp2^0,w,c
  3751   000B3E  B4D8               	btfsc	status,2,c
  3752   000B40  D00D               	goto	l2202
  3753   000B42  0634               	decf	___ftadd@sign^0,f,c
  3754   000B44  C034  F031         	movff	___ftadd@sign,??___ftadd
  3755   000B48  0E07               	movlw	7
  3756   000B4A  1631               	andwf	??___ftadd^0,f,c
  3757   000B4C  B4D8               	btfsc	status,2,c
  3758   000B4E  D006               	goto	l2202
  3759   000B50  D7EF               	goto	u1530
  3760   000B52                     l2200:
  3761   000B52  90D8               	bcf	status,0,c
  3762   000B54  3230               	rrcf	(___ftadd@f2+2)^0,f,c
  3763   000B56  322F               	rrcf	(___ftadd@f2+1)^0,f,c
  3764   000B58  322E               	rrcf	___ftadd@f2^0,f,c
  3765   000B5A  2A35               	incf	___ftadd@exp2^0,f,c
  3766   000B5C                     l2202:
  3767   000B5C  5035               	movf	___ftadd@exp2^0,w,c
  3768   000B5E  1836               	xorwf	___ftadd@exp1^0,w,c
  3769   000B60  A4D8               	btfss	status,2,c
  3770   000B62  D7F7               	goto	l2200
  3771   000B64                     u1560:
  3772   000B64  AE34               	btfss	___ftadd@sign^0,7,c
  3773   000B66  D00C               	goto	l713
  3774   000B68  0EFF               	movlw	255
  3775   000B6A  1A2B               	xorwf	___ftadd@f1^0,f,c
  3776   000B6C  0EFF               	movlw	255
  3777   000B6E  1A2C               	xorwf	(___ftadd@f1+1)^0,f,c
  3778   000B70  0EFF               	movlw	255
  3779   000B72  1A2D               	xorwf	(___ftadd@f1+2)^0,f,c
  3780   000B74  0E01               	movlw	1
  3781   000B76  262B               	addwf	___ftadd@f1^0,f,c
  3782   000B78  0E00               	movlw	0
  3783   000B7A  222C               	addwfc	(___ftadd@f1+1)^0,f,c
  3784   000B7C  0E00               	movlw	0
  3785   000B7E  222D               	addwfc	(___ftadd@f1+2)^0,f,c
  3786   000B80                     l713:
  3787   000B80  AC34               	btfss	___ftadd@sign^0,6,c
  3788   000B82  D00C               	goto	l2208
  3789   000B84  0EFF               	movlw	255
  3790   000B86  1A2E               	xorwf	___ftadd@f2^0,f,c
  3791   000B88  0EFF               	movlw	255
  3792   000B8A  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  3793   000B8C  0EFF               	movlw	255
  3794   000B8E  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  3795   000B90  0E01               	movlw	1
  3796   000B92  262E               	addwf	___ftadd@f2^0,f,c
  3797   000B94  0E00               	movlw	0
  3798   000B96  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  3799   000B98  0E00               	movlw	0
  3800   000B9A  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  3801   000B9C                     l2208:
  3802   000B9C  0E00               	movlw	0
  3803   000B9E  6E34               	movwf	___ftadd@sign^0,c
  3804   000BA0  502B               	movf	___ftadd@f1^0,w,c
  3805   000BA2  262E               	addwf	___ftadd@f2^0,f,c
  3806   000BA4  502C               	movf	(___ftadd@f1+1)^0,w,c
  3807   000BA6  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  3808   000BA8  502D               	movf	(___ftadd@f1+2)^0,w,c
  3809   000BAA  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  3810   000BAC  AE30               	btfss	(___ftadd@f2+2)^0,7,c
  3811   000BAE  D00E               	goto	l2218
  3812   000BB0  0EFF               	movlw	255
  3813   000BB2  1A2E               	xorwf	___ftadd@f2^0,f,c
  3814   000BB4  0EFF               	movlw	255
  3815   000BB6  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  3816   000BB8  0EFF               	movlw	255
  3817   000BBA  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  3818   000BBC  0E01               	movlw	1
  3819   000BBE  262E               	addwf	___ftadd@f2^0,f,c
  3820   000BC0  0E00               	movlw	0
  3821   000BC2  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  3822   000BC4  0E00               	movlw	0
  3823   000BC6  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  3824   000BC8  0E01               	movlw	1
  3825   000BCA  6E34               	movwf	___ftadd@sign^0,c
  3826   000BCC                     l2218:
  3827   000BCC  C02E  F001         	movff	___ftadd@f2,___ftpack@arg
  3828   000BD0  C02F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3829   000BD4  C030  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3830   000BD8  C036  F004         	movff	___ftadd@exp1,___ftpack@exp
  3831   000BDC  C034  F005         	movff	___ftadd@sign,___ftpack@sign
  3832   000BE0  ECF5  F007         	call	___ftpack	;wreg free
  3833   000BE4  C001  F02B         	movff	?___ftpack,?___ftadd
  3834   000BE8  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  3835   000BEC  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  3836   000BF0  0012               	return		;funcret
  3837   000BF2                     __end_of___ftadd:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function ___ftpack *****************
  3841 ;; Defined at:
  3842 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/float.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  arg             3    0[COMRAM] unsigned um
  3845 ;;  exp             1    3[COMRAM] unsigned char 
  3846 ;;  sign            1    4[COMRAM] unsigned char 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  3    0[COMRAM] float 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3858 ;;      Params:         5       0       0       0       0       0       0       0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3860 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3861 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3862 ;;Total ram usage:        8 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 1
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		___ftadd
  3869 ;;		___ftdiv
  3870 ;;		___ftmul
  3871 ;;		___lbtoft
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text26
  3876   000FEA                     __ptext26:
  3877                           	callstack 0
  3878   000FEA                     ___ftpack:
  3879                           	callstack 27
  3880                           
  3881                           ;incstack = 0
  3882   000FEA  5004               	movf	___ftpack@exp^0,w,c
  3883   000FEC  B4D8               	btfsc	status,2,c
  3884   000FEE  D005               	goto	u1080
  3885   000FF0  5001               	movf	___ftpack@arg^0,w,c
  3886   000FF2  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  3887   000FF4  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  3888   000FF6  A4D8               	btfss	status,2,c
  3889   000FF8  D00C               	goto	l1934
  3890   000FFA                     u1080:
  3891   000FFA  0E00               	movlw	0
  3892   000FFC  6E01               	movwf	?___ftpack^0,c
  3893   000FFE  0E00               	movlw	0
  3894   001000  6E02               	movwf	(?___ftpack+1)^0,c
  3895   001002  0E00               	movlw	0
  3896   001004  6E03               	movwf	(?___ftpack+2)^0,c
  3897   001006  0012               	return	
  3898   001008                     l1932:
  3899   001008  2A04               	incf	___ftpack@exp^0,f,c
  3900   00100A  90D8               	bcf	status,0,c
  3901   00100C  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  3902   00100E  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  3903   001010  3201               	rrcf	___ftpack@arg^0,f,c
  3904   001012                     l1934:
  3905   001012  0E00               	movlw	0
  3906   001014  1401               	andwf	___ftpack@arg^0,w,c
  3907   001016  6E06               	movwf	??___ftpack^0,c
  3908   001018  0E00               	movlw	0
  3909   00101A  1402               	andwf	(___ftpack@arg+1)^0,w,c
  3910   00101C  6E07               	movwf	(??___ftpack+1)^0,c
  3911   00101E  0EFE               	movlw	254
  3912   001020  1403               	andwf	(___ftpack@arg+2)^0,w,c
  3913   001022  6E08               	movwf	(??___ftpack+2)^0,c
  3914   001024  5006               	movf	??___ftpack^0,w,c
  3915   001026  1007               	iorwf	(??___ftpack+1)^0,w,c
  3916   001028  1008               	iorwf	(??___ftpack+2)^0,w,c
  3917   00102A  B4D8               	btfsc	status,2,c
  3918   00102C  D00C               	goto	l1940
  3919   00102E  D7EC               	goto	l1932
  3920   001030                     l1936:
  3921   001030  2A04               	incf	___ftpack@exp^0,f,c
  3922   001032  0E01               	movlw	1
  3923   001034  2601               	addwf	___ftpack@arg^0,f,c
  3924   001036  0E00               	movlw	0
  3925   001038  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  3926   00103A  0E00               	movlw	0
  3927   00103C  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  3928   00103E  90D8               	bcf	status,0,c
  3929   001040  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  3930   001042  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  3931   001044  3201               	rrcf	___ftpack@arg^0,f,c
  3932   001046                     l1940:
  3933   001046  0E00               	movlw	0
  3934   001048  1401               	andwf	___ftpack@arg^0,w,c
  3935   00104A  6E06               	movwf	??___ftpack^0,c
  3936   00104C  0E00               	movlw	0
  3937   00104E  1402               	andwf	(___ftpack@arg+1)^0,w,c
  3938   001050  6E07               	movwf	(??___ftpack+1)^0,c
  3939   001052  0EFF               	movlw	255
  3940   001054  1403               	andwf	(___ftpack@arg+2)^0,w,c
  3941   001056  6E08               	movwf	(??___ftpack+2)^0,c
  3942   001058  5006               	movf	??___ftpack^0,w,c
  3943   00105A  1007               	iorwf	(??___ftpack+1)^0,w,c
  3944   00105C  1008               	iorwf	(??___ftpack+2)^0,w,c
  3945   00105E  B4D8               	btfsc	status,2,c
  3946   001060  D006               	goto	l1944
  3947   001062  D7E6               	goto	l1936
  3948   001064                     l1942:
  3949   001064  0604               	decf	___ftpack@exp^0,f,c
  3950   001066  90D8               	bcf	status,0,c
  3951   001068  3601               	rlcf	___ftpack@arg^0,f,c
  3952   00106A  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  3953   00106C  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  3954   00106E                     l1944:
  3955   00106E  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  3956   001070  D003               	goto	u1120
  3957   001072  0E02               	movlw	2
  3958   001074  6004               	cpfslt	___ftpack@exp^0,c
  3959   001076  D7F6               	goto	l1942
  3960   001078                     u1120:
  3961   001078  A004               	btfss	___ftpack@exp^0,0,c
  3962   00107A  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  3963   00107C  90D8               	bcf	status,0,c
  3964   00107E  3204               	rrcf	___ftpack@exp^0,f,c
  3965   001080  5004               	movf	___ftpack@exp^0,w,c
  3966   001082  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  3967   001084  5005               	movf	___ftpack@sign^0,w,c
  3968   001086  A4D8               	btfss	status,2,c
  3969   001088  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  3970   00108A  C001  F001         	movff	___ftpack@arg,?___ftpack
  3971   00108E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3972   001092  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3973   001096  0012               	return		;funcret
  3974   001098                     __end_of___ftpack:
  3975                           	callstack 0
  3976                           
  3977 ;; *************** function _check_potentiometer_voltaje *****************
  3978 ;; Defined at:
  3979 ;;		line 214 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3993 ;;      Params:         0       0       0       0       0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; Hardware stack levels required when called: 1
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_main
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text27
  4008   0015CE                     __ptext27:
  4009                           	callstack 0
  4010   0015CE                     _check_potentiometer_voltaje:
  4011                           	callstack 29
  4012                           
  4013                           ;LAB05.c: 215: ADON=1;
  4014                           
  4015                           ;incstack = 0
  4016   0015CE  80C2               	bsf	4034,0,c	;volatile
  4017                           
  4018                           ;LAB05.c: 216: GO=1;
  4019   0015D0  82C2               	bsf	4034,1,c	;volatile
  4020   0015D2                     l250:
  4021   0015D2  B2C2               	btfsc	4034,1,c	;volatile
  4022   0015D4  D7FE               	goto	l250
  4023                           
  4024                           ;LAB05.c: 218: if(ADRES > 511)
  4025   0015D6  0E00               	movlw	0
  4026   0015D8  5CC3               	subwf	195,w,c	;volatile
  4027   0015DA  0E02               	movlw	2
  4028   0015DC  58C4               	subwfb	196,w,c	;volatile
  4029   0015DE  A0D8               	btfss	status,0,c
  4030   0015E0  D002               	goto	l253
  4031                           
  4032                           ;LAB05.c: 219: RB0 = 1;
  4033   0015E2  8081               	bsf	3969,0,c	;volatile
  4034   0015E4  D001               	goto	l254
  4035   0015E6                     l253:
  4036                           
  4037                           ;LAB05.c: 220: else;LAB05.c: 221: RB0 = 0;
  4038   0015E6  9081               	bcf	3969,0,c	;volatile
  4039   0015E8                     l254:
  4040                           
  4041                           ;LAB05.c: 225: ADON=0;
  4042   0015E8  90C2               	bcf	4034,0,c	;volatile
  4043                           
  4044                           ;LAB05.c: 226: return;
  4045   0015EA  0012               	return		;funcret
  4046   0015EC                     __end_of_check_potentiometer_voltaje:
  4047                           	callstack 0
  4048                           
  4049 ;; *************** function _ISR *****************
  4050 ;; Defined at:
  4051 ;;		line 422 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4065 ;;      Params:         0       0       0       0       0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4068 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; This function calls:
  4072 ;;		Nothing
  4073 ;; This function is called by:
  4074 ;;		Interrupt level 2
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	intcode
  4079   000008                     __pintcode:
  4080                           	callstack 0
  4081   000008                     _ISR:
  4082                           	callstack 25
  4083                           
  4084                           ;incstack = 0
  4085   000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4086   00000A  EDD5  F00A         	call	int_func,f	;refresh shadow registers
  4087                           
  4088                           	psect	intcode_body
  4089   0015AA                     __pintcode_body:
  4090                           	callstack 25
  4091   0015AA                     int_func:
  4092                           	callstack 25
  4093   0015AA  0006               	pop		; remove dummy address from shadow register refresh
  4094                           
  4095                           ;LAB05.c: 423: if(TMR0IF==1){
  4096   0015AC  A4F2               	btfss	4082,2,c	;volatile
  4097   0015AE  D00D               	goto	i2l351
  4098                           
  4099                           ;LAB05.c: 424: TMR0=3036;
  4100   0015B0  0E0B               	movlw	11
  4101   0015B2  6ED7               	movwf	215,c	;volatile
  4102   0015B4  0EDC               	movlw	220
  4103   0015B6  6ED6               	movwf	214,c	;volatile
  4104                           
  4105                           ;LAB05.c: 425: TMR0IF=0;
  4106   0015B8  94F2               	bcf	4082,2,c	;volatile
  4107                           
  4108                           ;LAB05.c: 426: RC2=~RC2;
  4109   0015BA  B482               	btfsc	3970,2,c	;volatile
  4110   0015BC  D002               	goto	i2u207_40
  4111   0015BE  8482               	bsf	3970,2,c	;volatile
  4112   0015C0  D001               	goto	i2u208_45
  4113   0015C2                     i2u207_40:
  4114   0015C2  9482               	bcf	3970,2,c	;volatile
  4115   0015C4                     i2u208_45:
  4116                           
  4117                           ;LAB05.c: 427: Enable_sample=1;
  4118   0015C4  0E01               	movlw	1
  4119   0015C6  0100               	movlb	0	; () banked
  4120   0015C8  6F84               	movwf	_Enable_sample& (0+255),b
  4121   0015CA                     i2l351:
  4122   0015CA  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4123   0015CC  0011               	retfie		f
  4124   0015CE                     __end_of_ISR:
  4125                           	callstack 0
  4126                           
  4127                           	psect	rparam
  4128   000000                     
  4129                           	psect	temp
  4130   00004C                     btemp:
  4131                           	callstack 0
  4132   00004C                     	ds	1
  4133   000000                     int$flags	set	btemp
  4134   000000                     wtemp8	set	btemp+1
  4135   000000                     ttemp5	set	btemp+1
  4136   000000                     ttemp6	set	btemp+4
  4137   000000                     ttemp7	set	btemp+8
  4138                           
  4139                           	psect	idloc
  4140                           
  4141                           ;Config register IDLOC0 @ 0x200000
  4142                           ;	unspecified, using default values
  4143   200000                     	org	2097152
  4144   200000  FF                 	db	255
  4145                           
  4146                           ;Config register IDLOC1 @ 0x200001
  4147                           ;	unspecified, using default values
  4148   200001                     	org	2097153
  4149   200001  FF                 	db	255
  4150                           
  4151                           ;Config register IDLOC2 @ 0x200002
  4152                           ;	unspecified, using default values
  4153   200002                     	org	2097154
  4154   200002  FF                 	db	255
  4155                           
  4156                           ;Config register IDLOC3 @ 0x200003
  4157                           ;	unspecified, using default values
  4158   200003                     	org	2097155
  4159   200003  FF                 	db	255
  4160                           
  4161                           ;Config register IDLOC4 @ 0x200004
  4162                           ;	unspecified, using default values
  4163   200004                     	org	2097156
  4164   200004  FF                 	db	255
  4165                           
  4166                           ;Config register IDLOC5 @ 0x200005
  4167                           ;	unspecified, using default values
  4168   200005                     	org	2097157
  4169   200005  FF                 	db	255
  4170                           
  4171                           ;Config register IDLOC6 @ 0x200006
  4172                           ;	unspecified, using default values
  4173   200006                     	org	2097158
  4174   200006  FF                 	db	255
  4175                           
  4176                           ;Config register IDLOC7 @ 0x200007
  4177                           ;	unspecified, using default values
  4178   200007                     	org	2097159
  4179   200007  FF                 	db	255
  4180                           
  4181                           	psect	config
  4182                           
  4183                           ;Config register CONFIG1L @ 0x300000
  4184                           ;	unspecified, using default values
  4185                           ;	PLL Prescaler Selection bits
  4186                           ;	PLLDIV = 0x0, unprogrammed default
  4187                           ;	System Clock Postscaler Selection bits
  4188                           ;	CPUDIV = 0x0, unprogrammed default
  4189                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4190                           ;	USBDIV = 0x0, unprogrammed default
  4191   300000                     	org	3145728
  4192   300000  00                 	db	0
  4193                           
  4194                           ;Config register CONFIG1H @ 0x300001
  4195                           ;	Oscillator Selection bits
  4196                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4197                           ;	Fail-Safe Clock Monitor Enable bit
  4198                           ;	FCMEN = 0x0, unprogrammed default
  4199                           ;	Internal/External Oscillator Switchover bit
  4200                           ;	IESO = 0x0, unprogrammed default
  4201   300001                     	org	3145729
  4202   300001  09                 	db	9
  4203                           
  4204                           ;Config register CONFIG2L @ 0x300002
  4205                           ;	unspecified, using default values
  4206                           ;	Power-up Timer Enable bit
  4207                           ;	PWRT = 0x1, unprogrammed default
  4208                           ;	Brown-out Reset Enable bits
  4209                           ;	BOR = 0x3, unprogrammed default
  4210                           ;	Brown-out Reset Voltage bits
  4211                           ;	BORV = 0x3, unprogrammed default
  4212                           ;	USB Voltage Regulator Enable bit
  4213                           ;	VREGEN = 0x0, unprogrammed default
  4214   300002                     	org	3145730
  4215   300002  1F                 	db	31
  4216                           
  4217                           ;Config register CONFIG2H @ 0x300003
  4218                           ;	Watchdog Timer Enable bit
  4219                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4220                           ;	Watchdog Timer Postscale Select bits
  4221                           ;	WDTPS = 512, 1:512
  4222   300003                     	org	3145731
  4223   300003  12                 	db	18
  4224                           
  4225                           ; Padding undefined space
  4226   300004                     	org	3145732
  4227   300004  FF                 	db	255
  4228                           
  4229                           ;Config register CONFIG3H @ 0x300005
  4230                           ;	unspecified, using default values
  4231                           ;	CCP2 MUX bit
  4232                           ;	CCP2MX = 0x1, unprogrammed default
  4233                           ;	PORTB A/D Enable bit
  4234                           ;	PBADEN = 0x1, unprogrammed default
  4235                           ;	Low-Power Timer 1 Oscillator Enable bit
  4236                           ;	LPT1OSC = 0x0, unprogrammed default
  4237                           ;	MCLR Pin Enable bit
  4238                           ;	MCLRE = 0x1, unprogrammed default
  4239   300005                     	org	3145733
  4240   300005  83                 	db	131
  4241                           
  4242                           ;Config register CONFIG4L @ 0x300006
  4243                           ;	unspecified, using default values
  4244                           ;	Stack Full/Underflow Reset Enable bit
  4245                           ;	STVREN = 0x1, unprogrammed default
  4246                           ;	Single-Supply ICSP Enable bit
  4247                           ;	LVP = 0x1, unprogrammed default
  4248                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4249                           ;	ICPRT = 0x0, unprogrammed default
  4250                           ;	Extended Instruction Set Enable bit
  4251                           ;	XINST = 0x0, unprogrammed default
  4252                           ;	Background Debugger Enable bit
  4253                           ;	DEBUG = 0x1, unprogrammed default
  4254   300006                     	org	3145734
  4255   300006  85                 	db	133
  4256                           
  4257                           ; Padding undefined space
  4258   300007                     	org	3145735
  4259   300007  FF                 	db	255
  4260                           
  4261                           ;Config register CONFIG5L @ 0x300008
  4262                           ;	unspecified, using default values
  4263                           ;	Code Protection bit
  4264                           ;	CP0 = 0x1, unprogrammed default
  4265                           ;	Code Protection bit
  4266                           ;	CP1 = 0x1, unprogrammed default
  4267                           ;	Code Protection bit
  4268                           ;	CP2 = 0x1, unprogrammed default
  4269                           ;	Code Protection bit
  4270                           ;	CP3 = 0x1, unprogrammed default
  4271   300008                     	org	3145736
  4272   300008  0F                 	db	15
  4273                           
  4274                           ;Config register CONFIG5H @ 0x300009
  4275                           ;	unspecified, using default values
  4276                           ;	Boot Block Code Protection bit
  4277                           ;	CPB = 0x1, unprogrammed default
  4278                           ;	Data EEPROM Code Protection bit
  4279                           ;	CPD = 0x1, unprogrammed default
  4280   300009                     	org	3145737
  4281   300009  C0                 	db	192
  4282                           
  4283                           ;Config register CONFIG6L @ 0x30000A
  4284                           ;	unspecified, using default values
  4285                           ;	Write Protection bit
  4286                           ;	WRT0 = 0x1, unprogrammed default
  4287                           ;	Write Protection bit
  4288                           ;	WRT1 = 0x1, unprogrammed default
  4289                           ;	Write Protection bit
  4290                           ;	WRT2 = 0x1, unprogrammed default
  4291                           ;	Write Protection bit
  4292                           ;	WRT3 = 0x1, unprogrammed default
  4293   30000A                     	org	3145738
  4294   30000A  0F                 	db	15
  4295                           
  4296                           ;Config register CONFIG6H @ 0x30000B
  4297                           ;	unspecified, using default values
  4298                           ;	Configuration Register Write Protection bit
  4299                           ;	WRTC = 0x1, unprogrammed default
  4300                           ;	Boot Block Write Protection bit
  4301                           ;	WRTB = 0x1, unprogrammed default
  4302                           ;	Data EEPROM Write Protection bit
  4303                           ;	WRTD = 0x1, unprogrammed default
  4304   30000B                     	org	3145739
  4305   30000B  E0                 	db	224
  4306                           
  4307                           ;Config register CONFIG7L @ 0x30000C
  4308                           ;	unspecified, using default values
  4309                           ;	Table Read Protection bit
  4310                           ;	EBTR0 = 0x1, unprogrammed default
  4311                           ;	Table Read Protection bit
  4312                           ;	EBTR1 = 0x1, unprogrammed default
  4313                           ;	Table Read Protection bit
  4314                           ;	EBTR2 = 0x1, unprogrammed default
  4315                           ;	Table Read Protection bit
  4316                           ;	EBTR3 = 0x1, unprogrammed default
  4317   30000C                     	org	3145740
  4318   30000C  0F                 	db	15
  4319                           
  4320                           ;Config register CONFIG7H @ 0x30000D
  4321                           ;	unspecified, using default values
  4322                           ;	Boot Block Table Read Protection bit
  4323                           ;	EBTRB = 0x1, unprogrammed default
  4324   30000D                     	org	3145741
  4325   30000D  40                 	db	64
  4326                           tosu	equ	0xFFF
  4327                           tosh	equ	0xFFE
  4328                           tosl	equ	0xFFD
  4329                           stkptr	equ	0xFFC
  4330                           pclatu	equ	0xFFB
  4331                           pclath	equ	0xFFA
  4332                           pcl	equ	0xFF9
  4333                           tblptru	equ	0xFF8
  4334                           tblptrh	equ	0xFF7
  4335                           tblptrl	equ	0xFF6
  4336                           tablat	equ	0xFF5
  4337                           prodh	equ	0xFF4
  4338                           prodl	equ	0xFF3
  4339                           indf0	equ	0xFEF
  4340                           postinc0	equ	0xFEE
  4341                           postdec0	equ	0xFED
  4342                           preinc0	equ	0xFEC
  4343                           plusw0	equ	0xFEB
  4344                           fsr0h	equ	0xFEA
  4345                           fsr0l	equ	0xFE9
  4346                           wreg	equ	0xFE8
  4347                           indf1	equ	0xFE7
  4348                           postinc1	equ	0xFE6
  4349                           postdec1	equ	0xFE5
  4350                           preinc1	equ	0xFE4
  4351                           plusw1	equ	0xFE3
  4352                           fsr1h	equ	0xFE2
  4353                           fsr1l	equ	0xFE1
  4354                           bsr	equ	0xFE0
  4355                           indf2	equ	0xFDF
  4356                           postinc2	equ	0xFDE
  4357                           postdec2	equ	0xFDD
  4358                           preinc2	equ	0xFDC
  4359                           plusw2	equ	0xFDB
  4360                           fsr2h	equ	0xFDA
  4361                           fsr2l	equ	0xFD9
  4362                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    10
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      75
    BANK0           160     36      39
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_12(CODE[9]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[9]), 
		 -> STR_8(CODE[9]), STR_7(CODE[9]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> send_temperature_RS232@buffer_RS232(COMRAM[12]), main@buffer_LCD_row_2(BANK0[17]), main@buffer_LCD_row_1(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    show_temperature_LCD@buffer_LCD_row_2	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_2(BANK0[17]), 

    show_temperature_LCD@buffer_LCD_row_1	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_1(BANK0[17]), 

    choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_2(BANK0[17]), 

    choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_1(BANK0[17]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[8]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_choose_scale_temperature_and_fill_buffers
    _welcome_operations->_MensajeLCD_Var
    _MensajeLCD_Var->_DireccionaLCD
    _MensajeLCD_Var->_EscribeLCD_c
    _show_temperature_LCD->_DireccionaLCD
    _show_temperature_LCD->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _send_temperature_RS232->_sprintf
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD
    _choose_scale_temperature_and_fill_buffers->___fttol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   28589
                                              0 BANK0     36    36      0
        _check_potentiometer_voltaje
_choose_scale_temperature_and_fill_b
                 _init_configuration
          _save_temperature_c_EEPROM
             _send_temperature_RS232
               _show_temperature_LCD
             _show_temperature_c_RGB
                 _welcome_operations
 ---------------------------------------------------------------------------------
 (1) _welcome_operations                                   2     2      0     891
                                              8 COMRAM     2     2      0
                           _BorraLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       3     2      1     781
                                              5 COMRAM     3     2      1
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _show_temperature_c_RGB                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _show_temperature_LCD                                 5     1      4     838
                                              5 COMRAM     5     1      4
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _DireccionaLCD                                        1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _send_temperature_RS232                              15    15      0    5709
                                             25 COMRAM    15    15      0
                         _Transmitir
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _save_temperature_c_EEPROM                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_configuration                                   2     2      0     286
                                              4 COMRAM     2     2      0
                       _ConfiguraLCD
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (2) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfiguraLCD                                         1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _choose_scale_temperature_and_fill_buffers            4     2      2   20705
                                             69 COMRAM     4     2      2
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    5563
                                             12 COMRAM    13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    2075
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1574
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2866
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     480
                                             54 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3602
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3404
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4392
                                             42 COMRAM    12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _check_potentiometer_voltaje                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_potentiometer_voltaje
   _choose_scale_temperature_and_fill_buffers
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
       ___ftmul (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
     ___ftdiv
     ___ftmul
     ___fttol
       ___ftadd (ARG)
       ___ftdiv (ARG)
       ___ftmul (ARG)
       ___lbtoft (ARG)
     ___lbtoft
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_configuration
     _ConfiguraLCD
     _InicializaLCD
       _BorraLCD
         _EnviaDato
           _HabilitaLCD
           _RetardoLCD
         _HabilitaLCD
         _RetardoLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _save_temperature_c_EEPROM
   _send_temperature_RS232
     _Transmitir
     _sprintf
   _show_temperature_LCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _show_temperature_c_RGB
   _welcome_operations
     _BorraLCD
     _MensajeLCD_Var
       _BorraLCD
       _DireccionaLCD
       _EscribeLCD_c

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      34        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      27       5       24.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      4B       1       79.8%
BITBIGSFRll         20      0       0      32        0.0%
BITBIGSFRhhhhl      1A      0       0      21        0.0%
BITBIGSFRhllh       14      0       0      28        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhlhhh       B      0       0      24        0.0%
BITBIGSFRhlhlh       8      0       0      26        0.0%
BITBIGSFRhlhhl       7      0       0      25        0.0%
BITBIGSFRlhh         5      0       0      30        0.0%
BITBIGSFRhllll       4      0       0      29        0.0%
BITBIGSFRlhl         1      0       0      31        0.0%
BITBIGSFRhlhll       1      0       0      27        0.0%
BITBIGSFRhhhl        1      0       0      22        0.0%
BITBIGSFRhhl         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      33        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jun  3 01:17:28 2023

                                        Transmitir@BufferT 0001  
                                 ??_show_temperature_c_RGB 0001  
                                                       _GO 7E11  
                                                       _TO 7E83  
                                               EnviaDato@a 0004  
                                             ___ftadd@exp1 0036  
                                             ___ftadd@exp2 0035  
                                              main@Temp_n1 0082  
                                             ___ftadd@sign 0034  
                                            _InicializaLCD 1098  
                                                      l250 15D2  
                                                      l253 15E6  
                                                      l237 13B0  
                                                      l254 15E8  
                                                      l280 090C  
                                                      l273 1320  
                                                      l282 099C  
                                                      l278 0898  
                                                      l713 0B80  
                                                      l724 0EE6  
                                                      l862 143A  
                                                      l872 1512  
                                                      _GIE 7F97  
                                                      _RA1 7C01  
                                                      _RB0 7C08  
                                                      _RA2 7C02  
                                                      _RC1 7C11  
                                                      _RC2 7C12  
                                                      _RE0 7C20  
                                                      _RE1 7C21  
                                                      _RE2 7C22  
                                                      _ISR 0008  
                                                      _Che 004A  
                                                      _Hum 0085  
                                                      wreg 0FE8  
                                                     ?_ISR 0001  
                                             ___ftdiv@cntr 0025  
                                             ___ftdiv@sign 002A  
                                                     l2100 0C52  
                                                     l2110 0C74  
                                                     l2200 0B52  
                                                     l2008 10AA  
                                                     l2202 0B5C  
                                                     l2130 0CBC  
                                                     l2018 10C8  
                                                     l2132 0CC2  
                                                     l2116 0C78  
                                                     l2028 10E6  
                                                     l2208 0B9C  
                                                     l2160 0A9A  
                                                     l2304 0DE8  
                                                     l2080 0BF8  
                                                     l2048 111E  
                                                     l2072 1186  
                                                     l2064 115A  
                                                     l2218 0BCC  
                                                     l2234 0E82  
                                                     l2322 0F44  
                                                     l2138 0D12  
                                                     l2146 1654  
                                                     l2058 113A  
                                                     l2228 0E5A  
                                                     l2308 0DF8  
                                                     l2340 0F98  
                                                     l2068 1170  
                                                     l2076 119E  
                                                     l2190 0B1E  
                                                     l2166 0AC2  
                                                     l2254 0EC0  
                                                     l2350 0FB0  
                                                     l2086 0C0E  
                                                     l2510 1304  
                                                     l2502 12E8  
                                                     l2192 0B28  
                                                     l2280 0D8E  
                                                     l2352 0FBC  
                                                     l2344 0FA8  
                                                     l2088 0C14  
                                                     l2274 0D66  
                                                     l2098 0C24  
                                                     l2530 11EC  
                                                     l2514 1312  
                                                     l2506 12F6  
                                                     l2188 0B14  
                                                     l2444 145C  
                                                     l2540 120C  
                                                     l2524 11CC  
                                                     l2428 152C  
                                                     l2294 0DC0  
                                                     l2358 0FD8  
                                                     l2550 1234  
                                                     l2534 11F4  
                                                     l2448 146C  
                                                     l2544 121C  
                                                     l2528 11DC  
                                                     l2298 0DD0  
                                                     l2546 122C  
                                                     l1940 1046  
                                                     l1932 1008  
                                                     l1942 1064  
                                                     l1934 1012  
                                                     l2494 12CC  
                                                     l1944 106E  
                                                     l1936 1030  
                                                     l1880 1368  
                                                     l2568 139E  
                                                     l1874 132C  
                                                     l2498 12DA  
                                                     l1876 133E  
                                                     l1884 1372  
                                                     l1966 1408  
                                                     l1878 135E  
                                                     l1968 1410  
                                                     l1896 14CC  
                                                     l1978 1430  
                                                     l1994 1508  
                                                     l1986 14E8  
                                                     l1988 14F0  
                                                     _ADON 7E10  
                                                     STR_1 080B  
                                                     STR_2 0858  
                                                     STR_3 0818  
                                                     STR_4 0840  
                                                     STR_5 0837  
                                                     STR_6 0850  
                                                     STR_7 0837  
                                                     STR_8 082E  
                                                     STR_9 0837  
                                                     u1120 1078  
                                                     u1220 15FE  
                                                     u1310 0C00  
                                                     u1080 0FFA  
                                                     u1160 1414  
                                                     u1401 0A6E  
                                                     u2107 1484  
                                                     u1340 0CA4  
                                                     u2117 1246  
                                                     u1430 0A8C  
                                                     u1190 14F4  
                                                     u2127 12AE  
                                                     u1360 0D1A  
                                                     _LATD 0F8C  
                                                     u1601 0E42  
                                                     u2137 1332  
                                                     _LATE 0F8D  
                                                     u1530 0B30  
                                                     u1370 0D34  
                                                     u2147 1344  
                                                     u1460 0AB4  
                                                     u1621 0E6A  
                                                     u2157 134E  
                                                     u1391 0A5A  
                                                     u1711 0F28  
                                                     u2167 1360  
                                                     u1560 0B64  
                                                     u1720 0F32  
                                                     u2177 136A  
                                                     u2097 154A  
                                                     u1490 0AF2  
                                                     u1730 0F62  
                                                     u1651 0D4E  
                                                     u2187 1648  
                                                     u1671 0D76  
                                                     u1735 0F5A  
                                                     u1770 0FC2  
                                                     u1980 11FA  
                                                     _TMR0 0FD6  
                                                     _TRMT 7D61  
                                           ??_EscribeLCD_c 0005  
                                                     _Temp 0086  
                                                     _main 138E  
                                             ___ftpack@arg 0001  
                                             ___ftpack@exp 0004  
                                                     fsr2h 0FDA  
                                                     indf2 0FDF  
                                                     fsr2l 0FD9  
                                                     btemp 004C  
                                     main@buffer_LCD_row_1 0060  
                                     main@buffer_LCD_row_2 0071  
                                                     prodl 0FF3  
                                                     start 000E  
                                             ___ftmul@cntr 001A  
                                             ___param_bank 0000  
                                             ___ftmul@sign 001B  
                                                    ??_ISR 0001  
                                             ___fttol@exp1 0045  
                                             ___fttol@lval 0041  
                              ??_save_temperature_c_EEPROM 0001  
                                           ?_InicializaLCD 0001  
                                                    ?_main 0001  
        __end_of_choose_scale_temperature_and_fill_buffers 0A4A  
              ??_choose_scale_temperature_and_fill_buffers 0048  
               ?_choose_scale_temperature_and_fill_buffers 0046  
                _choose_scale_temperature_and_fill_buffers 0862  
                                                    _ADRES 0FC3  
                                          __end_of___ftadd 0BF2  
                                                    STR_10 0848  
                                                    STR_11 0837  
                                                    STR_12 0825  
                                            EscribeLCD_c@a 0005  
                                          __end_of___ftdiv 0F18  
                                          __end_of___ftmul 0E32  
                                                    _T0CON 0FD5  
                                          __end_of___fttol 0FEA  
                                                    _LATB0 7C50  
                                                    _LATC1 7C59  
                                                    _LATD0 7C60  
                                                    _LATC2 7C5A  
                                                    _LATD1 7C61  
                                          __end_of___lwdiv 1444  
                                          __end_of___lwmod 151C  
                                                    i2l351 15CA  
                                                    _RCSTA 0FAB  
                                                    _SPBRG 0FAF  
                                                    _TRISA 0F92  
                                                    _TRISD 0F95  
                                                    _TRISE 0F96  
                                                    _TXREG 0FAD  
                                                    _TXSTA 0FAC  
                                          __end_of_dpowers 080B  
                                            ___ftpack@sign 0005  
  choose_scale_temperature_and_fill_buffers@temp_converted 0048  
                                                    tablat 0FF5  
                                              _HabilitaLCD 1644  
                                                    ttemp5 004D  
                                                    ttemp6 0050  
                                                    ttemp7 0054  
                                                    status 0FD8  
                                                    wtemp8 004D  
                                          __end_of_sprintf 0D3E  
                                         __end_of_BorraLCD 1644  
                                          __initialization 155C  
                                             __end_of_main 13F2  
                                                   ??_main 004A  
                                     __end_of_ConfiguraLCD 1604  
                                            ___fttol@sign1 0040  
                                    MensajeLCD_Var@counter 0008  
                                            __activetblptr 0002  
                                                   _ADCON0 0FC2  
                                                   _ADCON1 0FC1  
                                                   _ADCON2 0FC0  
                                           DireccionaLCD@a 0005  
                                         __end_of___ftpack 1098  
                                         __end_of___lbtoft 15AA  
                                _save_temperature_c_EEPROM 165E  
                                                   _OSCCON 0FD3  
                                                   _TMR0IE 7F95  
                                                   _TMR0IF 7F92  
                                                   _TMR0ON 7EAF  
                                                   _TRISB0 7C98  
                                                   _TRISC2 7CA2  
                                                   _SWDTEN 7E88  
                                    __end_of_DireccionaLCD 1630  
                                               _RetardoLCD 1328  
choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1 0046  
choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2 0047  
                            send_temperature_RS232@counter 0028  
                                                ??___ftadd 0031  
                                                ??___ftdiv 0022  
                                                ??___ftmul 0013  
                                                ??___fttol 003B  
                                                ??___lwdiv 0005  
                                                ??___lwmod 000C  
                                          ??_InicializaLCD 0005  
                                                   isa$std 0001  
                                     __end_of_EscribeLCD_c 161A  
                                    ___ftmul@f3_as_product 0017  
                                             __pdataCOMRAM 004B  
                                             __mediumconst 0000  
                                   _send_temperature_RS232 1444  
                                                   tblptrh 0FF7  
                                                   tblptrl 0FF6  
                                                   tblptru 0FF8  
                                                ??_sprintf 0013  
                                               _Transmitir 1652  
                                   _show_temperature_c_RGB 12BC  
                                               __accesstop 0060  
                                  __end_of__initialization 1578  
                                               ___ftadd@f1 002B  
                                               ___ftadd@f2 002E  
                                            ___rparam_used 0001  
                                               ___ftdiv@f1 001C  
                                               ___ftdiv@f2 001F  
                                               ___ftdiv@f3 0026  
                               __end_of_welcome_operations 155C  
                                               ___lbtoft@c 000C  
                                               ___ftmul@f1 000D  
                                               ___ftmul@f2 0010  
                                               ___fttol@f1 0037  
                                           __pcstackCOMRAM 0001  
                                        __end_of_EnviaDato 14DA  
                                                ?_BorraLCD 0001  
                                           _MensajeLCD_Var 1134  
                               __end_of_init_configuration 12BC  
                                               __pbssBANK0 0084  
                                          MensajeLCD_Var@a 0006  
                                              ?_RetardoLCD 0001  
                                              RetardoLCD@a 0002  
                                                  _BAUDCON 0FB8  
                                                ?___ftpack 0001  
                                                ?___lbtoft 0009  
                                   __end_of_MensajeLCD_Var 11B8  
                                               ??_BorraLCD 0005  
                                              ?_Transmitir 0001  
                                             ?_HabilitaLCD 0001  
                                             _ConfiguraLCD 15EC  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                                  ___ftadd 0A4A  
                                                  ___ftdiv 0E32  
                                                  ___ftmul 0D3E  
                                                  ___fttol 0F18  
                                                  ___lwdiv 13F2  
                                                  ___lwmod 14DA  
                                             __psmallconst 0800  
                                                  __pcinit 155C  
                                               ??___ftpack 0006  
                                               ??___lbtoft 000C  
                                                  __ramtop 0800  
                                                  __ptext0 138E  
                                                  __ptext1 151C  
                                                  __ptext2 1134  
                                                  __ptext3 12BC  
                                                  __ptext4 11B8  
                                                  __ptext5 1604  
                                                  __ptext6 161A  
                                                  __ptext7 1444  
                                                  __ptext8 1652  
                                                  __ptext9 165E  
                                                  _dpowers 0801  
                      __end_of_check_potentiometer_voltaje 15EC  
                              _check_potentiometer_voltaje 15CE  
                                          ?_MensajeLCD_Var 0006  
                                                  _sprintf 0BF2  
                                           __pintcode_body 15AA  
                                     end_of_initialization 1578  
                            ??_check_potentiometer_voltaje 0001  
                                            __Lmediumconst 0000  
                                                  int_func 15AA  
                                             _EscribeLCD_c 1604  
                                                  postdec2 0FDD  
                        __end_of_save_temperature_c_EEPROM 1660  
                                                  postinc2 0FDE  
                                  ?_send_temperature_RS232 0001  
                                  ?_show_temperature_c_RGB 0001  
                                               main@Hum_n1 0083  
                                              ___ftdiv@exp 0029  
                                              ___ftmul@exp 0016  
                           __end_of_send_temperature_RS232 1494  
                              show_temperature_LCD@Temp_n1 0008  
                                            __pidataCOMRAM 1660  
                                    __end_of_InicializaLCD 1134  
                                       _welcome_operations 151C  
                                                _EnviaDato 1494  
                           __end_of_show_temperature_c_RGB 1328  
                                      start_initialization 155C  
                                              __end_of_ISR 15CE  
                                      ?_welcome_operations 0001  
                              show_temperature_LCD@counter 000A  
                                             ??_RetardoLCD 0001  
                                     ??_welcome_operations 0009  
                                       _init_configuration 123C  
                                      ?_init_configuration 0001  
                                            _Enable_sample 0084  
                                               ?_EnviaDato 0001  
                                              __pbssCOMRAM 004A  
                                       __end_of_RetardoLCD 138E  
                                            __pcstackBANK0 0060  
                             __end_of_show_temperature_LCD 123C  
                                             ??_Transmitir 0001  
                                     ??_init_configuration 0005  
                                              sprintf@flag 0014  
                                              sprintf@prec 0015  
                                            _DireccionaLCD 161A  
                                         ___lwdiv@dividend 0001  
                                                __pintcode 0008  
                                                 ?___ftadd 002B  
                                                 ?___ftdiv 001C  
                                                 ?___ftmul 000D  
                                                 ?___fttol 0037  
                                                 ?___lwdiv 0001  
                                                 ?___lwmod 0008  
                                       __end_of_Transmitir 165E  
                                         ??_MensajeLCD_Var 0007  
                       send_temperature_RS232@buffer_RS232 001C  
                                              __smallconst 0800  
                                         ___lwdiv@quotient 0005  
                                                 ?_sprintf 000D  
                                           ?_DireccionaLCD 0001  
                                                 i2u207_40 15C2  
                                                 i2u208_45 15C4  
                                              ??_EnviaDato 0003  
                               show_temperature_LCD@Hum_n1 0009  
                                                 _BorraLCD 1630  
                                                 __Hrparam 0000  
                                                 __Lrparam 0000  
                                     _show_temperature_LCD 11B8  
                               ?_save_temperature_c_EEPROM 0001  
                                                 ___ftpack 0FEA  
                                                 ___lbtoft 1586  
                                            ConfiguraLCD@a 0001  
                                               sprintf@val 0017  
                                          ___lwdiv@divisor 0003  
                                          ___lwdiv@counter 0007  
                                                 __ptext10 123C  
                                                 __ptext11 1098  
                                                 __ptext20 13F2  
                                                 __ptext12 1630  
                                                 __ptext21 1586  
                                                 __ptext13 1494  
                                                 __ptext22 0F18  
                                                 __ptext14 1328  
                                                 __ptext23 0D3E  
                                                 __ptext15 1644  
                                                 __ptext24 0E32  
                                                 __ptext16 15EC  
                                                 __ptext25 0A4A  
                                                 __ptext17 0862  
                                                 __ptext26 0FEA  
                                                 __ptext18 0BF2  
                                                 __ptext27 15CE  
                                                 __ptext19 14DA  
                                          ??_DireccionaLCD 0005  
                                                 _interfaz 004B  
                                                 isa$xinst 0000  
                                    ?_show_temperature_LCD 0006  
                                                 int$flags 004C  
                     show_temperature_LCD@buffer_LCD_row_1 0006  
                     show_temperature_LCD@buffer_LCD_row_2 0007  
                                                 intlevel2 0000  
                                                sprintf@ap 0016  
                                            ??_HabilitaLCD 0001  
                                                sprintf@sp 000D  
                                         ___lwmod@dividend 0008  
                                            ?_ConfiguraLCD 0001  
                                                 sprintf@c 0019  
                                                 sprintf@f 000E  
                                          ___lwmod@divisor 000A  
                                          ___lwmod@counter 000C  
                             ?_check_potentiometer_voltaje 0001  
                                           ??_ConfiguraLCD 0001  
                                            ?_EscribeLCD_c 0001  
                                 ??_send_temperature_RS232 001A  
                                      __end_of_HabilitaLCD 1652  
                                   ??_show_temperature_LCD 000A  
