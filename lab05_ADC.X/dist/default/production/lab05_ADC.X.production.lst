

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun  8 10:28:01 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 09/02/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4550 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataCOMRAM
    94   001972                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _interfaz
    98   001972  08                 	db	8
    99                           
   100                           	psect	smallconst
   101   000800                     __psmallconst:
   102                           	callstack 0
   103   000800  00                 	db	0
   104   000801                     _dpowers:
   105                           	callstack 0
   106   000801  0001               	dw	1
   107   000803  000A               	dw	10
   108   000805  0064               	dw	100
   109   000807  03E8               	dw	1000
   110   000809  2710               	dw	10000
   111   00080B                     __end_of_dpowers:
   112                           	callstack 0
   113   000000                     _EECON2	set	4007
   114   000000                     _RCREG	set	4014
   115   000000                     _TXREG	set	4013
   116   000000                     _TRISD	set	3989
   117   000000                     _SPBRG	set	4015
   118   000000                     _BAUDCON	set	4024
   119   000000                     _TXSTA	set	4012
   120   000000                     _RCSTA	set	4011
   121   000000                     _RD	set	32048
   122   000000                     _WR	set	32049
   123   000000                     _WREN	set	32050
   124   000000                     _CFGS	set	32054
   125   000000                     _TRMT	set	32097
   126   000000                     _RA3	set	31747
   127   000000                     _LATE1	set	31849
   128   000000                     _LATE2	set	31850
   129   000000                     _LATE0	set	31848
   130   000000                     _GO	set	32273
   131   000000                     _ADON	set	32272
   132   000000                     _LATC1	set	31833
   133   000000                     _TRISC1	set	31905
   134   000000                     _TMR0ON	set	32431
   135   000000                     _GIE	set	32663
   136   000000                     _PEIE	set	32662
   137   000000                     _TMR0IE	set	32661
   138   000000                     _LATD1	set	31841
   139   000000                     _LATD0	set	31840
   140   000000                     _LATD	set	3980
   141   000000                     _RA2	set	31746
   142   000000                     _RC1	set	31761
   143   000000                     _LATB0	set	31824
   144   000000                     _LATC2	set	31834
   145   000000                     _LATE	set	3981
   146   000000                     _TRISE	set	3990
   147   000000                     _TRISB0	set	31896
   148   000000                     _TRISC2	set	31906
   149   000000                     _CREN	set	32092
   150   000000                     _SWDTEN	set	32392
   151   000000                     _OSCCON	set	4051
   152   000000                     _T0CON	set	4053
   153   000000                     _ADCON2	set	4032
   154   000000                     _ADCON1	set	4033
   155   000000                     _ADRES	set	4035
   156   000000                     _ADCON0	set	4034
   157   000000                     _TO	set	32387
   158   000000                     _RCIE	set	31981
   159   000000                     _TMR0	set	4054
   160   000000                     _TMR0IF	set	32658
   161   000000                     _EEDATA	set	4008
   162   000000                     _EEADR	set	4009
   163   000000                     _EEPGD	set	32055
   164   000000                     _RCIF	set	31989
   165   00080B                     STR_4:
   166   00080B  4C                 	db	76	;'L'
   167   00080C  61                 	db	97	;'a'
   168   00080D  73                 	db	115	;'s'
   169   00080E  74                 	db	116	;'t'
   170   00080F  20                 	db	32
   171   000810  54                 	db	84	;'T'
   172   000811  65                 	db	101	;'e'
   173   000812  6D                 	db	109	;'m'
   174   000813  70                 	db	112	;'p'
   175   000814  65                 	db	101	;'e'
   176   000815  72                 	db	114	;'r'
   177   000816  61                 	db	97	;'a'
   178   000817  74                 	db	116	;'t'
   179   000818  75                 	db	117	;'u'
   180   000819  72                 	db	114	;'r'
   181   00081A  65                 	db	101	;'e'
   182   00081B  00                 	db	0
   183   00081C                     STR_1:
   184   00081C  46                 	db	70	;'F'
   185   00081D  61                 	db	97	;'a'
   186   00081E  69                 	db	105	;'i'
   187   00081F  6C                 	db	108	;'l'
   188   000820  65                 	db	101	;'e'
   189   000821  64                 	db	100	;'d'
   190   000822  20                 	db	32
   191   000823  44                 	db	68	;'D'
   192   000824  48                 	db	72	;'H'
   193   000825  54                 	db	84	;'T'
   194   000826  31                 	db	49	;'1'
   195   000827  31                 	db	49	;'1'
   196   000828  00                 	db	0
   197   000829                     STR_3:
   198   000829  0A                 	db	10
   199   00082A  47                 	db	71	;'G'
   200   00082B  6F                 	db	111	;'o'
   201   00082C  64                 	db	100	;'d'
   202   00082D  20                 	db	32
   203   00082E  69                 	db	105	;'i'
   204   00082F  73                 	db	115	;'s'
   205   000830  20                 	db	32
   206   000831  67                 	db	103	;'g'
   207   000832  6F                 	db	111	;'o'
   208   000833  6F                 	db	111	;'o'
   209   000834  64                 	db	100	;'d'
   210   000835  00                 	db	0
   211   000836                     STR_15:
   212   000836  54                 	db	84	;'T'
   213   000837  3A                 	db	58	;':'
   214   000838  20                 	db	32
   215   000839  25                 	db	37
   216   00083A  69                 	db	105	;'i'
   217   00083B  20                 	db	32
   218   00083C  43                 	db	67	;'C'
   219   00083D  0A                 	db	10
   220   00083E  00                 	db	0
   221   00083F                     STR_11:
   222   00083F  54                 	db	84	;'T'
   223   000840  3A                 	db	58	;':'
   224   000841  20                 	db	32
   225   000842  25                 	db	37
   226   000843  69                 	db	105	;'i'
   227   000844  20                 	db	32
   228   000845  52                 	db	82	;'R'
   229   000846  61                 	db	97	;'a'
   230   000847  00                 	db	0
   231   000848                     STR_8:
   232   000848  48                 	db	72	;'H'
   233   000849  3A                 	db	58	;':'
   234   00084A  20                 	db	32
   235   00084B  25                 	db	37
   236   00084C  69                 	db	105	;'i'
   237   00084D  20                 	db	32
   238   00084E  25                 	db	37
   239   00084F  63                 	db	99	;'c'
   240   000850  00                 	db	0
   241   000851                     STR_7:
   242   000851  54                 	db	84	;'T'
   243   000852  3A                 	db	58	;':'
   244   000853  20                 	db	32
   245   000854  25                 	db	37
   246   000855  69                 	db	105	;'i'
   247   000856  20                 	db	32
   248   000857  43                 	db	67	;'C'
   249   000858  00                 	db	0
   250   000859                     STR_13:
   251   000859  54                 	db	84	;'T'
   252   00085A  3A                 	db	58	;':'
   253   00085B  20                 	db	32
   254   00085C  25                 	db	37
   255   00085D  69                 	db	105	;'i'
   256   00085E  20                 	db	32
   257   00085F  46                 	db	70	;'F'
   258   000860  00                 	db	0
   259   000861                     STR_9:
   260   000861  54                 	db	84	;'T'
   261   000862  3A                 	db	58	;':'
   262   000863  20                 	db	32
   263   000864  25                 	db	37
   264   000865  69                 	db	105	;'i'
   265   000866  20                 	db	32
   266   000867  4B                 	db	75	;'K'
   267   000868  00                 	db	0
   268   000869                     STR_2:
   269   000869  53                 	db	83	;'S'
   270   00086A  65                 	db	101	;'e'
   271   00086B  6E                 	db	110	;'n'
   272   00086C  73                 	db	115	;'s'
   273   00086D  6F                 	db	111	;'o'
   274   00086E  72                 	db	114	;'r'
   275   00086F  73                 	db	115	;'s'
   276   000870  00                 	db	0
   277   000871                     STR_5:
   278   000871  0A                 	db	10
   279   000872  54                 	db	84	;'T'
   280   000873  3A                 	db	58	;':'
   281   000874  20                 	db	32
   282   000875  00                 	db	0
   283   000876  00                 	db	0	; dummy byte at the end
   284   000000                     
   285                           ; #config settings
   286                           
   287                           	psect	cinit
   288   0017DC                     __pcinit:
   289                           	callstack 0
   290   0017DC                     start_initialization:
   291                           	callstack 0
   292   0017DC                     __initialization:
   293                           	callstack 0
   294                           
   295                           ; Initialize objects allocated to COMRAM (1 bytes)
   296                           ; load TBLPTR registers with __pidataCOMRAM
   297   0017DC  0E72               	movlw	low __pidataCOMRAM
   298   0017DE  6EF6               	movwf	tblptrl,c
   299   0017E0  0E19               	movlw	high __pidataCOMRAM
   300   0017E2  6EF7               	movwf	tblptrh,c
   301   0017E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   302   0017E6  6EF8               	movwf	tblptru,c
   303   0017E8  0009               	tblrd		*+	;fetch initializer
   304   0017EA  CFF5 F04D          	movff	tablat,__pdataCOMRAM
   305                           
   306                           ; Clear objects allocated to BANK0 (4 bytes)
   307   0017EE  0100               	movlb	0
   308   0017F0  6B88               	clrf	(__pbssBANK0+3)& (0+255),b
   309   0017F2  6B87               	clrf	(__pbssBANK0+2)& (0+255),b
   310   0017F4  6B86               	clrf	(__pbssBANK0+1)& (0+255),b
   311   0017F6  6B85               	clrf	__pbssBANK0& (0+255),b
   312                           
   313                           ; Clear objects allocated to COMRAM (2 bytes)
   314   0017F8  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   315   0017FA  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   316   0017FC                     end_of_initialization:
   317                           	callstack 0
   318   0017FC                     __end_of__initialization:
   319                           	callstack 0
   320   0017FC  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   321   0017FE  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   322   001800  0E00               	movlw	low (__Lmediumconst shr (0+16))
   323   001802  6EF8               	movwf	tblptru,c
   324   001804  0100               	movlb	0
   325   001806  EF79  F00A         	goto	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMRAM
   328   00004B                     __pbssCOMRAM:
   329                           	callstack 0
   330   00004B                     _Scale_Temperature_RS232:
   331                           	callstack 0
   332   00004B                     	ds	1
   333   00004C                     _Che:
   334                           	callstack 0
   335   00004C                     	ds	1
   336                           
   337                           	psect	dataCOMRAM
   338   00004D                     __pdataCOMRAM:
   339                           	callstack 0
   340   00004D                     _interfaz:
   341                           	callstack 0
   342   00004D                     	ds	1
   343                           
   344                           	psect	bssBANK0
   345   000085                     __pbssBANK0:
   346                           	callstack 0
   347   000085                     _Scale_Temperature:
   348                           	callstack 0
   349   000085                     	ds	1
   350   000086                     _Enable_sample:
   351                           	callstack 0
   352   000086                     	ds	1
   353   000087                     _Hum:
   354                           	callstack 0
   355   000087                     	ds	1
   356   000088                     _Temp:
   357                           	callstack 0
   358   000088                     	ds	1
   359                           
   360                           	psect	cstackBANK0
   361   000060                     __pcstackBANK0:
   362                           	callstack 0
   363   000060                     main@buffer_LCD_row_1:
   364                           	callstack 0
   365                           
   366                           ; 17 bytes @ 0x0
   367   000060                     	ds	17
   368   000071                     main@buffer_LCD_row_2:
   369                           	callstack 0
   370                           
   371                           ; 17 bytes @ 0x11
   372   000071                     	ds	17
   373   000082                     main@Temp_n1:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x22
   377   000082                     	ds	1
   378   000083                     main@Hum_n1:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x23
   382   000083                     	ds	1
   383   000084                     main@Scale_Temperature_n1:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x24
   387   000084                     	ds	1
   388                           
   389                           	psect	cstackCOMRAM
   390   000001                     __pcstackCOMRAM:
   391                           	callstack 0
   392   000001                     ??_RetardoLCD:
   393   000001                     ??_DHT11_Start:
   394   000001                     ??_DHT11_CheckResponse:
   395   000001                     ??_DHT11_ReadData:
   396   000001                     ?___lwdiv:
   397                           	callstack 0
   398   000001                     ?___ftpack:
   399                           	callstack 0
   400   000001                     ConfiguraLCD@a:
   401                           	callstack 0
   402   000001                     Transmitir@BufferT:
   403                           	callstack 0
   404   000001                     EEPROM_Write@data:
   405                           	callstack 0
   406   000001                     EEPROM_Read@address:
   407                           	callstack 0
   408   000001                     ___lbmod@divisor:
   409                           	callstack 0
   410   000001                     ___lwdiv@dividend:
   411                           	callstack 0
   412   000001                     ___ftpack@arg:
   413                           	callstack 0
   414                           
   415                           ; 3 bytes @ 0x0
   416   000001                     	ds	1
   417   000002                     RetardoLCD@a:
   418                           	callstack 0
   419   000002                     DHT11_ReadData@i:
   420                           	callstack 0
   421   000002                     EEPROM_Write@address:
   422                           	callstack 0
   423   000002                     ___lbmod@dividend:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x1
   427   000002                     	ds	1
   428   000003                     ??_EnviaDato:
   429   000003                     DHT11_ReadData@data:
   430                           	callstack 0
   431   000003                     ___lbmod@counter:
   432                           	callstack 0
   433   000003                     ___lwdiv@divisor:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x2
   437   000003                     	ds	1
   438   000004                     EnviaDato@a:
   439                           	callstack 0
   440   000004                     ___ftpack@exp:
   441                           	callstack 0
   442   000004                     ___lbmod@rem:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x3
   446   000004                     	ds	1
   447   000005                     ??_init_configuration:
   448   000005                     EscribeLCD_c@a:
   449                           	callstack 0
   450   000005                     DireccionaLCD@a:
   451                           	callstack 0
   452   000005                     ___ftpack@sign:
   453                           	callstack 0
   454   000005                     ___lbdiv@divisor:
   455                           	callstack 0
   456   000005                     ___lwdiv@quotient:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x4
   460   000005                     	ds	1
   461   000006                     ??___ftpack:
   462   000006                     MensajeLCD_Var@a:
   463                           	callstack 0
   464   000006                     show_temperature_LCD@buffer_LCD_row_1:
   465                           	callstack 0
   466   000006                     ___lbdiv@dividend:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x5
   470   000006                     	ds	1
   471   000007                     ??_MensajeLCD_Var:
   472   000007                     show_temperature_LCD@buffer_LCD_row_2:
   473                           	callstack 0
   474   000007                     ___lbdiv@counter:
   475                           	callstack 0
   476   000007                     ___lwdiv@counter:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x6
   480   000007                     	ds	1
   481   000008                     ?___lwmod:
   482                           	callstack 0
   483   000008                     MensajeLCD_Var@counter:
   484                           	callstack 0
   485   000008                     show_temperature_LCD@Temp_n1:
   486                           	callstack 0
   487   000008                     ___lbdiv@quotient:
   488                           	callstack 0
   489   000008                     ___lwmod@dividend:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x7
   493   000008                     	ds	1
   494   000009                     ?___lbtoft:
   495                           	callstack 0
   496   000009                     EscribeLCD_n8@b:
   497                           	callstack 0
   498   000009                     show_temperature_LCD@Hum_n1:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x8
   502   000009                     	ds	1
   503   00000A                     EscribeLCD_n8@centena:
   504                           	callstack 0
   505   00000A                     show_temperature_LCD@Scale_Temperature_n1:
   506                           	callstack 0
   507   00000A                     ___lwmod@divisor:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x9
   511   00000A                     	ds	1
   512   00000B                     EscribeLCD_n8@decena:
   513                           	callstack 0
   514   00000B                     show_temperature_LCD@counter:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0xA
   518   00000B                     	ds	1
   519   00000C                     EscribeLCD_n8@unidad:
   520                           	callstack 0
   521   00000C                     ___lbtoft@c:
   522                           	callstack 0
   523   00000C                     ___lwmod@counter:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0xB
   527   00000C                     	ds	1
   528   00000D                     ?_sprintf:
   529                           	callstack 0
   530   00000D                     ?___ftmul:
   531                           	callstack 0
   532   00000D                     EscribeLCD_n8@a:
   533                           	callstack 0
   534   00000D                     sprintf@sp:
   535                           	callstack 0
   536   00000D                     ___ftmul@f1:
   537                           	callstack 0
   538                           
   539                           ; 3 bytes @ 0xC
   540   00000D                     	ds	1
   541   00000E                     ??_welcome_operations:
   542   00000E                     sprintf@f:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0xD
   546   00000E                     	ds	2
   547   000010                     ___ftmul@f2:
   548                           	callstack 0
   549                           
   550                           ; 3 bytes @ 0xF
   551   000010                     	ds	3
   552   000013                     ??_sprintf:
   553   000013                     ??___ftmul:
   554                           
   555                           ; 1 bytes @ 0x12
   556   000013                     	ds	1
   557   000014                     sprintf@flag:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x13
   561   000014                     	ds	1
   562   000015                     sprintf@prec:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x14
   566   000015                     	ds	1
   567   000016                     sprintf@ap:
   568                           	callstack 0
   569   000016                     ___ftmul@exp:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x15
   573   000016                     	ds	1
   574   000017                     sprintf@val:
   575                           	callstack 0
   576   000017                     ___ftmul@f3_as_product:
   577                           	callstack 0
   578                           
   579                           ; 3 bytes @ 0x16
   580   000017                     	ds	2
   581   000019                     sprintf@c:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x18
   585   000019                     	ds	1
   586   00001A                     ??_send_temperature_RS232:
   587   00001A                     ___ftmul@cntr:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x19
   591   00001A                     	ds	1
   592   00001B                     ___ftmul@sign:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x1A
   596   00001B                     	ds	1
   597   00001C                     ?___ftdiv:
   598                           	callstack 0
   599   00001C                     ___ftdiv@f1:
   600                           	callstack 0
   601   00001C                     send_temperature_RS232@buffer_RS232:
   602                           	callstack 0
   603                           
   604                           ; 12 bytes @ 0x1B
   605   00001C                     	ds	3
   606   00001F                     ___ftdiv@f2:
   607                           	callstack 0
   608                           
   609                           ; 3 bytes @ 0x1E
   610   00001F                     	ds	3
   611   000022                     ??___ftdiv:
   612                           
   613                           ; 1 bytes @ 0x21
   614   000022                     	ds	3
   615   000025                     ___ftdiv@cntr:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x24
   619   000025                     	ds	1
   620   000026                     ___ftdiv@f3:
   621                           	callstack 0
   622                           
   623                           ; 3 bytes @ 0x25
   624   000026                     	ds	2
   625   000028                     send_temperature_RS232@counter:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x27
   629   000028                     	ds	1
   630   000029                     ___ftdiv@exp:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x28
   634   000029                     	ds	1
   635   00002A                     ___ftdiv@sign:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x29
   639   00002A                     	ds	1
   640   00002B                     ?___ftadd:
   641                           	callstack 0
   642   00002B                     ___ftadd@f1:
   643                           	callstack 0
   644                           
   645                           ; 3 bytes @ 0x2A
   646   00002B                     	ds	3
   647   00002E                     ___ftadd@f2:
   648                           	callstack 0
   649                           
   650                           ; 3 bytes @ 0x2D
   651   00002E                     	ds	3
   652   000031                     ??___ftadd:
   653                           
   654                           ; 1 bytes @ 0x30
   655   000031                     	ds	3
   656   000034                     ___ftadd@sign:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x33
   660   000034                     	ds	1
   661   000035                     ___ftadd@exp2:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x34
   665   000035                     	ds	1
   666   000036                     ___ftadd@exp1:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x35
   670   000036                     	ds	1
   671   000037                     ?___fttol:
   672                           	callstack 0
   673   000037                     ___fttol@f1:
   674                           	callstack 0
   675                           
   676                           ; 3 bytes @ 0x36
   677   000037                     	ds	4
   678   00003B                     ??___fttol:
   679                           
   680                           ; 1 bytes @ 0x3A
   681   00003B                     	ds	5
   682   000040                     ___fttol@sign1:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x3F
   686   000040                     	ds	1
   687   000041                     ___fttol@lval:
   688                           	callstack 0
   689                           
   690                           ; 4 bytes @ 0x40
   691   000041                     	ds	4
   692   000045                     ___fttol@exp1:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x44
   696   000045                     	ds	1
   697   000046                     choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x45
   701   000046                     	ds	1
   702   000047                     choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x46
   706   000047                     	ds	1
   707   000048                     ??_choose_scale_temperature_and_fill_buffers:
   708                           
   709                           ; 1 bytes @ 0x47
   710   000048                     	ds	1
   711   000049                     choose_scale_temperature_and_fill_buffers@temp_converted:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x48
   715   000049                     	ds	2
   716   00004B                     
   717                           ; 1 bytes @ 0x4A
   718 ;;
   719 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   720 ;;
   721 ;; *************** function _main *****************
   722 ;; Defined at:
   723 ;;		line 87 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  buffer_LCD_r   17   17[BANK0 ] unsigned char [17]
   728 ;;  buffer_LCD_r   17    0[BANK0 ] unsigned char [17]
   729 ;;  Scale_Temper    1   36[BANK0 ] unsigned char 
   730 ;;  Hum_n1          1   35[BANK0 ] unsigned char 
   731 ;;  Temp_n1         1   34[BANK0 ] unsigned char 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 3F/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   741 ;;      Params:         0       0       0       0       0       0       0       0       0
   742 ;;      Locals:         0      37       0       0       0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0       0       0
   744 ;;      Totals:         0      37       0       0       0       0       0       0       0
   745 ;;Total ram usage:       37 bytes
   746 ;; Hardware stack levels required when called: 6
   747 ;; This function calls:
   748 ;;		_check_potentiometer_voltaje
   749 ;;		_choose_scale_temperature_and_fill_buffers
   750 ;;		_init_configuration
   751 ;;		_measure_temperature_c_humidity_per
   752 ;;		_save_temperature_c_EEPROM
   753 ;;		_send_temperature_RS232
   754 ;;		_show_temperature_LCD
   755 ;;		_show_temperature_c_RGB
   756 ;;		_welcome_operations
   757 ;; This function is called by:
   758 ;;		Startup code after reset
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text0
   763   0014F2                     __ptext0:
   764                           	callstack 0
   765   0014F2                     _main:
   766                           	callstack 25
   767                           
   768                           ;LAB05.c: 88: init_configuration();
   769                           
   770                           ;incstack = 0
   771   0014F2  ECC5  F009         	call	_init_configuration	;wreg free
   772                           
   773                           ;LAB05.c: 89: welcome_operations();
   774   0014F6  EC05  F00A         	call	_welcome_operations	;wreg free
   775                           
   776                           ;LAB05.c: 92: SWDTEN = 1;
   777   0014FA  80D1               	bsf	4049,0,c	;volatile
   778                           
   779                           ;LAB05.c: 96: unsigned char buffer_LCD_row_1[17];;LAB05.c: 97: unsigned char buffer_LCD_
      +                          row_2[17];;LAB05.c: 100: unsigned char Temp_n1=255;
   780   0014FC  0100               	movlb	0	; () banked
   781   0014FE  6982               	setf	main@Temp_n1& (0+255),b
   782                           
   783                           ; BSR set to: 0
   784                           ;LAB05.c: 101: unsigned char Hum_n1=255;
   785   001500  6983               	setf	main@Hum_n1& (0+255),b
   786                           
   787                           ; BSR set to: 0
   788                           ;LAB05.c: 102: unsigned char Scale_Temperature_n1=255;
   789   001502  6984               	setf	main@Scale_Temperature_n1& (0+255),b
   790   001504                     l3020:
   791                           
   792                           ; BSR set to: 0
   793                           ;LAB05.c: 106: if(Enable_sample){
   794   001504  5186               	movf	_Enable_sample& (0+255),w,b
   795   001506  B4D8               	btfsc	status,2,c
   796   001508  D7FD               	goto	l3020
   797                           
   798                           ; BSR set to: 0
   799                           ;LAB05.c: 111: measure_temperature_c_humidity_per();
   800   00150A  EC2D  F00C         	call	_measure_temperature_c_humidity_per	;wreg free
   801   00150E  0004               	clrwdt		;# 
   802                           
   803                           ;LAB05.c: 113: send_temperature_RS232();
   804   001510  EC34  F00B         	call	_send_temperature_RS232	;wreg free
   805                           
   806                           ;LAB05.c: 114: save_temperature_c_EEPROM();
   807   001514  ECB3  F00C         	call	_save_temperature_c_EEPROM	;wreg free
   808                           
   809                           ;LAB05.c: 115: choose_scale_temperature_and_fill_buffers(buffer_LCD_row_1,buffer_LCD_row
      +                          _2);
   810   001518  0E60               	movlw	low main@buffer_LCD_row_1
   811   00151A  6E46               	movwf	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1^0,c
   812   00151C  0E71               	movlw	low main@buffer_LCD_row_2
   813   00151E  6E47               	movwf	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2^0,c
   814   001520  EC3C  F004         	call	_choose_scale_temperature_and_fill_buffers	;wreg free
   815                           
   816                           ;LAB05.c: 116: show_temperature_c_RGB();
   817   001524  EC43  F00A         	call	_show_temperature_c_RGB	;wreg free
   818                           
   819                           ; BSR set to: 0
   820                           ;LAB05.c: 117: show_temperature_LCD(buffer_LCD_row_1, buffer_LCD_row_2, Temp_n1, Hum_n1,
      +                           Scale_Temperature_n1);
   821   001528  0E60               	movlw	low main@buffer_LCD_row_1
   822   00152A  6E06               	movwf	show_temperature_LCD@buffer_LCD_row_1^0,c
   823   00152C  0E71               	movlw	low main@buffer_LCD_row_2
   824   00152E  6E07               	movwf	show_temperature_LCD@buffer_LCD_row_2^0,c
   825   001530  C082  F008         	movff	main@Temp_n1,show_temperature_LCD@Temp_n1
   826   001534  C083  F009         	movff	main@Hum_n1,show_temperature_LCD@Hum_n1
   827   001538  C084  F00A         	movff	main@Scale_Temperature_n1,show_temperature_LCD@Scale_Temperature_n1
   828   00153C  EC3B  F009         	call	_show_temperature_LCD	;wreg free
   829                           
   830                           ;LAB05.c: 118: check_potentiometer_voltaje();
   831   001540  EC63  F00C         	call	_check_potentiometer_voltaje	;wreg free
   832                           
   833                           ;LAB05.c: 119: Enable_sample = 0;
   834   001544  0E00               	movlw	0
   835   001546  0100               	movlb	0	; () banked
   836   001548  6F86               	movwf	_Enable_sample& (0+255),b
   837                           
   838                           ; BSR set to: 0
   839                           ;LAB05.c: 122: Temp_n1=Temp;
   840   00154A  C088  F082         	movff	_Temp,main@Temp_n1
   841                           
   842                           ; BSR set to: 0
   843                           ;LAB05.c: 123: Hum_n1=Hum;
   844   00154E  C087  F083         	movff	_Hum,main@Hum_n1
   845                           
   846                           ; BSR set to: 0
   847                           ;LAB05.c: 124: Scale_Temperature_n1=Scale_Temperature;
   848   001552  C085  F084         	movff	_Scale_Temperature,main@Scale_Temperature_n1
   849                           
   850                           ; BSR set to: 0
   851                           ;LAB05.c: 125: CREN=1;
   852   001556  88AB               	bsf	4011,4,c	;volatile
   853   001558  D7D5               	goto	l3020
   854   00155A                     __end_of_main:
   855                           	callstack 0
   856                           
   857 ;; *************** function _welcome_operations *****************
   858 ;; Defined at:
   859 ;;		line 208 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   873 ;;      Params:         0       0       0       0       0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0
   875 ;;      Temps:          2       0       0       0       0       0       0       0       0
   876 ;;      Totals:         2       0       0       0       0       0       0       0       0
   877 ;;Total ram usage:        2 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 5
   880 ;; This function calls:
   881 ;;		_BorraLCD
   882 ;;		_EEPROM_Read
   883 ;;		_EscribeLCD_n8
   884 ;;		_MensajeLCD_Var
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text1
   891   00140A                     __ptext1:
   892                           	callstack 0
   893   00140A                     _welcome_operations:
   894                           	callstack 25
   895                           
   896                           ;LAB05.c: 212: if(TO==0){
   897                           
   898                           ; BSR set to: 0
   899                           ;incstack = 0
   900   00140A  B6D0               	btfsc	4048,3,c	;volatile
   901   00140C  D006               	goto	l2828
   902                           
   903                           ;LAB05.c: 213: TO=1;
   904   00140E  86D0               	bsf	4048,3,c	;volatile
   905                           
   906                           ;LAB05.c: 214: MensajeLCD_Var("Failed DHT11");
   907   001410  0E1C               	movlw	low STR_1
   908   001412  6E06               	movwf	MensajeLCD_Var@a^0,c
   909   001414  EC83  F009         	call	_MensajeLCD_Var	;wreg free
   910   001418  0003               	sleep		;# 
   911   00141A                     l2828:
   912                           
   913                           ;LAB05.c: 216: };LAB05.c: 218: BorraLCD();
   914   00141A  EC94  F00C         	call	_BorraLCD	;wreg free
   915                           
   916                           ;LAB05.c: 219: MensajeLCD_Var("Sensors");
   917   00141E  0E69               	movlw	low STR_2
   918   001420  6E06               	movwf	MensajeLCD_Var@a^0,c
   919   001422  EC83  F009         	call	_MensajeLCD_Var	;wreg free
   920                           
   921                           ;LAB05.c: 220: MensajeLCD_Var("\nGod is good");
   922   001426  0E29               	movlw	low STR_3
   923   001428  6E06               	movwf	MensajeLCD_Var@a^0,c
   924   00142A  EC83  F009         	call	_MensajeLCD_Var	;wreg free
   925                           
   926                           ;LAB05.c: 221: _delay((unsigned long)((1000)*(8000000/4000.0)));
   927   00142E  0E0B               	movlw	11
   928   001430  6E0F               	movwf	(??_welcome_operations+1)^0,c
   929   001432  0E26               	movlw	38
   930   001434  6E0E               	movwf	??_welcome_operations^0,c
   931   001436  0E5E               	movlw	94
   932   001438                     u2677:
   933   001438  2EE8               	decfsz	wreg,f,c
   934   00143A  D7FE               	bra	u2677
   935   00143C  2E0E               	decfsz	??_welcome_operations^0,f,c
   936   00143E  D7FC               	bra	u2677
   937   001440  2E0F               	decfsz	(??_welcome_operations+1)^0,f,c
   938   001442  D7FA               	bra	u2677
   939                           
   940                           ;LAB05.c: 224: BorraLCD();
   941   001444  EC94  F00C         	call	_BorraLCD	;wreg free
   942                           
   943                           ;LAB05.c: 225: MensajeLCD_Var("Last Temperature");
   944   001448  0E0B               	movlw	low STR_4
   945   00144A  6E06               	movwf	MensajeLCD_Var@a^0,c
   946   00144C  EC83  F009         	call	_MensajeLCD_Var	;wreg free
   947                           
   948                           ;LAB05.c: 226: MensajeLCD_Var("\nT: ");
   949   001450  0E71               	movlw	low STR_5
   950   001452  6E06               	movwf	MensajeLCD_Var@a^0,c
   951   001454  EC83  F009         	call	_MensajeLCD_Var	;wreg free
   952                           
   953                           ;LAB05.c: 227: EscribeLCD_n8(EEPROM_Read(0),2);
   954   001458  0E02               	movlw	2
   955   00145A  6E09               	movwf	EscribeLCD_n8@b^0,c
   956   00145C  0E00               	movlw	0
   957   00145E  EC9E  F00C         	call	_EEPROM_Read
   958   001462  EC47  F007         	call	_EscribeLCD_n8
   959                           
   960                           ;LAB05.c: 228: MensajeLCD_Var(" C");
   961   001466  0E56               	movlw	low (STR_7+5)
   962   001468  6E06               	movwf	MensajeLCD_Var@a^0,c
   963   00146A  EC83  F009         	call	_MensajeLCD_Var	;wreg free
   964                           
   965                           ;LAB05.c: 229: _delay((unsigned long)((1000)*(8000000/4000.0)));
   966   00146E  0E0B               	movlw	11
   967   001470  6E0F               	movwf	(??_welcome_operations+1)^0,c
   968   001472  0E26               	movlw	38
   969   001474  6E0E               	movwf	??_welcome_operations^0,c
   970   001476  0E5E               	movlw	94
   971   001478                     u2687:
   972   001478  2EE8               	decfsz	wreg,f,c
   973   00147A  D7FE               	bra	u2687
   974   00147C  2E0E               	decfsz	??_welcome_operations^0,f,c
   975   00147E  D7FC               	bra	u2687
   976   001480  2E0F               	decfsz	(??_welcome_operations+1)^0,f,c
   977   001482  D7FA               	bra	u2687
   978   001484  0012               	return		;funcret
   979   001486                     __end_of_welcome_operations:
   980                           	callstack 0
   981                           
   982 ;; *************** function _MensajeLCD_Var *****************
   983 ;; Defined at:
   984 ;;		line 232 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  a               1    5[COMRAM] PTR unsigned char 
   987 ;;		 -> STR_6(3), STR_5(5), STR_4(17), STR_3(13), 
   988 ;;		 -> STR_2(8), STR_1(13), 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  counter         1    7[COMRAM] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1000 ;;      Params:         1       0       0       0       0       0       0       0       0
  1001 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1002 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1003 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1004 ;;Total ram usage:        3 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; Hardware stack levels required when called: 4
  1007 ;; This function calls:
  1008 ;;		_BorraLCD
  1009 ;;		_DireccionaLCD
  1010 ;;		_EscribeLCD_c
  1011 ;; This function is called by:
  1012 ;;		_welcome_operations
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text2
  1017   001306                     __ptext2:
  1018                           	callstack 0
  1019   001306                     _MensajeLCD_Var:
  1020                           	callstack 25
  1021                           
  1022                           ;LibLCDXC8.h: 237: unsigned char counter=0;
  1023                           
  1024                           ;incstack = 0
  1025   001306  0E00               	movlw	0
  1026   001308  6E08               	movwf	MensajeLCD_Var@counter^0,c
  1027                           
  1028                           ;LibLCDXC8.h: 238: while(a[counter]!='\0' && counter<=255){
  1029   00130A  D032               	goto	l2410
  1030   00130C                     l2392:
  1031                           
  1032                           ;LibLCDXC8.h: 240: if(a[counter]=='\n'){
  1033   00130C  5006               	movf	MensajeLCD_Var@a^0,w,c
  1034   00130E  2408               	addwf	MensajeLCD_Var@counter^0,w,c
  1035   001310  6E07               	movwf	??_MensajeLCD_Var^0,c
  1036   001312  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1037   001316                     	if	1	;There is more than 1 active tblptr byte
  1038   001316  0E08               	movlw	high __smallconst
  1039   001318  6EF7               	movwf	tblptrh,c
  1040   00131A                     	endif
  1041   00131A                     	if	0	;tblptru may be non-zero
  1042   00131A                     	endif
  1043   00131A                     	if	0	;tblptru may be non-zero
  1044   00131A                     	endif
  1045   00131A  0008               	tblrd		*
  1046   00131C  50F5               	movf	tablat,w,c
  1047   00131E  0A0A               	xorlw	10
  1048   001320  A4D8               	btfss	status,2,c
  1049   001322  D004               	goto	l2398
  1050                           
  1051                           ;LibLCDXC8.h: 241: DireccionaLCD(0xC0);
  1052   001324  0EC0               	movlw	192
  1053   001326  EC89  F00C         	call	_DireccionaLCD
  1054                           
  1055                           ;LibLCDXC8.h: 242: counter++;
  1056   00132A  2A08               	incf	MensajeLCD_Var@counter^0,f,c
  1057   00132C                     l2398:
  1058                           
  1059                           ;LibLCDXC8.h: 243: };LibLCDXC8.h: 245: EscribeLCD_c(a[counter]);
  1060   00132C  5006               	movf	MensajeLCD_Var@a^0,w,c
  1061   00132E  2408               	addwf	MensajeLCD_Var@counter^0,w,c
  1062   001330  6E07               	movwf	??_MensajeLCD_Var^0,c
  1063   001332  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1064   001336                     	if	1	;There is more than 1 active tblptr byte
  1065   001336  0E08               	movlw	high __smallconst
  1066   001338  6EF7               	movwf	tblptrh,c
  1067   00133A                     	endif
  1068   00133A                     	if	0	;tblptru may be non-zero
  1069   00133A                     	endif
  1070   00133A                     	if	0	;tblptru may be non-zero
  1071   00133A                     	endif
  1072   00133A  0008               	tblrd		*
  1073   00133C  50F5               	movf	tablat,w,c
  1074   00133E  EC7E  F00C         	call	_EscribeLCD_c
  1075                           
  1076                           ;LibLCDXC8.h: 247: if((counter+1)%32==0){
  1077   001342  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
  1078   001346  0E01               	movlw	1
  1079   001348  2607               	addwf	??_MensajeLCD_Var^0,f,c
  1080   00134A  0E1F               	movlw	31
  1081   00134C  1607               	andwf	??_MensajeLCD_Var^0,f,c
  1082   00134E  A4D8               	btfss	status,2,c
  1083   001350  D003               	goto	l2404
  1084                           
  1085                           ;LibLCDXC8.h: 248: BorraLCD();
  1086   001352  EC94  F00C         	call	_BorraLCD	;wreg free
  1087                           
  1088                           ;LibLCDXC8.h: 249: }
  1089   001356  D00B               	goto	l2408
  1090   001358                     l2404:
  1091                           
  1092                           ;LibLCDXC8.h: 250: else if((counter+1)%16==0){
  1093   001358  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
  1094   00135C  0E01               	movlw	1
  1095   00135E  2607               	addwf	??_MensajeLCD_Var^0,f,c
  1096   001360  0E0F               	movlw	15
  1097   001362  1607               	andwf	??_MensajeLCD_Var^0,f,c
  1098   001364  A4D8               	btfss	status,2,c
  1099   001366  D003               	goto	l2408
  1100                           
  1101                           ;LibLCDXC8.h: 251: DireccionaLCD(0xC0);
  1102   001368  0EC0               	movlw	192
  1103   00136A  EC89  F00C         	call	_DireccionaLCD
  1104   00136E                     l2408:
  1105                           
  1106                           ;LibLCDXC8.h: 252: };LibLCDXC8.h: 254: counter++;
  1107   00136E  2A08               	incf	MensajeLCD_Var@counter^0,f,c
  1108   001370                     l2410:
  1109   001370  5006               	movf	MensajeLCD_Var@a^0,w,c
  1110   001372  2408               	addwf	MensajeLCD_Var@counter^0,w,c
  1111   001374  6E07               	movwf	??_MensajeLCD_Var^0,c
  1112   001376  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1113   00137A                     	if	1	;There is more than 1 active tblptr byte
  1114   00137A  0E08               	movlw	high __smallconst
  1115   00137C  6EF7               	movwf	tblptrh,c
  1116   00137E                     	endif
  1117   00137E                     	if	0	;tblptru may be non-zero
  1118   00137E                     	endif
  1119   00137E                     	if	0	;tblptru may be non-zero
  1120   00137E                     	endif
  1121   00137E  0008               	tblrd		*
  1122   001380  50F5               	movf	tablat,w,c
  1123   001382  0900               	iorlw	0
  1124   001384  B4D8               	btfsc	status,2,c
  1125   001386  0012               	return	
  1126   001388  D7C1               	goto	l2392
  1127   00138A                     __end_of_MensajeLCD_Var:
  1128                           	callstack 0
  1129                           
  1130 ;; *************** function _EscribeLCD_n8 *****************
  1131 ;; Defined at:
  1132 ;;		line 145 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  a               1    wreg     unsigned char 
  1135 ;;  b               1    8[COMRAM] unsigned char 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  a               1   12[COMRAM] unsigned char 
  1138 ;;  unidad          1   11[COMRAM] unsigned char 
  1139 ;;  decena          1   10[COMRAM] unsigned char 
  1140 ;;  centena         1    9[COMRAM] unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1150 ;;      Params:         1       0       0       0       0       0       0       0       0
  1151 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1153 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1154 ;;Total ram usage:        5 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 3
  1157 ;; This function calls:
  1158 ;;		_EnviaDato
  1159 ;;		_HabilitaLCD
  1160 ;;		_RetardoLCD
  1161 ;;		___lbdiv
  1162 ;;		___lbmod
  1163 ;; This function is called by:
  1164 ;;		_welcome_operations
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text3
  1169   000E8E                     __ptext3:
  1170                           	callstack 0
  1171   000E8E                     _EscribeLCD_n8:
  1172                           	callstack 26
  1173                           
  1174                           ;incstack = 0
  1175                           ;EscribeLCD_n8@a stored from wreg
  1176   000E8E  6E0D               	movwf	EscribeLCD_n8@a^0,c
  1177                           
  1178                           ;LibLCDXC8.h: 150: unsigned char centena,decena,unidad;;LibLCDXC8.h: 151: LATD0=1;
  1179   000E90  808C               	bsf	3980,0,c	;volatile
  1180                           
  1181                           ;LibLCDXC8.h: 152: switch(b){
  1182   000E92  D065               	goto	l2388
  1183   000E94                     l2356:
  1184   000E94  0E0A               	movlw	10
  1185   000E96  6E01               	movwf	___lbmod@divisor^0,c
  1186   000E98  500D               	movf	EscribeLCD_n8@a^0,w,c
  1187   000E9A  EC05  F00C         	call	___lbmod
  1188   000E9E  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  1189                           
  1190                           ;LibLCDXC8.h: 154: EnviaDato(unidad+48);
  1191   000EA0  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  1192   000EA2  0F30               	addlw	48
  1193   000EA4  EC5C  F00B         	call	_EnviaDato
  1194                           
  1195                           ;LibLCDXC8.h: 155: HabilitaLCD();
  1196   000EA8  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  1197                           
  1198                           ;LibLCDXC8.h: 156: RetardoLCD(4);
  1199   000EAC  0E04               	movlw	4
  1200   000EAE  ECAD  F00A         	call	_RetardoLCD
  1201                           
  1202                           ;LibLCDXC8.h: 157: break;
  1203   000EB2  0012               	return	
  1204   000EB4                     l2362:
  1205   000EB4  0E0A               	movlw	10
  1206   000EB6  6E05               	movwf	___lbdiv@divisor^0,c
  1207   000EB8  0E64               	movlw	100
  1208   000EBA  6E01               	movwf	___lbmod@divisor^0,c
  1209   000EBC  500D               	movf	EscribeLCD_n8@a^0,w,c
  1210   000EBE  EC05  F00C         	call	___lbmod
  1211   000EC2  ECA0  F00B         	call	___lbdiv
  1212   000EC6  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  1213                           
  1214                           ;LibLCDXC8.h: 159: unidad=a%10;
  1215   000EC8  0E0A               	movlw	10
  1216   000ECA  6E01               	movwf	___lbmod@divisor^0,c
  1217   000ECC  500D               	movf	EscribeLCD_n8@a^0,w,c
  1218   000ECE  EC05  F00C         	call	___lbmod
  1219   000ED2  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  1220                           
  1221                           ;LibLCDXC8.h: 160: EnviaDato(decena+48);
  1222   000ED4  500B               	movf	EscribeLCD_n8@decena^0,w,c
  1223   000ED6  0F30               	addlw	48
  1224   000ED8  EC5C  F00B         	call	_EnviaDato
  1225                           
  1226                           ;LibLCDXC8.h: 161: HabilitaLCD();
  1227   000EDC  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  1228                           
  1229                           ;LibLCDXC8.h: 162: RetardoLCD(4);
  1230   000EE0  0E04               	movlw	4
  1231   000EE2  ECAD  F00A         	call	_RetardoLCD
  1232                           
  1233                           ;LibLCDXC8.h: 163: EnviaDato(unidad+48);
  1234   000EE6  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  1235   000EE8  0F30               	addlw	48
  1236   000EEA  EC5C  F00B         	call	_EnviaDato
  1237                           
  1238                           ;LibLCDXC8.h: 164: HabilitaLCD();
  1239   000EEE  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  1240                           
  1241                           ;LibLCDXC8.h: 165: RetardoLCD(4);
  1242   000EF2  0E04               	movlw	4
  1243   000EF4  ECAD  F00A         	call	_RetardoLCD
  1244                           
  1245                           ;LibLCDXC8.h: 166: break;
  1246   000EF8  0012               	return	
  1247   000EFA                     l2372:
  1248   000EFA  0E64               	movlw	100
  1249   000EFC  6E05               	movwf	___lbdiv@divisor^0,c
  1250   000EFE  500D               	movf	EscribeLCD_n8@a^0,w,c
  1251   000F00  ECA0  F00B         	call	___lbdiv
  1252   000F04  6E0A               	movwf	EscribeLCD_n8@centena^0,c
  1253                           
  1254                           ;LibLCDXC8.h: 168: decena=(a%100)/10;
  1255   000F06  0E0A               	movlw	10
  1256   000F08  6E05               	movwf	___lbdiv@divisor^0,c
  1257   000F0A  0E64               	movlw	100
  1258   000F0C  6E01               	movwf	___lbmod@divisor^0,c
  1259   000F0E  500D               	movf	EscribeLCD_n8@a^0,w,c
  1260   000F10  EC05  F00C         	call	___lbmod
  1261   000F14  ECA0  F00B         	call	___lbdiv
  1262   000F18  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  1263                           
  1264                           ;LibLCDXC8.h: 169: unidad=a%10;
  1265   000F1A  0E0A               	movlw	10
  1266   000F1C  6E01               	movwf	___lbmod@divisor^0,c
  1267   000F1E  500D               	movf	EscribeLCD_n8@a^0,w,c
  1268   000F20  EC05  F00C         	call	___lbmod
  1269   000F24  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  1270                           
  1271                           ;LibLCDXC8.h: 170: EnviaDato(centena+48);
  1272   000F26  500A               	movf	EscribeLCD_n8@centena^0,w,c
  1273   000F28  0F30               	addlw	48
  1274   000F2A  EC5C  F00B         	call	_EnviaDato
  1275                           
  1276                           ;LibLCDXC8.h: 171: HabilitaLCD();
  1277   000F2E  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  1278                           
  1279                           ;LibLCDXC8.h: 172: RetardoLCD(4);
  1280   000F32  0E04               	movlw	4
  1281   000F34  ECAD  F00A         	call	_RetardoLCD
  1282                           
  1283                           ;LibLCDXC8.h: 173: EnviaDato(decena+48);
  1284   000F38  500B               	movf	EscribeLCD_n8@decena^0,w,c
  1285   000F3A  0F30               	addlw	48
  1286   000F3C  EC5C  F00B         	call	_EnviaDato
  1287                           
  1288                           ;LibLCDXC8.h: 174: HabilitaLCD();
  1289   000F40  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  1290                           
  1291                           ;LibLCDXC8.h: 175: RetardoLCD(4);
  1292   000F44  0E04               	movlw	4
  1293   000F46  ECAD  F00A         	call	_RetardoLCD
  1294                           
  1295                           ;LibLCDXC8.h: 176: EnviaDato(unidad+48);
  1296   000F4A  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  1297   000F4C  0F30               	addlw	48
  1298   000F4E  EC5C  F00B         	call	_EnviaDato
  1299                           
  1300                           ;LibLCDXC8.h: 177: HabilitaLCD();
  1301   000F52  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  1302                           
  1303                           ;LibLCDXC8.h: 178: RetardoLCD(4);
  1304   000F56  0E04               	movlw	4
  1305   000F58  ECAD  F00A         	call	_RetardoLCD
  1306                           
  1307                           ;LibLCDXC8.h: 179: break;
  1308   000F5C  0012               	return	
  1309   000F5E                     l2388:
  1310   000F5E  5009               	movf	EscribeLCD_n8@b^0,w,c
  1311                           
  1312                           ; Switch size 1, requested type "simple"
  1313                           ; Number of cases is 3, Range of values is 1 to 3
  1314                           ; switch strategies available:
  1315                           ; Name         Instructions Cycles
  1316                           ; simple_byte           10     6 (average)
  1317                           ;	Chosen strategy is simple_byte
  1318   000F60  0A01               	xorlw	1	; case 1
  1319   000F62  B4D8               	btfsc	status,2,c
  1320   000F64  D797               	goto	l2356
  1321   000F66  0A03               	xorlw	3	; case 2
  1322   000F68  B4D8               	btfsc	status,2,c
  1323   000F6A  D7A4               	goto	l2362
  1324   000F6C  0A01               	xorlw	1	; case 3
  1325   000F6E  A4D8               	btfss	status,2,c
  1326   000F70  0012               	return	
  1327   000F72  D7C3               	goto	l2372
  1328   000F74                     __end_of_EscribeLCD_n8:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function ___lbmod *****************
  1332 ;; Defined at:
  1333 ;;		line 4 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbmod.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  dividend        1    wreg     unsigned char 
  1336 ;;  divisor         1    0[COMRAM] unsigned char 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  dividend        1    1[COMRAM] unsigned char 
  1339 ;;  rem             1    3[COMRAM] unsigned char 
  1340 ;;  counter         1    2[COMRAM] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      unsigned char 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1350 ;;      Params:         1       0       0       0       0       0       0       0       0
  1351 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1353 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1354 ;;Total ram usage:        4 bytes
  1355 ;; Hardware stack levels used: 1
  1356 ;; Hardware stack levels required when called: 1
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_EscribeLCD_n8
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text4
  1365   00180A                     __ptext4:
  1366                           	callstack 0
  1367   00180A                     ___lbmod:
  1368                           	callstack 27
  1369                           
  1370                           ;incstack = 0
  1371                           ;___lbmod@dividend stored from wreg
  1372   00180A  6E02               	movwf	___lbmod@dividend^0,c
  1373   00180C  0E08               	movlw	8
  1374   00180E  6E03               	movwf	___lbmod@counter^0,c
  1375   001810  0E00               	movlw	0
  1376   001812  6E04               	movwf	___lbmod@rem^0,c
  1377   001814                     l2244:
  1378   001814  90D8               	bcf	status,0,c
  1379   001816  3402               	rlcf	___lbmod@dividend^0,w,c
  1380   001818  3404               	rlcf	___lbmod@rem^0,w,c
  1381   00181A  6E04               	movwf	___lbmod@rem^0,c
  1382   00181C  90D8               	bcf	status,0,c
  1383   00181E  3602               	rlcf	___lbmod@dividend^0,f,c
  1384   001820  5001               	movf	___lbmod@divisor^0,w,c
  1385   001822  5C04               	subwf	___lbmod@rem^0,w,c
  1386   001824  A0D8               	btfss	status,0,c
  1387   001826  D002               	goto	l2252
  1388   001828  5001               	movf	___lbmod@divisor^0,w,c
  1389   00182A  5E04               	subwf	___lbmod@rem^0,f,c
  1390   00182C                     l2252:
  1391   00182C  2E03               	decfsz	___lbmod@counter^0,f,c
  1392   00182E  D7F2               	goto	l2244
  1393   001830  5004               	movf	___lbmod@rem^0,w,c
  1394   001832  0012               	return		;funcret
  1395   001834                     __end_of___lbmod:
  1396                           	callstack 0
  1397                           
  1398 ;; *************** function ___lbdiv *****************
  1399 ;; Defined at:
  1400 ;;		line 4 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbdiv.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  dividend        1    wreg     unsigned char 
  1403 ;;  divisor         1    4[COMRAM] unsigned char 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  dividend        1    5[COMRAM] unsigned char 
  1406 ;;  quotient        1    7[COMRAM] unsigned char 
  1407 ;;  counter         1    6[COMRAM] unsigned char 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      unsigned char 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1417 ;;      Params:         1       0       0       0       0       0       0       0       0
  1418 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1420 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1421 ;;Total ram usage:        4 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; Hardware stack levels required when called: 1
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_EscribeLCD_n8
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text5
  1432   001740                     __ptext5:
  1433                           	callstack 0
  1434   001740                     ___lbdiv:
  1435                           	callstack 27
  1436                           
  1437                           ;incstack = 0
  1438                           ;___lbdiv@dividend stored from wreg
  1439   001740  6E06               	movwf	___lbdiv@dividend^0,c
  1440   001742  0E00               	movlw	0
  1441   001744  6E08               	movwf	___lbdiv@quotient^0,c
  1442   001746  5005               	movf	___lbdiv@divisor^0,w,c
  1443   001748  B4D8               	btfsc	status,2,c
  1444   00174A  D015               	goto	l2238
  1445   00174C  0E01               	movlw	1
  1446   00174E  6E07               	movwf	___lbdiv@counter^0,c
  1447   001750  D003               	goto	l2226
  1448   001752                     l2222:
  1449   001752  90D8               	bcf	status,0,c
  1450   001754  3605               	rlcf	___lbdiv@divisor^0,f,c
  1451   001756  2A07               	incf	___lbdiv@counter^0,f,c
  1452   001758                     l2226:
  1453   001758  AE05               	btfss	___lbdiv@divisor^0,7,c
  1454   00175A  D7FB               	goto	l2222
  1455   00175C                     u1450:
  1456   00175C  90D8               	bcf	status,0,c
  1457   00175E  3608               	rlcf	___lbdiv@quotient^0,f,c
  1458   001760  5005               	movf	___lbdiv@divisor^0,w,c
  1459   001762  5C06               	subwf	___lbdiv@dividend^0,w,c
  1460   001764  A0D8               	btfss	status,0,c
  1461   001766  D003               	goto	l2234
  1462   001768  5005               	movf	___lbdiv@divisor^0,w,c
  1463   00176A  5E06               	subwf	___lbdiv@dividend^0,f,c
  1464   00176C  8008               	bsf	___lbdiv@quotient^0,0,c
  1465   00176E                     l2234:
  1466   00176E  90D8               	bcf	status,0,c
  1467   001770  3205               	rrcf	___lbdiv@divisor^0,f,c
  1468   001772  2E07               	decfsz	___lbdiv@counter^0,f,c
  1469   001774  D7F3               	goto	u1450
  1470   001776                     l2238:
  1471   001776  5008               	movf	___lbdiv@quotient^0,w,c
  1472   001778  0012               	return		;funcret
  1473   00177A                     __end_of___lbdiv:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _EEPROM_Read *****************
  1477 ;; Defined at:
  1478 ;;		line 495 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  address         1    wreg     unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  address         1    0[COMRAM] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      unsigned char 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1492 ;;      Params:         0       0       0       0       0       0       0       0       0
  1493 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1495 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1496 ;;Total ram usage:        1 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_welcome_operations
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text6
  1507   00193C                     __ptext6:
  1508                           	callstack 0
  1509   00193C                     _EEPROM_Read:
  1510                           	callstack 28
  1511                           
  1512                           ;incstack = 0
  1513                           ;EEPROM_Read@address stored from wreg
  1514   00193C  6E01               	movwf	EEPROM_Read@address^0,c
  1515                           
  1516                           ;LAB05.c: 496: EEADR=address;
  1517   00193E  C001  FFA9         	movff	EEPROM_Read@address,4009	;volatile
  1518                           
  1519                           ;LAB05.c: 497: WREN=0;
  1520   001942  94A6               	bcf	4006,2,c	;volsfr
  1521                           
  1522                           ;LAB05.c: 498: EEPGD=0;
  1523   001944  9EA6               	bcf	4006,7,c	;volsfr
  1524                           
  1525                           ;LAB05.c: 499: RD=1;
  1526   001946  80A6               	bsf	4006,0,c	;volsfr
  1527                           
  1528                           ;LAB05.c: 501: return EEDATA;
  1529   001948  50A8               	movf	168,w,c	;volatile
  1530   00194A  0012               	return		;funcret
  1531   00194C                     __end_of_EEPROM_Read:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _show_temperature_c_RGB *****************
  1535 ;; Defined at:
  1536 ;;		line 301 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 3F/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text7
  1565   001486                     __ptext7:
  1566                           	callstack 0
  1567   001486                     _show_temperature_c_RGB:
  1568                           	callstack 29
  1569                           
  1570                           ;LAB05.c: 302: if(Temp<22){
  1571                           
  1572                           ;incstack = 0
  1573   001486  0E16               	movlw	22
  1574   001488  0100               	movlb	0	; () banked
  1575   00148A  6188               	cpfslt	_Temp& (0+255),b
  1576   00148C  D004               	goto	l2940
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;LAB05.c: 304: LATE0=1;
  1580   00148E  808D               	bsf	3981,0,c	;volatile
  1581                           
  1582                           ;LAB05.c: 305: LATE2=1;
  1583   001490  848D               	bsf	3981,2,c	;volatile
  1584                           
  1585                           ;LAB05.c: 306: LATE1=1;
  1586   001492  828D               	bsf	3981,1,c	;volatile
  1587                           
  1588                           ;LAB05.c: 307: }
  1589   001494  0012               	return	
  1590   001496                     l2940:
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;LAB05.c: 308: else if(Temp<25) {
  1594   001496  0E19               	movlw	25
  1595   001498  6188               	cpfslt	_Temp& (0+255),b
  1596   00149A  D004               	goto	l2944
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;LAB05.c: 310: LATE0=0;
  1600   00149C  908D               	bcf	3981,0,c	;volatile
  1601                           
  1602                           ;LAB05.c: 311: LATE2=1;
  1603   00149E  848D               	bsf	3981,2,c	;volatile
  1604                           
  1605                           ;LAB05.c: 312: LATE1=0;
  1606   0014A0  928D               	bcf	3981,1,c	;volatile
  1607                           
  1608                           ;LAB05.c: 313: }
  1609   0014A2  0012               	return	
  1610   0014A4                     l2944:
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;LAB05.c: 314: else if(Temp<28){
  1614   0014A4  0E1C               	movlw	28
  1615   0014A6  6188               	cpfslt	_Temp& (0+255),b
  1616   0014A8  D004               	goto	l2948
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;LAB05.c: 316: LATE0=1;
  1620   0014AA  808D               	bsf	3981,0,c	;volatile
  1621                           
  1622                           ;LAB05.c: 317: LATE2=1;
  1623   0014AC  848D               	bsf	3981,2,c	;volatile
  1624                           
  1625                           ;LAB05.c: 318: LATE1=0;
  1626   0014AE  928D               	bcf	3981,1,c	;volatile
  1627                           
  1628                           ;LAB05.c: 320: }
  1629   0014B0  0012               	return	
  1630   0014B2                     l2948:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;LAB05.c: 321: else if(Temp<31){
  1634   0014B2  0E1F               	movlw	31
  1635   0014B4  6188               	cpfslt	_Temp& (0+255),b
  1636   0014B6  D004               	goto	l2952
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;LAB05.c: 323: LATE0=1;
  1640   0014B8  808D               	bsf	3981,0,c	;volatile
  1641                           
  1642                           ;LAB05.c: 324: LATE2=0;
  1643   0014BA  948D               	bcf	3981,2,c	;volatile
  1644                           
  1645                           ;LAB05.c: 325: LATE1=0;
  1646   0014BC  928D               	bcf	3981,1,c	;volatile
  1647                           
  1648                           ;LAB05.c: 326: }
  1649   0014BE  0012               	return	
  1650   0014C0                     l2952:
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;LAB05.c: 327: else if(Temp<34){
  1654   0014C0  0E22               	movlw	34
  1655   0014C2  6188               	cpfslt	_Temp& (0+255),b
  1656   0014C4  D004               	goto	l2956
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;LAB05.c: 329: LATE0=1;
  1660   0014C6  808D               	bsf	3981,0,c	;volatile
  1661                           
  1662                           ;LAB05.c: 330: LATE2=0;
  1663   0014C8  948D               	bcf	3981,2,c	;volatile
  1664                           
  1665                           ;LAB05.c: 331: LATE1=1;
  1666   0014CA  828D               	bsf	3981,1,c	;volatile
  1667                           
  1668                           ;LAB05.c: 332: }
  1669   0014CC  0012               	return	
  1670   0014CE                     l2956:
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;LAB05.c: 333: else if(Temp<37){
  1674   0014CE  0E25               	movlw	37
  1675   0014D0  6188               	cpfslt	_Temp& (0+255),b
  1676   0014D2  D004               	goto	l2960
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;LAB05.c: 335: LATE0=0;
  1680   0014D4  908D               	bcf	3981,0,c	;volatile
  1681                           
  1682                           ;LAB05.c: 336: LATE2=0;
  1683   0014D6  948D               	bcf	3981,2,c	;volatile
  1684                           
  1685                           ;LAB05.c: 337: LATE1=1;
  1686   0014D8  828D               	bsf	3981,1,c	;volatile
  1687                           
  1688                           ;LAB05.c: 338: }
  1689   0014DA  0012               	return	
  1690   0014DC                     l2960:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;LAB05.c: 339: else if(Temp<40){
  1694   0014DC  0E28               	movlw	40
  1695   0014DE  6188               	cpfslt	_Temp& (0+255),b
  1696   0014E0  D004               	goto	l335
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;LAB05.c: 341: LATE0=0;
  1700   0014E2  908D               	bcf	3981,0,c	;volatile
  1701                           
  1702                           ;LAB05.c: 342: LATE2=1;
  1703   0014E4  848D               	bsf	3981,2,c	;volatile
  1704                           
  1705                           ;LAB05.c: 343: LATE1=1;
  1706   0014E6  828D               	bsf	3981,1,c	;volatile
  1707                           
  1708                           ;LAB05.c: 344: }
  1709   0014E8  0012               	return	
  1710   0014EA                     l335:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;LAB05.c: 345: else{;LAB05.c: 347: LATE0=0;
  1714   0014EA  908D               	bcf	3981,0,c	;volatile
  1715                           
  1716                           ;LAB05.c: 348: LATE2=0;
  1717   0014EC  948D               	bcf	3981,2,c	;volatile
  1718                           
  1719                           ;LAB05.c: 349: LATE1=0;
  1720   0014EE  928D               	bcf	3981,1,c	;volatile
  1721                           
  1722                           ; BSR set to: 0
  1723   0014F0  0012               	return		;funcret
  1724   0014F2                     __end_of_show_temperature_c_RGB:
  1725                           	callstack 0
  1726                           
  1727 ;; *************** function _show_temperature_LCD *****************
  1728 ;; Defined at:
  1729 ;;		line 412 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  buffer_LCD_r    1    5[COMRAM] PTR unsigned char 
  1732 ;;		 -> main@buffer_LCD_row_1(17), 
  1733 ;;  buffer_LCD_r    1    6[COMRAM] PTR unsigned char 
  1734 ;;		 -> main@buffer_LCD_row_2(17), 
  1735 ;;  Temp_n1         1    7[COMRAM] unsigned char 
  1736 ;;  Hum_n1          1    8[COMRAM] unsigned char 
  1737 ;;  Scale_Temper    1    9[COMRAM] unsigned char 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  counter         1   10[COMRAM] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 3F/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1749 ;;      Params:         5       0       0       0       0       0       0       0       0
  1750 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1752 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1753 ;;Total ram usage:        6 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 4
  1756 ;; This function calls:
  1757 ;;		_DireccionaLCD
  1758 ;;		_EscribeLCD_c
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text8
  1765   001276                     __ptext8:
  1766                           	callstack 0
  1767   001276                     _show_temperature_LCD:
  1768                           	callstack 26
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;LAB05.c: 413: unsigned char counter=0;
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;incstack = 0
  1775   001276  0E00               	movlw	0
  1776   001278  6E0B               	movwf	show_temperature_LCD@counter^0,c
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;LAB05.c: 415: if(Temp_n1!=Temp || Scale_Temperature!=Scale_Temperature_n1){
  1780   00127A  5188               	movf	_Temp& (0+255),w,b
  1781   00127C  1808               	xorwf	show_temperature_LCD@Temp_n1^0,w,c
  1782   00127E  A4D8               	btfss	status,2,c
  1783   001280  D004               	goto	u2540
  1784                           
  1785                           ; BSR set to: 0
  1786   001282  500A               	movf	show_temperature_LCD@Scale_Temperature_n1^0,w,c
  1787   001284  1985               	xorwf	_Scale_Temperature& (0+255),w,b
  1788   001286  B4D8               	btfsc	status,2,c
  1789   001288  D01B               	goto	u2560
  1790   00128A                     u2540:
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;LAB05.c: 416: DireccionaLCD(0x80);
  1794   00128A  0E80               	movlw	128
  1795   00128C  EC89  F00C         	call	_DireccionaLCD
  1796                           
  1797                           ;LAB05.c: 418: while (buffer_LCD_row_1[counter]!='\0') {
  1798   001290  D008               	goto	l2976
  1799   001292                     l2972:
  1800                           
  1801                           ;LAB05.c: 419: EscribeLCD_c(buffer_LCD_row_1[counter]);
  1802   001292  5006               	movf	show_temperature_LCD@buffer_LCD_row_1^0,w,c
  1803   001294  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1804   001296  6ED9               	movwf	fsr2l,c
  1805   001298  6ADA               	clrf	fsr2h,c
  1806   00129A  50DF               	movf	indf2,w,c
  1807   00129C  EC7E  F00C         	call	_EscribeLCD_c
  1808                           
  1809                           ;LAB05.c: 420: counter++;
  1810   0012A0  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1811   0012A2                     l2976:
  1812   0012A2  5006               	movf	show_temperature_LCD@buffer_LCD_row_1^0,w,c
  1813   0012A4  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1814   0012A6  6ED9               	movwf	fsr2l,c
  1815   0012A8  6ADA               	clrf	fsr2h,c
  1816   0012AA  50DF               	movf	indf2,w,c
  1817   0012AC  B4D8               	btfsc	status,2,c
  1818   0012AE  D005               	goto	l2982
  1819   0012B0  D7F0               	goto	l2972
  1820   0012B2                     l2978:
  1821                           
  1822                           ;LAB05.c: 424: EscribeLCD_c(' ');
  1823   0012B2  0E20               	movlw	32
  1824   0012B4  EC7E  F00C         	call	_EscribeLCD_c
  1825                           
  1826                           ;LAB05.c: 425: counter++;
  1827   0012B8  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1828   0012BA                     l2982:
  1829   0012BA  0E0F               	movlw	15
  1830   0012BC  640B               	cpfsgt	show_temperature_LCD@counter^0,c
  1831   0012BE  D7F9               	goto	l2978
  1832   0012C0                     u2560:
  1833                           
  1834                           ;LAB05.c: 426: };LAB05.c: 427: };LAB05.c: 429: counter=0;
  1835   0012C0  0E00               	movlw	0
  1836   0012C2  6E0B               	movwf	show_temperature_LCD@counter^0,c
  1837                           
  1838                           ;LAB05.c: 431: if(Hum_n1!=Hum){
  1839   0012C4  0100               	movlb	0	; () banked
  1840   0012C6  5187               	movf	_Hum& (0+255),w,b
  1841   0012C8  1809               	xorwf	show_temperature_LCD@Hum_n1^0,w,c
  1842   0012CA  B4D8               	btfsc	status,2,c
  1843   0012CC  0012               	return	
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;LAB05.c: 432: DireccionaLCD(0xC0);
  1847   0012CE  0EC0               	movlw	192
  1848   0012D0  EC89  F00C         	call	_DireccionaLCD
  1849                           
  1850                           ;LAB05.c: 435: while (buffer_LCD_row_2[counter]!='\0') {
  1851   0012D4  D008               	goto	l2994
  1852   0012D6                     l2990:
  1853                           
  1854                           ;LAB05.c: 436: EscribeLCD_c(buffer_LCD_row_2[counter]);
  1855   0012D6  5007               	movf	show_temperature_LCD@buffer_LCD_row_2^0,w,c
  1856   0012D8  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1857   0012DA  6ED9               	movwf	fsr2l,c
  1858   0012DC  6ADA               	clrf	fsr2h,c
  1859   0012DE  50DF               	movf	indf2,w,c
  1860   0012E0  EC7E  F00C         	call	_EscribeLCD_c
  1861                           
  1862                           ;LAB05.c: 437: counter++;
  1863   0012E4  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1864   0012E6                     l2994:
  1865   0012E6  5007               	movf	show_temperature_LCD@buffer_LCD_row_2^0,w,c
  1866   0012E8  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1867   0012EA  6ED9               	movwf	fsr2l,c
  1868   0012EC  6ADA               	clrf	fsr2h,c
  1869   0012EE  50DF               	movf	indf2,w,c
  1870   0012F0  B4D8               	btfsc	status,2,c
  1871   0012F2  D005               	goto	l3000
  1872   0012F4  D7F0               	goto	l2990
  1873   0012F6                     l2996:
  1874                           
  1875                           ;LAB05.c: 442: EscribeLCD_c(' ');
  1876   0012F6  0E20               	movlw	32
  1877   0012F8  EC7E  F00C         	call	_EscribeLCD_c
  1878                           
  1879                           ;LAB05.c: 443: counter++;
  1880   0012FC  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1881   0012FE                     l3000:
  1882   0012FE  0E0F               	movlw	15
  1883   001300  640B               	cpfsgt	show_temperature_LCD@counter^0,c
  1884   001302  D7F9               	goto	l2996
  1885   001304  0012               	return	
  1886   001306                     __end_of_show_temperature_LCD:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _EscribeLCD_c *****************
  1890 ;; Defined at:
  1891 ;;		line 136 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  a               1    wreg     unsigned char 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  a               1    4[COMRAM] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1905 ;;      Params:         0       0       0       0       0       0       0       0       0
  1906 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1908 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1909 ;;Total ram usage:        1 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; Hardware stack levels required when called: 3
  1912 ;; This function calls:
  1913 ;;		_EnviaDato
  1914 ;;		_HabilitaLCD
  1915 ;;		_RetardoLCD
  1916 ;; This function is called by:
  1917 ;;		_MensajeLCD_Var
  1918 ;;		_show_temperature_LCD
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text9
  1923   0018FC                     __ptext9:
  1924                           	callstack 0
  1925   0018FC                     _EscribeLCD_c:
  1926                           	callstack 25
  1927                           
  1928                           ;incstack = 0
  1929                           ;EscribeLCD_c@a stored from wreg
  1930   0018FC  6E05               	movwf	EscribeLCD_c@a^0,c
  1931                           
  1932                           ;LibLCDXC8.h: 140: LATD0=1;
  1933   0018FE  808C               	bsf	3980,0,c	;volatile
  1934                           
  1935                           ;LibLCDXC8.h: 141: EnviaDato(a);
  1936   001900  5005               	movf	EscribeLCD_c@a^0,w,c
  1937   001902  EC5C  F00B         	call	_EnviaDato
  1938                           
  1939                           ;LibLCDXC8.h: 142: HabilitaLCD();
  1940   001906  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  1941                           
  1942                           ;LibLCDXC8.h: 143: RetardoLCD(4);
  1943   00190A  0E04               	movlw	4
  1944   00190C  ECAD  F00A         	call	_RetardoLCD
  1945   001910  0012               	return		;funcret
  1946   001912                     __end_of_EscribeLCD_c:
  1947                           	callstack 0
  1948                           
  1949 ;; *************** function _DireccionaLCD *****************
  1950 ;; Defined at:
  1951 ;;		line 259 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  a               1    wreg     unsigned char 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  a               1    4[COMRAM] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1965 ;;      Params:         0       0       0       0       0       0       0       0       0
  1966 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1968 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1969 ;;Total ram usage:        1 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 3
  1972 ;; This function calls:
  1973 ;;		_EnviaDato
  1974 ;;		_HabilitaLCD
  1975 ;;		_RetardoLCD
  1976 ;; This function is called by:
  1977 ;;		_MensajeLCD_Var
  1978 ;;		_show_temperature_LCD
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text10
  1983   001912                     __ptext10:
  1984                           	callstack 0
  1985   001912                     _DireccionaLCD:
  1986                           	callstack 25
  1987                           
  1988                           ;incstack = 0
  1989                           ;DireccionaLCD@a stored from wreg
  1990   001912  6E05               	movwf	DireccionaLCD@a^0,c
  1991                           
  1992                           ;LibLCDXC8.h: 262: LATD0=0;
  1993   001914  908C               	bcf	3980,0,c	;volatile
  1994                           
  1995                           ;LibLCDXC8.h: 263: EnviaDato(a);
  1996   001916  5005               	movf	DireccionaLCD@a^0,w,c
  1997   001918  EC5C  F00B         	call	_EnviaDato
  1998                           
  1999                           ;LibLCDXC8.h: 264: HabilitaLCD();
  2000   00191C  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  2001                           
  2002                           ;LibLCDXC8.h: 265: RetardoLCD(4);
  2003   001920  0E04               	movlw	4
  2004   001922  ECAD  F00A         	call	_RetardoLCD
  2005   001926  0012               	return		;funcret
  2006   001928                     __end_of_DireccionaLCD:
  2007                           	callstack 0
  2008                           
  2009 ;; *************** function _send_temperature_RS232 *****************
  2010 ;; Defined at:
  2011 ;;		line 399 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  buffer_RS232   12   27[COMRAM] unsigned char [12]
  2016 ;;  counter         1   39[COMRAM] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0
  2027 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2028 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2029 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2030 ;;Total ram usage:       15 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; Hardware stack levels required when called: 3
  2033 ;; This function calls:
  2034 ;;		_Transmitir
  2035 ;;		_sprintf
  2036 ;; This function is called by:
  2037 ;;		_main
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text11
  2042   001668                     __ptext11:
  2043                           	callstack 0
  2044   001668                     _send_temperature_RS232:
  2045                           	callstack 27
  2046                           
  2047                           ;LAB05.c: 400: unsigned char counter=0;
  2048                           
  2049                           ;incstack = 0
  2050   001668  0E00               	movlw	0
  2051   00166A  6E28               	movwf	send_temperature_RS232@counter^0,c
  2052                           
  2053                           ;LAB05.c: 401: unsigned char buffer_RS232[12];;LAB05.c: 402: sprintf(buffer_RS232, "T: %
      +                          i C\n",Temp);
  2054   00166C  0E1C               	movlw	low send_temperature_RS232@buffer_RS232
  2055   00166E  6E0D               	movwf	sprintf@sp^0,c
  2056   001670  0E36               	movlw	low STR_15
  2057   001672  6E0E               	movwf	sprintf@f^0,c
  2058   001674  C088  F00F         	movff	_Temp,?_sprintf+2
  2059   001678  6A10               	clrf	(?_sprintf+3)^0,c
  2060   00167A  EC27  F006         	call	_sprintf	;wreg free
  2061                           
  2062                           ;LAB05.c: 404: while(buffer_RS232[counter]!='\0'){
  2063   00167E  D008               	goto	l2874
  2064   001680                     l2870:
  2065                           
  2066                           ;LAB05.c: 405: Transmitir(buffer_RS232[counter]);
  2067   001680  5028               	movf	send_temperature_RS232@counter^0,w,c
  2068   001682  0F1C               	addlw	low send_temperature_RS232@buffer_RS232
  2069   001684  6ED9               	movwf	fsr2l,c
  2070   001686  6ADA               	clrf	fsr2h,c
  2071   001688  50DF               	movf	indf2,w,c
  2072   00168A  ECAD  F00C         	call	_Transmitir
  2073                           
  2074                           ;LAB05.c: 406: counter++;
  2075   00168E  2A28               	incf	send_temperature_RS232@counter^0,f,c
  2076   001690                     l2874:
  2077   001690  5028               	movf	send_temperature_RS232@counter^0,w,c
  2078   001692  0F1C               	addlw	low send_temperature_RS232@buffer_RS232
  2079   001694  6ED9               	movwf	fsr2l,c
  2080   001696  6ADA               	clrf	fsr2h,c
  2081   001698  50DF               	movf	indf2,w,c
  2082   00169A  A4D8               	btfss	status,2,c
  2083   00169C  D7F1               	goto	l2870
  2084                           
  2085                           ;LAB05.c: 407: };LAB05.c: 408: _delay((unsigned long)((200)*(8000000/4000.0)));
  2086   00169E  0E03               	movlw	3
  2087   0016A0  6E1B               	movwf	(??_send_temperature_RS232+1)^0,c
  2088   0016A2  0E08               	movlw	8
  2089   0016A4  6E1A               	movwf	??_send_temperature_RS232^0,c
  2090   0016A6  0E77               	movlw	119
  2091   0016A8                     u2697:
  2092   0016A8  2EE8               	decfsz	wreg,f,c
  2093   0016AA  D7FE               	bra	u2697
  2094   0016AC  2E1A               	decfsz	??_send_temperature_RS232^0,f,c
  2095   0016AE  D7FC               	bra	u2697
  2096   0016B0  2E1B               	decfsz	(??_send_temperature_RS232+1)^0,f,c
  2097   0016B2  D7FA               	bra	u2697
  2098   0016B4  F000               	nop	
  2099   0016B6  0012               	return		;funcret
  2100   0016B8                     __end_of_send_temperature_RS232:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _Transmitir *****************
  2104 ;; Defined at:
  2105 ;;		line 452 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  BufferT         1    wreg     unsigned char 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  BufferT         1    0[COMRAM] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2119 ;;      Params:         0       0       0       0       0       0       0       0       0
  2120 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2122 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2123 ;;Total ram usage:        1 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_send_temperature_RS232
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text12
  2134   00195A                     __ptext12:
  2135                           	callstack 0
  2136   00195A                     _Transmitir:
  2137                           	callstack 28
  2138                           
  2139                           ;incstack = 0
  2140                           ;Transmitir@BufferT stored from wreg
  2141   00195A  6E01               	movwf	Transmitir@BufferT^0,c
  2142   00195C                     
  2143                           ;LAB05.c: 453: while(TRMT==0);
  2144   00195C  A2AC               	btfss	4012,1,c	;volatile
  2145   00195E  D7FE               	goto	l2546
  2146                           
  2147                           ;LAB05.c: 454: TXREG=BufferT;
  2148   001960  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  2149   001964  0012               	return		;funcret
  2150   001966                     __end_of_Transmitir:
  2151                           	callstack 0
  2152                           
  2153 ;; *************** function _save_temperature_c_EEPROM *****************
  2154 ;; Defined at:
  2155 ;;		line 297 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2169 ;;      Params:         0       0       0       0       0       0       0       0       0
  2170 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2172 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 2
  2176 ;; This function calls:
  2177 ;;		_EEPROM_Write
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text13
  2184   001966                     __ptext13:
  2185                           	callstack 0
  2186   001966                     _save_temperature_c_EEPROM:
  2187                           	callstack 28
  2188                           
  2189                           ;LAB05.c: 298: EEPROM_Write(0, Temp);
  2190                           
  2191                           ;incstack = 0
  2192   001966  C088  F001         	movff	_Temp,EEPROM_Write@data
  2193   00196A  0E00               	movlw	0
  2194   00196C  EC1A  F00C         	call	_EEPROM_Write
  2195   001970  0012               	return		;funcret
  2196   001972                     __end_of_save_temperature_c_EEPROM:
  2197                           	callstack 0
  2198                           
  2199 ;; *************** function _EEPROM_Write *****************
  2200 ;; Defined at:
  2201 ;;		line 473 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  address         1    wreg     unsigned char 
  2204 ;;  data            1    0[COMRAM] unsigned char 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  address         1    1[COMRAM] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2216 ;;      Params:         1       0       0       0       0       0       0       0       0
  2217 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2219 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2220 ;;Total ram usage:        2 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_save_temperature_c_EEPROM
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text14
  2231   001834                     __ptext14:
  2232                           	callstack 0
  2233   001834                     _EEPROM_Write:
  2234                           	callstack 28
  2235                           
  2236                           ;incstack = 0
  2237                           ;EEPROM_Write@address stored from wreg
  2238   001834  6E02               	movwf	EEPROM_Write@address^0,c
  2239                           
  2240                           ;LAB05.c: 474: EEADR=address;
  2241   001836  C002  FFA9         	movff	EEPROM_Write@address,4009	;volatile
  2242                           
  2243                           ;LAB05.c: 475: EEDATA=data;
  2244   00183A  C001  FFA8         	movff	EEPROM_Write@data,4008	;volatile
  2245                           
  2246                           ;LAB05.c: 477: EEPGD=0;
  2247   00183E  9EA6               	bcf	4006,7,c	;volsfr
  2248                           
  2249                           ;LAB05.c: 478: CFGS=0;
  2250   001840  9CA6               	bcf	4006,6,c	;volsfr
  2251                           
  2252                           ;LAB05.c: 479: WREN=1;
  2253   001842  84A6               	bsf	4006,2,c	;volsfr
  2254                           
  2255                           ;LAB05.c: 481: GIE=0;
  2256   001844  9EF2               	bcf	4082,7,c	;volatile
  2257                           
  2258                           ;LAB05.c: 483: EECON2=0x55;
  2259   001846  0E55               	movlw	85
  2260   001848  6EA7               	movwf	167,c	;volsfr
  2261                           
  2262                           ;LAB05.c: 484: EECON2=0xAA;
  2263   00184A  0EAA               	movlw	170
  2264   00184C  6EA7               	movwf	167,c	;volsfr
  2265                           
  2266                           ;LAB05.c: 486: WR=1;
  2267   00184E  82A6               	bsf	4006,1,c	;volsfr
  2268   001850                     l405:
  2269   001850  B2A6               	btfsc	4006,1,c	;volsfr
  2270   001852  D7FE               	goto	l405
  2271                           
  2272                           ;LAB05.c: 489: GIE=1;
  2273   001854  8EF2               	bsf	4082,7,c	;volatile
  2274                           
  2275                           ;LAB05.c: 490: WREN=0;
  2276   001856  94A6               	bcf	4006,2,c	;volsfr
  2277                           
  2278                           ;LAB05.c: 491: return;
  2279   001858  0012               	return		;funcret
  2280   00185A                     __end_of_EEPROM_Write:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _measure_temperature_c_humidity_per *****************
  2284 ;; Defined at:
  2285 ;;		line 234 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 3F/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0
  2300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2302 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2303 ;;Total ram usage:        0 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 2
  2306 ;; This function calls:
  2307 ;;		_DHT11_CheckResponse
  2308 ;;		_DHT11_ReadData
  2309 ;;		_DHT11_Start
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text15
  2316   00185A                     __ptext15:
  2317                           	callstack 0
  2318   00185A                     _measure_temperature_c_humidity_per:
  2319                           	callstack 28
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;LAB05.c: 235: DHT11_Start();
  2323                           
  2324                           ;incstack = 0
  2325   00185A  EC52  F00C         	call	_DHT11_Start	;wreg free
  2326                           
  2327                           ;LAB05.c: 236: DHT11_CheckResponse();
  2328   00185E  ECBD  F00B         	call	_DHT11_CheckResponse	;wreg free
  2329                           
  2330                           ;LAB05.c: 239: Hum = DHT11_ReadData();
  2331   001862  ECE0  F00A         	call	_DHT11_ReadData	;wreg free
  2332   001866  0100               	movlb	0	; () banked
  2333   001868  6F87               	movwf	_Hum& (0+255),b
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;LAB05.c: 240: DHT11_ReadData();
  2337   00186A  ECE0  F00A         	call	_DHT11_ReadData	;wreg free
  2338                           
  2339                           ;LAB05.c: 241: Temp = DHT11_ReadData();
  2340   00186E  ECE0  F00A         	call	_DHT11_ReadData	;wreg free
  2341   001872  0100               	movlb	0	; () banked
  2342   001874  6F88               	movwf	_Temp& (0+255),b
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;LAB05.c: 242: DHT11_ReadData();
  2346   001876  ECE0  F00A         	call	_DHT11_ReadData	;wreg free
  2347                           
  2348                           ;LAB05.c: 243: DHT11_ReadData();
  2349   00187A  ECE0  F00A         	call	_DHT11_ReadData	;wreg free
  2350   00187E  0012               	return		;funcret
  2351   001880                     __end_of_measure_temperature_c_humidity_per:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function _DHT11_Start *****************
  2355 ;; Defined at:
  2356 ;;		line 265 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;		None
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;		None
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg
  2365 ;; Tracked objects:
  2366 ;;		On entry : 3F/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0
  2371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2372 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2373 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2374 ;;Total ram usage:        1 bytes
  2375 ;; Hardware stack levels used: 1
  2376 ;; Hardware stack levels required when called: 1
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_measure_temperature_c_humidity_per
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text16
  2385   0018A4                     __ptext16:
  2386                           	callstack 0
  2387   0018A4                     _DHT11_Start:
  2388                           	callstack 28
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;LAB05.c: 267: TRISC1 = 0;
  2392                           
  2393                           ;incstack = 0
  2394   0018A4  9294               	bcf	3988,1,c	;volatile
  2395                           
  2396                           ;LAB05.c: 268: LATC1 = 0;
  2397   0018A6  928B               	bcf	3979,1,c	;volatile
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;LAB05.c: 269: _delay((unsigned long)((18)*(8000000/4000.0)));
  2401   0018A8  0E2F               	movlw	47
  2402   0018AA  6E01               	movwf	??_DHT11_Start^0,c
  2403   0018AC  0EC0               	movlw	192
  2404   0018AE                     u2707:
  2405   0018AE  2EE8               	decfsz	wreg,f,c
  2406   0018B0  D7FE               	bra	u2707
  2407   0018B2  2E01               	decfsz	??_DHT11_Start^0,f,c
  2408   0018B4  D7FC               	bra	u2707
  2409                           
  2410                           ;LAB05.c: 270: LATC1 = 1;
  2411   0018B6  828B               	bsf	3979,1,c	;volatile
  2412                           
  2413                           ;LAB05.c: 271: _delay((unsigned long)((20)*(8000000/4000000.0)));
  2414   0018B8  0E0D               	movlw	13
  2415   0018BA                     u2717:
  2416   0018BA  2EE8               	decfsz	wreg,f,c
  2417   0018BC  D7FE               	bra	u2717
  2418   0018BE  F000               	nop	
  2419                           
  2420                           ;LAB05.c: 272: TRISC1 = 1;
  2421   0018C0  8294               	bsf	3988,1,c	;volatile
  2422                           
  2423                           ;LAB05.c: 273: LATC1 = 0;
  2424   0018C2  928B               	bcf	3979,1,c	;volatile
  2425   0018C4  0012               	return		;funcret
  2426   0018C6                     __end_of_DHT11_Start:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _DHT11_ReadData *****************
  2430 ;; Defined at:
  2431 ;;		line 249 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  data            1    2[COMRAM] unsigned char 
  2436 ;;  i               1    1[COMRAM] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      unsigned char 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2446 ;;      Params:         0       0       0       0       0       0       0       0       0
  2447 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2448 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2449 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2450 ;;Total ram usage:        3 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_measure_temperature_c_humidity_per
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text17
  2461   0015C0                     __ptext17:
  2462                           	callstack 0
  2463   0015C0                     _DHT11_ReadData:
  2464                           	callstack 28
  2465                           
  2466                           ;LAB05.c: 251: unsigned char i,data = 0;
  2467                           
  2468                           ;incstack = 0
  2469   0015C0  0E00               	movlw	0
  2470   0015C2  6E03               	movwf	DHT11_ReadData@data^0,c
  2471                           
  2472                           ;LAB05.c: 252: for(i=0;i<8;i++)
  2473   0015C4  0E00               	movlw	0
  2474   0015C6  6E02               	movwf	DHT11_ReadData@i^0,c
  2475   0015C8                     l286:
  2476   0015C8  A282               	btfss	3970,1,c	;volatile
  2477   0015CA  D003               	goto	u1730
  2478   0015CC  6A01               	clrf	??_DHT11_ReadData^0,c
  2479   0015CE  2A01               	incf	??_DHT11_ReadData^0,f,c
  2480   0015D0  D001               	goto	u1748
  2481   0015D2                     u1730:
  2482   0015D2  6A01               	clrf	??_DHT11_ReadData^0,c
  2483   0015D4                     u1748:
  2484   0015D4  A001               	btfss	??_DHT11_ReadData^0,0,c
  2485   0015D6  D7F8               	goto	l286
  2486                           
  2487                           ;LAB05.c: 255: _delay((unsigned long)((30)*(8000000/4000000.0)));
  2488   0015D8  0E14               	movlw	20
  2489   0015DA                     u2727:
  2490   0015DA  2EE8               	decfsz	wreg,f,c
  2491   0015DC  D7FE               	bra	u2727
  2492                           
  2493                           ;LAB05.c: 256: if(RC1 & 1)
  2494   0015DE  A282               	btfss	3970,1,c	;volatile
  2495   0015E0  D003               	goto	u1760
  2496   0015E2  6A01               	clrf	??_DHT11_ReadData^0,c
  2497   0015E4  2A01               	incf	??_DHT11_ReadData^0,f,c
  2498   0015E6  D001               	goto	u1778
  2499   0015E8                     u1760:
  2500   0015E8  6A01               	clrf	??_DHT11_ReadData^0,c
  2501   0015EA                     u1778:
  2502   0015EA  A001               	btfss	??_DHT11_ReadData^0,0,c
  2503   0015EC  D003               	goto	l2450
  2504                           
  2505                           ;LAB05.c: 257: data = ((data<<1) | 1);
  2506   0015EE  80D8               	bsf	status,0,c
  2507   0015F0  3603               	rlcf	DHT11_ReadData@data^0,f,c
  2508   0015F2  D003               	goto	l291
  2509   0015F4                     l2450:
  2510                           
  2511                           ;LAB05.c: 258: else;LAB05.c: 259: data = (data<<1);
  2512   0015F4  5003               	movf	DHT11_ReadData@data^0,w,c
  2513   0015F6  2403               	addwf	DHT11_ReadData@data^0,w,c
  2514   0015F8  6E03               	movwf	DHT11_ReadData@data^0,c
  2515   0015FA                     l291:
  2516   0015FA  A282               	btfss	3970,1,c	;volatile
  2517   0015FC  D003               	goto	u1790
  2518   0015FE  6A01               	clrf	??_DHT11_ReadData^0,c
  2519   001600  2A01               	incf	??_DHT11_ReadData^0,f,c
  2520   001602  D001               	goto	u1808
  2521   001604                     u1790:
  2522   001604  6A01               	clrf	??_DHT11_ReadData^0,c
  2523   001606                     u1808:
  2524   001606  B001               	btfsc	??_DHT11_ReadData^0,0,c
  2525   001608  D7F8               	goto	l291
  2526   00160A  2A02               	incf	DHT11_ReadData@i^0,f,c
  2527   00160C  0E07               	movlw	7
  2528   00160E  6402               	cpfsgt	DHT11_ReadData@i^0,c
  2529   001610  D7DB               	goto	l286
  2530                           
  2531                           ;LAB05.c: 261: };LAB05.c: 262: return data;
  2532   001612  5003               	movf	DHT11_ReadData@data^0,w,c
  2533   001614  0012               	return		;funcret
  2534   001616                     __end_of_DHT11_ReadData:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function _DHT11_CheckResponse *****************
  2538 ;; Defined at:
  2539 ;;		line 277 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		None
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2555 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2556 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2557 ;;Total ram usage:        1 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; Hardware stack levels required when called: 1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_measure_temperature_c_humidity_per
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text18
  2568   00177A                     __ptext18:
  2569                           	callstack 0
  2570   00177A                     _DHT11_CheckResponse:
  2571                           	callstack 28
  2572                           
  2573                           ;LAB05.c: 279: while(RC1 & 1);
  2574                           
  2575                           ;incstack = 0
  2576   00177A  A282               	btfss	3970,1,c	;volatile
  2577   00177C  D003               	goto	u1640
  2578   00177E  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2579   001780  2A01               	incf	??_DHT11_CheckResponse^0,f,c
  2580   001782  D001               	goto	u1658
  2581   001784                     u1640:
  2582   001784  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2583   001786                     u1658:
  2584   001786  B001               	btfsc	??_DHT11_CheckResponse^0,0,c
  2585   001788  D7F8               	goto	__ptext18
  2586   00178A                     u1660:
  2587   00178A  A282               	btfss	3970,1,c	;volatile
  2588   00178C  D003               	goto	u1670
  2589   00178E  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2590   001790  2A01               	incf	??_DHT11_CheckResponse^0,f,c
  2591   001792  D001               	goto	u1688
  2592   001794                     u1670:
  2593   001794  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2594   001796                     u1688:
  2595   001796  A001               	btfss	??_DHT11_CheckResponse^0,0,c
  2596   001798  D7F8               	goto	u1660
  2597   00179A                     u1690:
  2598   00179A  A282               	btfss	3970,1,c	;volatile
  2599   00179C  D003               	goto	u1700
  2600   00179E  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2601   0017A0  2A01               	incf	??_DHT11_CheckResponse^0,f,c
  2602   0017A2  D001               	goto	u1718
  2603   0017A4                     u1700:
  2604   0017A4  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2605   0017A6                     u1718:
  2606   0017A6  A001               	btfss	??_DHT11_CheckResponse^0,0,c
  2607   0017A8  0012               	return	
  2608   0017AA  D7F7               	goto	u1690
  2609   0017AC                     __end_of_DHT11_CheckResponse:
  2610                           	callstack 0
  2611                           
  2612 ;; *************** function _init_configuration *****************
  2613 ;; Defined at:
  2614 ;;		line 134 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2628 ;;      Params:         0       0       0       0       0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2630 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2631 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2632 ;;Total ram usage:        2 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 5
  2635 ;; This function calls:
  2636 ;;		_ConfiguraLCD
  2637 ;;		_InicializaLCD
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text19
  2644   00138A                     __ptext19:
  2645                           	callstack 0
  2646   00138A                     _init_configuration:
  2647                           	callstack 25
  2648                           
  2649                           ;LAB05.c: 137: OSCCON=0b01110000;
  2650                           
  2651                           ;incstack = 0
  2652   00138A  0E70               	movlw	112
  2653   00138C  6ED3               	movwf	211,c	;volatile
  2654                           
  2655                           ;LAB05.c: 138: _delay((unsigned long)((1)*(8000000/4000.0)));
  2656   00138E  0E03               	movlw	3
  2657   001390  6E05               	movwf	??_init_configuration^0,c
  2658   001392  0E98               	movlw	152
  2659   001394                     u2737:
  2660   001394  2EE8               	decfsz	wreg,f,c
  2661   001396  D7FE               	bra	u2737
  2662   001398  2E05               	decfsz	??_init_configuration^0,f,c
  2663   00139A  D7FC               	bra	u2737
  2664                           
  2665                           ;LAB05.c: 143: TXSTA=0b00100000;
  2666   00139C  0E20               	movlw	32
  2667   00139E  6EAC               	movwf	172,c	;volatile
  2668                           
  2669                           ;LAB05.c: 144: RCSTA=0b10010000;
  2670   0013A0  0E90               	movlw	144
  2671   0013A2  6EAB               	movwf	171,c	;volatile
  2672                           
  2673                           ;LAB05.c: 145: BAUDCON=0b00000000;
  2674   0013A4  0E00               	movlw	0
  2675   0013A6  6EB8               	movwf	184,c	;volatile
  2676                           
  2677                           ;LAB05.c: 146: SPBRG=12;
  2678   0013A8  0E0C               	movlw	12
  2679   0013AA  6EAF               	movwf	175,c	;volatile
  2680                           
  2681                           ;LAB05.c: 149: ADCON1=13;
  2682   0013AC  0E0D               	movlw	13
  2683   0013AE  6EC1               	movwf	193,c	;volatile
  2684                           
  2685                           ;LAB05.c: 152: TRISE=0b11111000;
  2686   0013B0  0EF8               	movlw	248
  2687   0013B2  6E96               	movwf	150,c	;volatile
  2688                           
  2689                           ;LAB05.c: 153: LATE=1;
  2690   0013B4  0E01               	movlw	1
  2691   0013B6  6E8D               	movwf	141,c	;volatile
  2692                           
  2693                           ;LAB05.c: 158: TRISC2=0;
  2694   0013B8  9494               	bcf	3988,2,c	;volatile
  2695                           
  2696                           ;LAB05.c: 159: LATC2=0;
  2697   0013BA  948B               	bcf	3979,2,c	;volatile
  2698                           
  2699                           ;LAB05.c: 162: TRISB0=0;
  2700   0013BC  9093               	bcf	3987,0,c	;volatile
  2701                           
  2702                           ;LAB05.c: 163: LATB0=0;
  2703   0013BE  908A               	bcf	3978,0,c	;volatile
  2704                           
  2705                           ;LAB05.c: 167: ADCON0=0b00000100;
  2706   0013C0  0E04               	movlw	4
  2707   0013C2  6EC2               	movwf	194,c	;volatile
  2708                           
  2709                           ;LAB05.c: 169: ADCON2=0b11001001;
  2710   0013C4  0EC9               	movlw	201
  2711   0013C6  6EC0               	movwf	192,c	;volatile
  2712                           
  2713                           ;LAB05.c: 181: T0CON=0b00000100;
  2714   0013C8  0E04               	movlw	4
  2715   0013CA  6ED5               	movwf	213,c	;volatile
  2716                           
  2717                           ;LAB05.c: 182: TMR0=3036;
  2718   0013CC  0E0B               	movlw	11
  2719   0013CE  6ED7               	movwf	215,c	;volatile
  2720   0013D0  0EDC               	movlw	220
  2721   0013D2  6ED6               	movwf	214,c	;volatile
  2722                           
  2723                           ;LAB05.c: 186: TMR0IF=0;
  2724   0013D4  94F2               	bcf	4082,2,c	;volatile
  2725                           
  2726                           ;LAB05.c: 187: TMR0IE=1;
  2727   0013D6  8AF2               	bsf	4082,5,c	;volatile
  2728                           
  2729                           ;LAB05.c: 191: TRISD=0;
  2730   0013D8  0E00               	movlw	0
  2731   0013DA  6E95               	movwf	149,c	;volatile
  2732                           
  2733                           ;LAB05.c: 192: LATD=0;
  2734   0013DC  0E00               	movlw	0
  2735   0013DE  6E8C               	movwf	140,c	;volatile
  2736                           
  2737                           ;LAB05.c: 193: ConfiguraLCD(4);
  2738   0013E0  0E04               	movlw	4
  2739   0013E2  EC72  F00C         	call	_ConfiguraLCD
  2740                           
  2741                           ;LAB05.c: 194: InicializaLCD();
  2742   0013E6  ECED  F008         	call	_InicializaLCD	;wreg free
  2743                           
  2744                           ;LAB05.c: 195: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2745   0013EA  0E0B               	movlw	11
  2746   0013EC  6E06               	movwf	(??_init_configuration+1)^0,c
  2747   0013EE  0E26               	movlw	38
  2748   0013F0  6E05               	movwf	??_init_configuration^0,c
  2749   0013F2  0E5E               	movlw	94
  2750   0013F4                     u2747:
  2751   0013F4  2EE8               	decfsz	wreg,f,c
  2752   0013F6  D7FE               	bra	u2747
  2753   0013F8  2E05               	decfsz	??_init_configuration^0,f,c
  2754   0013FA  D7FC               	bra	u2747
  2755   0013FC  2E06               	decfsz	(??_init_configuration+1)^0,f,c
  2756   0013FE  D7FA               	bra	u2747
  2757                           
  2758                           ;LAB05.c: 198: PEIE=1;
  2759   001400  8CF2               	bsf	4082,6,c	;volatile
  2760                           
  2761                           ;LAB05.c: 199: GIE=1;
  2762   001402  8EF2               	bsf	4082,7,c	;volatile
  2763                           
  2764                           ;LAB05.c: 202: RCIE=1;
  2765   001404  8A9D               	bsf	3997,5,c	;volatile
  2766                           
  2767                           ;LAB05.c: 203: TMR0ON=1;
  2768   001406  8ED5               	bsf	4053,7,c	;volatile
  2769   001408  0012               	return		;funcret
  2770   00140A                     __end_of_init_configuration:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function _InicializaLCD *****************
  2774 ;; Defined at:
  2775 ;;		line 71 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2789 ;;      Params:         0       0       0       0       0       0       0       0       0
  2790 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2792 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2793 ;;Total ram usage:        0 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 4
  2796 ;; This function calls:
  2797 ;;		_BorraLCD
  2798 ;;		_EnviaDato
  2799 ;;		_HabilitaLCD
  2800 ;;		_RetardoLCD
  2801 ;; This function is called by:
  2802 ;;		_init_configuration
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text20
  2807   0011DA                     __ptext20:
  2808                           	callstack 0
  2809   0011DA                     _InicializaLCD:
  2810                           	callstack 25
  2811                           
  2812                           ;LibLCDXC8.h: 73: LATD0=0;
  2813                           
  2814                           ;incstack = 0
  2815   0011DA  908C               	bcf	3980,0,c	;volatile
  2816                           
  2817                           ;LibLCDXC8.h: 74: if(interfaz==4)
  2818   0011DC  0E04               	movlw	4
  2819   0011DE  184D               	xorwf	_interfaz^0,w,c
  2820   0011E0  A4D8               	btfss	status,2,c
  2821   0011E2  D004               	goto	l2306
  2822                           
  2823                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
  2824   0011E4  508C               	movf	140,w,c	;volatile
  2825   0011E6  0B0F               	andlw	15
  2826   0011E8  0930               	iorlw	48
  2827   0011EA  D001               	goto	L1
  2828   0011EC                     l2306:
  2829                           
  2830                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  2831   0011EC  0E3F               	movlw	63
  2832   0011EE                     L1:
  2833   0011EE  6E8C               	movwf	140,c	;volatile
  2834                           
  2835                           ;LibLCDXC8.h: 78: HabilitaLCD();
  2836   0011F0  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  2837                           
  2838                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  2839   0011F4  0E01               	movlw	1
  2840   0011F6  ECAD  F00A         	call	_RetardoLCD
  2841                           
  2842                           ;LibLCDXC8.h: 80: if(interfaz==4)
  2843   0011FA  0E04               	movlw	4
  2844   0011FC  184D               	xorwf	_interfaz^0,w,c
  2845   0011FE  A4D8               	btfss	status,2,c
  2846   001200  D004               	goto	l2316
  2847                           
  2848                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
  2849   001202  508C               	movf	140,w,c	;volatile
  2850   001204  0B0F               	andlw	15
  2851   001206  0930               	iorlw	48
  2852   001208  D001               	goto	L2
  2853   00120A                     l2316:
  2854                           
  2855                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  2856   00120A  0E3F               	movlw	63
  2857   00120C                     L2:
  2858   00120C  6E8C               	movwf	140,c	;volatile
  2859                           
  2860                           ;LibLCDXC8.h: 84: HabilitaLCD();
  2861   00120E  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  2862                           
  2863                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  2864   001212  0E03               	movlw	3
  2865   001214  ECAD  F00A         	call	_RetardoLCD
  2866                           
  2867                           ;LibLCDXC8.h: 86: if(interfaz==4)
  2868   001218  0E04               	movlw	4
  2869   00121A  184D               	xorwf	_interfaz^0,w,c
  2870   00121C  A4D8               	btfss	status,2,c
  2871   00121E  D004               	goto	l2326
  2872                           
  2873                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
  2874   001220  508C               	movf	140,w,c	;volatile
  2875   001222  0B0F               	andlw	15
  2876   001224  0930               	iorlw	48
  2877   001226  D001               	goto	L3
  2878   001228                     l2326:
  2879                           
  2880                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  2881   001228  0E3F               	movlw	63
  2882   00122A                     L3:
  2883   00122A  6E8C               	movwf	140,c	;volatile
  2884                           
  2885                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2886   00122C  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  2887                           
  2888                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2889   001230  0E04               	movlw	4
  2890   001232  ECAD  F00A         	call	_RetardoLCD
  2891                           
  2892                           ;LibLCDXC8.h: 92: if(interfaz==4){
  2893   001236  0E04               	movlw	4
  2894   001238  184D               	xorwf	_interfaz^0,w,c
  2895   00123A  A4D8               	btfss	status,2,c
  2896   00123C  D011               	goto	l2346
  2897                           
  2898                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
  2899   00123E  508C               	movf	140,w,c	;volatile
  2900   001240  0B0F               	andlw	15
  2901   001242  0920               	iorlw	32
  2902   001244  6E8C               	movwf	140,c	;volatile
  2903                           
  2904                           ;LibLCDXC8.h: 94: HabilitaLCD();
  2905   001246  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  2906                           
  2907                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  2908   00124A  0E04               	movlw	4
  2909   00124C  ECAD  F00A         	call	_RetardoLCD
  2910                           
  2911                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
  2912   001250  0E2F               	movlw	47
  2913   001252  EC5C  F00B         	call	_EnviaDato
  2914                           
  2915                           ;LibLCDXC8.h: 97: HabilitaLCD();
  2916   001256  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  2917                           
  2918                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  2919   00125A  0E04               	movlw	4
  2920   00125C  ECAD  F00A         	call	_RetardoLCD
  2921   001260                     l2346:
  2922                           
  2923                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  2924   001260  EC94  F00C         	call	_BorraLCD	;wreg free
  2925                           
  2926                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  2927   001264  0E0F               	movlw	15
  2928   001266  EC5C  F00B         	call	_EnviaDato
  2929                           
  2930                           ;LibLCDXC8.h: 102: HabilitaLCD();
  2931   00126A  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  2932                           
  2933                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  2934   00126E  0E04               	movlw	4
  2935   001270  ECAD  F00A         	call	_RetardoLCD
  2936   001274  0012               	return		;funcret
  2937   001276                     __end_of_InicializaLCD:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _BorraLCD *****************
  2941 ;; Defined at:
  2942 ;;		line 112 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2956 ;;      Params:         0       0       0       0       0       0       0       0       0
  2957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2960 ;;Total ram usage:        0 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 3
  2963 ;; This function calls:
  2964 ;;		_EnviaDato
  2965 ;;		_HabilitaLCD
  2966 ;;		_RetardoLCD
  2967 ;; This function is called by:
  2968 ;;		_InicializaLCD
  2969 ;;		_MensajeLCD_Var
  2970 ;;		_welcome_operations
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text21
  2975   001928                     __ptext21:
  2976                           	callstack 0
  2977   001928                     _BorraLCD:
  2978                           	callstack 25
  2979                           
  2980                           ;LibLCDXC8.h: 114: LATD0=0;
  2981                           
  2982                           ;incstack = 0
  2983   001928  908C               	bcf	3980,0,c	;volatile
  2984                           
  2985                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2986   00192A  0E01               	movlw	1
  2987   00192C  EC5C  F00B         	call	_EnviaDato
  2988                           
  2989                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2990   001930  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  2991                           
  2992                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2993   001934  0E02               	movlw	2
  2994   001936  ECAD  F00A         	call	_RetardoLCD
  2995   00193A  0012               	return		;funcret
  2996   00193C                     __end_of_BorraLCD:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _EnviaDato *****************
  3000 ;; Defined at:
  3001 ;;		line 59 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  a               1    wreg     unsigned char 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  a               1    3[COMRAM] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0
  3016 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3017 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3018 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3019 ;;Total ram usage:        2 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 2
  3022 ;; This function calls:
  3023 ;;		_HabilitaLCD
  3024 ;;		_RetardoLCD
  3025 ;; This function is called by:
  3026 ;;		_InicializaLCD
  3027 ;;		_BorraLCD
  3028 ;;		_EscribeLCD_c
  3029 ;;		_EscribeLCD_n8
  3030 ;;		_DireccionaLCD
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text22
  3035   0016B8                     __ptext22:
  3036                           	callstack 0
  3037   0016B8                     _EnviaDato:
  3038                           	callstack 25
  3039                           
  3040                           ;incstack = 0
  3041                           ;EnviaDato@a stored from wreg
  3042   0016B8  6E04               	movwf	EnviaDato@a^0,c
  3043                           
  3044                           ;LibLCDXC8.h: 60: if(interfaz==4){
  3045   0016BA  0E04               	movlw	4
  3046   0016BC  184D               	xorwf	_interfaz^0,w,c
  3047   0016BE  A4D8               	btfss	status,2,c
  3048   0016C0  D017               	goto	l2152
  3049                           
  3050                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3051   0016C2  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  3052   0016C6  0EF0               	movlw	240
  3053   0016C8  1603               	andwf	??_EnviaDato^0,f,c
  3054   0016CA  508C               	movf	140,w,c	;volatile
  3055   0016CC  0B0F               	andlw	15
  3056   0016CE  1003               	iorwf	??_EnviaDato^0,w,c
  3057   0016D0  6E8C               	movwf	140,c	;volatile
  3058                           
  3059                           ;LibLCDXC8.h: 62: HabilitaLCD();
  3060   0016D2  ECA6  F00C         	call	_HabilitaLCD	;wreg free
  3061                           
  3062                           ;LibLCDXC8.h: 63: RetardoLCD(1);
  3063   0016D6  0E01               	movlw	1
  3064   0016D8  ECAD  F00A         	call	_RetardoLCD
  3065                           
  3066                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
  3067   0016DC  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  3068   0016E0  3A03               	swapf	??_EnviaDato^0,f,c
  3069   0016E2  0EF0               	movlw	240
  3070   0016E4  1603               	andwf	??_EnviaDato^0,f,c
  3071   0016E6  508C               	movf	140,w,c	;volatile
  3072   0016E8  0B0F               	andlw	15
  3073   0016EA  1003               	iorwf	??_EnviaDato^0,w,c
  3074   0016EC  6E8C               	movwf	140,c	;volatile
  3075                           
  3076                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
  3077   0016EE  0012               	return	
  3078   0016F0                     l2152:
  3079   0016F0  0E08               	movlw	8
  3080   0016F2  184D               	xorwf	_interfaz^0,w,c
  3081   0016F4  A4D8               	btfss	status,2,c
  3082   0016F6  0012               	return	
  3083                           
  3084                           ;LibLCDXC8.h: 68: LATD=a;
  3085   0016F8  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  3086   0016FC  0012               	return		;funcret
  3087   0016FE                     __end_of_EnviaDato:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _RetardoLCD *****************
  3091 ;; Defined at:
  3092 ;;		line 295 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  a               1    wreg     unsigned char 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  a               1    1[COMRAM] unsigned char 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3106 ;;      Params:         0       0       0       0       0       0       0       0       0
  3107 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3108 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3109 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3110 ;;Total ram usage:        2 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; Hardware stack levels required when called: 1
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_EnviaDato
  3117 ;;		_InicializaLCD
  3118 ;;		_BorraLCD
  3119 ;;		_EscribeLCD_c
  3120 ;;		_EscribeLCD_n8
  3121 ;;		_DireccionaLCD
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text23
  3126   00155A                     __ptext23:
  3127                           	callstack 0
  3128   00155A                     _RetardoLCD:
  3129                           	callstack 26
  3130                           
  3131                           ;incstack = 0
  3132                           ;RetardoLCD@a stored from wreg
  3133   00155A  6E02               	movwf	RetardoLCD@a^0,c
  3134                           
  3135                           ;LibLCDXC8.h: 296: switch(a){
  3136   00155C  D023               	goto	l2140
  3137   00155E                     l2130:
  3138   00155E  0E27               	movlw	39
  3139   001560  6E01               	movwf	??_RetardoLCD^0,c
  3140   001562  0EF5               	movlw	245
  3141   001564                     u2757:
  3142   001564  2EE8               	decfsz	wreg,f,c
  3143   001566  D7FE               	bra	u2757
  3144   001568  2E01               	decfsz	??_RetardoLCD^0,f,c
  3145   00156A  D7FC               	bra	u2757
  3146   00156C  F000               	nop	
  3147                           
  3148                           ;LibLCDXC8.h: 299: break;
  3149   00156E  0012               	return	
  3150   001570                     l2132:
  3151   001570  0E03               	movlw	3
  3152   001572  6E01               	movwf	??_RetardoLCD^0,c
  3153   001574  0E98               	movlw	152
  3154   001576                     u2767:
  3155   001576  2EE8               	decfsz	wreg,f,c
  3156   001578  D7FE               	bra	u2767
  3157   00157A  2E01               	decfsz	??_RetardoLCD^0,f,c
  3158   00157C  D7FC               	bra	u2767
  3159                           
  3160                           ;LibLCDXC8.h: 301: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3161   00157E  0EB6               	movlw	182
  3162   001580                     u2777:
  3163   001580  D000               	nop2	
  3164   001582  D000               	nop2	
  3165   001584  2EE8               	decfsz	wreg,f,c
  3166   001586  D7FC               	bra	u2777
  3167   001588  D000               	nop2	
  3168   00158A  D000               	nop2	
  3169   00158C  D000               	nop2	
  3170                           
  3171                           ;LibLCDXC8.h: 303: break;
  3172   00158E  0012               	return	
  3173   001590                     l2134:
  3174   001590  0E42               	movlw	66
  3175   001592                     u2787:
  3176   001592  2EE8               	decfsz	wreg,f,c
  3177   001594  D7FE               	bra	u2787
  3178   001596  D000               	nop2	
  3179                           
  3180                           ;LibLCDXC8.h: 306: break;
  3181   001598  0012               	return	
  3182   00159A                     l2136:
  3183   00159A  0E1A               	movlw	26
  3184   00159C                     u2797:
  3185   00159C  2EE8               	decfsz	wreg,f,c
  3186   00159E  D7FE               	bra	u2797
  3187   0015A0  D000               	nop2	
  3188                           
  3189                           ;LibLCDXC8.h: 309: break;
  3190   0015A2  0012               	return	
  3191   0015A4                     l2140:
  3192   0015A4  5002               	movf	RetardoLCD@a^0,w,c
  3193                           
  3194                           ; Switch size 1, requested type "simple"
  3195                           ; Number of cases is 4, Range of values is 1 to 4
  3196                           ; switch strategies available:
  3197                           ; Name         Instructions Cycles
  3198                           ; simple_byte           13     7 (average)
  3199                           ;	Chosen strategy is simple_byte
  3200   0015A6  0A01               	xorlw	1	; case 1
  3201   0015A8  B4D8               	btfsc	status,2,c
  3202   0015AA  D7D9               	goto	l2130
  3203   0015AC  0A03               	xorlw	3	; case 2
  3204   0015AE  B4D8               	btfsc	status,2,c
  3205   0015B0  D7DF               	goto	l2132
  3206   0015B2  0A01               	xorlw	1	; case 3
  3207   0015B4  B4D8               	btfsc	status,2,c
  3208   0015B6  D7EC               	goto	l2134
  3209   0015B8  0A07               	xorlw	7	; case 4
  3210   0015BA  A4D8               	btfss	status,2,c
  3211   0015BC  0012               	return	
  3212   0015BE  D7ED               	goto	l2136
  3213   0015C0                     __end_of_RetardoLCD:
  3214                           	callstack 0
  3215                           
  3216 ;; *************** function _HabilitaLCD *****************
  3217 ;; Defined at:
  3218 ;;		line 105 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;		None
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3232 ;;      Params:         0       0       0       0       0       0       0       0       0
  3233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3235 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3236 ;;Total ram usage:        0 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 1
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_EnviaDato
  3243 ;;		_InicializaLCD
  3244 ;;		_BorraLCD
  3245 ;;		_EscribeLCD_c
  3246 ;;		_EscribeLCD_n8
  3247 ;;		_DireccionaLCD
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text24
  3252   00194C                     __ptext24:
  3253                           	callstack 0
  3254   00194C                     _HabilitaLCD:
  3255                           	callstack 26
  3256                           
  3257                           ;LibLCDXC8.h: 107: LATD1=1;
  3258                           
  3259                           ;incstack = 0
  3260   00194C  828C               	bsf	3980,1,c	;volatile
  3261                           
  3262                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3263   00194E  0E1A               	movlw	26
  3264   001950                     u2807:
  3265   001950  2EE8               	decfsz	wreg,f,c
  3266   001952  D7FE               	bra	u2807
  3267   001954  D000               	nop2	
  3268                           
  3269                           ;LibLCDXC8.h: 110: LATD1=0;
  3270   001956  928C               	bcf	3980,1,c	;volatile
  3271   001958  0012               	return		;funcret
  3272   00195A                     __end_of_HabilitaLCD:
  3273                           	callstack 0
  3274                           
  3275 ;; *************** function _ConfiguraLCD *****************
  3276 ;; Defined at:
  3277 ;;		line 55 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  a               1    wreg     unsigned char 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  a               1    0[COMRAM] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3291 ;;      Params:         0       0       0       0       0       0       0       0       0
  3292 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3294 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3295 ;;Total ram usage:        1 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 1
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_init_configuration
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text25
  3306   0018E4                     __ptext25:
  3307                           	callstack 0
  3308   0018E4                     _ConfiguraLCD:
  3309                           	callstack 28
  3310                           
  3311                           ;incstack = 0
  3312                           ;ConfiguraLCD@a stored from wreg
  3313   0018E4  6E01               	movwf	ConfiguraLCD@a^0,c
  3314                           
  3315                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
  3316   0018E6  0E04               	movlw	4
  3317   0018E8  1801               	xorwf	ConfiguraLCD@a^0,w,c
  3318   0018EA  B4D8               	btfsc	status,2,c
  3319   0018EC  D004               	goto	u1550
  3320   0018EE  0E08               	movlw	8
  3321   0018F0  1801               	xorwf	ConfiguraLCD@a^0,w,c
  3322   0018F2  A4D8               	btfss	status,2,c
  3323   0018F4  0012               	return	
  3324   0018F6                     u1550:
  3325                           
  3326                           ;LibLCDXC8.h: 57: interfaz=a;
  3327   0018F6  C001  F04D         	movff	ConfiguraLCD@a,_interfaz
  3328   0018FA  0012               	return		;funcret
  3329   0018FC                     __end_of_ConfiguraLCD:
  3330                           	callstack 0
  3331                           
  3332 ;; *************** function _choose_scale_temperature_and_fill_buffers *****************
  3333 ;; Defined at:
  3334 ;;		line 356 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  buffer_LCD_r    1   69[COMRAM] PTR unsigned char 
  3337 ;;		 -> main@buffer_LCD_row_1(17), 
  3338 ;;  buffer_LCD_r    1   70[COMRAM] PTR unsigned char 
  3339 ;;		 -> main@buffer_LCD_row_2(17), 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  temp_convert    2   72[COMRAM] int 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3351 ;;      Params:         2       0       0       0       0       0       0       0       0
  3352 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3353 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3354 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3355 ;;Total ram usage:        5 bytes
  3356 ;; Hardware stack levels used: 1
  3357 ;; Hardware stack levels required when called: 3
  3358 ;; This function calls:
  3359 ;;		___ftadd
  3360 ;;		___ftdiv
  3361 ;;		___ftmul
  3362 ;;		___fttol
  3363 ;;		___lbtoft
  3364 ;;		_sprintf
  3365 ;; This function is called by:
  3366 ;;		_main
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text26
  3371   000878                     __ptext26:
  3372                           	callstack 0
  3373   000878                     _choose_scale_temperature_and_fill_buffers:
  3374                           	callstack 27
  3375                           
  3376                           ;LAB05.c: 359: _delay((unsigned long)((10)*(8000000/4000.0)));
  3377                           
  3378                           ;incstack = 0
  3379   000878  0E1A               	movlw	26
  3380   00087A  6E48               	movwf	??_choose_scale_temperature_and_fill_buffers^0,c
  3381   00087C  0EF8               	movlw	248
  3382   00087E                     u2817:
  3383   00087E  2EE8               	decfsz	wreg,f,c
  3384   000880  D7FE               	bra	u2817
  3385   000882  2E48               	decfsz	??_choose_scale_temperature_and_fill_buffers^0,f,c
  3386   000884  D7FC               	bra	u2817
  3387   000886  D000               	nop2	
  3388                           
  3389                           ;LAB05.c: 360: if((RA2==0 && RA3==0) || Scale_Temperature_RS232 == 'C'){
  3390   000888  B480               	btfsc	3968,2,c	;volatile
  3391   00088A  D002               	goto	u2350
  3392   00088C  A680               	btfss	3968,3,c	;volatile
  3393   00088E  D004               	goto	u2360
  3394   000890                     u2350:
  3395   000890  0E43               	movlw	67
  3396   000892  184B               	xorwf	_Scale_Temperature_RS232^0,w,c
  3397   000894  A4D8               	btfss	status,2,c
  3398   000896  D01A               	goto	l340
  3399   000898                     u2360:
  3400                           
  3401                           ;LAB05.c: 362: sprintf(buffer_LCD_row_1, "T: %i C",Temp);
  3402   000898  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3403   00089C  0E51               	movlw	low STR_7
  3404   00089E  6E0E               	movwf	sprintf@f^0,c
  3405   0008A0  C088  F00F         	movff	_Temp,?_sprintf+2
  3406   0008A4  6A10               	clrf	(?_sprintf+3)^0,c
  3407   0008A6  EC27  F006         	call	_sprintf	;wreg free
  3408                           
  3409                           ;LAB05.c: 363: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3410   0008AA  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3411   0008AE  0E48               	movlw	low STR_8
  3412   0008B0  6E0E               	movwf	sprintf@f^0,c
  3413   0008B2  C087  F00F         	movff	_Hum,?_sprintf+2
  3414   0008B6  6A10               	clrf	(?_sprintf+3)^0,c
  3415   0008B8  0E00               	movlw	0
  3416   0008BA  6E12               	movwf	(?_sprintf+5)^0,c
  3417   0008BC  0E25               	movlw	37
  3418   0008BE  6E11               	movwf	(?_sprintf+4)^0,c
  3419   0008C0  EC27  F006         	call	_sprintf	;wreg free
  3420                           
  3421                           ;LAB05.c: 365: Scale_Temperature=0;
  3422   0008C4  0E00               	movlw	0
  3423   0008C6  0100               	movlb	0	; () banked
  3424   0008C8  6F85               	movwf	_Scale_Temperature& (0+255),b
  3425                           
  3426                           ;LAB05.c: 366: }
  3427   0008CA  0012               	return	
  3428   0008CC                     l340:
  3429                           
  3430                           ;LAB05.c: 367: else if((RA2==0 && RA3==1) || Scale_Temperature_RS232 == 'K'){
  3431   0008CC  B480               	btfsc	3968,2,c	;volatile
  3432   0008CE  D002               	goto	u2380
  3433   0008D0  B680               	btfsc	3968,3,c	;volatile
  3434   0008D2  D004               	goto	u2390
  3435   0008D4                     u2380:
  3436   0008D4  0E4B               	movlw	75
  3437   0008D6  184B               	xorwf	_Scale_Temperature_RS232^0,w,c
  3438   0008D8  A4D8               	btfss	status,2,c
  3439   0008DA  D039               	goto	l346
  3440   0008DC                     u2390:
  3441                           
  3442                           ;LAB05.c: 369: temp_converted = Temp + 273.15;
  3443   0008DC  0E93               	movlw	147
  3444   0008DE  6E2E               	movwf	___ftadd@f2^0,c
  3445   0008E0  0E88               	movlw	136
  3446   0008E2  6E2F               	movwf	(___ftadd@f2+1)^0,c
  3447   0008E4  0E43               	movlw	67
  3448   0008E6  6E30               	movwf	(___ftadd@f2+2)^0,c
  3449   0008E8  0100               	movlb	0	; () banked
  3450   0008EA  5188               	movf	_Temp& (0+255),w,b
  3451   0008EC  EC40  F00C         	call	___lbtoft
  3452   0008F0  C009  F02B         	movff	?___lbtoft,___ftadd@f1
  3453   0008F4  C00A  F02C         	movff	?___lbtoft+1,___ftadd@f1+1
  3454   0008F8  C00B  F02D         	movff	?___lbtoft+2,___ftadd@f1+2
  3455   0008FC  EC53  F005         	call	___ftadd	;wreg free
  3456   000900  C02B  F037         	movff	?___ftadd,___fttol@f1
  3457   000904  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  3458   000908  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  3459   00090C  EC2D  F008         	call	___fttol	;wreg free
  3460   000910  C037  F049         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  3461   000914  C038  F04A         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  3462                           
  3463                           ;LAB05.c: 371: sprintf(buffer_LCD_row_1, "T: %i K",temp_converted);
  3464   000918  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3465   00091C  0E61               	movlw	low STR_9
  3466   00091E  6E0E               	movwf	sprintf@f^0,c
  3467   000920  C049  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  3468   000924  C04A  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  3469   000928  EC27  F006         	call	_sprintf	;wreg free
  3470                           
  3471                           ;LAB05.c: 372: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3472   00092C  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3473   000930  0E48               	movlw	low STR_8
  3474   000932  6E0E               	movwf	sprintf@f^0,c
  3475   000934  C087  F00F         	movff	_Hum,?_sprintf+2
  3476   000938  6A10               	clrf	(?_sprintf+3)^0,c
  3477   00093A  0E00               	movlw	0
  3478   00093C  6E12               	movwf	(?_sprintf+5)^0,c
  3479   00093E  0E25               	movlw	37
  3480   000940  6E11               	movwf	(?_sprintf+4)^0,c
  3481   000942  EC27  F006         	call	_sprintf	;wreg free
  3482                           
  3483                           ;LAB05.c: 374: Scale_Temperature=1;
  3484   000946  0E01               	movlw	1
  3485   000948  0100               	movlb	0	; () banked
  3486   00094A  6F85               	movwf	_Scale_Temperature& (0+255),b
  3487                           
  3488                           ;LAB05.c: 375: }
  3489   00094C  0012               	return	
  3490   00094E                     l346:
  3491                           
  3492                           ;LAB05.c: 376: else if((RA2==1 && RA3==0) || Scale_Temperature_RS232 == 'R'){
  3493   00094E  A480               	btfss	3968,2,c	;volatile
  3494   000950  D002               	goto	u2410
  3495   000952  A680               	btfss	3968,3,c	;volatile
  3496   000954  D004               	goto	u2420
  3497   000956                     u2410:
  3498   000956  0E52               	movlw	82
  3499   000958  184B               	xorwf	_Scale_Temperature_RS232^0,w,c
  3500   00095A  A4D8               	btfss	status,2,c
  3501   00095C  D047               	goto	l352
  3502   00095E                     u2420:
  3503                           
  3504                           ;LAB05.c: 378: temp_converted = Temp*1.8 + 491.67;
  3505   00095E  0ED6               	movlw	214
  3506   000960  6E2E               	movwf	___ftadd@f2^0,c
  3507   000962  0EF5               	movlw	245
  3508   000964  6E2F               	movwf	(___ftadd@f2+1)^0,c
  3509   000966  0E43               	movlw	67
  3510   000968  6E30               	movwf	(___ftadd@f2+2)^0,c
  3511   00096A  0E66               	movlw	102
  3512   00096C  6E10               	movwf	___ftmul@f2^0,c
  3513   00096E  0EE6               	movlw	230
  3514   000970  6E11               	movwf	(___ftmul@f2+1)^0,c
  3515   000972  0E3F               	movlw	63
  3516   000974  6E12               	movwf	(___ftmul@f2+2)^0,c
  3517   000976  0100               	movlb	0	; () banked
  3518   000978  5188               	movf	_Temp& (0+255),w,b
  3519   00097A  EC40  F00C         	call	___lbtoft
  3520   00097E  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  3521   000982  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  3522   000986  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  3523   00098A  ECCD  F006         	call	___ftmul	;wreg free
  3524   00098E  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  3525   000992  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  3526   000996  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  3527   00099A  EC53  F005         	call	___ftadd	;wreg free
  3528   00099E  C02B  F037         	movff	?___ftadd,___fttol@f1
  3529   0009A2  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  3530   0009A6  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  3531   0009AA  EC2D  F008         	call	___fttol	;wreg free
  3532   0009AE  C037  F049         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  3533   0009B2  C038  F04A         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  3534                           
  3535                           ;LAB05.c: 380: sprintf(buffer_LCD_row_1, "T: %i Ra",temp_converted);
  3536   0009B6  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3537   0009BA  0E3F               	movlw	low STR_11
  3538   0009BC  6E0E               	movwf	sprintf@f^0,c
  3539   0009BE  C049  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  3540   0009C2  C04A  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  3541   0009C6  EC27  F006         	call	_sprintf	;wreg free
  3542                           
  3543                           ;LAB05.c: 381: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3544   0009CA  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3545   0009CE  0E48               	movlw	low STR_8
  3546   0009D0  6E0E               	movwf	sprintf@f^0,c
  3547   0009D2  C087  F00F         	movff	_Hum,?_sprintf+2
  3548   0009D6  6A10               	clrf	(?_sprintf+3)^0,c
  3549   0009D8  0E00               	movlw	0
  3550   0009DA  6E12               	movwf	(?_sprintf+5)^0,c
  3551   0009DC  0E25               	movlw	37
  3552   0009DE  6E11               	movwf	(?_sprintf+4)^0,c
  3553   0009E0  EC27  F006         	call	_sprintf	;wreg free
  3554                           
  3555                           ;LAB05.c: 383: Scale_Temperature=2;
  3556   0009E4  0E02               	movlw	2
  3557   0009E6  0100               	movlb	0	; () banked
  3558   0009E8  6F85               	movwf	_Scale_Temperature& (0+255),b
  3559                           
  3560                           ;LAB05.c: 385: }
  3561   0009EA  0012               	return	
  3562   0009EC                     l352:
  3563                           
  3564                           ;LAB05.c: 386: else if((RA2==1 && RA3==1) || Scale_Temperature_RS232 == 'F'){
  3565   0009EC  A480               	btfss	3968,2,c	;volatile
  3566   0009EE  D002               	goto	u2440
  3567   0009F0  B680               	btfsc	3968,3,c	;volatile
  3568   0009F2  D004               	goto	u2450
  3569   0009F4                     u2440:
  3570   0009F4  0E46               	movlw	70
  3571   0009F6  184B               	xorwf	_Scale_Temperature_RS232^0,w,c
  3572   0009F8  A4D8               	btfss	status,2,c
  3573   0009FA  0012               	return	
  3574   0009FC                     u2450:
  3575                           
  3576                           ;LAB05.c: 388: temp_converted = Temp*9.0/5.0 + 32.0;
  3577   0009FC  0E00               	movlw	0
  3578   0009FE  6E2E               	movwf	___ftadd@f2^0,c
  3579   000A00  0E00               	movlw	0
  3580   000A02  6E2F               	movwf	(___ftadd@f2+1)^0,c
  3581   000A04  0E42               	movlw	66
  3582   000A06  6E30               	movwf	(___ftadd@f2+2)^0,c
  3583   000A08  0E00               	movlw	0
  3584   000A0A  6E1F               	movwf	___ftdiv@f2^0,c
  3585   000A0C  0EA0               	movlw	160
  3586   000A0E  6E20               	movwf	(___ftdiv@f2+1)^0,c
  3587   000A10  0E40               	movlw	64
  3588   000A12  6E21               	movwf	(___ftdiv@f2+2)^0,c
  3589   000A14  0E00               	movlw	0
  3590   000A16  6E10               	movwf	___ftmul@f2^0,c
  3591   000A18  0E10               	movlw	16
  3592   000A1A  6E11               	movwf	(___ftmul@f2+1)^0,c
  3593   000A1C  0E41               	movlw	65
  3594   000A1E  6E12               	movwf	(___ftmul@f2+2)^0,c
  3595   000A20  0100               	movlb	0	; () banked
  3596   000A22  5188               	movf	_Temp& (0+255),w,b
  3597   000A24  EC40  F00C         	call	___lbtoft
  3598   000A28  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  3599   000A2C  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  3600   000A30  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  3601   000A34  ECCD  F006         	call	___ftmul	;wreg free
  3602   000A38  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  3603   000A3C  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  3604   000A40  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  3605   000A44  ECBA  F007         	call	___ftdiv	;wreg free
  3606   000A48  C01C  F02B         	movff	?___ftdiv,___ftadd@f1
  3607   000A4C  C01D  F02C         	movff	?___ftdiv+1,___ftadd@f1+1
  3608   000A50  C01E  F02D         	movff	?___ftdiv+2,___ftadd@f1+2
  3609   000A54  EC53  F005         	call	___ftadd	;wreg free
  3610   000A58  C02B  F037         	movff	?___ftadd,___fttol@f1
  3611   000A5C  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  3612   000A60  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  3613   000A64  EC2D  F008         	call	___fttol	;wreg free
  3614   000A68  C037  F049         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  3615   000A6C  C038  F04A         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  3616                           
  3617                           ;LAB05.c: 390: sprintf(buffer_LCD_row_1, "T: %i F",temp_converted);
  3618   000A70  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3619   000A74  0E59               	movlw	low STR_13
  3620   000A76  6E0E               	movwf	sprintf@f^0,c
  3621   000A78  C049  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  3622   000A7C  C04A  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  3623   000A80  EC27  F006         	call	_sprintf	;wreg free
  3624                           
  3625                           ;LAB05.c: 391: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3626   000A84  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3627   000A88  0E48               	movlw	low STR_8
  3628   000A8A  6E0E               	movwf	sprintf@f^0,c
  3629   000A8C  C087  F00F         	movff	_Hum,?_sprintf+2
  3630   000A90  6A10               	clrf	(?_sprintf+3)^0,c
  3631   000A92  0E00               	movlw	0
  3632   000A94  6E12               	movwf	(?_sprintf+5)^0,c
  3633   000A96  0E25               	movlw	37
  3634   000A98  6E11               	movwf	(?_sprintf+4)^0,c
  3635   000A9A  EC27  F006         	call	_sprintf	;wreg free
  3636                           
  3637                           ;LAB05.c: 393: Scale_Temperature=3;
  3638   000A9E  0E03               	movlw	3
  3639   000AA0  0100               	movlb	0	; () banked
  3640   000AA2  6F85               	movwf	_Scale_Temperature& (0+255),b
  3641   000AA4  0012               	return	
  3642   000AA6                     __end_of_choose_scale_temperature_and_fill_buffers:
  3643                           	callstack 0
  3644                           
  3645 ;; *************** function _sprintf *****************
  3646 ;; Defined at:
  3647 ;;		line 505 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/doprnt.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  sp              1   12[COMRAM] PTR unsigned char 
  3650 ;;		 -> send_temperature_RS232@buffer_RS232(12), main@buffer_LCD_row_2(17), main@buffer_LCD_row_1(17), 
  3651 ;;  f               1   13[COMRAM] PTR const unsigned char 
  3652 ;;		 -> STR_15(9), STR_14(9), STR_13(8), STR_12(9), 
  3653 ;;		 -> STR_11(9), STR_10(9), STR_9(8), STR_8(9), 
  3654 ;;		 -> STR_7(8), 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  tmpval          4    0        struct .
  3657 ;;  cp              3    0        PTR const unsigned char 
  3658 ;;  val             2   22[COMRAM] unsigned int 
  3659 ;;  len             2    0        unsigned int 
  3660 ;;  c               1   24[COMRAM] unsigned char 
  3661 ;;  ap              1   21[COMRAM] PTR void [1]
  3662 ;;		 -> ?_sprintf(2), 
  3663 ;;  prec            1   20[COMRAM] char 
  3664 ;;  flag            1   19[COMRAM] unsigned char 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  2   12[COMRAM] int 
  3667 ;; Registers used:
  3668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3674 ;;      Params:         6       0       0       0       0       0       0       0       0
  3675 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3676 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3677 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3678 ;;Total ram usage:       13 bytes
  3679 ;; Hardware stack levels used: 1
  3680 ;; Hardware stack levels required when called: 2
  3681 ;; This function calls:
  3682 ;;		___lwdiv
  3683 ;;		___lwmod
  3684 ;; This function is called by:
  3685 ;;		_choose_scale_temperature_and_fill_buffers
  3686 ;;		_send_temperature_RS232
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text27
  3691   000C4E                     __ptext27:
  3692                           	callstack 0
  3693   000C4E                     _sprintf:
  3694                           	callstack 27
  3695                           
  3696                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3697                           
  3698                           ;incstack = 0
  3699   000C4E  0E0F               	movlw	low (?_sprintf+2)
  3700   000C50  6E16               	movwf	sprintf@ap^0,c
  3701                           
  3702                           ;doprnt.c: 553: while((c = *f++)) {
  3703   000C52  D091               	goto	u1890
  3704   000C54                     l2480:
  3705                           
  3706                           ;doprnt.c: 555: if(c != '%')
  3707   000C54  0E25               	movlw	37
  3708   000C56  1819               	xorwf	sprintf@c^0,w,c
  3709   000C58  B4D8               	btfsc	status,2,c
  3710   000C5A  D007               	goto	l2486
  3711   000C5C                     u1840:
  3712                           
  3713                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  3714   000C5C  500D               	movf	sprintf@sp^0,w,c
  3715   000C5E  6ED9               	movwf	fsr2l,c
  3716   000C60  6ADA               	clrf	fsr2h,c
  3717   000C62  C019  FFDF         	movff	sprintf@c,indf2
  3718   000C66  2A0D               	incf	sprintf@sp^0,f,c
  3719                           
  3720                           ;doprnt.c: 559: continue;
  3721   000C68  D086               	goto	u1890
  3722   000C6A                     l2486:
  3723                           
  3724                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3725   000C6A  0E00               	movlw	0
  3726   000C6C  6E14               	movwf	sprintf@flag^0,c
  3727                           
  3728                           ;doprnt.c: 661: switch(c = *f++) {
  3729   000C6E  D008               	goto	l2498
  3730   000C70                     l2488:
  3731                           
  3732                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  3733   000C70  5016               	movf	sprintf@ap^0,w,c
  3734   000C72  6ED9               	movwf	fsr2l,c
  3735   000C74  6ADA               	clrf	fsr2h,c
  3736   000C76  50DF               	movf	indf2,w,c
  3737   000C78  6E19               	movwf	sprintf@c^0,c
  3738   000C7A  0E02               	movlw	2
  3739   000C7C  2616               	addwf	sprintf@ap^0,f,c
  3740   000C7E  D7EE               	goto	u1840
  3741   000C80                     l2498:
  3742   000C80  2A0E               	incf	sprintf@f^0,f,c
  3743   000C82  040E               	decf	sprintf@f^0,w,c
  3744   000C84  6E13               	movwf	??_sprintf^0,c
  3745   000C86  C013  FFF6         	movff	??_sprintf,tblptrl
  3746   000C8A                     	if	1	;There is more than 1 active tblptr byte
  3747   000C8A  0E08               	movlw	high __smallconst
  3748   000C8C  6EF7               	movwf	tblptrh,c
  3749   000C8E                     	endif
  3750   000C8E                     	if	0	;tblptru may be non-zero
  3751   000C8E                     	endif
  3752   000C8E                     	if	0	;tblptru may be non-zero
  3753   000C8E                     	endif
  3754   000C8E  0008               	tblrd		*
  3755   000C90  CFF5 F019          	movff	tablat,sprintf@c
  3756   000C94  5019               	movf	sprintf@c^0,w,c
  3757                           
  3758                           ; Switch size 1, requested type "simple"
  3759                           ; Number of cases is 4, Range of values is 0 to 105
  3760                           ; switch strategies available:
  3761                           ; Name         Instructions Cycles
  3762                           ; simple_byte           13     7 (average)
  3763                           ;	Chosen strategy is simple_byte
  3764   000C96  0A00               	xorlw	0	; case 0
  3765   000C98  B4D8               	btfsc	status,2,c
  3766   000C9A  D07A               	goto	u1900
  3767   000C9C  0A63               	xorlw	99	; case 99
  3768   000C9E  B4D8               	btfsc	status,2,c
  3769   000CA0  D7E7               	goto	l2488
  3770   000CA2  0A07               	xorlw	7	; case 100
  3771   000CA4  B4D8               	btfsc	status,2,c
  3772   000CA6  D003               	goto	l2500
  3773   000CA8  0A0D               	xorlw	13	; case 105
  3774   000CAA  A4D8               	btfss	status,2,c
  3775   000CAC  D7D7               	goto	u1840
  3776   000CAE                     l2500:
  3777                           
  3778                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3779   000CAE  5016               	movf	sprintf@ap^0,w,c
  3780   000CB0  6ED9               	movwf	fsr2l,c
  3781   000CB2  6ADA               	clrf	fsr2h,c
  3782   000CB4  CFDE F017          	movff	postinc2,sprintf@val
  3783   000CB8  CFDD F018          	movff	postdec2,sprintf@val+1
  3784   000CBC  0E02               	movlw	2
  3785   000CBE  2616               	addwf	sprintf@ap^0,f,c
  3786                           
  3787                           ;doprnt.c: 1287: if((int)val < 0) {
  3788   000CC0  AE18               	btfss	(sprintf@val+1)^0,7,c
  3789   000CC2  D006               	goto	l2510
  3790                           
  3791                           ;doprnt.c: 1288: flag |= 0x03;
  3792   000CC4  0E03               	movlw	3
  3793   000CC6  1214               	iorwf	sprintf@flag^0,f,c
  3794                           
  3795                           ;doprnt.c: 1289: val = -val;
  3796   000CC8  6C17               	negf	sprintf@val^0,c
  3797   000CCA  1E18               	comf	(sprintf@val+1)^0,f,c
  3798   000CCC  B0D8               	btfsc	status,0,c
  3799   000CCE  2A18               	incf	(sprintf@val+1)^0,f,c
  3800   000CD0                     l2510:
  3801                           
  3802                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3803   000CD0  0E01               	movlw	1
  3804   000CD2  6E19               	movwf	sprintf@c^0,c
  3805   000CD4                     l2516:
  3806                           
  3807                           ;doprnt.c: 1332: if(val < dpowers[c])
  3808   000CD4  5019               	movf	sprintf@c^0,w,c
  3809   000CD6  0D02               	mullw	2
  3810   000CD8  50F3               	movf	243,w,c
  3811   000CDA  0F01               	addlw	low _dpowers
  3812   000CDC  6E13               	movwf	??_sprintf^0,c
  3813   000CDE  C013  FFF6         	movff	??_sprintf,tblptrl
  3814   000CE2                     	if	1	;There is more than 1 active tblptr byte
  3815   000CE2  0E08               	movlw	high __smallconst
  3816   000CE4  6EF7               	movwf	tblptrh,c
  3817   000CE6                     	endif
  3818   000CE6                     	if	0	;tblptru may be non-zero
  3819   000CE6                     	endif
  3820   000CE6                     	if	0	;tblptru may be non-zero
  3821   000CE6                     	endif
  3822   000CE6  0009               	tblrd		*+
  3823   000CE8  50F5               	movf	tablat,w,c
  3824   000CEA  5C17               	subwf	sprintf@val^0,w,c
  3825   000CEC  0009               	tblrd		*+
  3826   000CEE  50F5               	movf	tablat,w,c
  3827   000CF0  5818               	subwfb	(sprintf@val+1)^0,w,c
  3828   000CF2  A0D8               	btfss	status,0,c
  3829   000CF4  D005               	goto	u1870
  3830   000CF6  2A19               	incf	sprintf@c^0,f,c
  3831   000CF8  0E05               	movlw	5
  3832   000CFA  1819               	xorwf	sprintf@c^0,w,c
  3833   000CFC  A4D8               	btfss	status,2,c
  3834   000CFE  D7EA               	goto	l2516
  3835   000D00                     u1870:
  3836                           
  3837                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3838   000D00  C014  F013         	movff	sprintf@flag,??_sprintf
  3839   000D04  0E03               	movlw	3
  3840   000D06  1613               	andwf	??_sprintf^0,f,c
  3841   000D08  B4D8               	btfsc	status,2,c
  3842   000D0A  D006               	goto	l2530
  3843                           
  3844                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3845   000D0C  500D               	movf	sprintf@sp^0,w,c
  3846   000D0E  6ED9               	movwf	fsr2l,c
  3847   000D10  6ADA               	clrf	fsr2h,c
  3848   000D12  0E2D               	movlw	45
  3849   000D14  6EDF               	movwf	indf2,c
  3850   000D16  2A0D               	incf	sprintf@sp^0,f,c
  3851   000D18                     l2530:
  3852                           
  3853                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3854   000D18  C019  F015         	movff	sprintf@c,sprintf@prec
  3855                           
  3856                           ;doprnt.c: 1500: while(prec--) {
  3857   000D1C  D028               	goto	l2538
  3858   000D1E                     l2532:
  3859                           
  3860                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3861   000D1E  5015               	movf	sprintf@prec^0,w,c
  3862   000D20  0D02               	mullw	2
  3863   000D22  50F3               	movf	243,w,c
  3864   000D24  0F01               	addlw	low _dpowers
  3865   000D26  6E13               	movwf	??_sprintf^0,c
  3866   000D28  C013  FFF6         	movff	??_sprintf,tblptrl
  3867   000D2C                     	if	1	;There is more than 1 active tblptr byte
  3868   000D2C  0E08               	movlw	high __smallconst
  3869   000D2E  6EF7               	movwf	tblptrh,c
  3870   000D30                     	endif
  3871   000D30                     	if	0	;tblptru may be non-zero
  3872   000D30                     	endif
  3873   000D30                     	if	0	;tblptru may be non-zero
  3874   000D30                     	endif
  3875   000D30  0009               	tblrd		*+
  3876   000D32  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3877   000D36  000A               	tblrd		*-
  3878   000D38  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3879   000D3C  C017  F001         	movff	sprintf@val,___lwdiv@dividend
  3880   000D40  C018  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3881   000D44  EC0B  F00B         	call	___lwdiv	;wreg free
  3882   000D48  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3883   000D4C  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3884   000D50  0E00               	movlw	0
  3885   000D52  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3886   000D54  0E0A               	movlw	10
  3887   000D56  6E0A               	movwf	___lwmod@divisor^0,c
  3888   000D58  EC7F  F00B         	call	___lwmod	;wreg free
  3889   000D5C  5008               	movf	?___lwmod^0,w,c
  3890   000D5E  0F30               	addlw	48
  3891   000D60  6E19               	movwf	sprintf@c^0,c
  3892                           
  3893                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  3894   000D62  500D               	movf	sprintf@sp^0,w,c
  3895   000D64  6ED9               	movwf	fsr2l,c
  3896   000D66  6ADA               	clrf	fsr2h,c
  3897   000D68  C019  FFDF         	movff	sprintf@c,indf2
  3898   000D6C  2A0D               	incf	sprintf@sp^0,f,c
  3899   000D6E                     l2538:
  3900   000D6E  0615               	decf	sprintf@prec^0,f,c
  3901   000D70  2815               	incf	sprintf@prec^0,w,c
  3902   000D72  A4D8               	btfss	status,2,c
  3903   000D74  D7D4               	goto	l2532
  3904   000D76                     u1890:
  3905   000D76  2A0E               	incf	sprintf@f^0,f,c
  3906   000D78  040E               	decf	sprintf@f^0,w,c
  3907   000D7A  6E13               	movwf	??_sprintf^0,c
  3908   000D7C  C013  FFF6         	movff	??_sprintf,tblptrl
  3909   000D80                     	if	1	;There is more than 1 active tblptr byte
  3910   000D80  0E08               	movlw	high __smallconst
  3911   000D82  6EF7               	movwf	tblptrh,c
  3912   000D84                     	endif
  3913   000D84                     	if	0	;tblptru may be non-zero
  3914   000D84                     	endif
  3915   000D84                     	if	0	;tblptru may be non-zero
  3916   000D84                     	endif
  3917   000D84  0008               	tblrd		*
  3918   000D86  CFF5 F019          	movff	tablat,sprintf@c
  3919   000D8A  5019               	movf	sprintf@c^0,w,c
  3920   000D8C  A4D8               	btfss	status,2,c
  3921   000D8E  D762               	goto	l2480
  3922   000D90                     u1900:
  3923                           
  3924                           ;doprnt.c: 1564: *sp = 0;
  3925   000D90  500D               	movf	sprintf@sp^0,w,c
  3926   000D92  6ED9               	movwf	fsr2l,c
  3927   000D94  6ADA               	clrf	fsr2h,c
  3928   000D96  6ADF               	clrf	indf2,c
  3929   000D98  0012               	return		;funcret
  3930   000D9A                     __end_of_sprintf:
  3931                           	callstack 0
  3932                           
  3933 ;; *************** function ___lwmod *****************
  3934 ;; Defined at:
  3935 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwmod.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  dividend        2    7[COMRAM] unsigned int 
  3938 ;;  divisor         2    9[COMRAM] unsigned int 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  counter         1   11[COMRAM] unsigned char 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  2    7[COMRAM] unsigned int 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2, status,0
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3950 ;;      Params:         4       0       0       0       0       0       0       0       0
  3951 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3953 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3954 ;;Total ram usage:        5 bytes
  3955 ;; Hardware stack levels used: 1
  3956 ;; Hardware stack levels required when called: 1
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_sprintf
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text28
  3965   0016FE                     __ptext28:
  3966                           	callstack 0
  3967   0016FE                     ___lwmod:
  3968                           	callstack 27
  3969                           
  3970                           ;incstack = 0
  3971   0016FE  500A               	movf	___lwmod@divisor^0,w,c
  3972   001700  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  3973   001702  B4D8               	btfsc	status,2,c
  3974   001704  D018               	goto	l932
  3975   001706  0E01               	movlw	1
  3976   001708  6E0C               	movwf	___lwmod@counter^0,c
  3977   00170A  D004               	goto	l2286
  3978   00170C                     l2284:
  3979   00170C  90D8               	bcf	status,0,c
  3980   00170E  360A               	rlcf	___lwmod@divisor^0,f,c
  3981   001710  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  3982   001712  2A0C               	incf	___lwmod@counter^0,f,c
  3983   001714                     l2286:
  3984   001714  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  3985   001716  D7FA               	goto	l2284
  3986   001718                     u1520:
  3987   001718  500A               	movf	___lwmod@divisor^0,w,c
  3988   00171A  5C08               	subwf	___lwmod@dividend^0,w,c
  3989   00171C  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3990   00171E  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  3991   001720  A0D8               	btfss	status,0,c
  3992   001722  D004               	goto	l2292
  3993   001724  500A               	movf	___lwmod@divisor^0,w,c
  3994   001726  5E08               	subwf	___lwmod@dividend^0,f,c
  3995   001728  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3996   00172A  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  3997   00172C                     l2292:
  3998   00172C  90D8               	bcf	status,0,c
  3999   00172E  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  4000   001730  320A               	rrcf	___lwmod@divisor^0,f,c
  4001   001732  2E0C               	decfsz	___lwmod@counter^0,f,c
  4002   001734  D7F1               	goto	u1520
  4003   001736                     l932:
  4004   001736  C008  F008         	movff	___lwmod@dividend,?___lwmod
  4005   00173A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  4006   00173E  0012               	return		;funcret
  4007   001740                     __end_of___lwmod:
  4008                           	callstack 0
  4009                           
  4010 ;; *************** function ___lwdiv *****************
  4011 ;; Defined at:
  4012 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwdiv.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  dividend        2    0[COMRAM] unsigned int 
  4015 ;;  divisor         2    2[COMRAM] unsigned int 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  quotient        2    4[COMRAM] unsigned int 
  4018 ;;  counter         1    6[COMRAM] unsigned char 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  2    0[COMRAM] unsigned int 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4028 ;;      Params:         4       0       0       0       0       0       0       0       0
  4029 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4031 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4032 ;;Total ram usage:        7 bytes
  4033 ;; Hardware stack levels used: 1
  4034 ;; Hardware stack levels required when called: 1
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_sprintf
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text29
  4043   001616                     __ptext29:
  4044                           	callstack 0
  4045   001616                     ___lwdiv:
  4046                           	callstack 27
  4047                           
  4048                           ;incstack = 0
  4049   001616  0E00               	movlw	0
  4050   001618  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4051   00161A  0E00               	movlw	0
  4052   00161C  6E05               	movwf	___lwdiv@quotient^0,c
  4053   00161E  5003               	movf	___lwdiv@divisor^0,w,c
  4054   001620  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4055   001622  B4D8               	btfsc	status,2,c
  4056   001624  D01C               	goto	l922
  4057   001626  0E01               	movlw	1
  4058   001628  6E07               	movwf	___lwdiv@counter^0,c
  4059   00162A  D004               	goto	l2266
  4060   00162C                     l2264:
  4061   00162C  90D8               	bcf	status,0,c
  4062   00162E  3603               	rlcf	___lwdiv@divisor^0,f,c
  4063   001630  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4064   001632  2A07               	incf	___lwdiv@counter^0,f,c
  4065   001634                     l2266:
  4066   001634  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4067   001636  D7FA               	goto	l2264
  4068   001638                     u1490:
  4069   001638  90D8               	bcf	status,0,c
  4070   00163A  3605               	rlcf	___lwdiv@quotient^0,f,c
  4071   00163C  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4072   00163E  5003               	movf	___lwdiv@divisor^0,w,c
  4073   001640  5C01               	subwf	___lwdiv@dividend^0,w,c
  4074   001642  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4075   001644  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4076   001646  A0D8               	btfss	status,0,c
  4077   001648  D005               	goto	l2276
  4078   00164A  5003               	movf	___lwdiv@divisor^0,w,c
  4079   00164C  5E01               	subwf	___lwdiv@dividend^0,f,c
  4080   00164E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4081   001650  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4082   001652  8005               	bsf	___lwdiv@quotient^0,0,c
  4083   001654                     l2276:
  4084   001654  90D8               	bcf	status,0,c
  4085   001656  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4086   001658  3203               	rrcf	___lwdiv@divisor^0,f,c
  4087   00165A  2E07               	decfsz	___lwdiv@counter^0,f,c
  4088   00165C  D7ED               	goto	u1490
  4089   00165E                     l922:
  4090   00165E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4091   001662  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4092   001666  0012               	return		;funcret
  4093   001668                     __end_of___lwdiv:
  4094                           	callstack 0
  4095                           
  4096 ;; *************** function ___lbtoft *****************
  4097 ;; Defined at:
  4098 ;;		line 27 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbtoft.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  c               1    wreg     unsigned char 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  c               1   11[COMRAM] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  3    8[COMRAM] float 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 3F/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4112 ;;      Params:         3       0       0       0       0       0       0       0       0
  4113 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4115 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4116 ;;Total ram usage:        4 bytes
  4117 ;; Hardware stack levels used: 1
  4118 ;; Hardware stack levels required when called: 2
  4119 ;; This function calls:
  4120 ;;		___ftpack
  4121 ;; This function is called by:
  4122 ;;		_choose_scale_temperature_and_fill_buffers
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text30
  4127   001880                     __ptext30:
  4128                           	callstack 0
  4129   001880                     ___lbtoft:
  4130                           	callstack 27
  4131                           
  4132                           ;incstack = 0
  4133                           ;___lbtoft@c stored from wreg
  4134   001880  6E0C               	movwf	___lbtoft@c^0,c
  4135   001882  500C               	movf	___lbtoft@c^0,w,c
  4136   001884  6E01               	movwf	___ftpack@arg^0,c
  4137   001886  6A02               	clrf	(___ftpack@arg+1)^0,c
  4138   001888  6A03               	clrf	(___ftpack@arg+2)^0,c
  4139   00188A  0E8E               	movlw	142
  4140   00188C  6E04               	movwf	___ftpack@exp^0,c
  4141   00188E  0E00               	movlw	0
  4142   001890  6E05               	movwf	___ftpack@sign^0,c
  4143   001892  EC96  F008         	call	___ftpack	;wreg free
  4144   001896  C001  F009         	movff	?___ftpack,?___lbtoft
  4145   00189A  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  4146   00189E  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  4147   0018A2  0012               	return		;funcret
  4148   0018A4                     __end_of___lbtoft:
  4149                           	callstack 0
  4150                           
  4151 ;; *************** function ___fttol *****************
  4152 ;; Defined at:
  4153 ;;		line 44 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/fttol.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  f1              3   54[COMRAM] float 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  lval            4   64[COMRAM] unsigned long 
  4158 ;;  exp1            1   68[COMRAM] unsigned char 
  4159 ;;  sign1           1   63[COMRAM] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  4   54[COMRAM] long 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4169 ;;      Params:         4       0       0       0       0       0       0       0       0
  4170 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4171 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4172 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4173 ;;Total ram usage:       15 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 1
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_choose_scale_temperature_and_fill_buffers
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text31
  4184   00105A                     __ptext31:
  4185                           	callstack 0
  4186   00105A                     ___fttol:
  4187                           	callstack 28
  4188                           
  4189                           ;incstack = 0
  4190   00105A  C039  F03B         	movff	___fttol@f1+2,??___fttol
  4191   00105E  6A3C               	clrf	(??___fttol+1)^0,c
  4192   001060  6A3D               	clrf	(??___fttol+2)^0,c
  4193   001062  3438               	rlcf	(___fttol@f1+1)^0,w,c
  4194   001064  363B               	rlcf	??___fttol^0,f,c
  4195   001066  E301               	bnc	u2241
  4196   001068  803C               	bsf	(??___fttol+1)^0,0,c
  4197   00106A                     u2241:
  4198   00106A  503B               	movf	??___fttol^0,w,c
  4199   00106C  6E45               	movwf	___fttol@exp1^0,c
  4200   00106E  5045               	movf	___fttol@exp1^0,w,c
  4201   001070  A4D8               	btfss	status,2,c
  4202   001072  D009               	goto	l2722
  4203   001074                     u2250:
  4204   001074  0E00               	movlw	0
  4205   001076  6E37               	movwf	?___fttol^0,c
  4206   001078  0E00               	movlw	0
  4207   00107A  6E38               	movwf	(?___fttol+1)^0,c
  4208   00107C  0E00               	movlw	0
  4209   00107E  6E39               	movwf	(?___fttol+2)^0,c
  4210   001080  0E00               	movlw	0
  4211   001082  6E3A               	movwf	(?___fttol+3)^0,c
  4212   001084  0012               	return	
  4213   001086                     l2722:
  4214   001086  0E17               	movlw	23
  4215   001088  6E3B               	movwf	??___fttol^0,c
  4216   00108A  C037  F03C         	movff	___fttol@f1,??___fttol+1
  4217   00108E  C038  F03D         	movff	___fttol@f1+1,??___fttol+2
  4218   001092  C039  F03E         	movff	___fttol@f1+2,??___fttol+3
  4219   001096  283B               	incf	??___fttol^0,w,c
  4220   001098  6E3F               	movwf	(??___fttol+4)^0,c
  4221   00109A  D004               	goto	u2260
  4222   00109C                     u2265:
  4223   00109C  90D8               	bcf	status,0,c
  4224   00109E  323E               	rrcf	(??___fttol+3)^0,f,c
  4225   0010A0  323D               	rrcf	(??___fttol+2)^0,f,c
  4226   0010A2  323C               	rrcf	(??___fttol+1)^0,f,c
  4227   0010A4                     u2260:
  4228   0010A4  2E3F               	decfsz	(??___fttol+4)^0,f,c
  4229   0010A6  D7FA               	goto	u2265
  4230   0010A8  503C               	movf	(??___fttol+1)^0,w,c
  4231   0010AA  6E40               	movwf	___fttol@sign1^0,c
  4232   0010AC  8E38               	bsf	(___fttol@f1+1)^0,7,c
  4233   0010AE  0EFF               	movlw	255
  4234   0010B0  1637               	andwf	___fttol@f1^0,f,c
  4235   0010B2  0EFF               	movlw	255
  4236   0010B4  1638               	andwf	(___fttol@f1+1)^0,f,c
  4237   0010B6  0E00               	movlw	0
  4238   0010B8  1639               	andwf	(___fttol@f1+2)^0,f,c
  4239   0010BA  5037               	movf	___fttol@f1^0,w,c
  4240   0010BC  6E41               	movwf	___fttol@lval^0,c
  4241   0010BE  5038               	movf	(___fttol@f1+1)^0,w,c
  4242   0010C0  6E42               	movwf	(___fttol@lval+1)^0,c
  4243   0010C2  5039               	movf	(___fttol@f1+2)^0,w,c
  4244   0010C4  6E43               	movwf	(___fttol@lval+2)^0,c
  4245   0010C6  6A44               	clrf	(___fttol@lval+3)^0,c
  4246   0010C8  0E8E               	movlw	142
  4247   0010CA  5E45               	subwf	___fttol@exp1^0,f,c
  4248   0010CC  AE45               	btfss	___fttol@exp1^0,7,c
  4249   0010CE  D00D               	goto	l2744
  4250   0010D0  5045               	movf	___fttol@exp1^0,w,c
  4251   0010D2  0A80               	xorlw	128
  4252   0010D4  0F8F               	addlw	143
  4253   0010D6  A0D8               	btfss	status,0,c
  4254   0010D8  D7CD               	goto	u2250
  4255   0010DA                     l2740:
  4256   0010DA  90D8               	bcf	status,0,c
  4257   0010DC  3244               	rrcf	(___fttol@lval+3)^0,f,c
  4258   0010DE  3243               	rrcf	(___fttol@lval+2)^0,f,c
  4259   0010E0  3242               	rrcf	(___fttol@lval+1)^0,f,c
  4260   0010E2  3241               	rrcf	___fttol@lval^0,f,c
  4261   0010E4  3E45               	incfsz	___fttol@exp1^0,f,c
  4262   0010E6  D7F9               	goto	l2740
  4263   0010E8  D00D               	goto	u2300
  4264   0010EA                     l2744:
  4265   0010EA  0E17               	movlw	23
  4266   0010EC  6445               	cpfsgt	___fttol@exp1^0,c
  4267   0010EE  D007               	goto	l2752
  4268   0010F0  D7C1               	goto	u2250
  4269   0010F2                     l2750:
  4270   0010F2  90D8               	bcf	status,0,c
  4271   0010F4  3641               	rlcf	___fttol@lval^0,f,c
  4272   0010F6  3642               	rlcf	(___fttol@lval+1)^0,f,c
  4273   0010F8  3643               	rlcf	(___fttol@lval+2)^0,f,c
  4274   0010FA  3644               	rlcf	(___fttol@lval+3)^0,f,c
  4275   0010FC  0645               	decf	___fttol@exp1^0,f,c
  4276   0010FE                     l2752:
  4277   0010FE  5045               	movf	___fttol@exp1^0,w,c
  4278   001100  A4D8               	btfss	status,2,c
  4279   001102  D7F7               	goto	l2750
  4280   001104                     u2300:
  4281   001104  5040               	movf	___fttol@sign1^0,w,c
  4282   001106  B4D8               	btfsc	status,2,c
  4283   001108  D008               	goto	l2758
  4284   00110A  1E44               	comf	(___fttol@lval+3)^0,f,c
  4285   00110C  1E43               	comf	(___fttol@lval+2)^0,f,c
  4286   00110E  1E42               	comf	(___fttol@lval+1)^0,f,c
  4287   001110  6C41               	negf	___fttol@lval^0,c
  4288   001112  0E00               	movlw	0
  4289   001114  2242               	addwfc	(___fttol@lval+1)^0,f,c
  4290   001116  2243               	addwfc	(___fttol@lval+2)^0,f,c
  4291   001118  2244               	addwfc	(___fttol@lval+3)^0,f,c
  4292   00111A                     l2758:
  4293   00111A  C041  F037         	movff	___fttol@lval,?___fttol
  4294   00111E  C042  F038         	movff	___fttol@lval+1,?___fttol+1
  4295   001122  C043  F039         	movff	___fttol@lval+2,?___fttol+2
  4296   001126  C044  F03A         	movff	___fttol@lval+3,?___fttol+3
  4297   00112A  0012               	return		;funcret
  4298   00112C                     __end_of___fttol:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function ___ftmul *****************
  4302 ;; Defined at:
  4303 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftmul.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  f1              3   12[COMRAM] float 
  4306 ;;  f2              3   15[COMRAM] float 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  4309 ;;  sign            1   26[COMRAM] unsigned char 
  4310 ;;  cntr            1   25[COMRAM] unsigned char 
  4311 ;;  exp             1   21[COMRAM] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  3   12[COMRAM] float 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4321 ;;      Params:         6       0       0       0       0       0       0       0       0
  4322 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4323 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4324 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4325 ;;Total ram usage:       15 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; Hardware stack levels required when called: 2
  4328 ;; This function calls:
  4329 ;;		___ftpack
  4330 ;; This function is called by:
  4331 ;;		_choose_scale_temperature_and_fill_buffers
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text32
  4336   000D9A                     __ptext32:
  4337                           	callstack 0
  4338   000D9A                     ___ftmul:
  4339                           	callstack 27
  4340                           
  4341                           ;incstack = 0
  4342   000D9A  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  4343   000D9E  6A14               	clrf	(??___ftmul+1)^0,c
  4344   000DA0  6A15               	clrf	(??___ftmul+2)^0,c
  4345   000DA2  340E               	rlcf	(___ftmul@f1+1)^0,w,c
  4346   000DA4  3613               	rlcf	??___ftmul^0,f,c
  4347   000DA6  E301               	bnc	u2181
  4348   000DA8  8014               	bsf	(??___ftmul+1)^0,0,c
  4349   000DAA                     u2181:
  4350   000DAA  5013               	movf	??___ftmul^0,w,c
  4351   000DAC  6E16               	movwf	___ftmul@exp^0,c
  4352   000DAE  5016               	movf	___ftmul@exp^0,w,c
  4353   000DB0  A4D8               	btfss	status,2,c
  4354   000DB2  D007               	goto	l2674
  4355   000DB4  0E00               	movlw	0
  4356   000DB6  6E0D               	movwf	?___ftmul^0,c
  4357   000DB8  0E00               	movlw	0
  4358   000DBA  6E0E               	movwf	(?___ftmul+1)^0,c
  4359   000DBC  0E00               	movlw	0
  4360   000DBE  6E0F               	movwf	(?___ftmul+2)^0,c
  4361   000DC0  0012               	return	
  4362   000DC2                     l2674:
  4363   000DC2  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  4364   000DC6  6A14               	clrf	(??___ftmul+1)^0,c
  4365   000DC8  6A15               	clrf	(??___ftmul+2)^0,c
  4366   000DCA  3411               	rlcf	(___ftmul@f2+1)^0,w,c
  4367   000DCC  3613               	rlcf	??___ftmul^0,f,c
  4368   000DCE  E301               	bnc	u2201
  4369   000DD0  8014               	bsf	(??___ftmul+1)^0,0,c
  4370   000DD2                     u2201:
  4371   000DD2  5013               	movf	??___ftmul^0,w,c
  4372   000DD4  6E1B               	movwf	___ftmul@sign^0,c
  4373   000DD6  501B               	movf	___ftmul@sign^0,w,c
  4374   000DD8  A4D8               	btfss	status,2,c
  4375   000DDA  D007               	goto	l2680
  4376   000DDC  0E00               	movlw	0
  4377   000DDE  6E0D               	movwf	?___ftmul^0,c
  4378   000DE0  0E00               	movlw	0
  4379   000DE2  6E0E               	movwf	(?___ftmul+1)^0,c
  4380   000DE4  0E00               	movlw	0
  4381   000DE6  6E0F               	movwf	(?___ftmul+2)^0,c
  4382   000DE8  0012               	return	
  4383   000DEA                     l2680:
  4384   000DEA  501B               	movf	___ftmul@sign^0,w,c
  4385   000DEC  0F7B               	addlw	123
  4386   000DEE  2616               	addwf	___ftmul@exp^0,f,c
  4387   000DF0  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  4388   000DF4  5012               	movf	(___ftmul@f2+2)^0,w,c
  4389   000DF6  1A1B               	xorwf	___ftmul@sign^0,f,c
  4390   000DF8  0E80               	movlw	128
  4391   000DFA  161B               	andwf	___ftmul@sign^0,f,c
  4392   000DFC  8E0E               	bsf	(___ftmul@f1+1)^0,7,c
  4393   000DFE  8E11               	bsf	(___ftmul@f2+1)^0,7,c
  4394   000E00  0EFF               	movlw	255
  4395   000E02  1610               	andwf	___ftmul@f2^0,f,c
  4396   000E04  0EFF               	movlw	255
  4397   000E06  1611               	andwf	(___ftmul@f2+1)^0,f,c
  4398   000E08  0E00               	movlw	0
  4399   000E0A  1612               	andwf	(___ftmul@f2+2)^0,f,c
  4400   000E0C  0E00               	movlw	0
  4401   000E0E  6E17               	movwf	___ftmul@f3_as_product^0,c
  4402   000E10  0E00               	movlw	0
  4403   000E12  6E18               	movwf	(___ftmul@f3_as_product+1)^0,c
  4404   000E14  0E00               	movlw	0
  4405   000E16  6E19               	movwf	(___ftmul@f3_as_product+2)^0,c
  4406   000E18  0E07               	movlw	7
  4407   000E1A  6E1A               	movwf	___ftmul@cntr^0,c
  4408   000E1C                     l2694:
  4409   000E1C  A00D               	btfss	___ftmul@f1^0,0,c
  4410   000E1E  D006               	goto	l2698
  4411   000E20  5010               	movf	___ftmul@f2^0,w,c
  4412   000E22  2617               	addwf	___ftmul@f3_as_product^0,f,c
  4413   000E24  5011               	movf	(___ftmul@f2+1)^0,w,c
  4414   000E26  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4415   000E28  5012               	movf	(___ftmul@f2+2)^0,w,c
  4416   000E2A  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4417   000E2C                     l2698:
  4418   000E2C  90D8               	bcf	status,0,c
  4419   000E2E  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  4420   000E30  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  4421   000E32  320D               	rrcf	___ftmul@f1^0,f,c
  4422   000E34  90D8               	bcf	status,0,c
  4423   000E36  3610               	rlcf	___ftmul@f2^0,f,c
  4424   000E38  3611               	rlcf	(___ftmul@f2+1)^0,f,c
  4425   000E3A  3612               	rlcf	(___ftmul@f2+2)^0,f,c
  4426   000E3C  2E1A               	decfsz	___ftmul@cntr^0,f,c
  4427   000E3E  D7EE               	goto	l2694
  4428   000E40  0E09               	movlw	9
  4429   000E42  6E1A               	movwf	___ftmul@cntr^0,c
  4430   000E44                     l2704:
  4431   000E44  A00D               	btfss	___ftmul@f1^0,0,c
  4432   000E46  D006               	goto	l2708
  4433   000E48  5010               	movf	___ftmul@f2^0,w,c
  4434   000E4A  2617               	addwf	___ftmul@f3_as_product^0,f,c
  4435   000E4C  5011               	movf	(___ftmul@f2+1)^0,w,c
  4436   000E4E  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4437   000E50  5012               	movf	(___ftmul@f2+2)^0,w,c
  4438   000E52  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4439   000E54                     l2708:
  4440   000E54  90D8               	bcf	status,0,c
  4441   000E56  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  4442   000E58  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  4443   000E5A  320D               	rrcf	___ftmul@f1^0,f,c
  4444   000E5C  90D8               	bcf	status,0,c
  4445   000E5E  3219               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  4446   000E60  3218               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  4447   000E62  3217               	rrcf	___ftmul@f3_as_product^0,f,c
  4448   000E64  2E1A               	decfsz	___ftmul@cntr^0,f,c
  4449   000E66  D7EE               	goto	l2704
  4450   000E68  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4451   000E6C  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4452   000E70  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4453   000E74  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  4454   000E78  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  4455   000E7C  EC96  F008         	call	___ftpack	;wreg free
  4456   000E80  C001  F00D         	movff	?___ftpack,?___ftmul
  4457   000E84  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  4458   000E88  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  4459   000E8C  0012               	return		;funcret
  4460   000E8E                     __end_of___ftmul:
  4461                           	callstack 0
  4462                           
  4463 ;; *************** function ___ftdiv *****************
  4464 ;; Defined at:
  4465 ;;		line 54 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftdiv.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  f1              3   27[COMRAM] float 
  4468 ;;  f2              3   30[COMRAM] float 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  f3              3   37[COMRAM] float 
  4471 ;;  sign            1   41[COMRAM] unsigned char 
  4472 ;;  exp             1   40[COMRAM] unsigned char 
  4473 ;;  cntr            1   36[COMRAM] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  3   27[COMRAM] float 
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4483 ;;      Params:         6       0       0       0       0       0       0       0       0
  4484 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4485 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4486 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4487 ;;Total ram usage:       15 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; Hardware stack levels required when called: 2
  4490 ;; This function calls:
  4491 ;;		___ftpack
  4492 ;; This function is called by:
  4493 ;;		_choose_scale_temperature_and_fill_buffers
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           	psect	text33
  4498   000F74                     __ptext33:
  4499                           	callstack 0
  4500   000F74                     ___ftdiv:
  4501                           	callstack 27
  4502                           
  4503                           ;incstack = 0
  4504   000F74  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  4505   000F78  6A23               	clrf	(??___ftdiv+1)^0,c
  4506   000F7A  6A24               	clrf	(??___ftdiv+2)^0,c
  4507   000F7C  341D               	rlcf	(___ftdiv@f1+1)^0,w,c
  4508   000F7E  3622               	rlcf	??___ftdiv^0,f,c
  4509   000F80  E301               	bnc	u2131
  4510   000F82  8023               	bsf	(??___ftdiv+1)^0,0,c
  4511   000F84                     u2131:
  4512   000F84  5022               	movf	??___ftdiv^0,w,c
  4513   000F86  6E29               	movwf	___ftdiv@exp^0,c
  4514   000F88  5029               	movf	___ftdiv@exp^0,w,c
  4515   000F8A  A4D8               	btfss	status,2,c
  4516   000F8C  D007               	goto	l2628
  4517   000F8E  0E00               	movlw	0
  4518   000F90  6E1C               	movwf	?___ftdiv^0,c
  4519   000F92  0E00               	movlw	0
  4520   000F94  6E1D               	movwf	(?___ftdiv+1)^0,c
  4521   000F96  0E00               	movlw	0
  4522   000F98  6E1E               	movwf	(?___ftdiv+2)^0,c
  4523   000F9A  0012               	return	
  4524   000F9C                     l2628:
  4525   000F9C  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  4526   000FA0  6A23               	clrf	(??___ftdiv+1)^0,c
  4527   000FA2  6A24               	clrf	(??___ftdiv+2)^0,c
  4528   000FA4  3420               	rlcf	(___ftdiv@f2+1)^0,w,c
  4529   000FA6  3622               	rlcf	??___ftdiv^0,f,c
  4530   000FA8  E301               	bnc	u2151
  4531   000FAA  8023               	bsf	(??___ftdiv+1)^0,0,c
  4532   000FAC                     u2151:
  4533   000FAC  5022               	movf	??___ftdiv^0,w,c
  4534   000FAE  6E2A               	movwf	___ftdiv@sign^0,c
  4535   000FB0  502A               	movf	___ftdiv@sign^0,w,c
  4536   000FB2  A4D8               	btfss	status,2,c
  4537   000FB4  D007               	goto	l2634
  4538   000FB6  0E00               	movlw	0
  4539   000FB8  6E1C               	movwf	?___ftdiv^0,c
  4540   000FBA  0E00               	movlw	0
  4541   000FBC  6E1D               	movwf	(?___ftdiv+1)^0,c
  4542   000FBE  0E00               	movlw	0
  4543   000FC0  6E1E               	movwf	(?___ftdiv+2)^0,c
  4544   000FC2  0012               	return	
  4545   000FC4                     l2634:
  4546   000FC4  0E00               	movlw	0
  4547   000FC6  6E26               	movwf	___ftdiv@f3^0,c
  4548   000FC8  0E00               	movlw	0
  4549   000FCA  6E27               	movwf	(___ftdiv@f3+1)^0,c
  4550   000FCC  0E00               	movlw	0
  4551   000FCE  6E28               	movwf	(___ftdiv@f3+2)^0,c
  4552   000FD0  502A               	movf	___ftdiv@sign^0,w,c
  4553   000FD2  0F89               	addlw	137
  4554   000FD4  5E29               	subwf	___ftdiv@exp^0,f,c
  4555   000FD6  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  4556   000FDA  5021               	movf	(___ftdiv@f2+2)^0,w,c
  4557   000FDC  1A2A               	xorwf	___ftdiv@sign^0,f,c
  4558   000FDE  0E80               	movlw	128
  4559   000FE0  162A               	andwf	___ftdiv@sign^0,f,c
  4560   000FE2  8E1D               	bsf	(___ftdiv@f1+1)^0,7,c
  4561   000FE4  0EFF               	movlw	255
  4562   000FE6  161C               	andwf	___ftdiv@f1^0,f,c
  4563   000FE8  0EFF               	movlw	255
  4564   000FEA  161D               	andwf	(___ftdiv@f1+1)^0,f,c
  4565   000FEC  0E00               	movlw	0
  4566   000FEE  161E               	andwf	(___ftdiv@f1+2)^0,f,c
  4567   000FF0  8E20               	bsf	(___ftdiv@f2+1)^0,7,c
  4568   000FF2  0EFF               	movlw	255
  4569   000FF4  161F               	andwf	___ftdiv@f2^0,f,c
  4570   000FF6  0EFF               	movlw	255
  4571   000FF8  1620               	andwf	(___ftdiv@f2+1)^0,f,c
  4572   000FFA  0E00               	movlw	0
  4573   000FFC  1621               	andwf	(___ftdiv@f2+2)^0,f,c
  4574   000FFE  0E18               	movlw	24
  4575   001000  6E25               	movwf	___ftdiv@cntr^0,c
  4576   001002                     l2654:
  4577   001002  90D8               	bcf	status,0,c
  4578   001004  3626               	rlcf	___ftdiv@f3^0,f,c
  4579   001006  3627               	rlcf	(___ftdiv@f3+1)^0,f,c
  4580   001008  3628               	rlcf	(___ftdiv@f3+2)^0,f,c
  4581   00100A  501F               	movf	___ftdiv@f2^0,w,c
  4582   00100C  5C1C               	subwf	___ftdiv@f1^0,w,c
  4583   00100E  5020               	movf	(___ftdiv@f2+1)^0,w,c
  4584   001010  581D               	subwfb	(___ftdiv@f1+1)^0,w,c
  4585   001012  5021               	movf	(___ftdiv@f2+2)^0,w,c
  4586   001014  581E               	subwfb	(___ftdiv@f1+2)^0,w,c
  4587   001016  A0D8               	btfss	status,0,c
  4588   001018  D007               	goto	l784
  4589   00101A  501F               	movf	___ftdiv@f2^0,w,c
  4590   00101C  5E1C               	subwf	___ftdiv@f1^0,f,c
  4591   00101E  5020               	movf	(___ftdiv@f2+1)^0,w,c
  4592   001020  5A1D               	subwfb	(___ftdiv@f1+1)^0,f,c
  4593   001022  5021               	movf	(___ftdiv@f2+2)^0,w,c
  4594   001024  5A1E               	subwfb	(___ftdiv@f1+2)^0,f,c
  4595   001026  8026               	bsf	___ftdiv@f3^0,0,c
  4596   001028                     l784:
  4597   001028  90D8               	bcf	status,0,c
  4598   00102A  361C               	rlcf	___ftdiv@f1^0,f,c
  4599   00102C  361D               	rlcf	(___ftdiv@f1+1)^0,f,c
  4600   00102E  361E               	rlcf	(___ftdiv@f1+2)^0,f,c
  4601   001030  2E25               	decfsz	___ftdiv@cntr^0,f,c
  4602   001032  D7E7               	goto	l2654
  4603   001034  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  4604   001038  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4605   00103C  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4606   001040  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  4607   001044  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  4608   001048  EC96  F008         	call	___ftpack	;wreg free
  4609   00104C  C001  F01C         	movff	?___ftpack,?___ftdiv
  4610   001050  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  4611   001054  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  4612   001058  0012               	return		;funcret
  4613   00105A                     __end_of___ftdiv:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function ___ftadd *****************
  4617 ;; Defined at:
  4618 ;;		line 86 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftadd.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  f1              3   42[COMRAM] float 
  4621 ;;  f2              3   45[COMRAM] float 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  exp1            1   53[COMRAM] unsigned char 
  4624 ;;  exp2            1   52[COMRAM] unsigned char 
  4625 ;;  sign            1   51[COMRAM] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  3   42[COMRAM] float 
  4628 ;; Registers used:
  4629 ;;		wreg, status,2, status,0, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4635 ;;      Params:         6       0       0       0       0       0       0       0       0
  4636 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4637 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4638 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4639 ;;Total ram usage:       12 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; Hardware stack levels required when called: 2
  4642 ;; This function calls:
  4643 ;;		___ftpack
  4644 ;; This function is called by:
  4645 ;;		_choose_scale_temperature_and_fill_buffers
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text34
  4650   000AA6                     __ptext34:
  4651                           	callstack 0
  4652   000AA6                     ___ftadd:
  4653                           	callstack 27
  4654                           
  4655                           ;incstack = 0
  4656   000AA6  C02D  F031         	movff	___ftadd@f1+2,??___ftadd
  4657   000AAA  6A32               	clrf	(??___ftadd+1)^0,c
  4658   000AAC  6A33               	clrf	(??___ftadd+2)^0,c
  4659   000AAE  342C               	rlcf	(___ftadd@f1+1)^0,w,c
  4660   000AB0  3631               	rlcf	??___ftadd^0,f,c
  4661   000AB2  E301               	bnc	u1921
  4662   000AB4  8032               	bsf	(??___ftadd+1)^0,0,c
  4663   000AB6                     u1921:
  4664   000AB6  5031               	movf	??___ftadd^0,w,c
  4665   000AB8  6E36               	movwf	___ftadd@exp1^0,c
  4666   000ABA  C030  F031         	movff	___ftadd@f2+2,??___ftadd
  4667   000ABE  6A32               	clrf	(??___ftadd+1)^0,c
  4668   000AC0  6A33               	clrf	(??___ftadd+2)^0,c
  4669   000AC2  342F               	rlcf	(___ftadd@f2+1)^0,w,c
  4670   000AC4  3631               	rlcf	??___ftadd^0,f,c
  4671   000AC6  E301               	bnc	u1931
  4672   000AC8  8032               	bsf	(??___ftadd+1)^0,0,c
  4673   000ACA                     u1931:
  4674   000ACA  5031               	movf	??___ftadd^0,w,c
  4675   000ACC  6E35               	movwf	___ftadd@exp2^0,c
  4676   000ACE  5036               	movf	___ftadd@exp1^0,w,c
  4677   000AD0  B4D8               	btfsc	status,2,c
  4678   000AD2  D00A               	goto	u1960
  4679   000AD4  5035               	movf	___ftadd@exp2^0,w,c
  4680   000AD6  5C36               	subwf	___ftadd@exp1^0,w,c
  4681   000AD8  B0D8               	btfsc	status,0,c
  4682   000ADA  D00D               	goto	l2560
  4683   000ADC  5036               	movf	___ftadd@exp1^0,w,c
  4684   000ADE  5C35               	subwf	___ftadd@exp2^0,w,c
  4685   000AE0  6E31               	movwf	??___ftadd^0,c
  4686   000AE2  0E18               	movlw	24
  4687   000AE4  6431               	cpfsgt	??___ftadd^0,c
  4688   000AE6  D007               	goto	l2560
  4689   000AE8                     u1960:
  4690   000AE8  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  4691   000AEC  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  4692   000AF0  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  4693   000AF4  0012               	return	
  4694   000AF6                     l2560:
  4695   000AF6  5035               	movf	___ftadd@exp2^0,w,c
  4696   000AF8  B4D8               	btfsc	status,2,c
  4697   000AFA  D00A               	goto	u1990
  4698   000AFC  5036               	movf	___ftadd@exp1^0,w,c
  4699   000AFE  5C35               	subwf	___ftadd@exp2^0,w,c
  4700   000B00  B0D8               	btfsc	status,0,c
  4701   000B02  D00D               	goto	l2566
  4702   000B04  5035               	movf	___ftadd@exp2^0,w,c
  4703   000B06  5C36               	subwf	___ftadd@exp1^0,w,c
  4704   000B08  6E31               	movwf	??___ftadd^0,c
  4705   000B0A  0E18               	movlw	24
  4706   000B0C  6431               	cpfsgt	??___ftadd^0,c
  4707   000B0E  D007               	goto	l2566
  4708   000B10                     u1990:
  4709   000B10  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  4710   000B14  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  4711   000B18  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  4712   000B1C  0012               	return	
  4713   000B1E                     l2566:
  4714   000B1E  0E06               	movlw	6
  4715   000B20  6E34               	movwf	___ftadd@sign^0,c
  4716   000B22  BE2D               	btfsc	(___ftadd@f1+2)^0,7,c
  4717   000B24  8E34               	bsf	___ftadd@sign^0,7,c
  4718   000B26  BE30               	btfsc	(___ftadd@f2+2)^0,7,c
  4719   000B28  8C34               	bsf	___ftadd@sign^0,6,c
  4720   000B2A  8E2C               	bsf	(___ftadd@f1+1)^0,7,c
  4721   000B2C  0EFF               	movlw	255
  4722   000B2E  162B               	andwf	___ftadd@f1^0,f,c
  4723   000B30  0EFF               	movlw	255
  4724   000B32  162C               	andwf	(___ftadd@f1+1)^0,f,c
  4725   000B34  0E00               	movlw	0
  4726   000B36  162D               	andwf	(___ftadd@f1+2)^0,f,c
  4727   000B38  8E2F               	bsf	(___ftadd@f2+1)^0,7,c
  4728   000B3A  0EFF               	movlw	255
  4729   000B3C  162E               	andwf	___ftadd@f2^0,f,c
  4730   000B3E  0EFF               	movlw	255
  4731   000B40  162F               	andwf	(___ftadd@f2+1)^0,f,c
  4732   000B42  0E00               	movlw	0
  4733   000B44  1630               	andwf	(___ftadd@f2+2)^0,f,c
  4734   000B46  5035               	movf	___ftadd@exp2^0,w,c
  4735   000B48  5C36               	subwf	___ftadd@exp1^0,w,c
  4736   000B4A  B0D8               	btfsc	status,0,c
  4737   000B4C  D01B               	goto	l2592
  4738   000B4E                     u2020:
  4739   000B4E  90D8               	bcf	status,0,c
  4740   000B50  362E               	rlcf	___ftadd@f2^0,f,c
  4741   000B52  362F               	rlcf	(___ftadd@f2+1)^0,f,c
  4742   000B54  3630               	rlcf	(___ftadd@f2+2)^0,f,c
  4743   000B56  0635               	decf	___ftadd@exp2^0,f,c
  4744   000B58  5036               	movf	___ftadd@exp1^0,w,c
  4745   000B5A  1835               	xorwf	___ftadd@exp2^0,w,c
  4746   000B5C  B4D8               	btfsc	status,2,c
  4747   000B5E  D00D               	goto	l2590
  4748   000B60  0634               	decf	___ftadd@sign^0,f,c
  4749   000B62  C034  F031         	movff	___ftadd@sign,??___ftadd
  4750   000B66  0E07               	movlw	7
  4751   000B68  1631               	andwf	??___ftadd^0,f,c
  4752   000B6A  B4D8               	btfsc	status,2,c
  4753   000B6C  D006               	goto	l2590
  4754   000B6E  D7EF               	goto	u2020
  4755   000B70                     l2588:
  4756   000B70  90D8               	bcf	status,0,c
  4757   000B72  322D               	rrcf	(___ftadd@f1+2)^0,f,c
  4758   000B74  322C               	rrcf	(___ftadd@f1+1)^0,f,c
  4759   000B76  322B               	rrcf	___ftadd@f1^0,f,c
  4760   000B78  2A36               	incf	___ftadd@exp1^0,f,c
  4761   000B7A                     l2590:
  4762   000B7A  5035               	movf	___ftadd@exp2^0,w,c
  4763   000B7C  1836               	xorwf	___ftadd@exp1^0,w,c
  4764   000B7E  B4D8               	btfsc	status,2,c
  4765   000B80  D01F               	goto	u2090
  4766   000B82  D7F6               	goto	l2588
  4767   000B84                     l2592:
  4768   000B84  5036               	movf	___ftadd@exp1^0,w,c
  4769   000B86  5C35               	subwf	___ftadd@exp2^0,w,c
  4770   000B88  B0D8               	btfsc	status,0,c
  4771   000B8A  D01A               	goto	u2090
  4772   000B8C                     u2060:
  4773   000B8C  90D8               	bcf	status,0,c
  4774   000B8E  362B               	rlcf	___ftadd@f1^0,f,c
  4775   000B90  362C               	rlcf	(___ftadd@f1+1)^0,f,c
  4776   000B92  362D               	rlcf	(___ftadd@f1+2)^0,f,c
  4777   000B94  0636               	decf	___ftadd@exp1^0,f,c
  4778   000B96  5036               	movf	___ftadd@exp1^0,w,c
  4779   000B98  1835               	xorwf	___ftadd@exp2^0,w,c
  4780   000B9A  B4D8               	btfsc	status,2,c
  4781   000B9C  D00D               	goto	l2602
  4782   000B9E  0634               	decf	___ftadd@sign^0,f,c
  4783   000BA0  C034  F031         	movff	___ftadd@sign,??___ftadd
  4784   000BA4  0E07               	movlw	7
  4785   000BA6  1631               	andwf	??___ftadd^0,f,c
  4786   000BA8  B4D8               	btfsc	status,2,c
  4787   000BAA  D006               	goto	l2602
  4788   000BAC  D7EF               	goto	u2060
  4789   000BAE                     l2600:
  4790   000BAE  90D8               	bcf	status,0,c
  4791   000BB0  3230               	rrcf	(___ftadd@f2+2)^0,f,c
  4792   000BB2  322F               	rrcf	(___ftadd@f2+1)^0,f,c
  4793   000BB4  322E               	rrcf	___ftadd@f2^0,f,c
  4794   000BB6  2A35               	incf	___ftadd@exp2^0,f,c
  4795   000BB8                     l2602:
  4796   000BB8  5035               	movf	___ftadd@exp2^0,w,c
  4797   000BBA  1836               	xorwf	___ftadd@exp1^0,w,c
  4798   000BBC  A4D8               	btfss	status,2,c
  4799   000BBE  D7F7               	goto	l2600
  4800   000BC0                     u2090:
  4801   000BC0  AE34               	btfss	___ftadd@sign^0,7,c
  4802   000BC2  D00C               	goto	l773
  4803   000BC4  0EFF               	movlw	255
  4804   000BC6  1A2B               	xorwf	___ftadd@f1^0,f,c
  4805   000BC8  0EFF               	movlw	255
  4806   000BCA  1A2C               	xorwf	(___ftadd@f1+1)^0,f,c
  4807   000BCC  0EFF               	movlw	255
  4808   000BCE  1A2D               	xorwf	(___ftadd@f1+2)^0,f,c
  4809   000BD0  0E01               	movlw	1
  4810   000BD2  262B               	addwf	___ftadd@f1^0,f,c
  4811   000BD4  0E00               	movlw	0
  4812   000BD6  222C               	addwfc	(___ftadd@f1+1)^0,f,c
  4813   000BD8  0E00               	movlw	0
  4814   000BDA  222D               	addwfc	(___ftadd@f1+2)^0,f,c
  4815   000BDC                     l773:
  4816   000BDC  AC34               	btfss	___ftadd@sign^0,6,c
  4817   000BDE  D00C               	goto	l2608
  4818   000BE0  0EFF               	movlw	255
  4819   000BE2  1A2E               	xorwf	___ftadd@f2^0,f,c
  4820   000BE4  0EFF               	movlw	255
  4821   000BE6  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  4822   000BE8  0EFF               	movlw	255
  4823   000BEA  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  4824   000BEC  0E01               	movlw	1
  4825   000BEE  262E               	addwf	___ftadd@f2^0,f,c
  4826   000BF0  0E00               	movlw	0
  4827   000BF2  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  4828   000BF4  0E00               	movlw	0
  4829   000BF6  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  4830   000BF8                     l2608:
  4831   000BF8  0E00               	movlw	0
  4832   000BFA  6E34               	movwf	___ftadd@sign^0,c
  4833   000BFC  502B               	movf	___ftadd@f1^0,w,c
  4834   000BFE  262E               	addwf	___ftadd@f2^0,f,c
  4835   000C00  502C               	movf	(___ftadd@f1+1)^0,w,c
  4836   000C02  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  4837   000C04  502D               	movf	(___ftadd@f1+2)^0,w,c
  4838   000C06  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  4839   000C08  AE30               	btfss	(___ftadd@f2+2)^0,7,c
  4840   000C0A  D00E               	goto	l2618
  4841   000C0C  0EFF               	movlw	255
  4842   000C0E  1A2E               	xorwf	___ftadd@f2^0,f,c
  4843   000C10  0EFF               	movlw	255
  4844   000C12  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  4845   000C14  0EFF               	movlw	255
  4846   000C16  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  4847   000C18  0E01               	movlw	1
  4848   000C1A  262E               	addwf	___ftadd@f2^0,f,c
  4849   000C1C  0E00               	movlw	0
  4850   000C1E  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  4851   000C20  0E00               	movlw	0
  4852   000C22  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  4853   000C24  0E01               	movlw	1
  4854   000C26  6E34               	movwf	___ftadd@sign^0,c
  4855   000C28                     l2618:
  4856   000C28  C02E  F001         	movff	___ftadd@f2,___ftpack@arg
  4857   000C2C  C02F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4858   000C30  C030  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4859   000C34  C036  F004         	movff	___ftadd@exp1,___ftpack@exp
  4860   000C38  C034  F005         	movff	___ftadd@sign,___ftpack@sign
  4861   000C3C  EC96  F008         	call	___ftpack	;wreg free
  4862   000C40  C001  F02B         	movff	?___ftpack,?___ftadd
  4863   000C44  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  4864   000C48  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  4865   000C4C  0012               	return		;funcret
  4866   000C4E                     __end_of___ftadd:
  4867                           	callstack 0
  4868                           
  4869 ;; *************** function ___ftpack *****************
  4870 ;; Defined at:
  4871 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/float.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  arg             3    0[COMRAM] unsigned um
  4874 ;;  exp             1    3[COMRAM] unsigned char 
  4875 ;;  sign            1    4[COMRAM] unsigned char 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  3    0[COMRAM] float 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4887 ;;      Params:         5       0       0       0       0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4889 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4890 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4891 ;;Total ram usage:        8 bytes
  4892 ;; Hardware stack levels used: 1
  4893 ;; Hardware stack levels required when called: 1
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		___ftadd
  4898 ;;		___ftdiv
  4899 ;;		___ftmul
  4900 ;;		___lbtoft
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text35
  4905   00112C                     __ptext35:
  4906                           	callstack 0
  4907   00112C                     ___ftpack:
  4908                           	callstack 27
  4909                           
  4910                           ;incstack = 0
  4911   00112C  5004               	movf	___ftpack@exp^0,w,c
  4912   00112E  B4D8               	btfsc	status,2,c
  4913   001130  D005               	goto	u1370
  4914   001132  5001               	movf	___ftpack@arg^0,w,c
  4915   001134  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  4916   001136  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  4917   001138  A4D8               	btfss	status,2,c
  4918   00113A  D00C               	goto	l2190
  4919   00113C                     u1370:
  4920   00113C  0E00               	movlw	0
  4921   00113E  6E01               	movwf	?___ftpack^0,c
  4922   001140  0E00               	movlw	0
  4923   001142  6E02               	movwf	(?___ftpack+1)^0,c
  4924   001144  0E00               	movlw	0
  4925   001146  6E03               	movwf	(?___ftpack+2)^0,c
  4926   001148  0012               	return	
  4927   00114A                     l2188:
  4928   00114A  2A04               	incf	___ftpack@exp^0,f,c
  4929   00114C  90D8               	bcf	status,0,c
  4930   00114E  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  4931   001150  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  4932   001152  3201               	rrcf	___ftpack@arg^0,f,c
  4933   001154                     l2190:
  4934   001154  0E00               	movlw	0
  4935   001156  1401               	andwf	___ftpack@arg^0,w,c
  4936   001158  6E06               	movwf	??___ftpack^0,c
  4937   00115A  0E00               	movlw	0
  4938   00115C  1402               	andwf	(___ftpack@arg+1)^0,w,c
  4939   00115E  6E07               	movwf	(??___ftpack+1)^0,c
  4940   001160  0EFE               	movlw	254
  4941   001162  1403               	andwf	(___ftpack@arg+2)^0,w,c
  4942   001164  6E08               	movwf	(??___ftpack+2)^0,c
  4943   001166  5006               	movf	??___ftpack^0,w,c
  4944   001168  1007               	iorwf	(??___ftpack+1)^0,w,c
  4945   00116A  1008               	iorwf	(??___ftpack+2)^0,w,c
  4946   00116C  B4D8               	btfsc	status,2,c
  4947   00116E  D00C               	goto	l2196
  4948   001170  D7EC               	goto	l2188
  4949   001172                     l2192:
  4950   001172  2A04               	incf	___ftpack@exp^0,f,c
  4951   001174  0E01               	movlw	1
  4952   001176  2601               	addwf	___ftpack@arg^0,f,c
  4953   001178  0E00               	movlw	0
  4954   00117A  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  4955   00117C  0E00               	movlw	0
  4956   00117E  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  4957   001180  90D8               	bcf	status,0,c
  4958   001182  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  4959   001184  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  4960   001186  3201               	rrcf	___ftpack@arg^0,f,c
  4961   001188                     l2196:
  4962   001188  0E00               	movlw	0
  4963   00118A  1401               	andwf	___ftpack@arg^0,w,c
  4964   00118C  6E06               	movwf	??___ftpack^0,c
  4965   00118E  0E00               	movlw	0
  4966   001190  1402               	andwf	(___ftpack@arg+1)^0,w,c
  4967   001192  6E07               	movwf	(??___ftpack+1)^0,c
  4968   001194  0EFF               	movlw	255
  4969   001196  1403               	andwf	(___ftpack@arg+2)^0,w,c
  4970   001198  6E08               	movwf	(??___ftpack+2)^0,c
  4971   00119A  5006               	movf	??___ftpack^0,w,c
  4972   00119C  1007               	iorwf	(??___ftpack+1)^0,w,c
  4973   00119E  1008               	iorwf	(??___ftpack+2)^0,w,c
  4974   0011A0  B4D8               	btfsc	status,2,c
  4975   0011A2  D006               	goto	l2200
  4976   0011A4  D7E6               	goto	l2192
  4977   0011A6                     l2198:
  4978   0011A6  0604               	decf	___ftpack@exp^0,f,c
  4979   0011A8  90D8               	bcf	status,0,c
  4980   0011AA  3601               	rlcf	___ftpack@arg^0,f,c
  4981   0011AC  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  4982   0011AE  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  4983   0011B0                     l2200:
  4984   0011B0  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  4985   0011B2  D003               	goto	u1410
  4986   0011B4  0E02               	movlw	2
  4987   0011B6  6004               	cpfslt	___ftpack@exp^0,c
  4988   0011B8  D7F6               	goto	l2198
  4989   0011BA                     u1410:
  4990   0011BA  A004               	btfss	___ftpack@exp^0,0,c
  4991   0011BC  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  4992   0011BE  90D8               	bcf	status,0,c
  4993   0011C0  3204               	rrcf	___ftpack@exp^0,f,c
  4994   0011C2  5004               	movf	___ftpack@exp^0,w,c
  4995   0011C4  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  4996   0011C6  5005               	movf	___ftpack@sign^0,w,c
  4997   0011C8  A4D8               	btfss	status,2,c
  4998   0011CA  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  4999   0011CC  C001  F001         	movff	___ftpack@arg,?___ftpack
  5000   0011D0  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5001   0011D4  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5002   0011D8  0012               	return		;funcret
  5003   0011DA                     __end_of___ftpack:
  5004                           	callstack 0
  5005                           
  5006 ;; *************** function _check_potentiometer_voltaje *****************
  5007 ;; Defined at:
  5008 ;;		line 285 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;		None
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      void 
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5022 ;;      Params:         0       0       0       0       0       0       0       0       0
  5023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5025 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5026 ;;Total ram usage:        0 bytes
  5027 ;; Hardware stack levels used: 1
  5028 ;; Hardware stack levels required when called: 1
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_main
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text36
  5037   0018C6                     __ptext36:
  5038                           	callstack 0
  5039   0018C6                     _check_potentiometer_voltaje:
  5040                           	callstack 29
  5041                           
  5042                           ;LAB05.c: 286: ADON=1;
  5043                           
  5044                           ;incstack = 0
  5045   0018C6  80C2               	bsf	4034,0,c	;volatile
  5046                           
  5047                           ;LAB05.c: 287: GO=1;
  5048   0018C8  82C2               	bsf	4034,1,c	;volatile
  5049   0018CA                     l312:
  5050   0018CA  B2C2               	btfsc	4034,1,c	;volatile
  5051   0018CC  D7FE               	goto	l312
  5052                           
  5053                           ;LAB05.c: 289: if(ADRES > 511)
  5054   0018CE  0E00               	movlw	0
  5055   0018D0  5CC3               	subwf	195,w,c	;volatile
  5056   0018D2  0E02               	movlw	2
  5057   0018D4  58C4               	subwfb	196,w,c	;volatile
  5058   0018D6  A0D8               	btfss	status,0,c
  5059   0018D8  D002               	goto	l315
  5060                           
  5061                           ;LAB05.c: 290: LATB0 = 1;
  5062   0018DA  808A               	bsf	3978,0,c	;volatile
  5063   0018DC  D001               	goto	l316
  5064   0018DE                     l315:
  5065                           
  5066                           ;LAB05.c: 291: else;LAB05.c: 292: LATB0 = 0;
  5067   0018DE  908A               	bcf	3978,0,c	;volatile
  5068   0018E0                     l316:
  5069                           
  5070                           ;LAB05.c: 293: ADON=0;
  5071   0018E0  90C2               	bcf	4034,0,c	;volatile
  5072                           
  5073                           ;LAB05.c: 294: return;
  5074   0018E2  0012               	return		;funcret
  5075   0018E4                     __end_of_check_potentiometer_voltaje:
  5076                           	callstack 0
  5077                           
  5078 ;; *************** function _ISR *****************
  5079 ;; Defined at:
  5080 ;;		line 458 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;		None
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      void 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5094 ;;      Params:         0       0       0       0       0       0       0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5097 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5098 ;;Total ram usage:        0 bytes
  5099 ;; Hardware stack levels used: 1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		Interrupt level 2
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	intcode
  5108   000008                     __pintcode:
  5109                           	callstack 0
  5110   000008                     _ISR:
  5111                           	callstack 25
  5112                           
  5113                           ;incstack = 0
  5114   000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5115   00000A  EDD6  F00B         	call	int_func,f	;refresh shadow registers
  5116                           
  5117                           	psect	intcode_body
  5118   0017AC                     __pintcode_body:
  5119                           	callstack 25
  5120   0017AC                     int_func:
  5121                           	callstack 25
  5122   0017AC  0006               	pop		; remove dummy address from shadow register refresh
  5123                           
  5124                           ;LAB05.c: 459: if(TMR0IF==1){
  5125   0017AE  A4F2               	btfss	4082,2,c	;volatile
  5126   0017B0  D00E               	goto	i2l399
  5127                           
  5128                           ;LAB05.c: 460: TMR0=3036;
  5129   0017B2  0E0B               	movlw	11
  5130   0017B4  6ED7               	movwf	215,c	;volatile
  5131   0017B6  0EDC               	movlw	220
  5132   0017B8  6ED6               	movwf	214,c	;volatile
  5133                           
  5134                           ;LAB05.c: 461: TMR0IF=0;
  5135   0017BA  94F2               	bcf	4082,2,c	;volatile
  5136                           
  5137                           ;LAB05.c: 462: LATC2=~LATC2;
  5138   0017BC  B48B               	btfsc	3979,2,c	;volatile
  5139   0017BE  D002               	goto	i2u264_40
  5140   0017C0  848B               	bsf	3979,2,c	;volatile
  5141   0017C2  D001               	goto	i2u265_45
  5142   0017C4                     i2u264_40:
  5143   0017C4  948B               	bcf	3979,2,c	;volatile
  5144   0017C6                     i2u265_45:
  5145                           
  5146                           ;LAB05.c: 463: Enable_sample=1;
  5147   0017C6  0E01               	movlw	1
  5148   0017C8  0100               	movlb	0	; () banked
  5149   0017CA  6F86               	movwf	_Enable_sample& (0+255),b
  5150                           
  5151                           ;LAB05.c: 464: }
  5152   0017CC  D005               	goto	i2l402
  5153   0017CE                     i2l399:
  5154                           
  5155                           ;LAB05.c: 465: else if(RCIF==1){
  5156   0017CE  AA9E               	btfss	3998,5,c	;volatile
  5157   0017D0  D003               	goto	i2l402
  5158                           
  5159                           ;LAB05.c: 466: Scale_Temperature_RS232=RCREG;
  5160   0017D2  CFAE F04B          	movff	4014,_Scale_Temperature_RS232	;volatile
  5161                           
  5162                           ;LAB05.c: 467: CREN=0;
  5163   0017D6  98AB               	bcf	4011,4,c	;volatile
  5164   0017D8                     i2l402:
  5165   0017D8  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5166   0017DA  0011               	retfie		f
  5167   0017DC                     __end_of_ISR:
  5168                           	callstack 0
  5169                           
  5170                           	psect	rparam
  5171   000000                     
  5172                           	psect	temp
  5173   00004E                     btemp:
  5174                           	callstack 0
  5175   00004E                     	ds	1
  5176   000000                     int$flags	set	btemp
  5177   000000                     wtemp8	set	btemp+1
  5178   000000                     ttemp5	set	btemp+1
  5179   000000                     ttemp6	set	btemp+4
  5180   000000                     ttemp7	set	btemp+8
  5181                           
  5182                           	psect	idloc
  5183                           
  5184                           ;Config register IDLOC0 @ 0x200000
  5185                           ;	unspecified, using default values
  5186   200000                     	org	2097152
  5187   200000  FF                 	db	255
  5188                           
  5189                           ;Config register IDLOC1 @ 0x200001
  5190                           ;	unspecified, using default values
  5191   200001                     	org	2097153
  5192   200001  FF                 	db	255
  5193                           
  5194                           ;Config register IDLOC2 @ 0x200002
  5195                           ;	unspecified, using default values
  5196   200002                     	org	2097154
  5197   200002  FF                 	db	255
  5198                           
  5199                           ;Config register IDLOC3 @ 0x200003
  5200                           ;	unspecified, using default values
  5201   200003                     	org	2097155
  5202   200003  FF                 	db	255
  5203                           
  5204                           ;Config register IDLOC4 @ 0x200004
  5205                           ;	unspecified, using default values
  5206   200004                     	org	2097156
  5207   200004  FF                 	db	255
  5208                           
  5209                           ;Config register IDLOC5 @ 0x200005
  5210                           ;	unspecified, using default values
  5211   200005                     	org	2097157
  5212   200005  FF                 	db	255
  5213                           
  5214                           ;Config register IDLOC6 @ 0x200006
  5215                           ;	unspecified, using default values
  5216   200006                     	org	2097158
  5217   200006  FF                 	db	255
  5218                           
  5219                           ;Config register IDLOC7 @ 0x200007
  5220                           ;	unspecified, using default values
  5221   200007                     	org	2097159
  5222   200007  FF                 	db	255
  5223                           
  5224                           	psect	config
  5225                           
  5226                           ;Config register CONFIG1L @ 0x300000
  5227                           ;	unspecified, using default values
  5228                           ;	PLL Prescaler Selection bits
  5229                           ;	PLLDIV = 0x0, unprogrammed default
  5230                           ;	System Clock Postscaler Selection bits
  5231                           ;	CPUDIV = 0x0, unprogrammed default
  5232                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5233                           ;	USBDIV = 0x0, unprogrammed default
  5234   300000                     	org	3145728
  5235   300000  00                 	db	0
  5236                           
  5237                           ;Config register CONFIG1H @ 0x300001
  5238                           ;	Oscillator Selection bits
  5239                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5240                           ;	Fail-Safe Clock Monitor Enable bit
  5241                           ;	FCMEN = 0x0, unprogrammed default
  5242                           ;	Internal/External Oscillator Switchover bit
  5243                           ;	IESO = 0x0, unprogrammed default
  5244   300001                     	org	3145729
  5245   300001  09                 	db	9
  5246                           
  5247                           ;Config register CONFIG2L @ 0x300002
  5248                           ;	unspecified, using default values
  5249                           ;	Power-up Timer Enable bit
  5250                           ;	PWRT = 0x1, unprogrammed default
  5251                           ;	Brown-out Reset Enable bits
  5252                           ;	BOR = 0x3, unprogrammed default
  5253                           ;	Brown-out Reset Voltage bits
  5254                           ;	BORV = 0x3, unprogrammed default
  5255                           ;	USB Voltage Regulator Enable bit
  5256                           ;	VREGEN = 0x0, unprogrammed default
  5257   300002                     	org	3145730
  5258   300002  1F                 	db	31
  5259                           
  5260                           ;Config register CONFIG2H @ 0x300003
  5261                           ;	Watchdog Timer Enable bit
  5262                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5263                           ;	Watchdog Timer Postscale Select bits
  5264                           ;	WDTPS = 512, 1:512
  5265   300003                     	org	3145731
  5266   300003  12                 	db	18
  5267                           
  5268                           ; Padding undefined space
  5269   300004                     	org	3145732
  5270   300004  FF                 	db	255
  5271                           
  5272                           ;Config register CONFIG3H @ 0x300005
  5273                           ;	unspecified, using default values
  5274                           ;	CCP2 MUX bit
  5275                           ;	CCP2MX = 0x1, unprogrammed default
  5276                           ;	PORTB A/D Enable bit
  5277                           ;	PBADEN = 0x1, unprogrammed default
  5278                           ;	Low-Power Timer 1 Oscillator Enable bit
  5279                           ;	LPT1OSC = 0x0, unprogrammed default
  5280                           ;	MCLR Pin Enable bit
  5281                           ;	MCLRE = 0x1, unprogrammed default
  5282   300005                     	org	3145733
  5283   300005  83                 	db	131
  5284                           
  5285                           ;Config register CONFIG4L @ 0x300006
  5286                           ;	unspecified, using default values
  5287                           ;	Stack Full/Underflow Reset Enable bit
  5288                           ;	STVREN = 0x1, unprogrammed default
  5289                           ;	Single-Supply ICSP Enable bit
  5290                           ;	LVP = 0x1, unprogrammed default
  5291                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5292                           ;	ICPRT = 0x0, unprogrammed default
  5293                           ;	Extended Instruction Set Enable bit
  5294                           ;	XINST = 0x0, unprogrammed default
  5295                           ;	Background Debugger Enable bit
  5296                           ;	DEBUG = 0x1, unprogrammed default
  5297   300006                     	org	3145734
  5298   300006  85                 	db	133
  5299                           
  5300                           ; Padding undefined space
  5301   300007                     	org	3145735
  5302   300007  FF                 	db	255
  5303                           
  5304                           ;Config register CONFIG5L @ 0x300008
  5305                           ;	unspecified, using default values
  5306                           ;	Code Protection bit
  5307                           ;	CP0 = 0x1, unprogrammed default
  5308                           ;	Code Protection bit
  5309                           ;	CP1 = 0x1, unprogrammed default
  5310                           ;	Code Protection bit
  5311                           ;	CP2 = 0x1, unprogrammed default
  5312                           ;	Code Protection bit
  5313                           ;	CP3 = 0x1, unprogrammed default
  5314   300008                     	org	3145736
  5315   300008  0F                 	db	15
  5316                           
  5317                           ;Config register CONFIG5H @ 0x300009
  5318                           ;	unspecified, using default values
  5319                           ;	Boot Block Code Protection bit
  5320                           ;	CPB = 0x1, unprogrammed default
  5321                           ;	Data EEPROM Code Protection bit
  5322                           ;	CPD = 0x1, unprogrammed default
  5323   300009                     	org	3145737
  5324   300009  C0                 	db	192
  5325                           
  5326                           ;Config register CONFIG6L @ 0x30000A
  5327                           ;	unspecified, using default values
  5328                           ;	Write Protection bit
  5329                           ;	WRT0 = 0x1, unprogrammed default
  5330                           ;	Write Protection bit
  5331                           ;	WRT1 = 0x1, unprogrammed default
  5332                           ;	Write Protection bit
  5333                           ;	WRT2 = 0x1, unprogrammed default
  5334                           ;	Write Protection bit
  5335                           ;	WRT3 = 0x1, unprogrammed default
  5336   30000A                     	org	3145738
  5337   30000A  0F                 	db	15
  5338                           
  5339                           ;Config register CONFIG6H @ 0x30000B
  5340                           ;	unspecified, using default values
  5341                           ;	Configuration Register Write Protection bit
  5342                           ;	WRTC = 0x1, unprogrammed default
  5343                           ;	Boot Block Write Protection bit
  5344                           ;	WRTB = 0x1, unprogrammed default
  5345                           ;	Data EEPROM Write Protection bit
  5346                           ;	WRTD = 0x1, unprogrammed default
  5347   30000B                     	org	3145739
  5348   30000B  E0                 	db	224
  5349                           
  5350                           ;Config register CONFIG7L @ 0x30000C
  5351                           ;	unspecified, using default values
  5352                           ;	Table Read Protection bit
  5353                           ;	EBTR0 = 0x1, unprogrammed default
  5354                           ;	Table Read Protection bit
  5355                           ;	EBTR1 = 0x1, unprogrammed default
  5356                           ;	Table Read Protection bit
  5357                           ;	EBTR2 = 0x1, unprogrammed default
  5358                           ;	Table Read Protection bit
  5359                           ;	EBTR3 = 0x1, unprogrammed default
  5360   30000C                     	org	3145740
  5361   30000C  0F                 	db	15
  5362                           
  5363                           ;Config register CONFIG7H @ 0x30000D
  5364                           ;	unspecified, using default values
  5365                           ;	Boot Block Table Read Protection bit
  5366                           ;	EBTRB = 0x1, unprogrammed default
  5367   30000D                     	org	3145741
  5368   30000D  40                 	db	64
  5369                           tosu	equ	0xFFF
  5370                           tosh	equ	0xFFE
  5371                           tosl	equ	0xFFD
  5372                           stkptr	equ	0xFFC
  5373                           pclatu	equ	0xFFB
  5374                           pclath	equ	0xFFA
  5375                           pcl	equ	0xFF9
  5376                           tblptru	equ	0xFF8
  5377                           tblptrh	equ	0xFF7
  5378                           tblptrl	equ	0xFF6
  5379                           tablat	equ	0xFF5
  5380                           prodh	equ	0xFF4
  5381                           prodl	equ	0xFF3
  5382                           indf0	equ	0xFEF
  5383                           postinc0	equ	0xFEE
  5384                           postdec0	equ	0xFED
  5385                           preinc0	equ	0xFEC
  5386                           plusw0	equ	0xFEB
  5387                           fsr0h	equ	0xFEA
  5388                           fsr0l	equ	0xFE9
  5389                           wreg	equ	0xFE8
  5390                           indf1	equ	0xFE7
  5391                           postinc1	equ	0xFE6
  5392                           postdec1	equ	0xFE5
  5393                           preinc1	equ	0xFE4
  5394                           plusw1	equ	0xFE3
  5395                           fsr1h	equ	0xFE2
  5396                           fsr1l	equ	0xFE1
  5397                           bsr	equ	0xFE0
  5398                           indf2	equ	0xFDF
  5399                           postinc2	equ	0xFDE
  5400                           postdec2	equ	0xFDD
  5401                           preinc2	equ	0xFDC
  5402                           plusw2	equ	0xFDB
  5403                           fsr2h	equ	0xFDA
  5404                           fsr2l	equ	0xFD9
  5405                           status	equ	0xFD8

Data Sizes:
    Strings     107
    Constant    10
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      77
    BANK0           160     37      41
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[9]), STR_14(CODE[9]), STR_13(CODE[8]), STR_12(CODE[9]), 
		 -> STR_11(CODE[9]), STR_10(CODE[9]), STR_9(CODE[8]), STR_8(CODE[9]), 
		 -> STR_7(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> send_temperature_RS232@buffer_RS232(COMRAM[12]), main@buffer_LCD_row_2(BANK0[17]), main@buffer_LCD_row_1(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    show_temperature_LCD@buffer_LCD_row_2	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_2(BANK0[17]), 

    show_temperature_LCD@buffer_LCD_row_1	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_1(BANK0[17]), 

    choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_2(BANK0[17]), 

    choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_1(BANK0[17]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[3]), STR_5(CODE[5]), STR_4(CODE[17]), STR_3(CODE[13]), 
		 -> STR_2(CODE[8]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_choose_scale_temperature_and_fill_buffers
    _welcome_operations->_EscribeLCD_n8
    _MensajeLCD_Var->_DireccionaLCD
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _show_temperature_LCD->_DireccionaLCD
    _show_temperature_LCD->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _send_temperature_RS232->_sprintf
    _save_temperature_c_EEPROM->_EEPROM_Write
    _measure_temperature_c_humidity_per->_DHT11_ReadData
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD
    _choose_scale_temperature_and_fill_buffers->___fttol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   30603
                                              0 BANK0     37    37      0
        _check_potentiometer_voltaje
_choose_scale_temperature_and_fill_b
                 _init_configuration
 _measure_temperature_c_humidity_per
          _save_temperature_c_EEPROM
             _send_temperature_RS232
               _show_temperature_LCD
             _show_temperature_c_RGB
                 _welcome_operations
 ---------------------------------------------------------------------------------
 (1) _welcome_operations                                   2     2      0    2548
                                             13 COMRAM     2     2      0
                           _BorraLCD
                        _EEPROM_Read
                      _EscribeLCD_n8
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       3     2      1    1009
                                              5 COMRAM     3     2      1
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1    1407
                                              8 COMRAM     5     4      1
                        _EEPROM_Read (ARG)
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     539
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _show_temperature_c_RGB                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _show_temperature_LCD                                 6     1      5     936
                                              5 COMRAM     6     1      5
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _DireccionaLCD                                        1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _send_temperature_RS232                              15    15      0    5709
                                             25 COMRAM    15    15      0
                         _Transmitir
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _save_temperature_c_EEPROM                            0     0      0     120
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _measure_temperature_c_humidity_per                   0     0      0     115
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       3     3      0     115
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_configuration                                   2     2      0     286
                                              4 COMRAM     2     2      0
                       _ConfiguraLCD
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (2) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfiguraLCD                                         1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _choose_scale_temperature_and_fill_buffers            5     3      2   20705
                                             69 COMRAM     5     3      2
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    5563
                                             12 COMRAM    13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    2075
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1574
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2866
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     480
                                             54 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3602
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3404
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4392
                                             42 COMRAM    12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _check_potentiometer_voltaje                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_potentiometer_voltaje
   _choose_scale_temperature_and_fill_buffers
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
       ___ftmul (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
     ___ftdiv
     ___ftmul
     ___fttol
       ___ftadd (ARG)
       ___ftdiv (ARG)
       ___ftmul (ARG)
       ___lbtoft (ARG)
     ___lbtoft
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_configuration
     _ConfiguraLCD
     _InicializaLCD
       _BorraLCD
         _EnviaDato
           _HabilitaLCD
           _RetardoLCD
         _HabilitaLCD
         _RetardoLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _measure_temperature_c_humidity_per
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _save_temperature_c_EEPROM
     _EEPROM_Write
   _send_temperature_RS232
     _Transmitir
     _sprintf
   _show_temperature_LCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _show_temperature_c_RGB
   _welcome_operations
     _BorraLCD
     _EEPROM_Read
     _EscribeLCD_n8
       _EEPROM_Read (ARG)
       _EnviaDato (ARG)
       _HabilitaLCD (ARG)
       _RetardoLCD (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
     _MensajeLCD_Var
       _BorraLCD
       _DireccionaLCD
       _EscribeLCD_c

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      29       5       25.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      4D       1       81.9%
BITBIGSFRlll        20      0       0      33        0.0%
BITBIGSFRhhhhl      1A      0       0      21        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhlhhh       B      0       0      24        0.0%
BITBIGSFRhlhlh       8      0       0      26        0.0%
BITBIGSFRlh          7      0       0      31        0.0%
BITBIGSFRhllhhl      7      0       0      28        0.0%
BITBIGSFRhlhhl       7      0       0      25        0.0%
BITBIGSFRhllhl       6      0       0      29        0.0%
BITBIGSFRhllll       5      0       0      30        0.0%
BITBIGSFRhllhhh      1      0       0      27        0.0%
BITBIGSFRllh         1      0       0      32        0.0%
BITBIGSFRhhhl        1      0       0      22        0.0%
BITBIGSFRhhl         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      76      34        0.0%
DATA                 0      0      76       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun  8 10:28:01 2023

                                        Transmitir@BufferT 0001  
                                 ??_show_temperature_c_RGB 0001  
                                                       _GO 7E11  
                                                       _RD 7D30  
                                                       _TO 7E83  
                                                       _WR 7D31  
                                               EnviaDato@a 0004  
               __end_of_measure_temperature_c_humidity_per 1880  
                     ??_measure_temperature_c_humidity_per 0004  
                      ?_measure_temperature_c_humidity_per 0001  
                       _measure_temperature_c_humidity_per 185A  
                                             ___ftadd@exp1 0036  
                                             ___ftadd@exp2 0035  
                                              main@Temp_n1 0082  
                                             ___ftadd@sign 0034  
                                            _InicializaLCD 11DA  
                                                      l312 18CA  
                                                      l315 18DE  
                                                      l316 18E0  
                                                      l340 08CC  
                                                      l405 1850  
                                                      l335 14EA  
                                                      l352 09EC  
                                                      l346 094E  
                                                      l291 15FA  
                                                      l286 15C8  
                                                      l922 165E  
                                                      l932 1736  
                                                      l773 0BDC  
                                                      l784 1028  
                                                      _GIE 7F97  
                                                      _RA2 7C02  
                                                      _RA3 7C03  
                                                      _RC1 7C11  
                                                      _ISR 0008  
                                                      _Che 004C  
                                                      _Hum 0087  
                                                      wreg 0FE8  
                                                     ?_ISR 0001  
                                             ___ftdiv@cntr 0025  
                                             ___ftdiv@sign 002A  
                                                     l2200 11B0  
                                                     l3000 12FE  
                                                     l2130 155E  
                                                     l2132 1570  
                                                     l2140 15A4  
                                                     l3020 1504  
                                                     l2134 1590  
                                                     l2222 1752  
                                                     l2136 159A  
                                                     l2152 16F0  
                                                     l2306 11EC  
                                                     l2234 176E  
                                                     l2226 1758  
                                                     l2410 1370  
                                                     l2500 0CAE  
                                                     l2316 120A  
                                                     l2252 182C  
                                                     l2244 1814  
                                                     l2404 1358  
                                                     l2190 1154  
                                                     l2510 0CD0  
                                                     l2326 1228  
                                                     l2238 1776  
                                                     l2192 1172  
                                                     l2600 0BAE  
                                                     l2264 162C  
                                                     l2408 136E  
                                                     l2602 0BB8  
                                                     l2266 1634  
                                                     l2530 0D18  
                                                     l2346 1260  
                                                     l2450 15F4  
                                                     l2362 0EB4  
                                                     l2196 1188  
                                                     l2188 114A  
                                                     l2276 1654  
                                                     l2292 172C  
                                                     l2284 170C  
                                                     l2532 0D1E  
                                                     l2516 0CD4  
                                                     l2372 0EFA  
                                                     l2356 0E94  
                                                     l2198 11A6  
                                                     l2286 1714  
                                                     l2608 0BF8  
                                                     l2560 0AF6  
                                                     l2704 0E44  
                                                     l2480 0C54  
                                                     l2392 130C  
                                                     l2618 0C28  
                                                     l2634 0FC4  
                                                     l2722 1086  
                                                     l2538 0D6E  
                                                     l2546 195C  
                                                     l2628 0F9C  
                                                     l2708 0E54  
                                                     l2740 10DA  
                                                     l2388 0F5E  
                                                     l2590 0B7A  
                                                     l2566 0B1E  
                                                     l2654 1002  
                                                     l2750 10F2  
                                                     l2486 0C6A  
                                                     l2398 132C  
                                                     l2592 0B84  
                                                     l2680 0DEA  
                                                     l2752 10FE  
                                                     l2744 10EA  
                                                     l2488 0C70  
                                                     l2674 0DC2  
                                                     l2498 0C80  
                                                     l2588 0B70  
                                                     l2940 1496  
                                                     l2828 141A  
                                                     l2694 0E1C  
                                                     l2758 111A  
                                                     l2870 1680  
                                                     l2960 14DC  
                                                     l2952 14C0  
                                                     l2944 14A4  
                                                     l2698 0E2C  
                                                     l2874 1690  
                                                     l2972 1292  
                                                     l2956 14CE  
                                                     l2948 14B2  
                                                     l2990 12D6  
                                                     l2982 12BA  
                                                     l2976 12A2  
                                                     l2994 12E6  
                                                     l2978 12B2  
                                                     l2996 12F6  
                                                     _ADON 7E10  
                                                     _CFGS 7D36  
                                                     STR_1 081C  
                                                     STR_2 0869  
                                                     STR_3 0829  
                                                     STR_4 080B  
                                                     STR_5 0871  
                                                     STR_6 0856  
                                                     STR_7 0851  
                                                     STR_8 0848  
                                                     STR_9 0861  
                                                     _CREN 7D5C  
                                                     u2020 0B4E  
                                                     u2201 0DD2  
                                                     u1410 11BA  
                                                     u2131 0F84  
                                                     u2060 0B8C  
                                                     u2300 1104  
                                                     u2151 0FAC  
                                                     u1520 1718  
                                                     _LATD 0F8C  
                                                     u2241 106A  
                                                     _LATE 0F8D  
                                                     u1370 113C  
                                                     u2090 0BC0  
                                                     u2250 1074  
                                                     u2410 0956  
                                                     u1450 175C  
                                                     u2260 10A4  
                                                     u2420 095E  
                                                     u1700 17A4  
                                                     u2181 0DAA  
                                                     u2350 0890  
                                                     u1550 18F6  
                                                     u2440 09F4  
                                                     u2360 0898  
                                                     u1640 1784  
                                                     u2265 109C  
                                                     u1490 1638  
                                                     u2450 09FC  
                                                     u1730 15D2  
                                                     u1900 0D90  
                                                     u2380 08D4  
                                                     u1660 178A  
                                                     u2540 128A  
                                                     u2390 08DC  
                                                     u1718 17A6  
                                                     u1670 1794  
                                                     u1840 0C5C  
                                                     u1808 1606  
                                                     u1760 15E8  
                                                     u2560 12C0  
                                                     u1921 0AB6  
                                                     u1690 179A  
                                                     u1658 1786  
                                                     u1931 0ACA  
                                                     u2707 18AE  
                                                     u1748 15D4  
                                                     u2717 18BA  
                                                     u1870 0D00  
                                                     u1790 1604  
                                                     u2807 1950  
                                                     u2727 15DA  
                                                     u1960 0AE8  
                                                     u1688 1796  
                                                     u2817 087E  
                                                     u2737 1394  
                                                     u1890 0D76  
                                                     u1778 15EA  
                                                     u2747 13F4  
                                                     _PEIE 7F96  
                                                     u2757 1564  
                                                     u2677 1438  
                                                     u1990 0B10  
                                                     u2767 1576  
                                                     u2687 1478  
                                                     u2777 1580  
                                                     u2697 16A8  
                                                     u2787 1592  
                                                     _RCIE 7CED  
                                                     _RCIF 7CF5  
                                                     u2797 159C  
                                                     _TMR0 0FD6  
                                                     _TRMT 7D61  
                                                     _WREN 7D32  
                                           ??_EscribeLCD_c 0005  
                                                     _Temp 0088  
                                                     _main 14F2  
                                             ___ftpack@arg 0001  
                                             ___ftpack@exp 0004  
                                                     fsr2h 0FDA  
                                                     indf2 0FDF  
                                                     fsr2l 0FD9  
                                                     btemp 004E  
                                     main@buffer_LCD_row_1 0060  
                                     main@buffer_LCD_row_2 0071  
                                                     prodl 0FF3  
                                                     start 000E  
                                         ??_DHT11_ReadData 0001  
                                             ___ftmul@cntr 001A  
                                             ___param_bank 0000  
                                             ___ftmul@sign 001B  
                                                    ??_ISR 0001  
                                             ___fttol@exp1 0045  
                                     __end_of_EEPROM_Write 185A  
                                             ___fttol@lval 0041  
                              ??_save_temperature_c_EEPROM 0003  
                                           ?_InicializaLCD 0001  
                                                    ?_main 0001  
        __end_of_choose_scale_temperature_and_fill_buffers 0AA6  
              ??_choose_scale_temperature_and_fill_buffers 0048  
               ?_choose_scale_temperature_and_fill_buffers 0046  
                _choose_scale_temperature_and_fill_buffers 0878  
                                          __end_of___lbdiv 177A  
                                                    _ADRES 0FC3  
                                                    _EEADR 0FA9  
                                          __end_of___ftadd 0C4E  
                                                    STR_10 0848  
                                                    STR_11 083F  
                                                    STR_12 0848  
                                                    STR_13 0859  
                                                    STR_14 0848  
                                                    STR_15 0836  
                                            EscribeLCD_c@a 0005  
                                          __end_of___lbmod 1834  
                                          __end_of___ftdiv 105A  
                                                    _EEPGD 7D37  
                                          __end_of___ftmul 0E8E  
                                                    _T0CON 0FD5  
                                          __end_of___fttol 112C  
                                                    _LATB0 7C50  
                                                    _LATC1 7C59  
                                                    _LATC2 7C5A  
                                                    _LATD0 7C60  
                                                    _LATD1 7C61  
                                                    _LATE0 7C68  
                                                    _LATE1 7C69  
                                                    _LATE2 7C6A  
                                          __end_of___lwdiv 1668  
                                          __end_of___lwmod 1740  
                                                    i2l402 17D8  
                                                    i2l399 17CE  
                                                    _RCREG 0FAE  
                                                    _RCSTA 0FAB  
                                                    _SPBRG 0FAF  
                                                    _TRISD 0F95  
                                                    _TRISE 0F96  
                                                    _TXREG 0FAD  
                                                    _TXSTA 0FAC  
                                          ??_EscribeLCD_n8 000A  
                                          __end_of_dpowers 080B  
                                            ___ftpack@sign 0005  
  choose_scale_temperature_and_fill_buffers@temp_converted 0049  
                                                    tablat 0FF5  
                                              _HabilitaLCD 194C  
                                                    ttemp5 004F  
                                                    ttemp6 0052  
                                                    ttemp7 0056  
                                                    status 0FD8  
                                                    wtemp8 004F  
                                          __end_of_sprintf 0D9A  
                                          ___lbdiv@divisor 0005  
                                         EEPROM_Write@data 0001  
                                          ___lbdiv@counter 0007  
                                         __end_of_BorraLCD 193C  
                                          __initialization 17DC  
                                             __end_of_main 155A  
                                                   ??_main 004B  
                                     __end_of_ConfiguraLCD 18FC  
                                            ___fttol@sign1 0040  
                                    MensajeLCD_Var@counter 0008  
                                            __activetblptr 0002  
                                                   _ADCON0 0FC2  
                                                   _ADCON1 0FC1  
                                                   _ADCON2 0FC0  
                                                   _EEDATA 0FA8  
                                           DireccionaLCD@a 0005  
                                                   _EECON2 0FA7  
                                           EscribeLCD_n8@a 000D  
                                           EscribeLCD_n8@b 0009  
                                      _DHT11_CheckResponse 177A  
                                         __end_of___ftpack 11DA  
                                         __end_of___lbtoft 18A4  
                                _save_temperature_c_EEPROM 1966  
                                                   _OSCCON 0FD3  
                                                   _TMR0IE 7F95  
                                                   _TMR0IF 7F92  
                                                   _TMR0ON 7EAF  
                                                   _TRISB0 7C98  
                                                   _TRISC1 7CA1  
                                                   _TRISC2 7CA2  
                                                   _SWDTEN 7E88  
                                    __end_of_DireccionaLCD 1928  
                                               _RetardoLCD 155A  
choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1 0046  
choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2 0047  
                                     EscribeLCD_n8@centena 000A  
                            send_temperature_RS232@counter 0028  
                                                ??___lbdiv 0006  
                                                ??___ftadd 0031  
                                                ??___lbmod 0002  
                                                ??___ftdiv 0022  
                                     ?_DHT11_CheckResponse 0001  
                                                ??___ftmul 0013  
                                                ??___fttol 003B  
                                                ??___lwdiv 0005  
                                                ??___lwmod 000C  
                                          ??_InicializaLCD 0005  
                                                   isa$std 0001  
                                     __end_of_EscribeLCD_c 1912  
                                    ___ftmul@f3_as_product 0017  
                                             __pdataCOMRAM 004D  
                                             __mediumconst 0000  
                                   _send_temperature_RS232 1668  
                                                   tblptrh 0FF7  
                                                   tblptrl 0FF6  
                                                   tblptru 0FF8  
                                  _Scale_Temperature_RS232 004B  
                                                ??_sprintf 0013  
                                               _Transmitir 195A  
                                         ___lbdiv@dividend 0006  
                                   _show_temperature_c_RGB 1486  
                                          ___lbmod@divisor 0001  
                                               __accesstop 0060  
                                  __end_of__initialization 17FC  
                                          ___lbmod@counter 0003  
                                               ___ftadd@f1 002B  
                                               ___ftadd@f2 002E  
                                            ___rparam_used 0001  
                                               ___ftdiv@f1 001C  
                                               ___ftdiv@f2 001F  
                                               ___ftdiv@f3 0026  
                               __end_of_welcome_operations 1486  
                                               ___lbtoft@c 000C  
                                               ___ftmul@f1 000D  
                                               ___ftmul@f2 0010  
                                               ___fttol@f1 0037  
                                           __pcstackCOMRAM 0001  
                                    ??_DHT11_CheckResponse 0001  
                                        __end_of_EnviaDato 16FE  
                                         ___lbdiv@quotient 0008  
                                                ?_BorraLCD 0001  
                                           _MensajeLCD_Var 1306  
                               __end_of_init_configuration 140A  
                                             _EEPROM_Write 1834  
                                               __pbssBANK0 0085  
                                          MensajeLCD_Var@a 0006  
                                              ?_RetardoLCD 0001  
                                              RetardoLCD@a 0002  
                                                  _BAUDCON 0FB8  
                                                ?___ftpack 0001  
                                                ?___lbtoft 0009  
                                   __end_of_MensajeLCD_Var 138A  
                                               ??_BorraLCD 0005  
                                              ?_Transmitir 0001  
                                             ?_HabilitaLCD 0001  
                                            ??_DHT11_Start 0001  
                 show_temperature_LCD@Scale_Temperature_n1 000A  
                                             _ConfiguraLCD 18E4  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                                  ___lbdiv 1740  
                                                  ___ftadd 0AA6  
                                                  ___lbmod 180A  
                                                  ___ftdiv 0F74  
                                                  ___ftmul 0D9A  
                                                  ___fttol 105A  
                                                  ___lwdiv 1616  
                                                  ___lwmod 16FE  
                                             __psmallconst 0800  
                                                  __pcinit 17DC  
                                               ??___ftpack 0006  
                                               ??___lbtoft 000C  
                                                  __ramtop 0800  
                                                  __ptext0 14F2  
                                                  __ptext1 140A  
                                                  __ptext2 1306  
                                                  __ptext3 0E8E  
                                                  __ptext4 180A  
                                                  __ptext5 1740  
                                                  __ptext6 193C  
                                                  __ptext7 1486  
                                                  __ptext8 1276  
                                                  __ptext9 18FC  
                                                  _dpowers 0801  
                      __end_of_check_potentiometer_voltaje 18E4  
                              _check_potentiometer_voltaje 18C6  
                                          ?_MensajeLCD_Var 0006  
                                    __end_of_EscribeLCD_n8 0F74  
                                                  _sprintf 0C4E  
                                           __pintcode_body 17AC  
                                     end_of_initialization 17FC  
                            ??_check_potentiometer_voltaje 0001  
                                            ??_EEPROM_Read 0001  
                                            __Lmediumconst 0000  
                                                  int_func 17AC  
                                             _EscribeLCD_c 18FC  
                                      __end_of_DHT11_Start 18C6  
                                                  postdec2 0FDD  
                        __end_of_save_temperature_c_EEPROM 1972  
                                                  postinc2 0FDE  
                                  ?_send_temperature_RS232 0001  
                                         ___lbmod@dividend 0002  
                                  ?_show_temperature_c_RGB 0001  
                                               main@Hum_n1 0083  
                                              ___lbmod@rem 0004  
                                              ___ftdiv@exp 0029  
                                       DHT11_ReadData@data 0003  
                                              ___ftmul@exp 0016  
                                        _Scale_Temperature 0085  
                                      __end_of_EEPROM_Read 194C  
                           __end_of_send_temperature_RS232 16B8  
                              show_temperature_LCD@Temp_n1 0008  
                                            __pidataCOMRAM 1972  
                                    __end_of_InicializaLCD 1276  
                                       _welcome_operations 140A  
                                                _EnviaDato 16B8  
                           __end_of_show_temperature_c_RGB 14F2  
                                      start_initialization 17DC  
                                              __end_of_ISR 17DC  
                                      ?_welcome_operations 0001  
                              show_temperature_LCD@counter 000B  
                                             ??_RetardoLCD 0001  
                                              _DHT11_Start 18A4  
                              __end_of_DHT11_CheckResponse 17AC  
                                      EscribeLCD_n8@decena 000B  
                                     ??_welcome_operations 000E  
                                       _init_configuration 138A  
                                      EscribeLCD_n8@unidad 000C  
                                      ?_init_configuration 0001  
                                            _Enable_sample 0086  
                                               ?_EnviaDato 0001  
                                              __pbssCOMRAM 004B  
                                       __end_of_RetardoLCD 15C0  
                                            __pcstackBANK0 0060  
                             __end_of_show_temperature_LCD 1306  
                                             ??_Transmitir 0001  
                                     ??_init_configuration 0005  
                                              sprintf@flag 0014  
                                              _EEPROM_Read 193C  
                                              sprintf@prec 0015  
                                            _DireccionaLCD 1912  
                                         ___lwdiv@dividend 0001  
                                                __pintcode 0008  
                                                 ?___lbdiv 0005  
                                                 ?___ftadd 002B  
                                                 ?___lbmod 0001  
                                                 ?___ftdiv 001C  
                                                 ?___ftmul 000D  
                                                 ?___fttol 0037  
                                                 ?___lwdiv 0001  
                                                 ?___lwmod 0008  
                                       __end_of_Transmitir 1966  
                                           _DHT11_ReadData 15C0  
                                         ??_MensajeLCD_Var 0007  
                       send_temperature_RS232@buffer_RS232 001C  
                                              __smallconst 0800  
                                         ___lwdiv@quotient 0005  
                                                 ?_sprintf 000D  
                                           ?_DireccionaLCD 0001  
                                                 i2u264_40 17C4  
                                                 i2u265_45 17C6  
                                   __end_of_DHT11_ReadData 1616  
                                              ??_EnviaDato 0003  
                               show_temperature_LCD@Hum_n1 0009  
                                                 _BorraLCD 1928  
                                                 __Hrparam 0000  
                                                 __Lrparam 0000  
                                     _show_temperature_LCD 1276  
                                          ?_DHT11_ReadData 0001  
                               ?_save_temperature_c_EEPROM 0001  
                                                 ___ftpack 112C  
                                                 ___lbtoft 1880  
                                          DHT11_ReadData@i 0002  
                                            ConfiguraLCD@a 0001  
                                               sprintf@val 0017  
                                          ___lwdiv@divisor 0003  
                                          ___lwdiv@counter 0007  
                                                 __ptext10 1912  
                                                 __ptext11 1668  
                                                 __ptext20 11DA  
                                                 __ptext12 195A  
                                                 __ptext21 1928  
                                                 __ptext13 1966  
                                                 __ptext30 1880  
                                                 __ptext22 16B8  
                                                 __ptext14 1834  
                                                 __ptext31 105A  
                                                 __ptext23 155A  
                                                 __ptext15 185A  
                                                 __ptext32 0D9A  
                                                 __ptext24 194C  
                                                 __ptext16 18A4  
                                                 __ptext33 0F74  
                                                 __ptext25 18E4  
                                                 __ptext17 15C0  
                                                 __ptext34 0AA6  
                                                 __ptext26 0878  
                                                 __ptext18 177A  
                                                 __ptext35 112C  
                                                 __ptext27 0C4E  
                                                 __ptext19 138A  
                                                 __ptext36 18C6  
                                                 __ptext28 16FE  
                                                 __ptext29 1616  
                                            ?_EEPROM_Write 0001  
                                          ??_DireccionaLCD 0005  
                                             ?_DHT11_Start 0001  
                                                 _interfaz 004D  
                                 main@Scale_Temperature_n1 0084  
                                                 isa$xinst 0000  
                                    ?_show_temperature_LCD 0006  
                                                 int$flags 004E  
                     show_temperature_LCD@buffer_LCD_row_1 0006  
                     show_temperature_LCD@buffer_LCD_row_2 0007  
                                           ??_EEPROM_Write 0002  
                                            _EscribeLCD_n8 0E8E  
                                                 intlevel2 0000  
                                                sprintf@ap 0016  
                                            ??_HabilitaLCD 0001  
                                                sprintf@sp 000D  
                                         ___lwmod@dividend 0008  
                                             ?_EEPROM_Read 0001  
                                            ?_ConfiguraLCD 0001  
                                       EEPROM_Read@address 0001  
                                                 sprintf@c 0019  
                                                 sprintf@f 000E  
                                          ___lwmod@divisor 000A  
                                          ___lwmod@counter 000C  
                             ?_check_potentiometer_voltaje 0001  
                                           ?_EscribeLCD_n8 0009  
                                           ??_ConfiguraLCD 0001  
                                            ?_EscribeLCD_c 0001  
                                      EEPROM_Write@address 0002  
                                 ??_send_temperature_RS232 001A  
                                      __end_of_HabilitaLCD 195A  
                                   ??_show_temperature_LCD 000B  
