

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jun  2 15:49:36 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 09/02/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     
    87                           	psect	idataCOMRAM
    88   001726                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for _PreloadTMR0
    92   001726  0BDC               	dw	3036
    93                           
    94                           ;initializer for _interfaz
    95   001728  08                 	db	8
    96                           
    97                           	psect	smallconst
    98   000800                     __psmallconst:
    99                           	callstack 0
   100   000800  00                 	db	0
   101   000801                     _dpowers:
   102                           	callstack 0
   103   000801  0001               	dw	1
   104   000803  000A               	dw	10
   105   000805  0064               	dw	100
   106   000807  03E8               	dw	1000
   107   000809  2710               	dw	10000
   108   00080B                     __end_of_dpowers:
   109                           	callstack 0
   110   000000                     _TRISD	set	3989
   111   000000                     _TRISB0	set	31896
   112   000000                     _TRISC2	set	31906
   113   000000                     _RC2	set	31762
   114   000000                     _TRMT	set	32097
   115   000000                     _TRISC1	set	31905
   116   000000                     _RA2	set	31746
   117   000000                     _RE1	set	31777
   118   000000                     _RE2	set	31778
   119   000000                     _GO	set	32273
   120   000000                     _ADON	set	32272
   121   000000                     _TMR0ON	set	32431
   122   000000                     _GIE	set	32663
   123   000000                     _TMR0IE	set	32661
   124   000000                     _LATC2	set	31834
   125   000000                     _LATD1	set	31841
   126   000000                     _LATD0	set	31840
   127   000000                     _LATD	set	3980
   128   000000                     _RA1	set	31745
   129   000000                     _RB0	set	31752
   130   000000                     _LATB0	set	31824
   131   000000                     _LATC1	set	31833
   132   000000                     _TRISA	set	3986
   133   000000                     _LATE	set	3981
   134   000000                     _TRISE	set	3990
   135   000000                     _RCSTA	set	4011
   136   000000                     _TXSTA	set	4012
   137   000000                     _SWDTEN	set	32392
   138   000000                     _OSCCON	set	4051
   139   000000                     _T0CON	set	4053
   140   000000                     _TXREG	set	4013
   141   000000                     _SPBRG	set	4015
   142   000000                     _BAUDCON	set	4024
   143   000000                     _ADCON2	set	4032
   144   000000                     _ADCON1	set	4033
   145   000000                     _ADRES	set	4035
   146   000000                     _ADCON0	set	4034
   147   000000                     _TO	set	32387
   148   000000                     _TMR0	set	4054
   149   000000                     _TMR0IF	set	32658
   150   000000                     _RC1	set	31761
   151   000000                     _RE0	set	31776
   152   00080B                     STR_2:
   153   00080B  42                 	db	66	;'B'
   154   00080C  69                 	db	105	;'i'
   155   00080D  65                 	db	101	;'e'
   156   00080E  6E                 	db	110	;'n'
   157   00080F  76                 	db	118	;'v'
   158   000810  65                 	db	101	;'e'
   159   000811  6E                 	db	110	;'n'
   160   000812  69                 	db	105	;'i'
   161   000813  64                 	db	100	;'d'
   162   000814  6F                 	db	111	;'o'
   163   000815  20                 	db	32
   164   000816  61                 	db	97	;'a'
   165   000817  20                 	db	32
   166   000818  53                 	db	83	;'S'
   167   000819  65                 	db	101	;'e'
   168   00081A  6E                 	db	110	;'n'
   169   00081B  73                 	db	115	;'s'
   170   00081C  6F                 	db	111	;'o'
   171   00081D  72                 	db	114	;'r'
   172   00081E  00                 	db	0
   173   00081F                     STR_9:
   174   00081F  54                 	db	84	;'T'
   175   000820  3A                 	db	58	;':'
   176   000821  20                 	db	32
   177   000822  25                 	db	37
   178   000823  69                 	db	105	;'i'
   179   000824  20                 	db	32
   180   000825  52                 	db	82	;'R'
   181   000826  61                 	db	97	;'a'
   182   000827  0A                 	db	10
   183   000828  48                 	db	72	;'H'
   184   000829  3A                 	db	58	;':'
   185   00082A  20                 	db	32
   186   00082B  25                 	db	37
   187   00082C  69                 	db	105	;'i'
   188   00082D  20                 	db	32
   189   00082E  25                 	db	37
   190   00082F  63                 	db	99	;'c'
   191   000830  00                 	db	0
   192   000831                     STR_7:
   193   000831  54                 	db	84	;'T'
   194   000832  3A                 	db	58	;':'
   195   000833  20                 	db	32
   196   000834  25                 	db	37
   197   000835  69                 	db	105	;'i'
   198   000836  20                 	db	32
   199   000837  43                 	db	67	;'C'
   200   000838  0A                 	db	10
   201   000839  48                 	db	72	;'H'
   202   00083A  3A                 	db	58	;':'
   203   00083B  20                 	db	32
   204   00083C  25                 	db	37
   205   00083D  69                 	db	105	;'i'
   206   00083E  20                 	db	32
   207   00083F  25                 	db	37
   208   000840  63                 	db	99	;'c'
   209   000841  00                 	db	0
   210   000842                     STR_10:
   211   000842  54                 	db	84	;'T'
   212   000843  3A                 	db	58	;':'
   213   000844  20                 	db	32
   214   000845  25                 	db	37
   215   000846  69                 	db	105	;'i'
   216   000847  20                 	db	32
   217   000848  46                 	db	70	;'F'
   218   000849  0A                 	db	10
   219   00084A  48                 	db	72	;'H'
   220   00084B  3A                 	db	58	;':'
   221   00084C  20                 	db	32
   222   00084D  25                 	db	37
   223   00084E  69                 	db	105	;'i'
   224   00084F  20                 	db	32
   225   000850  25                 	db	37
   226   000851  63                 	db	99	;'c'
   227   000852  00                 	db	0
   228   000853                     STR_8:
   229   000853  54                 	db	84	;'T'
   230   000854  3A                 	db	58	;':'
   231   000855  20                 	db	32
   232   000856  25                 	db	37
   233   000857  69                 	db	105	;'i'
   234   000858  20                 	db	32
   235   000859  4B                 	db	75	;'K'
   236   00085A  0A                 	db	10
   237   00085B  48                 	db	72	;'H'
   238   00085C  3A                 	db	58	;':'
   239   00085D  20                 	db	32
   240   00085E  25                 	db	37
   241   00085F  69                 	db	105	;'i'
   242   000860  20                 	db	32
   243   000861  25                 	db	37
   244   000862  63                 	db	99	;'c'
   245   000863  00                 	db	0
   246   000864                     STR_3:
   247   000864  44                 	db	68	;'D'
   248   000865  69                 	db	105	;'i'
   249   000866  6F                 	db	111	;'o'
   250   000867  73                 	db	115	;'s'
   251   000868  20                 	db	32
   252   000869  65                 	db	101	;'e'
   253   00086A  73                 	db	115	;'s'
   254   00086B  20                 	db	32
   255   00086C  62                 	db	98	;'b'
   256   00086D  75                 	db	117	;'u'
   257   00086E  65                 	db	101	;'e'
   258   00086F  6E                 	db	110	;'n'
   259   000870  6F                 	db	111	;'o'
   260   000871  00                 	db	0
   261   000872                     STR_1:
   262   000872  46                 	db	70	;'F'
   263   000873  61                 	db	97	;'a'
   264   000874  69                 	db	105	;'i'
   265   000875  6C                 	db	108	;'l'
   266   000876  65                 	db	101	;'e'
   267   000877  64                 	db	100	;'d'
   268   000878  20                 	db	32
   269   000879  44                 	db	68	;'D'
   270   00087A  48                 	db	72	;'H'
   271   00087B  54                 	db	84	;'T'
   272   00087C  31                 	db	49	;'1'
   273   00087D  31                 	db	49	;'1'
   274   00087E  00                 	db	0
   275   00087F                     STR_4:
   276   00087F  54                 	db	84	;'T'
   277   000880  3A                 	db	58	;':'
   278   000881  20                 	db	32
   279   000882  25                 	db	37
   280   000883  69                 	db	105	;'i'
   281   000884  20                 	db	32
   282   000885  43                 	db	67	;'C'
   283   000886  0A                 	db	10
   284   000887  00                 	db	0
   285   000888                     STR_11:
   286   000888  28                 	db	40
   287   000889  6E                 	db	110	;'n'
   288   00088A  75                 	db	117	;'u'
   289   00088B  6C                 	db	108	;'l'
   290   00088C  6C                 	db	108	;'l'
   291   00088D  29                 	db	41
   292   00088E  00                 	db	0
   293   00088F                     STR_6:
   294   00088F  48                 	db	72	;'H'
   295   000890  6F                 	db	111	;'o'
   296   000891  6C                 	db	108	;'l'
   297   000892  61                 	db	97	;'a'
   298   000893  00                 	db	0
   299   000894                     STR_5:
   300   000894  25                 	db	37
   301   000895  73                 	db	115	;'s'
   302   000896  00                 	db	0
   303   000897  00                 	db	0	; dummy byte at the end
   304   000000                     
   305                           ; #config settings
   306                           
   307                           	psect	cinit
   308   00147A                     __pcinit:
   309                           	callstack 0
   310   00147A                     start_initialization:
   311                           	callstack 0
   312   00147A                     __initialization:
   313                           	callstack 0
   314                           
   315                           ; Initialize objects allocated to COMRAM (3 bytes)
   316                           ; load TBLPTR registers with __pidataCOMRAM
   317   00147A  0E26               	movlw	low __pidataCOMRAM
   318   00147C  6EF6               	movwf	tblptrl,c
   319   00147E  0E17               	movlw	high __pidataCOMRAM
   320   001480  6EF7               	movwf	tblptrh,c
   321   001482  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   322   001484  6EF8               	movwf	tblptru,c
   323   001486  0009               	tblrd		*+	;fetch initializer
   324   001488  CFF5 F058          	movff	tablat,__pdataCOMRAM
   325   00148C  0009               	tblrd		*+	;fetch initializer
   326   00148E  CFF5 F059          	movff	tablat,__pdataCOMRAM+1
   327   001492  0009               	tblrd		*+	;fetch initializer
   328   001494  CFF5 F05A          	movff	tablat,__pdataCOMRAM+2
   329                           
   330                           ; Clear objects allocated to BANK0 (32 bytes)
   331   001498  EE00  F060         	lfsr	0,__pbssBANK0
   332   00149C  0E20               	movlw	32
   333   00149E                     clear_0:
   334   00149E  6AEE               	clrf	postinc0,c
   335   0014A0  06E8               	decf	wreg,f,c
   336   0014A2  E1FD               	bnz	clear_0
   337                           
   338                           ; Clear objects allocated to COMRAM (16 bytes)
   339   0014A4  EE00  F048         	lfsr	0,__pbssCOMRAM
   340   0014A8  0E10               	movlw	16
   341   0014AA                     clear_1:
   342   0014AA  6AEE               	clrf	postinc0,c
   343   0014AC  06E8               	decf	wreg,f,c
   344   0014AE  E1FD               	bnz	clear_1
   345   0014B0                     end_of_initialization:
   346                           	callstack 0
   347   0014B0                     __end_of__initialization:
   348                           	callstack 0
   349   0014B0  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   350   0014B2  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   351   0014B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   352   0014B6  6EF8               	movwf	tblptru,c
   353   0014B8  0100               	movlb	0
   354   0014BA  EFE0  F00A         	goto	_main	;jump to C main() function
   355                           
   356                           	psect	bssCOMRAM
   357   000048                     __pbssCOMRAM:
   358                           	callstack 0
   359   000048                     _Enable_sample:
   360                           	callstack 0
   361   000048                     	ds	1
   362   000049                     _Che:
   363                           	callstack 0
   364   000049                     	ds	1
   365   00004A                     _Hum:
   366                           	callstack 0
   367   00004A                     	ds	1
   368   00004B                     _Temp:
   369                           	callstack 0
   370   00004B                     	ds	1
   371   00004C                     _Buffer_RS232:
   372                           	callstack 0
   373   00004C                     	ds	12
   374                           
   375                           	psect	dataCOMRAM
   376   000058                     __pdataCOMRAM:
   377                           	callstack 0
   378   000058                     _PreloadTMR0:
   379                           	callstack 0
   380   000058                     	ds	2
   381   00005A                     _interfaz:
   382                           	callstack 0
   383   00005A                     	ds	1
   384                           
   385                           	psect	bssBANK0
   386   000060                     __pbssBANK0:
   387                           	callstack 0
   388   000060                     _Buffer_LCD:
   389                           	callstack 0
   390   000060                     	ds	32
   391                           
   392                           	psect	cstackCOMRAM
   393   000001                     __pcstackCOMRAM:
   394                           	callstack 0
   395   000001                     ??_RetardoLCD:
   396   000001                     ?___lwdiv:
   397                           	callstack 0
   398   000001                     ?___ftpack:
   399                           	callstack 0
   400   000001                     ConfiguraLCD@a:
   401                           	callstack 0
   402   000001                     LeerBit@res:
   403                           	callstack 0
   404   000001                     Transmitir@BufferT:
   405                           	callstack 0
   406   000001                     ___lwdiv@dividend:
   407                           	callstack 0
   408   000001                     ___ftpack@arg:
   409                           	callstack 0
   410                           
   411                           ; 3 bytes @ 0x0
   412   000001                     	ds	1
   413   000002                     ??_send_temperature_RS232:
   414   000002                     ??_LeerByte:
   415   000002                     RetardoLCD@a:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x1
   419   000002                     	ds	1
   420   000003                     ??_EnviaDato:
   421   000003                     LeerByte@res:
   422                           	callstack 0
   423   000003                     ___lwdiv@divisor:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x2
   427   000003                     	ds	1
   428   000004                     EnviaDato@a:
   429                           	callstack 0
   430   000004                     send_temperature_RS232@counter:
   431                           	callstack 0
   432   000004                     LeerByte@i:
   433                           	callstack 0
   434   000004                     ___ftpack@exp:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x3
   438   000004                     	ds	1
   439   000005                     ??_init_configuration:
   440   000005                     ??_LeerHT11:
   441   000005                     EscribeLCD_c@a:
   442                           	callstack 0
   443   000005                     DireccionaLCD@a:
   444                           	callstack 0
   445   000005                     ___ftpack@sign:
   446                           	callstack 0
   447   000005                     ___lwdiv@quotient:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x4
   451   000005                     	ds	1
   452   000006                     ??___ftpack:
   453   000006                     MensajeLCD_Var@a:
   454                           	callstack 0
   455   000006                     LeerHT11@contr:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x5
   459   000006                     	ds	1
   460   000007                     ??_MensajeLCD_Var:
   461   000007                     show_temperature_LCD@counter:
   462                           	callstack 0
   463   000007                     ___lwdiv@counter:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x6
   467   000007                     	ds	1
   468   000008                     ?___lwmod:
   469                           	callstack 0
   470   000008                     MensajeLCD_Var@counter:
   471                           	callstack 0
   472   000008                     ___lwmod@dividend:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x7
   476   000008                     	ds	1
   477   000009                     ??_welcome_operations:
   478   000009                     ?___lbtoft:
   479                           	callstack 0
   480                           
   481                           ; 3 bytes @ 0x8
   482   000009                     	ds	1
   483   00000A                     ___lwmod@divisor:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x9
   487   00000A                     	ds	2
   488   00000C                     ___lbtoft@c:
   489                           	callstack 0
   490   00000C                     ___lwmod@counter:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0xB
   494   00000C                     	ds	1
   495   00000D                     ?_sprintf:
   496                           	callstack 0
   497   00000D                     ?___ftmul:
   498                           	callstack 0
   499   00000D                     sprintf@sp:
   500                           	callstack 0
   501   00000D                     ___ftmul@f1:
   502                           	callstack 0
   503                           
   504                           ; 3 bytes @ 0xC
   505   00000D                     	ds	1
   506   00000E                     sprintf@f:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0xD
   510   00000E                     	ds	2
   511   000010                     ___ftmul@f2:
   512                           	callstack 0
   513                           
   514                           ; 3 bytes @ 0xF
   515   000010                     	ds	3
   516   000013                     ??___ftmul:
   517                           
   518                           ; 1 bytes @ 0x12
   519   000013                     	ds	2
   520   000015                     ??_sprintf:
   521                           
   522                           ; 1 bytes @ 0x14
   523   000015                     	ds	1
   524   000016                     sprintf@flag:
   525                           	callstack 0
   526   000016                     ___ftmul@exp:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x15
   530   000016                     	ds	1
   531   000017                     sprintf@prec:
   532                           	callstack 0
   533   000017                     ___ftmul@f3_as_product:
   534                           	callstack 0
   535                           
   536                           ; 3 bytes @ 0x16
   537   000017                     	ds	1
   538   000018                     sprintf@cp:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x17
   542   000018                     	ds	2
   543   00001A                     sprintf@ap:
   544                           	callstack 0
   545   00001A                     ___ftmul@cntr:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x19
   549   00001A                     	ds	1
   550   00001B                     ___ftmul@sign:
   551                           	callstack 0
   552   00001B                     sprintf@val:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x1A
   556   00001B                     	ds	1
   557   00001C                     ?___ftdiv:
   558                           	callstack 0
   559   00001C                     ___ftdiv@f1:
   560                           	callstack 0
   561                           
   562                           ; 3 bytes @ 0x1B
   563   00001C                     	ds	1
   564   00001D                     sprintf@c:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x1C
   568   00001D                     	ds	2
   569   00001F                     ___ftdiv@f2:
   570                           	callstack 0
   571                           
   572                           ; 3 bytes @ 0x1E
   573   00001F                     	ds	3
   574   000022                     ??___ftdiv:
   575                           
   576                           ; 1 bytes @ 0x21
   577   000022                     	ds	3
   578   000025                     ___ftdiv@cntr:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x24
   582   000025                     	ds	1
   583   000026                     ___ftdiv@f3:
   584                           	callstack 0
   585                           
   586                           ; 3 bytes @ 0x25
   587   000026                     	ds	3
   588   000029                     ___ftdiv@exp:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x28
   592   000029                     	ds	1
   593   00002A                     ___ftdiv@sign:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0x29
   597   00002A                     	ds	1
   598   00002B                     ?___ftadd:
   599                           	callstack 0
   600   00002B                     ___ftadd@f1:
   601                           	callstack 0
   602                           
   603                           ; 3 bytes @ 0x2A
   604   00002B                     	ds	3
   605   00002E                     ___ftadd@f2:
   606                           	callstack 0
   607                           
   608                           ; 3 bytes @ 0x2D
   609   00002E                     	ds	3
   610   000031                     ??___ftadd:
   611                           
   612                           ; 1 bytes @ 0x30
   613   000031                     	ds	3
   614   000034                     ___ftadd@sign:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x33
   618   000034                     	ds	1
   619   000035                     ___ftadd@exp2:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x34
   623   000035                     	ds	1
   624   000036                     ___ftadd@exp1:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x35
   628   000036                     	ds	1
   629   000037                     ?___fttol:
   630                           	callstack 0
   631   000037                     ___fttol@f1:
   632                           	callstack 0
   633                           
   634                           ; 3 bytes @ 0x36
   635   000037                     	ds	4
   636   00003B                     ??___fttol:
   637                           
   638                           ; 1 bytes @ 0x3A
   639   00003B                     	ds	5
   640   000040                     ___fttol@sign1:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x3F
   644   000040                     	ds	1
   645   000041                     ___fttol@lval:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x40
   649   000041                     	ds	4
   650   000045                     ___fttol@exp1:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x44
   654   000045                     	ds	1
   655   000046                     choose_scale_temperature_and_fill_buffers@temp_converted:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x45
   659   000046                     	ds	2
   660   000048                     
   661                           ; 1 bytes @ 0x47
   662 ;;
   663 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   664 ;;
   665 ;; *************** function _main *****************
   666 ;; Defined at:
   667 ;;		line 82 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   681 ;;      Params:         0       0       0       0       0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels required when called: 6
   687 ;; This function calls:
   688 ;;		_check_potentiometer_voltaje
   689 ;;		_choose_scale_temperature_and_fill_buffers
   690 ;;		_init_configuration
   691 ;;		_measure_temperature_c
   692 ;;		_save_temperature_c_EEPROM
   693 ;;		_send_temperature_RS232
   694 ;;		_show_temperature_LCD
   695 ;;		_show_temperature_c_RGB
   696 ;;		_welcome_operations
   697 ;; This function is called by:
   698 ;;		Startup code after reset
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text0
   703   0015C0                     __ptext0:
   704                           	callstack 0
   705   0015C0                     _main:
   706                           	callstack 25
   707                           
   708                           ;LAB05.c: 83: init_configuration();
   709                           
   710                           ;incstack = 0
   711   0015C0  ECEE  F008         	call	_init_configuration	;wreg free
   712                           
   713                           ;LAB05.c: 84: welcome_operations();
   714   0015C4  ECA1  F00A         	call	_welcome_operations	;wreg free
   715                           
   716                           ;LAB05.c: 88: SWDTEN = 1;
   717   0015C8  80D1               	bsf	4049,0,c	;volatile
   718   0015CA                     l2544:
   719                           
   720                           ;LAB05.c: 92: if(Enable_sample){
   721   0015CA  5048               	movf	_Enable_sample^0,w,c
   722   0015CC  B4D8               	btfsc	status,2,c
   723   0015CE  D7FD               	goto	l2544
   724                           
   725                           ;LAB05.c: 94: measure_temperature_c();
   726   0015D0  EC90  F00B         	call	_measure_temperature_c	;wreg free
   727   0015D4  0004               	clrwdt		;# 
   728                           
   729                           ;LAB05.c: 98: check_potentiometer_voltaje();
   730   0015D6  EC35  F00B         	call	_check_potentiometer_voltaje	;wreg free
   731                           
   732                           ;LAB05.c: 99: save_temperature_c_EEPROM();
   733   0015DA  EC95  F00B         	call	_save_temperature_c_EEPROM	;wreg free
   734                           
   735                           ;LAB05.c: 100: choose_scale_temperature_and_fill_buffers();
   736   0015DE  EC4C  F004         	call	_choose_scale_temperature_and_fill_buffers	;wreg free
   737                           
   738                           ;LAB05.c: 101: send_temperature_RS232();
   739   0015E2  ECC1  F00A         	call	_send_temperature_RS232	;wreg free
   740                           
   741                           ;LAB05.c: 102: show_temperature_c_RGB();
   742   0015E6  EC2E  F009         	call	_show_temperature_c_RGB	;wreg free
   743                           
   744                           ;LAB05.c: 103: show_temperature_LCD();
   745   0015EA  EC5F  F00A         	call	_show_temperature_LCD	;wreg free
   746                           
   747                           ;LAB05.c: 104: Enable_sample = 0;
   748   0015EE  0E00               	movlw	0
   749   0015F0  6E48               	movwf	_Enable_sample^0,c
   750   0015F2  D7EB               	goto	l2544
   751   0015F4                     __end_of_main:
   752                           	callstack 0
   753                           
   754 ;; *************** function _welcome_operations *****************
   755 ;; Defined at:
   756 ;;		line 184 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   770 ;;      Params:         0       0       0       0       0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0       0       0       0       0
   772 ;;      Temps:          2       0       0       0       0       0       0       0       0
   773 ;;      Totals:         2       0       0       0       0       0       0       0       0
   774 ;;Total ram usage:        2 bytes
   775 ;; Hardware stack levels used: 1
   776 ;; Hardware stack levels required when called: 5
   777 ;; This function calls:
   778 ;;		_BorraLCD
   779 ;;		_MensajeLCD_Var
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text1
   786   001542                     __ptext1:
   787                           	callstack 0
   788   001542                     _welcome_operations:
   789                           	callstack 25
   790                           
   791                           ;LAB05.c: 187: if(TO==0){
   792                           
   793                           ;incstack = 0
   794   001542  B6D0               	btfsc	4048,3,c	;volatile
   795   001544  D006               	goto	l2470
   796                           
   797                           ;LAB05.c: 188: TO=1;
   798   001546  86D0               	bsf	4048,3,c	;volatile
   799                           
   800                           ;LAB05.c: 189: MensajeLCD_Var("Failed DHT11");
   801   001548  0E72               	movlw	low STR_1
   802   00154A  6E06               	movwf	MensajeLCD_Var@a^0,c
   803   00154C  EC96  F009         	call	_MensajeLCD_Var	;wreg free
   804   001550  0003               	sleep		;# 
   805   001552                     l2470:
   806                           
   807                           ;LAB05.c: 191: };LAB05.c: 193: BorraLCD();
   808   001552  EC79  F00B         	call	_BorraLCD	;wreg free
   809                           
   810                           ;LAB05.c: 194: MensajeLCD_Var("Bienvenido a Sensor");
   811   001556  0E0B               	movlw	low STR_2
   812   001558  6E06               	movwf	MensajeLCD_Var@a^0,c
   813   00155A  EC96  F009         	call	_MensajeLCD_Var	;wreg free
   814                           
   815                           ;LAB05.c: 195: MensajeLCD_Var("Dios es bueno");
   816   00155E  0E64               	movlw	low STR_3
   817   001560  6E06               	movwf	MensajeLCD_Var@a^0,c
   818   001562  EC96  F009         	call	_MensajeLCD_Var	;wreg free
   819                           
   820                           ;LAB05.c: 196: _delay((unsigned long)((1000)*(8000000/4000.0)));
   821   001566  0E0B               	movlw	11
   822   001568  6E0A               	movwf	(??_welcome_operations+1)^0,c
   823   00156A  0E26               	movlw	38
   824   00156C  6E09               	movwf	??_welcome_operations^0,c
   825   00156E  0E5E               	movlw	94
   826   001570                     u2007:
   827   001570  2EE8               	decfsz	wreg,f,c
   828   001572  D7FE               	bra	u2007
   829   001574  2E09               	decfsz	??_welcome_operations^0,f,c
   830   001576  D7FC               	bra	u2007
   831   001578  2E0A               	decfsz	(??_welcome_operations+1)^0,f,c
   832   00157A  D7FA               	bra	u2007
   833                           
   834                           ;LAB05.c: 197: BorraLCD();
   835   00157C  EC79  F00B         	call	_BorraLCD	;wreg free
   836   001580  0012               	return		;funcret
   837   001582                     __end_of_welcome_operations:
   838                           	callstack 0
   839                           
   840 ;; *************** function _MensajeLCD_Var *****************
   841 ;; Defined at:
   842 ;;		line 232 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  a               1    5[COMRAM] PTR unsigned char 
   845 ;;		 -> STR_3(14), STR_2(20), STR_1(13), 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  counter         1    7[COMRAM] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   857 ;;      Params:         1       0       0       0       0       0       0       0       0
   858 ;;      Locals:         1       0       0       0       0       0       0       0       0
   859 ;;      Temps:          1       0       0       0       0       0       0       0       0
   860 ;;      Totals:         3       0       0       0       0       0       0       0       0
   861 ;;Total ram usage:        3 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 4
   864 ;; This function calls:
   865 ;;		_BorraLCD
   866 ;;		_DireccionaLCD
   867 ;;		_EscribeLCD_c
   868 ;; This function is called by:
   869 ;;		_welcome_operations
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text2
   874   00132C                     __ptext2:
   875                           	callstack 0
   876   00132C                     _MensajeLCD_Var:
   877                           	callstack 25
   878                           
   879                           ;LibLCDXC8.h: 237: unsigned char counter=0;
   880                           
   881                           ;incstack = 0
   882   00132C  0E00               	movlw	0
   883   00132E  6E08               	movwf	MensajeLCD_Var@counter^0,c
   884                           
   885                           ;LibLCDXC8.h: 238: while(a[counter]!='\0' && counter<=255){
   886   001330  D022               	goto	l2106
   887   001332                     l2094:
   888                           
   889                           ;LibLCDXC8.h: 240: if((counter+1)%32==0){
   890   001332  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
   891   001336  0E01               	movlw	1
   892   001338  2607               	addwf	??_MensajeLCD_Var^0,f,c
   893   00133A  0E1F               	movlw	31
   894   00133C  1607               	andwf	??_MensajeLCD_Var^0,f,c
   895   00133E  A4D8               	btfss	status,2,c
   896   001340  D003               	goto	l2098
   897                           
   898                           ;LibLCDXC8.h: 241: BorraLCD();
   899   001342  EC79  F00B         	call	_BorraLCD	;wreg free
   900                           
   901                           ;LibLCDXC8.h: 242: }
   902   001346  D00B               	goto	l2102
   903   001348                     l2098:
   904                           
   905                           ;LibLCDXC8.h: 243: else if((counter+1)%16==0){
   906   001348  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
   907   00134C  0E01               	movlw	1
   908   00134E  2607               	addwf	??_MensajeLCD_Var^0,f,c
   909   001350  0E0F               	movlw	15
   910   001352  1607               	andwf	??_MensajeLCD_Var^0,f,c
   911   001354  A4D8               	btfss	status,2,c
   912   001356  D003               	goto	l2102
   913                           
   914                           ;LibLCDXC8.h: 244: DireccionaLCD(0xC0);
   915   001358  0EC0               	movlw	192
   916   00135A  EC6E  F00B         	call	_DireccionaLCD
   917   00135E                     l2102:
   918                           
   919                           ;LibLCDXC8.h: 245: };LibLCDXC8.h: 247: EscribeLCD_c(a[counter]);
   920   00135E  5006               	movf	MensajeLCD_Var@a^0,w,c
   921   001360  2408               	addwf	MensajeLCD_Var@counter^0,w,c
   922   001362  6E07               	movwf	??_MensajeLCD_Var^0,c
   923   001364  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   924   001368                     	if	1	;There is more than 1 active tblptr byte
   925   001368  0E08               	movlw	high __smallconst
   926   00136A  6EF7               	movwf	tblptrh,c
   927   00136C                     	endif
   928   00136C                     	if	0	;tblptru may be non-zero
   929   00136C                     	endif
   930   00136C                     	if	0	;tblptru may be non-zero
   931   00136C                     	endif
   932   00136C  0008               	tblrd		*
   933   00136E  50F5               	movf	tablat,w,c
   934   001370  EC63  F00B         	call	_EscribeLCD_c
   935                           
   936                           ;LibLCDXC8.h: 248: counter++;
   937   001374  2A08               	incf	MensajeLCD_Var@counter^0,f,c
   938   001376                     l2106:
   939   001376  5006               	movf	MensajeLCD_Var@a^0,w,c
   940   001378  2408               	addwf	MensajeLCD_Var@counter^0,w,c
   941   00137A  6E07               	movwf	??_MensajeLCD_Var^0,c
   942   00137C  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   943   001380                     	if	1	;There is more than 1 active tblptr byte
   944   001380  0E08               	movlw	high __smallconst
   945   001382  6EF7               	movwf	tblptrh,c
   946   001384                     	endif
   947   001384                     	if	0	;tblptru may be non-zero
   948   001384                     	endif
   949   001384                     	if	0	;tblptru may be non-zero
   950   001384                     	endif
   951   001384  0008               	tblrd		*
   952   001386  50F5               	movf	tablat,w,c
   953   001388  0900               	iorlw	0
   954   00138A  B4D8               	btfsc	status,2,c
   955   00138C  0012               	return	
   956   00138E  D7D1               	goto	l2094
   957   001390                     __end_of_MensajeLCD_Var:
   958                           	callstack 0
   959                           
   960 ;; *************** function _show_temperature_c_RGB *****************
   961 ;; Defined at:
   962 ;;		line 225 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   976 ;;      Params:         0       0       0       0       0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0
   979 ;;      Totals:         0       0       0       0       0       0       0       0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; Hardware stack levels required when called: 1
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text3
   991   00125C                     __ptext3:
   992                           	callstack 0
   993   00125C                     _show_temperature_c_RGB:
   994                           	callstack 29
   995                           
   996                           ;LAB05.c: 226: if(Temp<22){
   997                           
   998                           ;incstack = 0
   999   00125C  0E16               	movlw	22
  1000   00125E  604B               	cpfslt	_Temp^0,c
  1001   001260  D004               	goto	l1836
  1002                           
  1003                           ;LAB05.c: 228: RE0=1;
  1004   001262  8084               	bsf	3972,0,c	;volatile
  1005                           
  1006                           ;LAB05.c: 229: RE2=1;
  1007   001264  8484               	bsf	3972,2,c	;volatile
  1008                           
  1009                           ;LAB05.c: 230: RE1=1;
  1010   001266  8284               	bsf	3972,1,c	;volatile
  1011                           
  1012                           ;LAB05.c: 231: }
  1013   001268  0012               	return	
  1014   00126A                     l1836:
  1015                           
  1016                           ;LAB05.c: 232: else if(Temp<25) {
  1017   00126A  0E19               	movlw	25
  1018   00126C  604B               	cpfslt	_Temp^0,c
  1019   00126E  D004               	goto	l1840
  1020                           
  1021                           ;LAB05.c: 234: RE0=0;
  1022   001270  9084               	bcf	3972,0,c	;volatile
  1023                           
  1024                           ;LAB05.c: 235: RE2=1;
  1025   001272  8484               	bsf	3972,2,c	;volatile
  1026                           
  1027                           ;LAB05.c: 236: RE1=0;
  1028   001274  9284               	bcf	3972,1,c	;volatile
  1029                           
  1030                           ;LAB05.c: 237: }
  1031   001276  0012               	return	
  1032   001278                     l1840:
  1033                           
  1034                           ;LAB05.c: 238: else if(Temp<28){
  1035   001278  0E1C               	movlw	28
  1036   00127A  604B               	cpfslt	_Temp^0,c
  1037   00127C  D004               	goto	l1844
  1038                           
  1039                           ;LAB05.c: 240: RE0=1;
  1040   00127E  8084               	bsf	3972,0,c	;volatile
  1041                           
  1042                           ;LAB05.c: 241: RE2=1;
  1043   001280  8484               	bsf	3972,2,c	;volatile
  1044                           
  1045                           ;LAB05.c: 242: RE1=0;
  1046   001282  9284               	bcf	3972,1,c	;volatile
  1047                           
  1048                           ;LAB05.c: 244: }
  1049   001284  0012               	return	
  1050   001286                     l1844:
  1051                           
  1052                           ;LAB05.c: 245: else if(Temp<31){
  1053   001286  0E1F               	movlw	31
  1054   001288  604B               	cpfslt	_Temp^0,c
  1055   00128A  D004               	goto	l1848
  1056                           
  1057                           ;LAB05.c: 247: RE0=1;
  1058   00128C  8084               	bsf	3972,0,c	;volatile
  1059                           
  1060                           ;LAB05.c: 248: RE2=0;
  1061   00128E  9484               	bcf	3972,2,c	;volatile
  1062                           
  1063                           ;LAB05.c: 249: RE1=0;
  1064   001290  9284               	bcf	3972,1,c	;volatile
  1065                           
  1066                           ;LAB05.c: 250: }
  1067   001292  0012               	return	
  1068   001294                     l1848:
  1069                           
  1070                           ;LAB05.c: 251: else if(Temp<34){
  1071   001294  0E22               	movlw	34
  1072   001296  604B               	cpfslt	_Temp^0,c
  1073   001298  D004               	goto	l1852
  1074                           
  1075                           ;LAB05.c: 253: RE0=1;
  1076   00129A  8084               	bsf	3972,0,c	;volatile
  1077                           
  1078                           ;LAB05.c: 254: RE2=0;
  1079   00129C  9484               	bcf	3972,2,c	;volatile
  1080                           
  1081                           ;LAB05.c: 255: RE1=1;
  1082   00129E  8284               	bsf	3972,1,c	;volatile
  1083                           
  1084                           ;LAB05.c: 256: }
  1085   0012A0  0012               	return	
  1086   0012A2                     l1852:
  1087                           
  1088                           ;LAB05.c: 257: else if(Temp<37){
  1089   0012A2  0E25               	movlw	37
  1090   0012A4  604B               	cpfslt	_Temp^0,c
  1091   0012A6  D004               	goto	l1856
  1092                           
  1093                           ;LAB05.c: 259: RE0=0;
  1094   0012A8  9084               	bcf	3972,0,c	;volatile
  1095                           
  1096                           ;LAB05.c: 260: RE2=0;
  1097   0012AA  9484               	bcf	3972,2,c	;volatile
  1098                           
  1099                           ;LAB05.c: 261: RE1=1;
  1100   0012AC  8284               	bsf	3972,1,c	;volatile
  1101                           
  1102                           ;LAB05.c: 262: }
  1103   0012AE  0012               	return	
  1104   0012B0                     l1856:
  1105                           
  1106                           ;LAB05.c: 263: else if(Temp<40){
  1107   0012B0  0E28               	movlw	40
  1108   0012B2  604B               	cpfslt	_Temp^0,c
  1109   0012B4  D004               	goto	l284
  1110                           
  1111                           ;LAB05.c: 265: RE0=0;
  1112   0012B6  9084               	bcf	3972,0,c	;volatile
  1113                           
  1114                           ;LAB05.c: 266: RE2=1;
  1115   0012B8  8484               	bsf	3972,2,c	;volatile
  1116                           
  1117                           ;LAB05.c: 267: RE1=1;
  1118   0012BA  8284               	bsf	3972,1,c	;volatile
  1119                           
  1120                           ;LAB05.c: 268: }
  1121   0012BC  0012               	return	
  1122   0012BE                     l284:
  1123                           
  1124                           ;LAB05.c: 269: else{;LAB05.c: 271: RE0=0;
  1125   0012BE  9084               	bcf	3972,0,c	;volatile
  1126                           
  1127                           ;LAB05.c: 272: RE2=0;
  1128   0012C0  9484               	bcf	3972,2,c	;volatile
  1129                           
  1130                           ;LAB05.c: 273: RE1=0;
  1131   0012C2  9284               	bcf	3972,1,c	;volatile
  1132   0012C4  0012               	return		;funcret
  1133   0012C6                     __end_of_show_temperature_c_RGB:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _show_temperature_LCD *****************
  1137 ;; Defined at:
  1138 ;;		line 320 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  counter         1    6[COMRAM] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0
  1153 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1154 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1155 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1156 ;;Total ram usage:        2 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; Hardware stack levels required when called: 4
  1159 ;; This function calls:
  1160 ;;		_BorraLCD
  1161 ;;		_DireccionaLCD
  1162 ;;		_EscribeLCD_c
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text4
  1169   0014BE                     __ptext4:
  1170                           	callstack 0
  1171   0014BE                     _show_temperature_LCD:
  1172                           	callstack 26
  1173                           
  1174                           ;LAB05.c: 321: unsigned char counter=0;
  1175                           
  1176                           ;incstack = 0
  1177   0014BE  0E00               	movlw	0
  1178   0014C0  6E07               	movwf	show_temperature_LCD@counter^0,c
  1179                           
  1180                           ;LAB05.c: 322: BorraLCD();
  1181   0014C2  EC79  F00B         	call	_BorraLCD	;wreg free
  1182                           
  1183                           ;LAB05.c: 323: while (Buffer_LCD[counter]!='\0') {
  1184   0014C6  D014               	goto	l2536
  1185   0014C8                     l2526:
  1186                           
  1187                           ;LAB05.c: 324: if(Buffer_LCD[counter]=='\n'){
  1188   0014C8  5007               	movf	show_temperature_LCD@counter^0,w,c
  1189   0014CA  0F60               	addlw	low _Buffer_LCD
  1190   0014CC  6ED9               	movwf	fsr2l,c
  1191   0014CE  6ADA               	clrf	fsr2h,c
  1192   0014D0  0E0A               	movlw	10
  1193   0014D2  18DE               	xorwf	postinc2,w,c
  1194   0014D4  A4D8               	btfss	status,2,c
  1195   0014D6  D004               	goto	l2532
  1196                           
  1197                           ;LAB05.c: 325: DireccionaLCD(0xC0);
  1198   0014D8  0EC0               	movlw	192
  1199   0014DA  EC6E  F00B         	call	_DireccionaLCD
  1200                           
  1201                           ;LAB05.c: 326: counter++;
  1202   0014DE  2A07               	incf	show_temperature_LCD@counter^0,f,c
  1203   0014E0                     l2532:
  1204                           
  1205                           ;LAB05.c: 327: };LAB05.c: 328: EscribeLCD_c(Buffer_LCD[counter]);
  1206   0014E0  5007               	movf	show_temperature_LCD@counter^0,w,c
  1207   0014E2  0F60               	addlw	low _Buffer_LCD
  1208   0014E4  6ED9               	movwf	fsr2l,c
  1209   0014E6  6ADA               	clrf	fsr2h,c
  1210   0014E8  50DF               	movf	indf2,w,c
  1211   0014EA  EC63  F00B         	call	_EscribeLCD_c
  1212                           
  1213                           ;LAB05.c: 329: counter++;
  1214   0014EE  2A07               	incf	show_temperature_LCD@counter^0,f,c
  1215   0014F0                     l2536:
  1216   0014F0  5007               	movf	show_temperature_LCD@counter^0,w,c
  1217   0014F2  0F60               	addlw	low _Buffer_LCD
  1218   0014F4  6ED9               	movwf	fsr2l,c
  1219   0014F6  6ADA               	clrf	fsr2h,c
  1220   0014F8  50DF               	movf	indf2,w,c
  1221   0014FA  B4D8               	btfsc	status,2,c
  1222   0014FC  0012               	return	
  1223   0014FE  D7E4               	goto	l2526
  1224   001500                     __end_of_show_temperature_LCD:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _EscribeLCD_c *****************
  1228 ;; Defined at:
  1229 ;;		line 136 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  a               1    wreg     unsigned char 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  a               1    4[COMRAM] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1243 ;;      Params:         0       0       0       0       0       0       0       0       0
  1244 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1246 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1247 ;;Total ram usage:        1 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; Hardware stack levels required when called: 3
  1250 ;; This function calls:
  1251 ;;		_EnviaDato
  1252 ;;		_HabilitaLCD
  1253 ;;		_RetardoLCD
  1254 ;; This function is called by:
  1255 ;;		_MensajeLCD_Var
  1256 ;;		_show_temperature_LCD
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text5
  1261   0016C6                     __ptext5:
  1262                           	callstack 0
  1263   0016C6                     _EscribeLCD_c:
  1264                           	callstack 25
  1265                           
  1266                           ;incstack = 0
  1267                           ;EscribeLCD_c@a stored from wreg
  1268   0016C6  6E05               	movwf	EscribeLCD_c@a^0,c
  1269                           
  1270                           ;LibLCDXC8.h: 140: LATD0=1;
  1271   0016C8  808C               	bsf	3980,0,c	;volatile
  1272                           
  1273                           ;LibLCDXC8.h: 141: EnviaDato(a);
  1274   0016CA  5005               	movf	EscribeLCD_c@a^0,w,c
  1275   0016CC  EC1A  F00A         	call	_EnviaDato
  1276                           
  1277                           ;LibLCDXC8.h: 142: HabilitaLCD();
  1278   0016D0  EC83  F00B         	call	_HabilitaLCD	;wreg free
  1279                           
  1280                           ;LibLCDXC8.h: 143: RetardoLCD(4);
  1281   0016D4  0E04               	movlw	4
  1282   0016D6  EC63  F009         	call	_RetardoLCD
  1283   0016DA  0012               	return		;funcret
  1284   0016DC                     __end_of_EscribeLCD_c:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _DireccionaLCD *****************
  1288 ;; Defined at:
  1289 ;;		line 252 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  a               1    wreg     unsigned char 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  a               1    4[COMRAM] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0
  1304 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1306 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1307 ;;Total ram usage:        1 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 3
  1310 ;; This function calls:
  1311 ;;		_EnviaDato
  1312 ;;		_HabilitaLCD
  1313 ;;		_RetardoLCD
  1314 ;; This function is called by:
  1315 ;;		_MensajeLCD_Var
  1316 ;;		_show_temperature_LCD
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text6
  1321   0016DC                     __ptext6:
  1322                           	callstack 0
  1323   0016DC                     _DireccionaLCD:
  1324                           	callstack 25
  1325                           
  1326                           ;incstack = 0
  1327                           ;DireccionaLCD@a stored from wreg
  1328   0016DC  6E05               	movwf	DireccionaLCD@a^0,c
  1329                           
  1330                           ;LibLCDXC8.h: 255: LATD0=0;
  1331   0016DE  908C               	bcf	3980,0,c	;volatile
  1332                           
  1333                           ;LibLCDXC8.h: 256: EnviaDato(a);
  1334   0016E0  5005               	movf	DireccionaLCD@a^0,w,c
  1335   0016E2  EC1A  F00A         	call	_EnviaDato
  1336                           
  1337                           ;LibLCDXC8.h: 257: HabilitaLCD();
  1338   0016E6  EC83  F00B         	call	_HabilitaLCD	;wreg free
  1339                           
  1340                           ;LibLCDXC8.h: 258: RetardoLCD(4);
  1341   0016EA  0E04               	movlw	4
  1342   0016EC  EC63  F009         	call	_RetardoLCD
  1343   0016F0  0012               	return		;funcret
  1344   0016F2                     __end_of_DireccionaLCD:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _send_temperature_RS232 *****************
  1348 ;; Defined at:
  1349 ;;		line 309 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  counter         1    3[COMRAM] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1363 ;;      Params:         0       0       0       0       0       0       0       0       0
  1364 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1365 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1366 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1367 ;;Total ram usage:        3 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 2
  1370 ;; This function calls:
  1371 ;;		_Transmitir
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text7
  1378   001582                     __ptext7:
  1379                           	callstack 0
  1380   001582                     _send_temperature_RS232:
  1381                           	callstack 28
  1382                           
  1383                           ;LAB05.c: 310: unsigned char counter=0;
  1384                           
  1385                           ;incstack = 0
  1386   001582  0E00               	movlw	0
  1387   001584  6E04               	movwf	send_temperature_RS232@counter^0,c
  1388                           
  1389                           ;LAB05.c: 312: while(Buffer_RS232[counter]!='\0'){
  1390   001586  D008               	goto	l1826
  1391   001588                     l1822:
  1392                           
  1393                           ;LAB05.c: 313: Transmitir(Buffer_RS232[counter]);
  1394   001588  5004               	movf	send_temperature_RS232@counter^0,w,c
  1395   00158A  0F4C               	addlw	low _Buffer_RS232
  1396   00158C  6ED9               	movwf	fsr2l,c
  1397   00158E  6ADA               	clrf	fsr2h,c
  1398   001590  50DF               	movf	indf2,w,c
  1399   001592  EC8A  F00B         	call	_Transmitir
  1400                           
  1401                           ;LAB05.c: 314: counter++;
  1402   001596  2A04               	incf	send_temperature_RS232@counter^0,f,c
  1403   001598                     l1826:
  1404   001598  5004               	movf	send_temperature_RS232@counter^0,w,c
  1405   00159A  0F4C               	addlw	low _Buffer_RS232
  1406   00159C  6ED9               	movwf	fsr2l,c
  1407   00159E  6ADA               	clrf	fsr2h,c
  1408   0015A0  50DF               	movf	indf2,w,c
  1409   0015A2  A4D8               	btfss	status,2,c
  1410   0015A4  D7F1               	goto	l1822
  1411                           
  1412                           ;LAB05.c: 315: };LAB05.c: 316: _delay((unsigned long)((200)*(8000000/4000.0)));
  1413   0015A6  0E03               	movlw	3
  1414   0015A8  6E03               	movwf	(??_send_temperature_RS232+1)^0,c
  1415   0015AA  0E08               	movlw	8
  1416   0015AC  6E02               	movwf	??_send_temperature_RS232^0,c
  1417   0015AE  0E77               	movlw	119
  1418   0015B0                     u2017:
  1419   0015B0  2EE8               	decfsz	wreg,f,c
  1420   0015B2  D7FE               	bra	u2017
  1421   0015B4  2E02               	decfsz	??_send_temperature_RS232^0,f,c
  1422   0015B6  D7FC               	bra	u2017
  1423   0015B8  2E03               	decfsz	(??_send_temperature_RS232+1)^0,f,c
  1424   0015BA  D7FA               	bra	u2017
  1425   0015BC  F000               	nop	
  1426   0015BE  0012               	return		;funcret
  1427   0015C0                     __end_of_send_temperature_RS232:
  1428                           	callstack 0
  1429                           
  1430 ;; *************** function _Transmitir *****************
  1431 ;; Defined at:
  1432 ;;		line 380 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  BufferT         1    wreg     unsigned char 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  BufferT         1    0[COMRAM] unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1446 ;;      Params:         0       0       0       0       0       0       0       0       0
  1447 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1449 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1450 ;;Total ram usage:        1 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_send_temperature_RS232
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text8
  1461   001714                     __ptext8:
  1462                           	callstack 0
  1463   001714                     _Transmitir:
  1464                           	callstack 28
  1465                           
  1466                           ;incstack = 0
  1467                           ;Transmitir@BufferT stored from wreg
  1468   001714  6E01               	movwf	Transmitir@BufferT^0,c
  1469   001716                     
  1470                           ;LAB05.c: 381: while(TRMT==0);
  1471   001716  A2AC               	btfss	4012,1,c	;volatile
  1472   001718  D7FE               	goto	l1478
  1473                           
  1474                           ;LAB05.c: 382: TXREG=BufferT;
  1475   00171A  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1476   00171E  0012               	return		;funcret
  1477   001720                     __end_of_Transmitir:
  1478                           	callstack 0
  1479                           
  1480 ;; *************** function _save_temperature_c_EEPROM *****************
  1481 ;; Defined at:
  1482 ;;		line 222 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		None
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1496 ;;      Params:         0       0       0       0       0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1499 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text9
  1511   00172A                     __ptext9:
  1512                           	callstack 0
  1513   00172A                     _save_temperature_c_EEPROM:
  1514                           	callstack 29
  1515                           
  1516                           ;LAB05.c: 223: return;
  1517                           
  1518                           ;incstack = 0
  1519   00172A  0012               	return		;funcret
  1520   00172C                     __end_of_save_temperature_c_EEPROM:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _measure_temperature_c *****************
  1524 ;; Defined at:
  1525 ;;		line 203 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2, status,0, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1543 ;;Total ram usage:        0 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 4
  1546 ;; This function calls:
  1547 ;;		_LeerHT11
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text10
  1554   001720                     __ptext10:
  1555                           	callstack 0
  1556   001720                     _measure_temperature_c:
  1557                           	callstack 26
  1558                           
  1559                           ;LAB05.c: 204: LeerHT11();
  1560                           
  1561                           ;incstack = 0
  1562   001720  ECC8  F009         	call	_LeerHT11	;wreg free
  1563   001724  0012               	return		;funcret
  1564   001726                     __end_of_measure_temperature_c:
  1565                           	callstack 0
  1566                           
  1567 ;; *************** function _LeerHT11 *****************
  1568 ;; Defined at:
  1569 ;;		line 334 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  contr           1    5[COMRAM] unsigned char 
  1574 ;;  i               1    0        unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0
  1585 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1586 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1587 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1588 ;;Total ram usage:        2 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 3
  1591 ;; This function calls:
  1592 ;;		_LeerByte
  1593 ;; This function is called by:
  1594 ;;		_measure_temperature_c
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text11
  1599   001390                     __ptext11:
  1600                           	callstack 0
  1601   001390                     _LeerHT11:
  1602                           	callstack 26
  1603                           
  1604                           ;LAB05.c: 335: unsigned char i,contr=0;
  1605                           
  1606                           ;incstack = 0
  1607   001390  0E00               	movlw	0
  1608   001392  6E06               	movwf	LeerHT11@contr^0,c
  1609                           
  1610                           ;LAB05.c: 336: TRISC1=0;
  1611   001394  9294               	bcf	3988,1,c	;volatile
  1612                           
  1613                           ;LAB05.c: 337: _delay((unsigned long)((18)*(8000000/4000.0)));
  1614   001396  0E2F               	movlw	47
  1615   001398  6E05               	movwf	??_LeerHT11^0,c
  1616   00139A  0EC0               	movlw	192
  1617   00139C                     u2027:
  1618   00139C  2EE8               	decfsz	wreg,f,c
  1619   00139E  D7FE               	bra	u2027
  1620   0013A0  2E05               	decfsz	??_LeerHT11^0,f,c
  1621   0013A2  D7FC               	bra	u2027
  1622                           
  1623                           ;LAB05.c: 338: TRISC1=1;
  1624   0013A4  8294               	bsf	3988,1,c	;volatile
  1625   0013A6                     l312:
  1626   0013A6  B282               	btfsc	3970,1,c	;volatile
  1627   0013A8  D7FE               	goto	l312
  1628                           
  1629                           ;LAB05.c: 340: _delay((unsigned long)((40)*(8000000/4000000.0)));
  1630   0013AA  0E1A               	movlw	26
  1631   0013AC                     u2037:
  1632   0013AC  2EE8               	decfsz	wreg,f,c
  1633   0013AE  D7FE               	bra	u2037
  1634   0013B0  D000               	nop2	
  1635                           
  1636                           ;LAB05.c: 341: if(RC1==0) contr++;
  1637   0013B2  A282               	btfss	3970,1,c	;volatile
  1638   0013B4  2A06               	incf	LeerHT11@contr^0,f,c
  1639                           
  1640                           ;LAB05.c: 342: _delay((unsigned long)((80)*(8000000/4000000.0)));
  1641   0013B6  0E35               	movlw	53
  1642   0013B8                     u2047:
  1643   0013B8  2EE8               	decfsz	wreg,f,c
  1644   0013BA  D7FE               	bra	u2047
  1645   0013BC  F000               	nop	
  1646                           
  1647                           ;LAB05.c: 343: if(RC1==1) contr++;
  1648   0013BE  B282               	btfsc	3970,1,c	;volatile
  1649   0013C0  2A06               	incf	LeerHT11@contr^0,f,c
  1650   0013C2                     l317:
  1651   0013C2  B282               	btfsc	3970,1,c	;volatile
  1652   0013C4  D7FE               	goto	l317
  1653                           
  1654                           ;LAB05.c: 345: Hum=LeerByte();
  1655   0013C6  EC24  F00B         	call	_LeerByte	;wreg free
  1656   0013CA  6E4A               	movwf	_Hum^0,c
  1657                           
  1658                           ;LAB05.c: 346: LeerByte();
  1659   0013CC  EC24  F00B         	call	_LeerByte	;wreg free
  1660                           
  1661                           ;LAB05.c: 347: Temp=LeerByte();
  1662   0013D0  EC24  F00B         	call	_LeerByte	;wreg free
  1663   0013D4  6E4B               	movwf	_Temp^0,c
  1664                           
  1665                           ;LAB05.c: 348: LeerByte();
  1666   0013D6  EC24  F00B         	call	_LeerByte	;wreg free
  1667                           
  1668                           ;LAB05.c: 349: Che=LeerByte();
  1669   0013DA  EC24  F00B         	call	_LeerByte	;wreg free
  1670   0013DE  6E49               	movwf	_Che^0,c
  1671   0013E0  0012               	return		;funcret
  1672   0013E2                     __end_of_LeerHT11:
  1673                           	callstack 0
  1674                           
  1675 ;; *************** function _LeerByte *****************
  1676 ;; Defined at:
  1677 ;;		line 352 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  i               1    3[COMRAM] unsigned char 
  1682 ;;  res             1    2[COMRAM] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      unsigned char 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0
  1693 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1694 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1695 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1696 ;;Total ram usage:        3 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 2
  1699 ;; This function calls:
  1700 ;;		_LeerBit
  1701 ;; This function is called by:
  1702 ;;		_LeerHT11
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text12
  1707   001648                     __ptext12:
  1708                           	callstack 0
  1709   001648                     _LeerByte:
  1710                           	callstack 26
  1711                           
  1712                           ;LAB05.c: 353: unsigned char res=0,i;
  1713                           
  1714                           ;incstack = 0
  1715   001648  0E00               	movlw	0
  1716   00164A  6E03               	movwf	LeerByte@res^0,c
  1717                           
  1718                           ;LAB05.c: 354: for(i=8;i>0;i--){
  1719   00164C  0E08               	movlw	8
  1720   00164E  6E04               	movwf	LeerByte@i^0,c
  1721   001650                     l1214:
  1722                           
  1723                           ;LAB05.c: 355: res=(res<<1) | LeerBit();
  1724   001650  ECFA  F00A         	call	_LeerBit	;wreg free
  1725   001654  6E02               	movwf	??_LeerByte^0,c
  1726   001656  5003               	movf	LeerByte@res^0,w,c
  1727   001658  2403               	addwf	LeerByte@res^0,w,c
  1728   00165A  1002               	iorwf	??_LeerByte^0,w,c
  1729   00165C  6E03               	movwf	LeerByte@res^0,c
  1730   00165E  0604               	decf	LeerByte@i^0,f,c
  1731   001660  5004               	movf	LeerByte@i^0,w,c
  1732   001662  A4D8               	btfss	status,2,c
  1733   001664  D7F5               	goto	l1214
  1734                           
  1735                           ;LAB05.c: 356: };LAB05.c: 357: return res;
  1736   001666  5003               	movf	LeerByte@res^0,w,c
  1737   001668  0012               	return		;funcret
  1738   00166A                     __end_of_LeerByte:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _LeerBit *****************
  1742 ;; Defined at:
  1743 ;;		line 360 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  res             1    0[COMRAM] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      unsigned char 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1760 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1761 ;;Total ram usage:        1 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_LeerByte
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text13
  1772   0015F4                     __ptext13:
  1773                           	callstack 0
  1774   0015F4                     _LeerBit:
  1775                           	callstack 26
  1776                           
  1777                           ;LAB05.c: 361: unsigned char res=0;
  1778                           
  1779                           ;incstack = 0
  1780   0015F4  0E00               	movlw	0
  1781   0015F6  6E01               	movwf	LeerBit@res^0,c
  1782   0015F8                     l328:
  1783   0015F8  A282               	btfss	3970,1,c	;volatile
  1784   0015FA  D7FE               	goto	l328
  1785                           
  1786                           ;LAB05.c: 363: _delay((unsigned long)((13)*(8000000/4000000.0)));
  1787   0015FC  0E08               	movlw	8
  1788   0015FE                     u2057:
  1789   0015FE  2EE8               	decfsz	wreg,f,c
  1790   001600  D7FE               	bra	u2057
  1791   001602  D000               	nop2	
  1792                           
  1793                           ;LAB05.c: 364: if(RC1==1) res=0;
  1794   001604  A282               	btfss	3970,1,c	;volatile
  1795   001606  D002               	goto	l1176
  1796   001608  0E00               	movlw	0
  1797   00160A  6E01               	movwf	LeerBit@res^0,c
  1798   00160C                     l1176:
  1799                           
  1800                           ;LAB05.c: 365: _delay((unsigned long)((22)*(8000000/4000000.0)));
  1801   00160C  0E0E               	movlw	14
  1802   00160E                     u2067:
  1803   00160E  2EE8               	decfsz	wreg,f,c
  1804   001610  D7FE               	bra	u2067
  1805   001612  D000               	nop2	
  1806                           
  1807                           ;LAB05.c: 366: if(RC1==1){
  1808   001614  A282               	btfss	3970,1,c	;volatile
  1809   001616  D004               	goto	u60
  1810                           
  1811                           ;LAB05.c: 367: res=1;
  1812   001618  0E01               	movlw	1
  1813   00161A  6E01               	movwf	LeerBit@res^0,c
  1814   00161C                     l333:
  1815   00161C  B282               	btfsc	3970,1,c	;volatile
  1816   00161E  D7FE               	goto	l333
  1817   001620                     u60:
  1818                           
  1819                           ;LAB05.c: 369: };LAB05.c: 370: return res;
  1820   001620  5001               	movf	LeerBit@res^0,w,c
  1821   001622  0012               	return		;funcret
  1822   001624                     __end_of_LeerBit:
  1823                           	callstack 0
  1824                           
  1825 ;; *************** function _init_configuration *****************
  1826 ;; Defined at:
  1827 ;;		line 114 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2, status,0, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1841 ;;      Params:         0       0       0       0       0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1843 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1844 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1845 ;;Total ram usage:        2 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 5
  1848 ;; This function calls:
  1849 ;;		_ConfiguraLCD
  1850 ;;		_InicializaLCD
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text14
  1857   0011DC                     __ptext14:
  1858                           	callstack 0
  1859   0011DC                     _init_configuration:
  1860                           	callstack 25
  1861                           
  1862                           ;LAB05.c: 117: OSCCON=0b01110000;
  1863                           
  1864                           ;incstack = 0
  1865   0011DC  0E70               	movlw	112
  1866   0011DE  6ED3               	movwf	211,c	;volatile
  1867                           
  1868                           ;LAB05.c: 118: _delay((unsigned long)((1)*(8000000/4000.0)));
  1869   0011E0  0E03               	movlw	3
  1870   0011E2  6E05               	movwf	??_init_configuration^0,c
  1871   0011E4  0E98               	movlw	152
  1872   0011E6                     u2077:
  1873   0011E6  2EE8               	decfsz	wreg,f,c
  1874   0011E8  D7FE               	bra	u2077
  1875   0011EA  2E05               	decfsz	??_init_configuration^0,f,c
  1876   0011EC  D7FC               	bra	u2077
  1877                           
  1878                           ;LAB05.c: 121: LATC1=0;
  1879   0011EE  928B               	bcf	3979,1,c	;volatile
  1880                           
  1881                           ;LAB05.c: 124: TXSTA=0b00100000;
  1882   0011F0  0E20               	movlw	32
  1883   0011F2  6EAC               	movwf	172,c	;volatile
  1884                           
  1885                           ;LAB05.c: 125: RCSTA=0b10000000;
  1886   0011F4  0E80               	movlw	128
  1887   0011F6  6EAB               	movwf	171,c	;volatile
  1888                           
  1889                           ;LAB05.c: 126: BAUDCON=0b00000000;
  1890   0011F8  0E00               	movlw	0
  1891   0011FA  6EB8               	movwf	184,c	;volatile
  1892                           
  1893                           ;LAB05.c: 127: SPBRG=12;
  1894   0011FC  0E0C               	movlw	12
  1895   0011FE  6EAF               	movwf	175,c	;volatile
  1896                           
  1897                           ;LAB05.c: 130: ADCON1 = 14 ;
  1898   001200  0E0E               	movlw	14
  1899   001202  6EC1               	movwf	193,c	;volatile
  1900                           
  1901                           ;LAB05.c: 133: TRISE=0b11111000;
  1902   001204  0EF8               	movlw	248
  1903   001206  6E96               	movwf	150,c	;volatile
  1904                           
  1905                           ;LAB05.c: 134: LATE=1;
  1906   001208  0E01               	movlw	1
  1907   00120A  6E8D               	movwf	141,c	;volatile
  1908                           
  1909                           ;LAB05.c: 137: TRISA = 0xff;
  1910   00120C  6892               	setf	146,c	;volatile
  1911                           
  1912                           ;LAB05.c: 140: TRISC2=0;
  1913   00120E  9494               	bcf	3988,2,c	;volatile
  1914                           
  1915                           ;LAB05.c: 141: LATC2=0;
  1916   001210  948B               	bcf	3979,2,c	;volatile
  1917                           
  1918                           ;LAB05.c: 144: TRISB0=0;
  1919   001212  9093               	bcf	3987,0,c	;volatile
  1920                           
  1921                           ;LAB05.c: 145: LATB0=0;
  1922   001214  908A               	bcf	3978,0,c	;volatile
  1923                           
  1924                           ;LAB05.c: 149: ADCON0=0b00000001;
  1925   001216  0E01               	movlw	1
  1926   001218  6EC2               	movwf	194,c	;volatile
  1927                           
  1928                           ;LAB05.c: 151: ADCON2=0b11001000;
  1929   00121A  0EC8               	movlw	200
  1930   00121C  6EC0               	movwf	192,c	;volatile
  1931                           
  1932                           ;LAB05.c: 163: T0CON=0b00000100;
  1933   00121E  0E04               	movlw	4
  1934   001220  6ED5               	movwf	213,c	;volatile
  1935                           
  1936                           ;LAB05.c: 164: TMR0=PreloadTMR0;
  1937   001222  C058  FFD6         	movff	_PreloadTMR0,4054	;volatile
  1938   001226  C059  FFD7         	movff	_PreloadTMR0+1,4055	;volatile
  1939                           
  1940                           ;LAB05.c: 168: TMR0IF=0;
  1941   00122A  94F2               	bcf	4082,2,c	;volatile
  1942                           
  1943                           ;LAB05.c: 169: TMR0IE=1;
  1944   00122C  8AF2               	bsf	4082,5,c	;volatile
  1945                           
  1946                           ;LAB05.c: 170: GIE=1;
  1947   00122E  8EF2               	bsf	4082,7,c	;volatile
  1948                           
  1949                           ;LAB05.c: 172: TMR0ON=1;
  1950   001230  8ED5               	bsf	4053,7,c	;volatile
  1951                           
  1952                           ;LAB05.c: 175: TRISD=0;
  1953   001232  0E00               	movlw	0
  1954   001234  6E95               	movwf	149,c	;volatile
  1955                           
  1956                           ;LAB05.c: 176: LATD=0;
  1957   001236  0E00               	movlw	0
  1958   001238  6E8C               	movwf	140,c	;volatile
  1959                           
  1960                           ;LAB05.c: 177: ConfiguraLCD(4);
  1961   00123A  0E04               	movlw	4
  1962   00123C  EC57  F00B         	call	_ConfiguraLCD
  1963                           
  1964                           ;LAB05.c: 178: InicializaLCD();
  1965   001240  ECA0  F008         	call	_InicializaLCD	;wreg free
  1966                           
  1967                           ;LAB05.c: 179: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1968   001244  0E0B               	movlw	11
  1969   001246  6E06               	movwf	(??_init_configuration+1)^0,c
  1970   001248  0E26               	movlw	38
  1971   00124A  6E05               	movwf	??_init_configuration^0,c
  1972   00124C  0E5E               	movlw	94
  1973   00124E                     u2087:
  1974   00124E  2EE8               	decfsz	wreg,f,c
  1975   001250  D7FE               	bra	u2087
  1976   001252  2E05               	decfsz	??_init_configuration^0,f,c
  1977   001254  D7FC               	bra	u2087
  1978   001256  2E06               	decfsz	(??_init_configuration+1)^0,f,c
  1979   001258  D7FA               	bra	u2087
  1980   00125A  0012               	return		;funcret
  1981   00125C                     __end_of_init_configuration:
  1982                           	callstack 0
  1983                           
  1984 ;; *************** function _InicializaLCD *****************
  1985 ;; Defined at:
  1986 ;;		line 71 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 4
  2007 ;; This function calls:
  2008 ;;		_BorraLCD
  2009 ;;		_EnviaDato
  2010 ;;		_HabilitaLCD
  2011 ;;		_RetardoLCD
  2012 ;; This function is called by:
  2013 ;;		_init_configuration
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text15
  2018   001140                     __ptext15:
  2019                           	callstack 0
  2020   001140                     _InicializaLCD:
  2021                           	callstack 25
  2022                           
  2023                           ;LibLCDXC8.h: 73: LATD0=0;
  2024                           
  2025                           ;incstack = 0
  2026   001140  908C               	bcf	3980,0,c	;volatile
  2027                           
  2028                           ;LibLCDXC8.h: 74: if(interfaz==4)
  2029   001142  0E04               	movlw	4
  2030   001144  185A               	xorwf	_interfaz^0,w,c
  2031   001146  A4D8               	btfss	status,2,c
  2032   001148  D004               	goto	l2044
  2033                           
  2034                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
  2035   00114A  508C               	movf	140,w,c	;volatile
  2036   00114C  0B0F               	andlw	15
  2037   00114E  0930               	iorlw	48
  2038   001150  D001               	goto	L1
  2039   001152                     l2044:
  2040                           
  2041                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  2042   001152  0E3F               	movlw	63
  2043   001154                     L1:
  2044   001154  6E8C               	movwf	140,c	;volatile
  2045                           
  2046                           ;LibLCDXC8.h: 78: HabilitaLCD();
  2047   001156  EC83  F00B         	call	_HabilitaLCD	;wreg free
  2048                           
  2049                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  2050   00115A  0E01               	movlw	1
  2051   00115C  EC63  F009         	call	_RetardoLCD
  2052                           
  2053                           ;LibLCDXC8.h: 80: if(interfaz==4)
  2054   001160  0E04               	movlw	4
  2055   001162  185A               	xorwf	_interfaz^0,w,c
  2056   001164  A4D8               	btfss	status,2,c
  2057   001166  D004               	goto	l2054
  2058                           
  2059                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
  2060   001168  508C               	movf	140,w,c	;volatile
  2061   00116A  0B0F               	andlw	15
  2062   00116C  0930               	iorlw	48
  2063   00116E  D001               	goto	L2
  2064   001170                     l2054:
  2065                           
  2066                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  2067   001170  0E3F               	movlw	63
  2068   001172                     L2:
  2069   001172  6E8C               	movwf	140,c	;volatile
  2070                           
  2071                           ;LibLCDXC8.h: 84: HabilitaLCD();
  2072   001174  EC83  F00B         	call	_HabilitaLCD	;wreg free
  2073                           
  2074                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  2075   001178  0E03               	movlw	3
  2076   00117A  EC63  F009         	call	_RetardoLCD
  2077                           
  2078                           ;LibLCDXC8.h: 86: if(interfaz==4)
  2079   00117E  0E04               	movlw	4
  2080   001180  185A               	xorwf	_interfaz^0,w,c
  2081   001182  A4D8               	btfss	status,2,c
  2082   001184  D004               	goto	l2064
  2083                           
  2084                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
  2085   001186  508C               	movf	140,w,c	;volatile
  2086   001188  0B0F               	andlw	15
  2087   00118A  0930               	iorlw	48
  2088   00118C  D001               	goto	L3
  2089   00118E                     l2064:
  2090                           
  2091                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  2092   00118E  0E3F               	movlw	63
  2093   001190                     L3:
  2094   001190  6E8C               	movwf	140,c	;volatile
  2095                           
  2096                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2097   001192  EC83  F00B         	call	_HabilitaLCD	;wreg free
  2098                           
  2099                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2100   001196  0E04               	movlw	4
  2101   001198  EC63  F009         	call	_RetardoLCD
  2102                           
  2103                           ;LibLCDXC8.h: 92: if(interfaz==4){
  2104   00119C  0E04               	movlw	4
  2105   00119E  185A               	xorwf	_interfaz^0,w,c
  2106   0011A0  A4D8               	btfss	status,2,c
  2107   0011A2  D011               	goto	l2084
  2108                           
  2109                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
  2110   0011A4  508C               	movf	140,w,c	;volatile
  2111   0011A6  0B0F               	andlw	15
  2112   0011A8  0920               	iorlw	32
  2113   0011AA  6E8C               	movwf	140,c	;volatile
  2114                           
  2115                           ;LibLCDXC8.h: 94: HabilitaLCD();
  2116   0011AC  EC83  F00B         	call	_HabilitaLCD	;wreg free
  2117                           
  2118                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  2119   0011B0  0E04               	movlw	4
  2120   0011B2  EC63  F009         	call	_RetardoLCD
  2121                           
  2122                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
  2123   0011B6  0E2F               	movlw	47
  2124   0011B8  EC1A  F00A         	call	_EnviaDato
  2125                           
  2126                           ;LibLCDXC8.h: 97: HabilitaLCD();
  2127   0011BC  EC83  F00B         	call	_HabilitaLCD	;wreg free
  2128                           
  2129                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  2130   0011C0  0E04               	movlw	4
  2131   0011C2  EC63  F009         	call	_RetardoLCD
  2132   0011C6                     l2084:
  2133                           
  2134                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  2135   0011C6  EC79  F00B         	call	_BorraLCD	;wreg free
  2136                           
  2137                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  2138   0011CA  0E0F               	movlw	15
  2139   0011CC  EC1A  F00A         	call	_EnviaDato
  2140                           
  2141                           ;LibLCDXC8.h: 102: HabilitaLCD();
  2142   0011D0  EC83  F00B         	call	_HabilitaLCD	;wreg free
  2143                           
  2144                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  2145   0011D4  0E04               	movlw	4
  2146   0011D6  EC63  F009         	call	_RetardoLCD
  2147   0011DA  0012               	return		;funcret
  2148   0011DC                     __end_of_InicializaLCD:
  2149                           	callstack 0
  2150                           
  2151 ;; *************** function _ConfiguraLCD *****************
  2152 ;; Defined at:
  2153 ;;		line 55 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  a               1    wreg     unsigned char 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  a               1    0[COMRAM] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2167 ;;      Params:         0       0       0       0       0       0       0       0       0
  2168 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2170 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2171 ;;Total ram usage:        1 bytes
  2172 ;; Hardware stack levels used: 1
  2173 ;; Hardware stack levels required when called: 1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_init_configuration
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text16
  2182   0016AE                     __ptext16:
  2183                           	callstack 0
  2184   0016AE                     _ConfiguraLCD:
  2185                           	callstack 28
  2186                           
  2187                           ;incstack = 0
  2188                           ;ConfiguraLCD@a stored from wreg
  2189   0016AE  6E01               	movwf	ConfiguraLCD@a^0,c
  2190                           
  2191                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
  2192   0016B0  0E04               	movlw	4
  2193   0016B2  1801               	xorwf	ConfiguraLCD@a^0,w,c
  2194   0016B4  B4D8               	btfsc	status,2,c
  2195   0016B6  D004               	goto	u230
  2196   0016B8  0E08               	movlw	8
  2197   0016BA  1801               	xorwf	ConfiguraLCD@a^0,w,c
  2198   0016BC  A4D8               	btfss	status,2,c
  2199   0016BE  0012               	return	
  2200   0016C0                     u230:
  2201                           
  2202                           ;LibLCDXC8.h: 57: interfaz=a;
  2203   0016C0  C001  F05A         	movff	ConfiguraLCD@a,_interfaz
  2204   0016C4  0012               	return		;funcret
  2205   0016C6                     __end_of_ConfiguraLCD:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _choose_scale_temperature_and_fill_buffers *****************
  2209 ;; Defined at:
  2210 ;;		line 280 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  temp_convert    2   69[COMRAM] int 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2224 ;;      Params:         0       0       0       0       0       0       0       0       0
  2225 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2227 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2228 ;;Total ram usage:        2 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 3
  2231 ;; This function calls:
  2232 ;;		___ftadd
  2233 ;;		___ftdiv
  2234 ;;		___ftmul
  2235 ;;		___fttol
  2236 ;;		___lbtoft
  2237 ;;		_sprintf
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text17
  2244   000898                     __ptext17:
  2245                           	callstack 0
  2246   000898                     _choose_scale_temperature_and_fill_buffers:
  2247                           	callstack 27
  2248                           
  2249                           ;LAB05.c: 283: sprintf(Buffer_RS232, "T: %i C\n",Temp);
  2250                           
  2251                           ;incstack = 0
  2252   000898  0E4C               	movlw	low _Buffer_RS232
  2253   00089A  6E0D               	movwf	sprintf@sp^0,c
  2254   00089C  0E7F               	movlw	low STR_4
  2255   00089E  6E0E               	movwf	sprintf@f^0,c
  2256   0008A0  C04B  F00F         	movff	_Temp,?_sprintf+2
  2257   0008A4  6A10               	clrf	(?_sprintf+3)^0,c
  2258   0008A6  EC36  F005         	call	_sprintf	;wreg free
  2259                           
  2260                           ;LAB05.c: 284: sprintf(Buffer_LCD, "%s","Hola");
  2261   0008AA  0E60               	movlw	low _Buffer_LCD
  2262   0008AC  6E0D               	movwf	sprintf@sp^0,c
  2263   0008AE  0E94               	movlw	low STR_5
  2264   0008B0  6E0E               	movwf	sprintf@f^0,c
  2265   0008B2  0E8F               	movlw	low STR_6
  2266   0008B4  6E0F               	movwf	(?_sprintf+2)^0,c
  2267   0008B6  500F               	movf	(?_sprintf+2)^0,w,c
  2268   0008B8  A4D8               	btfss	status,2,c
  2269   0008BA  0E08               	movlw	high __smallconst
  2270   0008BC  6E10               	movwf	(?_sprintf+3)^0,c
  2271   0008BE  EC36  F005         	call	_sprintf	;wreg free
  2272                           
  2273                           ;LAB05.c: 286: if(RA1==0 && RA2==0){
  2274   0008C2  A280               	btfss	3968,1,c	;volatile
  2275   0008C4  B480               	btfsc	3968,2,c	;volatile
  2276   0008C6  D011               	goto	l289
  2277                           
  2278                           ;LAB05.c: 288: sprintf(Buffer_LCD, "T: %i C\nH: %i %c",Temp,Hum,37);
  2279   0008C8  0E60               	movlw	low _Buffer_LCD
  2280   0008CA  6E0D               	movwf	sprintf@sp^0,c
  2281   0008CC  0E31               	movlw	low STR_7
  2282   0008CE  6E0E               	movwf	sprintf@f^0,c
  2283   0008D0  C04B  F00F         	movff	_Temp,?_sprintf+2
  2284   0008D4  6A10               	clrf	(?_sprintf+3)^0,c
  2285   0008D6  C04A  F011         	movff	_Hum,?_sprintf+4
  2286   0008DA  6A12               	clrf	(?_sprintf+5)^0,c
  2287   0008DC  0E00               	movlw	0
  2288   0008DE  6E14               	movwf	(?_sprintf+7)^0,c
  2289   0008E0  0E25               	movlw	37
  2290   0008E2  6E13               	movwf	(?_sprintf+6)^0,c
  2291   0008E4  EC36  F005         	call	_sprintf	;wreg free
  2292                           
  2293                           ;LAB05.c: 289: }
  2294   0008E8  0012               	return	
  2295   0008EA                     l289:
  2296                           
  2297                           ;LAB05.c: 290: else if(RA1==0 && RA2==1){
  2298   0008EA  A280               	btfss	3968,1,c	;volatile
  2299   0008EC  A480               	btfss	3968,2,c	;volatile
  2300   0008EE  D02F               	goto	l291
  2301                           
  2302                           ;LAB05.c: 292: temp_converted = Temp + 273.15;
  2303   0008F0  0E93               	movlw	147
  2304   0008F2  6E2E               	movwf	___ftadd@f2^0,c
  2305   0008F4  0E88               	movlw	136
  2306   0008F6  6E2F               	movwf	(___ftadd@f2+1)^0,c
  2307   0008F8  0E43               	movlw	67
  2308   0008FA  6E30               	movwf	(___ftadd@f2+2)^0,c
  2309   0008FC  504B               	movf	_Temp^0,w,c
  2310   0008FE  EC12  F00B         	call	___lbtoft
  2311   000902  C009  F02B         	movff	?___lbtoft,___ftadd@f1
  2312   000906  C00A  F02C         	movff	?___lbtoft+1,___ftadd@f1+1
  2313   00090A  C00B  F02D         	movff	?___lbtoft+2,___ftadd@f1+2
  2314   00090E  EC1F  F006         	call	___ftadd	;wreg free
  2315   000912  C02B  F037         	movff	?___ftadd,___fttol@f1
  2316   000916  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  2317   00091A  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  2318   00091E  ECE0  F007         	call	___fttol	;wreg free
  2319   000922  C037  F046         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  2320   000926  C038  F047         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  2321                           
  2322                           ;LAB05.c: 293: sprintf(Buffer_LCD, "T: %i K\nH: %i %c", temp_converted,Hum,37);
  2323   00092A  0E60               	movlw	low _Buffer_LCD
  2324   00092C  6E0D               	movwf	sprintf@sp^0,c
  2325   00092E  0E53               	movlw	low STR_8
  2326   000930  6E0E               	movwf	sprintf@f^0,c
  2327   000932  C046  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  2328   000936  C047  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  2329   00093A  C04A  F011         	movff	_Hum,?_sprintf+4
  2330   00093E  6A12               	clrf	(?_sprintf+5)^0,c
  2331   000940  0E00               	movlw	0
  2332   000942  6E14               	movwf	(?_sprintf+7)^0,c
  2333   000944  0E25               	movlw	37
  2334   000946  6E13               	movwf	(?_sprintf+6)^0,c
  2335   000948  EC36  F005         	call	_sprintf	;wreg free
  2336                           
  2337                           ;LAB05.c: 294: }
  2338   00094C  0012               	return	
  2339   00094E                     l291:
  2340                           
  2341                           ;LAB05.c: 295: else if(RA1==1 && RA2==0){
  2342   00094E  B280               	btfsc	3968,1,c	;volatile
  2343   000950  B480               	btfsc	3968,2,c	;volatile
  2344   000952  D03D               	goto	l293
  2345                           
  2346                           ;LAB05.c: 297: temp_converted = Temp*1.8 + 491.67;
  2347   000954  0ED6               	movlw	214
  2348   000956  6E2E               	movwf	___ftadd@f2^0,c
  2349   000958  0EF5               	movlw	245
  2350   00095A  6E2F               	movwf	(___ftadd@f2+1)^0,c
  2351   00095C  0E43               	movlw	67
  2352   00095E  6E30               	movwf	(___ftadd@f2+2)^0,c
  2353   000960  0E66               	movlw	102
  2354   000962  6E10               	movwf	___ftmul@f2^0,c
  2355   000964  0EE6               	movlw	230
  2356   000966  6E11               	movwf	(___ftmul@f2+1)^0,c
  2357   000968  0E3F               	movlw	63
  2358   00096A  6E12               	movwf	(___ftmul@f2+2)^0,c
  2359   00096C  504B               	movf	_Temp^0,w,c
  2360   00096E  EC12  F00B         	call	___lbtoft
  2361   000972  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  2362   000976  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  2363   00097A  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  2364   00097E  ECF3  F006         	call	___ftmul	;wreg free
  2365   000982  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  2366   000986  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  2367   00098A  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  2368   00098E  EC1F  F006         	call	___ftadd	;wreg free
  2369   000992  C02B  F037         	movff	?___ftadd,___fttol@f1
  2370   000996  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  2371   00099A  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  2372   00099E  ECE0  F007         	call	___fttol	;wreg free
  2373   0009A2  C037  F046         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  2374   0009A6  C038  F047         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  2375                           
  2376                           ;LAB05.c: 298: sprintf(Buffer_LCD, "T: %i Ra\nH: %i %c", temp_converted,Hum,37);
  2377   0009AA  0E60               	movlw	low _Buffer_LCD
  2378   0009AC  6E0D               	movwf	sprintf@sp^0,c
  2379   0009AE  0E1F               	movlw	low STR_9
  2380   0009B0  6E0E               	movwf	sprintf@f^0,c
  2381   0009B2  C046  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  2382   0009B6  C047  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  2383   0009BA  C04A  F011         	movff	_Hum,?_sprintf+4
  2384   0009BE  6A12               	clrf	(?_sprintf+5)^0,c
  2385   0009C0  0E00               	movlw	0
  2386   0009C2  6E14               	movwf	(?_sprintf+7)^0,c
  2387   0009C4  0E25               	movlw	37
  2388   0009C6  6E13               	movwf	(?_sprintf+6)^0,c
  2389   0009C8  EC36  F005         	call	_sprintf	;wreg free
  2390                           
  2391                           ;LAB05.c: 299: }
  2392   0009CC  0012               	return	
  2393   0009CE                     l293:
  2394                           
  2395                           ;LAB05.c: 300: else if(RA1==1 && RA2==1){
  2396   0009CE  A280               	btfss	3968,1,c	;volatile
  2397   0009D0  0012               	return	
  2398   0009D2  A480               	btfss	3968,2,c	;volatile
  2399   0009D4  0012               	return	
  2400                           
  2401                           ;LAB05.c: 302: temp_converted = Temp*9.0/5.0 + 32.0;
  2402   0009D6  0E00               	movlw	0
  2403   0009D8  6E2E               	movwf	___ftadd@f2^0,c
  2404   0009DA  0E00               	movlw	0
  2405   0009DC  6E2F               	movwf	(___ftadd@f2+1)^0,c
  2406   0009DE  0E42               	movlw	66
  2407   0009E0  6E30               	movwf	(___ftadd@f2+2)^0,c
  2408   0009E2  0E00               	movlw	0
  2409   0009E4  6E1F               	movwf	___ftdiv@f2^0,c
  2410   0009E6  0EA0               	movlw	160
  2411   0009E8  6E20               	movwf	(___ftdiv@f2+1)^0,c
  2412   0009EA  0E40               	movlw	64
  2413   0009EC  6E21               	movwf	(___ftdiv@f2+2)^0,c
  2414   0009EE  0E00               	movlw	0
  2415   0009F0  6E10               	movwf	___ftmul@f2^0,c
  2416   0009F2  0E10               	movlw	16
  2417   0009F4  6E11               	movwf	(___ftmul@f2+1)^0,c
  2418   0009F6  0E41               	movlw	65
  2419   0009F8  6E12               	movwf	(___ftmul@f2+2)^0,c
  2420   0009FA  504B               	movf	_Temp^0,w,c
  2421   0009FC  EC12  F00B         	call	___lbtoft
  2422   000A00  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  2423   000A04  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  2424   000A08  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  2425   000A0C  ECF3  F006         	call	___ftmul	;wreg free
  2426   000A10  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2427   000A14  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2428   000A18  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2429   000A1C  EC6D  F007         	call	___ftdiv	;wreg free
  2430   000A20  C01C  F02B         	movff	?___ftdiv,___ftadd@f1
  2431   000A24  C01D  F02C         	movff	?___ftdiv+1,___ftadd@f1+1
  2432   000A28  C01E  F02D         	movff	?___ftdiv+2,___ftadd@f1+2
  2433   000A2C  EC1F  F006         	call	___ftadd	;wreg free
  2434   000A30  C02B  F037         	movff	?___ftadd,___fttol@f1
  2435   000A34  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  2436   000A38  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  2437   000A3C  ECE0  F007         	call	___fttol	;wreg free
  2438   000A40  C037  F046         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  2439   000A44  C038  F047         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  2440                           
  2441                           ;LAB05.c: 303: sprintf(Buffer_LCD, "T: %i F\nH: %i %c", temp_converted,Hum,37);
  2442   000A48  0E60               	movlw	low _Buffer_LCD
  2443   000A4A  6E0D               	movwf	sprintf@sp^0,c
  2444   000A4C  0E42               	movlw	low STR_10
  2445   000A4E  6E0E               	movwf	sprintf@f^0,c
  2446   000A50  C046  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  2447   000A54  C047  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  2448   000A58  C04A  F011         	movff	_Hum,?_sprintf+4
  2449   000A5C  6A12               	clrf	(?_sprintf+5)^0,c
  2450   000A5E  0E00               	movlw	0
  2451   000A60  6E14               	movwf	(?_sprintf+7)^0,c
  2452   000A62  0E25               	movlw	37
  2453   000A64  6E13               	movwf	(?_sprintf+6)^0,c
  2454   000A66  EC36  F005         	call	_sprintf	;wreg free
  2455   000A6A  0012               	return	
  2456   000A6C                     __end_of_choose_scale_temperature_and_fill_buffers:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _sprintf *****************
  2460 ;; Defined at:
  2461 ;;		line 505 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/doprnt.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  sp              1   12[COMRAM] PTR unsigned char 
  2464 ;;		 -> Buffer_LCD(32), Buffer_RS232(12), 
  2465 ;;  f               1   13[COMRAM] PTR const unsigned char 
  2466 ;;		 -> STR_10(17), STR_9(18), STR_8(17), STR_7(17), 
  2467 ;;		 -> STR_5(3), STR_4(9), 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  tmpval          4    0        struct .
  2470 ;;  val             2   26[COMRAM] unsigned int 
  2471 ;;  cp              2   23[COMRAM] PTR const unsigned char 
  2472 ;;		 -> STR_11(7), ?_sprintf(2), STR_6(5), 
  2473 ;;  len             2    0        unsigned int 
  2474 ;;  c               1   28[COMRAM] unsigned char 
  2475 ;;  ap              1   25[COMRAM] PTR void [1]
  2476 ;;		 -> ?_sprintf(2), 
  2477 ;;  prec            1   22[COMRAM] char 
  2478 ;;  flag            1   21[COMRAM] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  2   12[COMRAM] int 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2488 ;;      Params:         8       0       0       0       0       0       0       0       0
  2489 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2490 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2491 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2492 ;;Total ram usage:       17 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 2
  2495 ;; This function calls:
  2496 ;;		___lwdiv
  2497 ;;		___lwmod
  2498 ;; This function is called by:
  2499 ;;		_choose_scale_temperature_and_fill_buffers
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text18
  2504   000A6C                     __ptext18:
  2505                           	callstack 0
  2506   000A6C                     _sprintf:
  2507                           	callstack 27
  2508                           
  2509                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2510                           
  2511                           ;incstack = 0
  2512   000A6C  0E0F               	movlw	low (?_sprintf+2)
  2513   000A6E  6E1A               	movwf	sprintf@ap^0,c
  2514                           
  2515                           ;doprnt.c: 553: while((c = *f++)) {
  2516   000A70  D0D4               	goto	u1440
  2517   000A72                     l2110:
  2518                           
  2519                           ;doprnt.c: 555: if(c != '%')
  2520   000A72  0E25               	movlw	37
  2521   000A74  181D               	xorwf	sprintf@c^0,w,c
  2522   000A76  B4D8               	btfsc	status,2,c
  2523   000A78  D007               	goto	l2116
  2524   000A7A                     u1350:
  2525                           
  2526                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2527   000A7A  500D               	movf	sprintf@sp^0,w,c
  2528   000A7C  6ED9               	movwf	fsr2l,c
  2529   000A7E  6ADA               	clrf	fsr2h,c
  2530   000A80  C01D  FFDF         	movff	sprintf@c,indf2
  2531   000A84  2A0D               	incf	sprintf@sp^0,f,c
  2532                           
  2533                           ;doprnt.c: 559: continue;
  2534   000A86  D0C9               	goto	u1440
  2535   000A88                     l2116:
  2536                           
  2537                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2538   000A88  0E00               	movlw	0
  2539   000A8A  6E16               	movwf	sprintf@flag^0,c
  2540                           
  2541                           ;doprnt.c: 661: switch(c = *f++) {
  2542   000A8C  D047               	goto	l2144
  2543   000A8E                     l2118:
  2544                           
  2545                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2546   000A8E  501A               	movf	sprintf@ap^0,w,c
  2547   000A90  6ED9               	movwf	fsr2l,c
  2548   000A92  6ADA               	clrf	fsr2h,c
  2549   000A94  CFDE F018          	movff	postinc2,sprintf@cp
  2550   000A98  CFDD F019          	movff	postdec2,sprintf@cp+1
  2551   000A9C  0E02               	movlw	2
  2552   000A9E  261A               	addwf	sprintf@ap^0,f,c
  2553                           
  2554                           ;doprnt.c: 766: if(!cp)
  2555   000AA0  5018               	movf	sprintf@cp^0,w,c
  2556   000AA2  1019               	iorwf	(sprintf@cp+1)^0,w,c
  2557   000AA4  A4D8               	btfss	status,2,c
  2558   000AA6  D01E               	goto	l2132
  2559                           
  2560                           ;doprnt.c: 767: cp = "(null)";
  2561   000AA8  0E88               	movlw	low STR_11
  2562   000AAA  6E18               	movwf	sprintf@cp^0,c
  2563   000AAC  5018               	movf	sprintf@cp^0,w,c
  2564   000AAE  A4D8               	btfss	status,2,c
  2565   000AB0  0E08               	movlw	high __smallconst
  2566   000AB2  6E19               	movwf	(sprintf@cp+1)^0,c
  2567   000AB4  D017               	goto	l2132
  2568   000AB6                     l2126:
  2569                           
  2570                           ;doprnt.c: 804: ((*sp++ = (*cp++)));
  2571   000AB6  C018  FFF6         	movff	sprintf@cp,tblptrl
  2572   000ABA  C019  FFF7         	movff	sprintf@cp+1,tblptrh
  2573   000ABE  6AF8               	clrf	tblptru,c
  2574   000AC0  500D               	movf	sprintf@sp^0,w,c
  2575   000AC2  6ED9               	movwf	fsr2l,c
  2576   000AC4  6ADA               	clrf	fsr2h,c
  2577   000AC6  0E07               	movlw	(high __ramtop+-1)
  2578   000AC8  64F7               	cpfsgt	tblptrh,c
  2579   000ACA  D003               	bra	u1377
  2580   000ACC  0008               	tblrd		*
  2581   000ACE  50F5               	movf	tablat,w,c
  2582   000AD0  D005               	bra	u1370
  2583   000AD2                     u1377:
  2584   000AD2  CFF6 FFE9          	movff	tblptrl,fsr0l
  2585   000AD6  CFF7 FFEA          	movff	tblptrh,fsr0h
  2586   000ADA  50EF               	movf	indf0,w,c
  2587   000ADC                     u1370:
  2588   000ADC  6EDF               	movwf	indf2,c
  2589   000ADE  4A18               	infsnz	sprintf@cp^0,f,c
  2590   000AE0  2A19               	incf	(sprintf@cp+1)^0,f,c
  2591   000AE2  2A0D               	incf	sprintf@sp^0,f,c
  2592   000AE4                     l2132:
  2593   000AE4  C018  FFF6         	movff	sprintf@cp,tblptrl
  2594   000AE8  C019  FFF7         	movff	sprintf@cp+1,tblptrh
  2595   000AEC  6AF8               	clrf	tblptru,c
  2596   000AEE  0E07               	movlw	(high __ramtop+-1)
  2597   000AF0  64F7               	cpfsgt	tblptrh,c
  2598   000AF2  D003               	bra	u1387
  2599   000AF4  0008               	tblrd		*
  2600   000AF6  50F5               	movf	tablat,w,c
  2601   000AF8  D005               	bra	u1380
  2602   000AFA                     u1387:
  2603   000AFA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2604   000AFE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2605   000B02  50EF               	movf	indf0,w,c
  2606   000B04                     u1380:
  2607   000B04  0900               	iorlw	0
  2608   000B06  B4D8               	btfsc	status,2,c
  2609   000B08  D088               	goto	u1440
  2610   000B0A  D7D5               	goto	l2126
  2611   000B0C                     l2134:
  2612                           
  2613                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  2614   000B0C  501A               	movf	sprintf@ap^0,w,c
  2615   000B0E  6ED9               	movwf	fsr2l,c
  2616   000B10  6ADA               	clrf	fsr2h,c
  2617   000B12  50DF               	movf	indf2,w,c
  2618   000B14  6E1D               	movwf	sprintf@c^0,c
  2619   000B16  0E02               	movlw	2
  2620   000B18  261A               	addwf	sprintf@ap^0,f,c
  2621   000B1A  D7AF               	goto	u1350
  2622   000B1C                     l2144:
  2623   000B1C  2A0E               	incf	sprintf@f^0,f,c
  2624   000B1E  040E               	decf	sprintf@f^0,w,c
  2625   000B20  6E15               	movwf	??_sprintf^0,c
  2626   000B22  C015  FFF6         	movff	??_sprintf,tblptrl
  2627   000B26                     	if	1	;There is more than 1 active tblptr byte
  2628   000B26  0E08               	movlw	high __smallconst
  2629   000B28  6EF7               	movwf	tblptrh,c
  2630   000B2A                     	endif
  2631   000B2A                     	if	0	;tblptru may be non-zero
  2632   000B2A                     	endif
  2633   000B2A                     	if	0	;tblptru may be non-zero
  2634   000B2A                     	endif
  2635   000B2A  0008               	tblrd		*
  2636   000B2C  CFF5 F01D          	movff	tablat,sprintf@c
  2637   000B30  501D               	movf	sprintf@c^0,w,c
  2638                           
  2639                           ; Switch size 1, requested type "simple"
  2640                           ; Number of cases is 5, Range of values is 0 to 115
  2641                           ; switch strategies available:
  2642                           ; Name         Instructions Cycles
  2643                           ; simple_byte           16     9 (average)
  2644                           ;	Chosen strategy is simple_byte
  2645   000B32  0A00               	xorlw	0	; case 0
  2646   000B34  B4D8               	btfsc	status,2,c
  2647   000B36  D07E               	goto	u1450
  2648   000B38  0A63               	xorlw	99	; case 99
  2649   000B3A  B4D8               	btfsc	status,2,c
  2650   000B3C  D7E7               	goto	l2134
  2651   000B3E  0A07               	xorlw	7	; case 100
  2652   000B40  B4D8               	btfsc	status,2,c
  2653   000B42  D007               	goto	l2146
  2654   000B44  0A0D               	xorlw	13	; case 105
  2655   000B46  B4D8               	btfsc	status,2,c
  2656   000B48  D004               	goto	l2146
  2657   000B4A  0A1A               	xorlw	26	; case 115
  2658   000B4C  B4D8               	btfsc	status,2,c
  2659   000B4E  D79F               	goto	l2118
  2660   000B50  D794               	goto	u1350
  2661   000B52                     l2146:
  2662                           
  2663                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2664   000B52  501A               	movf	sprintf@ap^0,w,c
  2665   000B54  6ED9               	movwf	fsr2l,c
  2666   000B56  6ADA               	clrf	fsr2h,c
  2667   000B58  CFDE F01B          	movff	postinc2,sprintf@val
  2668   000B5C  CFDD F01C          	movff	postdec2,sprintf@val+1
  2669   000B60  0E02               	movlw	2
  2670   000B62  261A               	addwf	sprintf@ap^0,f,c
  2671                           
  2672                           ;doprnt.c: 1287: if((int)val < 0) {
  2673   000B64  AE1C               	btfss	(sprintf@val+1)^0,7,c
  2674   000B66  D006               	goto	l2156
  2675                           
  2676                           ;doprnt.c: 1288: flag |= 0x03;
  2677   000B68  0E03               	movlw	3
  2678   000B6A  1216               	iorwf	sprintf@flag^0,f,c
  2679                           
  2680                           ;doprnt.c: 1289: val = -val;
  2681   000B6C  6C1B               	negf	sprintf@val^0,c
  2682   000B6E  1E1C               	comf	(sprintf@val+1)^0,f,c
  2683   000B70  B0D8               	btfsc	status,0,c
  2684   000B72  2A1C               	incf	(sprintf@val+1)^0,f,c
  2685   000B74                     l2156:
  2686                           
  2687                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2688   000B74  0E01               	movlw	1
  2689   000B76  6E1D               	movwf	sprintf@c^0,c
  2690   000B78                     l2162:
  2691                           
  2692                           ;doprnt.c: 1332: if(val < dpowers[c])
  2693   000B78  501D               	movf	sprintf@c^0,w,c
  2694   000B7A  0D02               	mullw	2
  2695   000B7C  50F3               	movf	243,w,c
  2696   000B7E  0F01               	addlw	low _dpowers
  2697   000B80  6E15               	movwf	??_sprintf^0,c
  2698   000B82  C015  FFF6         	movff	??_sprintf,tblptrl
  2699   000B86                     	if	1	;There is more than 1 active tblptr byte
  2700   000B86  0E08               	movlw	high __smallconst
  2701   000B88  6EF7               	movwf	tblptrh,c
  2702   000B8A                     	endif
  2703   000B8A                     	if	0	;tblptru may be non-zero
  2704   000B8A                     	endif
  2705   000B8A                     	if	0	;tblptru may be non-zero
  2706   000B8A                     	endif
  2707   000B8A  0009               	tblrd		*+
  2708   000B8C  50F5               	movf	tablat,w,c
  2709   000B8E  5C1B               	subwf	sprintf@val^0,w,c
  2710   000B90  0009               	tblrd		*+
  2711   000B92  50F5               	movf	tablat,w,c
  2712   000B94  581C               	subwfb	(sprintf@val+1)^0,w,c
  2713   000B96  A0D8               	btfss	status,0,c
  2714   000B98  D005               	goto	u1420
  2715   000B9A  2A1D               	incf	sprintf@c^0,f,c
  2716   000B9C  0E05               	movlw	5
  2717   000B9E  181D               	xorwf	sprintf@c^0,w,c
  2718   000BA0  A4D8               	btfss	status,2,c
  2719   000BA2  D7EA               	goto	l2162
  2720   000BA4                     u1420:
  2721                           
  2722                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2723   000BA4  C016  F015         	movff	sprintf@flag,??_sprintf
  2724   000BA8  0E03               	movlw	3
  2725   000BAA  1615               	andwf	??_sprintf^0,f,c
  2726   000BAC  B4D8               	btfsc	status,2,c
  2727   000BAE  D006               	goto	l2176
  2728                           
  2729                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2730   000BB0  500D               	movf	sprintf@sp^0,w,c
  2731   000BB2  6ED9               	movwf	fsr2l,c
  2732   000BB4  6ADA               	clrf	fsr2h,c
  2733   000BB6  0E2D               	movlw	45
  2734   000BB8  6EDF               	movwf	indf2,c
  2735   000BBA  2A0D               	incf	sprintf@sp^0,f,c
  2736   000BBC                     l2176:
  2737                           
  2738                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2739   000BBC  C01D  F017         	movff	sprintf@c,sprintf@prec
  2740                           
  2741                           ;doprnt.c: 1500: while(prec--) {
  2742   000BC0  D028               	goto	l2184
  2743   000BC2                     l2178:
  2744                           
  2745                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2746   000BC2  5017               	movf	sprintf@prec^0,w,c
  2747   000BC4  0D02               	mullw	2
  2748   000BC6  50F3               	movf	243,w,c
  2749   000BC8  0F01               	addlw	low _dpowers
  2750   000BCA  6E15               	movwf	??_sprintf^0,c
  2751   000BCC  C015  FFF6         	movff	??_sprintf,tblptrl
  2752   000BD0                     	if	1	;There is more than 1 active tblptr byte
  2753   000BD0  0E08               	movlw	high __smallconst
  2754   000BD2  6EF7               	movwf	tblptrh,c
  2755   000BD4                     	endif
  2756   000BD4                     	if	0	;tblptru may be non-zero
  2757   000BD4                     	endif
  2758   000BD4                     	if	0	;tblptru may be non-zero
  2759   000BD4                     	endif
  2760   000BD4  0009               	tblrd		*+
  2761   000BD6  CFF5 F003          	movff	tablat,___lwdiv@divisor
  2762   000BDA  000A               	tblrd		*-
  2763   000BDC  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  2764   000BE0  C01B  F001         	movff	sprintf@val,___lwdiv@dividend
  2765   000BE4  C01C  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  2766   000BE8  ECF1  F009         	call	___lwdiv	;wreg free
  2767   000BEC  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2768   000BF0  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2769   000BF4  0E00               	movlw	0
  2770   000BF6  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  2771   000BF8  0E0A               	movlw	10
  2772   000BFA  6E0A               	movwf	___lwmod@divisor^0,c
  2773   000BFC  EC80  F00A         	call	___lwmod	;wreg free
  2774   000C00  5008               	movf	?___lwmod^0,w,c
  2775   000C02  0F30               	addlw	48
  2776   000C04  6E1D               	movwf	sprintf@c^0,c
  2777                           
  2778                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2779   000C06  500D               	movf	sprintf@sp^0,w,c
  2780   000C08  6ED9               	movwf	fsr2l,c
  2781   000C0A  6ADA               	clrf	fsr2h,c
  2782   000C0C  C01D  FFDF         	movff	sprintf@c,indf2
  2783   000C10  2A0D               	incf	sprintf@sp^0,f,c
  2784   000C12                     l2184:
  2785   000C12  0617               	decf	sprintf@prec^0,f,c
  2786   000C14  2817               	incf	sprintf@prec^0,w,c
  2787   000C16  A4D8               	btfss	status,2,c
  2788   000C18  D7D4               	goto	l2178
  2789   000C1A                     u1440:
  2790   000C1A  2A0E               	incf	sprintf@f^0,f,c
  2791   000C1C  040E               	decf	sprintf@f^0,w,c
  2792   000C1E  6E15               	movwf	??_sprintf^0,c
  2793   000C20  C015  FFF6         	movff	??_sprintf,tblptrl
  2794   000C24                     	if	1	;There is more than 1 active tblptr byte
  2795   000C24  0E08               	movlw	high __smallconst
  2796   000C26  6EF7               	movwf	tblptrh,c
  2797   000C28                     	endif
  2798   000C28                     	if	0	;tblptru may be non-zero
  2799   000C28                     	endif
  2800   000C28                     	if	0	;tblptru may be non-zero
  2801   000C28                     	endif
  2802   000C28  0008               	tblrd		*
  2803   000C2A  CFF5 F01D          	movff	tablat,sprintf@c
  2804   000C2E  501D               	movf	sprintf@c^0,w,c
  2805   000C30  A4D8               	btfss	status,2,c
  2806   000C32  D71F               	goto	l2110
  2807   000C34                     u1450:
  2808                           
  2809                           ;doprnt.c: 1564: *sp = 0;
  2810   000C34  500D               	movf	sprintf@sp^0,w,c
  2811   000C36  6ED9               	movwf	fsr2l,c
  2812   000C38  6ADA               	clrf	fsr2h,c
  2813   000C3A  6ADF               	clrf	indf2,c
  2814   000C3C  0012               	return		;funcret
  2815   000C3E                     __end_of_sprintf:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function ___lwmod *****************
  2819 ;; Defined at:
  2820 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwmod.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  dividend        2    7[COMRAM] unsigned int 
  2823 ;;  divisor         2    9[COMRAM] unsigned int 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  counter         1   11[COMRAM] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  2    7[COMRAM] unsigned int 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2835 ;;      Params:         4       0       0       0       0       0       0       0       0
  2836 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2838 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2839 ;;Total ram usage:        5 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_sprintf
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text19
  2850   001500                     __ptext19:
  2851                           	callstack 0
  2852   001500                     ___lwmod:
  2853                           	callstack 27
  2854                           
  2855                           ;incstack = 0
  2856   001500  500A               	movf	___lwmod@divisor^0,w,c
  2857   001502  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  2858   001504  B4D8               	btfsc	status,2,c
  2859   001506  D018               	goto	l878
  2860   001508  0E01               	movlw	1
  2861   00150A  6E0C               	movwf	___lwmod@counter^0,c
  2862   00150C  D004               	goto	l2028
  2863   00150E                     l2026:
  2864   00150E  90D8               	bcf	status,0,c
  2865   001510  360A               	rlcf	___lwmod@divisor^0,f,c
  2866   001512  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  2867   001514  2A0C               	incf	___lwmod@counter^0,f,c
  2868   001516                     l2028:
  2869   001516  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  2870   001518  D7FA               	goto	l2026
  2871   00151A                     u1260:
  2872   00151A  500A               	movf	___lwmod@divisor^0,w,c
  2873   00151C  5C08               	subwf	___lwmod@dividend^0,w,c
  2874   00151E  500B               	movf	(___lwmod@divisor+1)^0,w,c
  2875   001520  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  2876   001522  A0D8               	btfss	status,0,c
  2877   001524  D004               	goto	l2034
  2878   001526  500A               	movf	___lwmod@divisor^0,w,c
  2879   001528  5E08               	subwf	___lwmod@dividend^0,f,c
  2880   00152A  500B               	movf	(___lwmod@divisor+1)^0,w,c
  2881   00152C  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  2882   00152E                     l2034:
  2883   00152E  90D8               	bcf	status,0,c
  2884   001530  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  2885   001532  320A               	rrcf	___lwmod@divisor^0,f,c
  2886   001534  2E0C               	decfsz	___lwmod@counter^0,f,c
  2887   001536  D7F1               	goto	u1260
  2888   001538                     l878:
  2889   001538  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2890   00153C  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2891   001540  0012               	return		;funcret
  2892   001542                     __end_of___lwmod:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function ___lwdiv *****************
  2896 ;; Defined at:
  2897 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwdiv.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  dividend        2    0[COMRAM] unsigned int 
  2900 ;;  divisor         2    2[COMRAM] unsigned int 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  quotient        2    4[COMRAM] unsigned int 
  2903 ;;  counter         1    6[COMRAM] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  2    0[COMRAM] unsigned int 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2913 ;;      Params:         4       0       0       0       0       0       0       0       0
  2914 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2916 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2917 ;;Total ram usage:        7 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_sprintf
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text20
  2928   0013E2                     __ptext20:
  2929                           	callstack 0
  2930   0013E2                     ___lwdiv:
  2931                           	callstack 27
  2932                           
  2933                           ;incstack = 0
  2934   0013E2  0E00               	movlw	0
  2935   0013E4  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2936   0013E6  0E00               	movlw	0
  2937   0013E8  6E05               	movwf	___lwdiv@quotient^0,c
  2938   0013EA  5003               	movf	___lwdiv@divisor^0,w,c
  2939   0013EC  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2940   0013EE  B4D8               	btfsc	status,2,c
  2941   0013F0  D01C               	goto	l868
  2942   0013F2  0E01               	movlw	1
  2943   0013F4  6E07               	movwf	___lwdiv@counter^0,c
  2944   0013F6  D004               	goto	l2008
  2945   0013F8                     l2006:
  2946   0013F8  90D8               	bcf	status,0,c
  2947   0013FA  3603               	rlcf	___lwdiv@divisor^0,f,c
  2948   0013FC  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2949   0013FE  2A07               	incf	___lwdiv@counter^0,f,c
  2950   001400                     l2008:
  2951   001400  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2952   001402  D7FA               	goto	l2006
  2953   001404                     u1230:
  2954   001404  90D8               	bcf	status,0,c
  2955   001406  3605               	rlcf	___lwdiv@quotient^0,f,c
  2956   001408  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2957   00140A  5003               	movf	___lwdiv@divisor^0,w,c
  2958   00140C  5C01               	subwf	___lwdiv@dividend^0,w,c
  2959   00140E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2960   001410  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2961   001412  A0D8               	btfss	status,0,c
  2962   001414  D005               	goto	l2018
  2963   001416  5003               	movf	___lwdiv@divisor^0,w,c
  2964   001418  5E01               	subwf	___lwdiv@dividend^0,f,c
  2965   00141A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2966   00141C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2967   00141E  8005               	bsf	___lwdiv@quotient^0,0,c
  2968   001420                     l2018:
  2969   001420  90D8               	bcf	status,0,c
  2970   001422  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2971   001424  3203               	rrcf	___lwdiv@divisor^0,f,c
  2972   001426  2E07               	decfsz	___lwdiv@counter^0,f,c
  2973   001428  D7ED               	goto	u1230
  2974   00142A                     l868:
  2975   00142A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2976   00142E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2977   001432  0012               	return		;funcret
  2978   001434                     __end_of___lwdiv:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function ___lbtoft *****************
  2982 ;; Defined at:
  2983 ;;		line 27 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbtoft.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  c               1    wreg     unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  c               1   11[COMRAM] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  3    8[COMRAM] float 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2997 ;;      Params:         3       0       0       0       0       0       0       0       0
  2998 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3000 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3001 ;;Total ram usage:        4 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 2
  3004 ;; This function calls:
  3005 ;;		___ftpack
  3006 ;; This function is called by:
  3007 ;;		_choose_scale_temperature_and_fill_buffers
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text21
  3012   001624                     __ptext21:
  3013                           	callstack 0
  3014   001624                     ___lbtoft:
  3015                           	callstack 27
  3016                           
  3017                           ;incstack = 0
  3018                           ;___lbtoft@c stored from wreg
  3019   001624  6E0C               	movwf	___lbtoft@c^0,c
  3020   001626  500C               	movf	___lbtoft@c^0,w,c
  3021   001628  6E01               	movwf	___ftpack@arg^0,c
  3022   00162A  6A02               	clrf	(___ftpack@arg+1)^0,c
  3023   00162C  6A03               	clrf	(___ftpack@arg+2)^0,c
  3024   00162E  0E8E               	movlw	142
  3025   001630  6E04               	movwf	___ftpack@exp^0,c
  3026   001632  0E00               	movlw	0
  3027   001634  6E05               	movwf	___ftpack@sign^0,c
  3028   001636  EC49  F008         	call	___ftpack	;wreg free
  3029   00163A  C001  F009         	movff	?___ftpack,?___lbtoft
  3030   00163E  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  3031   001642  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  3032   001646  0012               	return		;funcret
  3033   001648                     __end_of___lbtoft:
  3034                           	callstack 0
  3035                           
  3036 ;; *************** function ___fttol *****************
  3037 ;; Defined at:
  3038 ;;		line 44 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/fttol.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  f1              3   54[COMRAM] float 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  lval            4   64[COMRAM] unsigned long 
  3043 ;;  exp1            1   68[COMRAM] unsigned char 
  3044 ;;  sign1           1   63[COMRAM] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  4   54[COMRAM] long 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3054 ;;      Params:         4       0       0       0       0       0       0       0       0
  3055 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3056 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3057 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3058 ;;Total ram usage:       15 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_choose_scale_temperature_and_fill_buffers
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text22
  3069   000FC0                     __ptext22:
  3070                           	callstack 0
  3071   000FC0                     ___fttol:
  3072                           	callstack 28
  3073                           
  3074                           ;incstack = 0
  3075   000FC0  C039  F03B         	movff	___fttol@f1+2,??___fttol
  3076   000FC4  6A3C               	clrf	(??___fttol+1)^0,c
  3077   000FC6  6A3D               	clrf	(??___fttol+2)^0,c
  3078   000FC8  3438               	rlcf	(___fttol@f1+1)^0,w,c
  3079   000FCA  363B               	rlcf	??___fttol^0,f,c
  3080   000FCC  E301               	bnc	u1781
  3081   000FCE  803C               	bsf	(??___fttol+1)^0,0,c
  3082   000FD0                     u1781:
  3083   000FD0  503B               	movf	??___fttol^0,w,c
  3084   000FD2  6E45               	movwf	___fttol@exp1^0,c
  3085   000FD4  5045               	movf	___fttol@exp1^0,w,c
  3086   000FD6  A4D8               	btfss	status,2,c
  3087   000FD8  D009               	goto	l2362
  3088   000FDA                     u1790:
  3089   000FDA  0E00               	movlw	0
  3090   000FDC  6E37               	movwf	?___fttol^0,c
  3091   000FDE  0E00               	movlw	0
  3092   000FE0  6E38               	movwf	(?___fttol+1)^0,c
  3093   000FE2  0E00               	movlw	0
  3094   000FE4  6E39               	movwf	(?___fttol+2)^0,c
  3095   000FE6  0E00               	movlw	0
  3096   000FE8  6E3A               	movwf	(?___fttol+3)^0,c
  3097   000FEA  0012               	return	
  3098   000FEC                     l2362:
  3099   000FEC  0E17               	movlw	23
  3100   000FEE  6E3B               	movwf	??___fttol^0,c
  3101   000FF0  C037  F03C         	movff	___fttol@f1,??___fttol+1
  3102   000FF4  C038  F03D         	movff	___fttol@f1+1,??___fttol+2
  3103   000FF8  C039  F03E         	movff	___fttol@f1+2,??___fttol+3
  3104   000FFC  283B               	incf	??___fttol^0,w,c
  3105   000FFE  6E3F               	movwf	(??___fttol+4)^0,c
  3106   001000  D004               	goto	u1800
  3107   001002                     u1805:
  3108   001002  90D8               	bcf	status,0,c
  3109   001004  323E               	rrcf	(??___fttol+3)^0,f,c
  3110   001006  323D               	rrcf	(??___fttol+2)^0,f,c
  3111   001008  323C               	rrcf	(??___fttol+1)^0,f,c
  3112   00100A                     u1800:
  3113   00100A  2E3F               	decfsz	(??___fttol+4)^0,f,c
  3114   00100C  D7FA               	goto	u1805
  3115   00100E  503C               	movf	(??___fttol+1)^0,w,c
  3116   001010  6E40               	movwf	___fttol@sign1^0,c
  3117   001012  8E38               	bsf	(___fttol@f1+1)^0,7,c
  3118   001014  0EFF               	movlw	255
  3119   001016  1637               	andwf	___fttol@f1^0,f,c
  3120   001018  0EFF               	movlw	255
  3121   00101A  1638               	andwf	(___fttol@f1+1)^0,f,c
  3122   00101C  0E00               	movlw	0
  3123   00101E  1639               	andwf	(___fttol@f1+2)^0,f,c
  3124   001020  5037               	movf	___fttol@f1^0,w,c
  3125   001022  6E41               	movwf	___fttol@lval^0,c
  3126   001024  5038               	movf	(___fttol@f1+1)^0,w,c
  3127   001026  6E42               	movwf	(___fttol@lval+1)^0,c
  3128   001028  5039               	movf	(___fttol@f1+2)^0,w,c
  3129   00102A  6E43               	movwf	(___fttol@lval+2)^0,c
  3130   00102C  6A44               	clrf	(___fttol@lval+3)^0,c
  3131   00102E  0E8E               	movlw	142
  3132   001030  5E45               	subwf	___fttol@exp1^0,f,c
  3133   001032  AE45               	btfss	___fttol@exp1^0,7,c
  3134   001034  D00D               	goto	l2384
  3135   001036  5045               	movf	___fttol@exp1^0,w,c
  3136   001038  0A80               	xorlw	128
  3137   00103A  0F8F               	addlw	143
  3138   00103C  A0D8               	btfss	status,0,c
  3139   00103E  D7CD               	goto	u1790
  3140   001040                     l2380:
  3141   001040  90D8               	bcf	status,0,c
  3142   001042  3244               	rrcf	(___fttol@lval+3)^0,f,c
  3143   001044  3243               	rrcf	(___fttol@lval+2)^0,f,c
  3144   001046  3242               	rrcf	(___fttol@lval+1)^0,f,c
  3145   001048  3241               	rrcf	___fttol@lval^0,f,c
  3146   00104A  3E45               	incfsz	___fttol@exp1^0,f,c
  3147   00104C  D7F9               	goto	l2380
  3148   00104E  D00D               	goto	u1840
  3149   001050                     l2384:
  3150   001050  0E17               	movlw	23
  3151   001052  6445               	cpfsgt	___fttol@exp1^0,c
  3152   001054  D007               	goto	l2392
  3153   001056  D7C1               	goto	u1790
  3154   001058                     l2390:
  3155   001058  90D8               	bcf	status,0,c
  3156   00105A  3641               	rlcf	___fttol@lval^0,f,c
  3157   00105C  3642               	rlcf	(___fttol@lval+1)^0,f,c
  3158   00105E  3643               	rlcf	(___fttol@lval+2)^0,f,c
  3159   001060  3644               	rlcf	(___fttol@lval+3)^0,f,c
  3160   001062  0645               	decf	___fttol@exp1^0,f,c
  3161   001064                     l2392:
  3162   001064  5045               	movf	___fttol@exp1^0,w,c
  3163   001066  A4D8               	btfss	status,2,c
  3164   001068  D7F7               	goto	l2390
  3165   00106A                     u1840:
  3166   00106A  5040               	movf	___fttol@sign1^0,w,c
  3167   00106C  B4D8               	btfsc	status,2,c
  3168   00106E  D008               	goto	l2398
  3169   001070  1E44               	comf	(___fttol@lval+3)^0,f,c
  3170   001072  1E43               	comf	(___fttol@lval+2)^0,f,c
  3171   001074  1E42               	comf	(___fttol@lval+1)^0,f,c
  3172   001076  6C41               	negf	___fttol@lval^0,c
  3173   001078  0E00               	movlw	0
  3174   00107A  2242               	addwfc	(___fttol@lval+1)^0,f,c
  3175   00107C  2243               	addwfc	(___fttol@lval+2)^0,f,c
  3176   00107E  2244               	addwfc	(___fttol@lval+3)^0,f,c
  3177   001080                     l2398:
  3178   001080  C041  F037         	movff	___fttol@lval,?___fttol
  3179   001084  C042  F038         	movff	___fttol@lval+1,?___fttol+1
  3180   001088  C043  F039         	movff	___fttol@lval+2,?___fttol+2
  3181   00108C  C044  F03A         	movff	___fttol@lval+3,?___fttol+3
  3182   001090  0012               	return		;funcret
  3183   001092                     __end_of___fttol:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function ___ftmul *****************
  3187 ;; Defined at:
  3188 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftmul.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  f1              3   12[COMRAM] float 
  3191 ;;  f2              3   15[COMRAM] float 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3194 ;;  sign            1   26[COMRAM] unsigned char 
  3195 ;;  cntr            1   25[COMRAM] unsigned char 
  3196 ;;  exp             1   21[COMRAM] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  3   12[COMRAM] float 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3206 ;;      Params:         6       0       0       0       0       0       0       0       0
  3207 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3208 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3209 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3210 ;;Total ram usage:       15 bytes
  3211 ;; Hardware stack levels used: 1
  3212 ;; Hardware stack levels required when called: 2
  3213 ;; This function calls:
  3214 ;;		___ftpack
  3215 ;; This function is called by:
  3216 ;;		_choose_scale_temperature_and_fill_buffers
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text23
  3221   000DE6                     __ptext23:
  3222                           	callstack 0
  3223   000DE6                     ___ftmul:
  3224                           	callstack 27
  3225                           
  3226                           ;incstack = 0
  3227   000DE6  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3228   000DEA  6A14               	clrf	(??___ftmul+1)^0,c
  3229   000DEC  6A15               	clrf	(??___ftmul+2)^0,c
  3230   000DEE  340E               	rlcf	(___ftmul@f1+1)^0,w,c
  3231   000DF0  3613               	rlcf	??___ftmul^0,f,c
  3232   000DF2  E301               	bnc	u1721
  3233   000DF4  8014               	bsf	(??___ftmul+1)^0,0,c
  3234   000DF6                     u1721:
  3235   000DF6  5013               	movf	??___ftmul^0,w,c
  3236   000DF8  6E16               	movwf	___ftmul@exp^0,c
  3237   000DFA  5016               	movf	___ftmul@exp^0,w,c
  3238   000DFC  A4D8               	btfss	status,2,c
  3239   000DFE  D007               	goto	l2314
  3240   000E00  0E00               	movlw	0
  3241   000E02  6E0D               	movwf	?___ftmul^0,c
  3242   000E04  0E00               	movlw	0
  3243   000E06  6E0E               	movwf	(?___ftmul+1)^0,c
  3244   000E08  0E00               	movlw	0
  3245   000E0A  6E0F               	movwf	(?___ftmul+2)^0,c
  3246   000E0C  0012               	return	
  3247   000E0E                     l2314:
  3248   000E0E  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3249   000E12  6A14               	clrf	(??___ftmul+1)^0,c
  3250   000E14  6A15               	clrf	(??___ftmul+2)^0,c
  3251   000E16  3411               	rlcf	(___ftmul@f2+1)^0,w,c
  3252   000E18  3613               	rlcf	??___ftmul^0,f,c
  3253   000E1A  E301               	bnc	u1741
  3254   000E1C  8014               	bsf	(??___ftmul+1)^0,0,c
  3255   000E1E                     u1741:
  3256   000E1E  5013               	movf	??___ftmul^0,w,c
  3257   000E20  6E1B               	movwf	___ftmul@sign^0,c
  3258   000E22  501B               	movf	___ftmul@sign^0,w,c
  3259   000E24  A4D8               	btfss	status,2,c
  3260   000E26  D007               	goto	l2320
  3261   000E28  0E00               	movlw	0
  3262   000E2A  6E0D               	movwf	?___ftmul^0,c
  3263   000E2C  0E00               	movlw	0
  3264   000E2E  6E0E               	movwf	(?___ftmul+1)^0,c
  3265   000E30  0E00               	movlw	0
  3266   000E32  6E0F               	movwf	(?___ftmul+2)^0,c
  3267   000E34  0012               	return	
  3268   000E36                     l2320:
  3269   000E36  501B               	movf	___ftmul@sign^0,w,c
  3270   000E38  0F7B               	addlw	123
  3271   000E3A  2616               	addwf	___ftmul@exp^0,f,c
  3272   000E3C  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3273   000E40  5012               	movf	(___ftmul@f2+2)^0,w,c
  3274   000E42  1A1B               	xorwf	___ftmul@sign^0,f,c
  3275   000E44  0E80               	movlw	128
  3276   000E46  161B               	andwf	___ftmul@sign^0,f,c
  3277   000E48  8E0E               	bsf	(___ftmul@f1+1)^0,7,c
  3278   000E4A  8E11               	bsf	(___ftmul@f2+1)^0,7,c
  3279   000E4C  0EFF               	movlw	255
  3280   000E4E  1610               	andwf	___ftmul@f2^0,f,c
  3281   000E50  0EFF               	movlw	255
  3282   000E52  1611               	andwf	(___ftmul@f2+1)^0,f,c
  3283   000E54  0E00               	movlw	0
  3284   000E56  1612               	andwf	(___ftmul@f2+2)^0,f,c
  3285   000E58  0E00               	movlw	0
  3286   000E5A  6E17               	movwf	___ftmul@f3_as_product^0,c
  3287   000E5C  0E00               	movlw	0
  3288   000E5E  6E18               	movwf	(___ftmul@f3_as_product+1)^0,c
  3289   000E60  0E00               	movlw	0
  3290   000E62  6E19               	movwf	(___ftmul@f3_as_product+2)^0,c
  3291   000E64  0E07               	movlw	7
  3292   000E66  6E1A               	movwf	___ftmul@cntr^0,c
  3293   000E68                     l2334:
  3294   000E68  A00D               	btfss	___ftmul@f1^0,0,c
  3295   000E6A  D006               	goto	l2338
  3296   000E6C  5010               	movf	___ftmul@f2^0,w,c
  3297   000E6E  2617               	addwf	___ftmul@f3_as_product^0,f,c
  3298   000E70  5011               	movf	(___ftmul@f2+1)^0,w,c
  3299   000E72  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  3300   000E74  5012               	movf	(___ftmul@f2+2)^0,w,c
  3301   000E76  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  3302   000E78                     l2338:
  3303   000E78  90D8               	bcf	status,0,c
  3304   000E7A  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  3305   000E7C  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  3306   000E7E  320D               	rrcf	___ftmul@f1^0,f,c
  3307   000E80  90D8               	bcf	status,0,c
  3308   000E82  3610               	rlcf	___ftmul@f2^0,f,c
  3309   000E84  3611               	rlcf	(___ftmul@f2+1)^0,f,c
  3310   000E86  3612               	rlcf	(___ftmul@f2+2)^0,f,c
  3311   000E88  2E1A               	decfsz	___ftmul@cntr^0,f,c
  3312   000E8A  D7EE               	goto	l2334
  3313   000E8C  0E09               	movlw	9
  3314   000E8E  6E1A               	movwf	___ftmul@cntr^0,c
  3315   000E90                     l2344:
  3316   000E90  A00D               	btfss	___ftmul@f1^0,0,c
  3317   000E92  D006               	goto	l2348
  3318   000E94  5010               	movf	___ftmul@f2^0,w,c
  3319   000E96  2617               	addwf	___ftmul@f3_as_product^0,f,c
  3320   000E98  5011               	movf	(___ftmul@f2+1)^0,w,c
  3321   000E9A  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  3322   000E9C  5012               	movf	(___ftmul@f2+2)^0,w,c
  3323   000E9E  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  3324   000EA0                     l2348:
  3325   000EA0  90D8               	bcf	status,0,c
  3326   000EA2  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  3327   000EA4  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  3328   000EA6  320D               	rrcf	___ftmul@f1^0,f,c
  3329   000EA8  90D8               	bcf	status,0,c
  3330   000EAA  3219               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  3331   000EAC  3218               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  3332   000EAE  3217               	rrcf	___ftmul@f3_as_product^0,f,c
  3333   000EB0  2E1A               	decfsz	___ftmul@cntr^0,f,c
  3334   000EB2  D7EE               	goto	l2344
  3335   000EB4  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3336   000EB8  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3337   000EBC  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3338   000EC0  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3339   000EC4  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3340   000EC8  EC49  F008         	call	___ftpack	;wreg free
  3341   000ECC  C001  F00D         	movff	?___ftpack,?___ftmul
  3342   000ED0  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3343   000ED4  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3344   000ED8  0012               	return		;funcret
  3345   000EDA                     __end_of___ftmul:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function ___ftdiv *****************
  3349 ;; Defined at:
  3350 ;;		line 54 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftdiv.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  f1              3   27[COMRAM] float 
  3353 ;;  f2              3   30[COMRAM] float 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  f3              3   37[COMRAM] float 
  3356 ;;  sign            1   41[COMRAM] unsigned char 
  3357 ;;  exp             1   40[COMRAM] unsigned char 
  3358 ;;  cntr            1   36[COMRAM] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  3   27[COMRAM] float 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3368 ;;      Params:         6       0       0       0       0       0       0       0       0
  3369 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3370 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3371 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3372 ;;Total ram usage:       15 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 2
  3375 ;; This function calls:
  3376 ;;		___ftpack
  3377 ;; This function is called by:
  3378 ;;		_choose_scale_temperature_and_fill_buffers
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text24
  3383   000EDA                     __ptext24:
  3384                           	callstack 0
  3385   000EDA                     ___ftdiv:
  3386                           	callstack 27
  3387                           
  3388                           ;incstack = 0
  3389   000EDA  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  3390   000EDE  6A23               	clrf	(??___ftdiv+1)^0,c
  3391   000EE0  6A24               	clrf	(??___ftdiv+2)^0,c
  3392   000EE2  341D               	rlcf	(___ftdiv@f1+1)^0,w,c
  3393   000EE4  3622               	rlcf	??___ftdiv^0,f,c
  3394   000EE6  E301               	bnc	u1671
  3395   000EE8  8023               	bsf	(??___ftdiv+1)^0,0,c
  3396   000EEA                     u1671:
  3397   000EEA  5022               	movf	??___ftdiv^0,w,c
  3398   000EEC  6E29               	movwf	___ftdiv@exp^0,c
  3399   000EEE  5029               	movf	___ftdiv@exp^0,w,c
  3400   000EF0  A4D8               	btfss	status,2,c
  3401   000EF2  D007               	goto	l2268
  3402   000EF4  0E00               	movlw	0
  3403   000EF6  6E1C               	movwf	?___ftdiv^0,c
  3404   000EF8  0E00               	movlw	0
  3405   000EFA  6E1D               	movwf	(?___ftdiv+1)^0,c
  3406   000EFC  0E00               	movlw	0
  3407   000EFE  6E1E               	movwf	(?___ftdiv+2)^0,c
  3408   000F00  0012               	return	
  3409   000F02                     l2268:
  3410   000F02  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  3411   000F06  6A23               	clrf	(??___ftdiv+1)^0,c
  3412   000F08  6A24               	clrf	(??___ftdiv+2)^0,c
  3413   000F0A  3420               	rlcf	(___ftdiv@f2+1)^0,w,c
  3414   000F0C  3622               	rlcf	??___ftdiv^0,f,c
  3415   000F0E  E301               	bnc	u1691
  3416   000F10  8023               	bsf	(??___ftdiv+1)^0,0,c
  3417   000F12                     u1691:
  3418   000F12  5022               	movf	??___ftdiv^0,w,c
  3419   000F14  6E2A               	movwf	___ftdiv@sign^0,c
  3420   000F16  502A               	movf	___ftdiv@sign^0,w,c
  3421   000F18  A4D8               	btfss	status,2,c
  3422   000F1A  D007               	goto	l2274
  3423   000F1C  0E00               	movlw	0
  3424   000F1E  6E1C               	movwf	?___ftdiv^0,c
  3425   000F20  0E00               	movlw	0
  3426   000F22  6E1D               	movwf	(?___ftdiv+1)^0,c
  3427   000F24  0E00               	movlw	0
  3428   000F26  6E1E               	movwf	(?___ftdiv+2)^0,c
  3429   000F28  0012               	return	
  3430   000F2A                     l2274:
  3431   000F2A  0E00               	movlw	0
  3432   000F2C  6E26               	movwf	___ftdiv@f3^0,c
  3433   000F2E  0E00               	movlw	0
  3434   000F30  6E27               	movwf	(___ftdiv@f3+1)^0,c
  3435   000F32  0E00               	movlw	0
  3436   000F34  6E28               	movwf	(___ftdiv@f3+2)^0,c
  3437   000F36  502A               	movf	___ftdiv@sign^0,w,c
  3438   000F38  0F89               	addlw	137
  3439   000F3A  5E29               	subwf	___ftdiv@exp^0,f,c
  3440   000F3C  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3441   000F40  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3442   000F42  1A2A               	xorwf	___ftdiv@sign^0,f,c
  3443   000F44  0E80               	movlw	128
  3444   000F46  162A               	andwf	___ftdiv@sign^0,f,c
  3445   000F48  8E1D               	bsf	(___ftdiv@f1+1)^0,7,c
  3446   000F4A  0EFF               	movlw	255
  3447   000F4C  161C               	andwf	___ftdiv@f1^0,f,c
  3448   000F4E  0EFF               	movlw	255
  3449   000F50  161D               	andwf	(___ftdiv@f1+1)^0,f,c
  3450   000F52  0E00               	movlw	0
  3451   000F54  161E               	andwf	(___ftdiv@f1+2)^0,f,c
  3452   000F56  8E20               	bsf	(___ftdiv@f2+1)^0,7,c
  3453   000F58  0EFF               	movlw	255
  3454   000F5A  161F               	andwf	___ftdiv@f2^0,f,c
  3455   000F5C  0EFF               	movlw	255
  3456   000F5E  1620               	andwf	(___ftdiv@f2+1)^0,f,c
  3457   000F60  0E00               	movlw	0
  3458   000F62  1621               	andwf	(___ftdiv@f2+2)^0,f,c
  3459   000F64  0E18               	movlw	24
  3460   000F66  6E25               	movwf	___ftdiv@cntr^0,c
  3461   000F68                     l2294:
  3462   000F68  90D8               	bcf	status,0,c
  3463   000F6A  3626               	rlcf	___ftdiv@f3^0,f,c
  3464   000F6C  3627               	rlcf	(___ftdiv@f3+1)^0,f,c
  3465   000F6E  3628               	rlcf	(___ftdiv@f3+2)^0,f,c
  3466   000F70  501F               	movf	___ftdiv@f2^0,w,c
  3467   000F72  5C1C               	subwf	___ftdiv@f1^0,w,c
  3468   000F74  5020               	movf	(___ftdiv@f2+1)^0,w,c
  3469   000F76  581D               	subwfb	(___ftdiv@f1+1)^0,w,c
  3470   000F78  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3471   000F7A  581E               	subwfb	(___ftdiv@f1+2)^0,w,c
  3472   000F7C  A0D8               	btfss	status,0,c
  3473   000F7E  D007               	goto	l730
  3474   000F80  501F               	movf	___ftdiv@f2^0,w,c
  3475   000F82  5E1C               	subwf	___ftdiv@f1^0,f,c
  3476   000F84  5020               	movf	(___ftdiv@f2+1)^0,w,c
  3477   000F86  5A1D               	subwfb	(___ftdiv@f1+1)^0,f,c
  3478   000F88  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3479   000F8A  5A1E               	subwfb	(___ftdiv@f1+2)^0,f,c
  3480   000F8C  8026               	bsf	___ftdiv@f3^0,0,c
  3481   000F8E                     l730:
  3482   000F8E  90D8               	bcf	status,0,c
  3483   000F90  361C               	rlcf	___ftdiv@f1^0,f,c
  3484   000F92  361D               	rlcf	(___ftdiv@f1+1)^0,f,c
  3485   000F94  361E               	rlcf	(___ftdiv@f1+2)^0,f,c
  3486   000F96  2E25               	decfsz	___ftdiv@cntr^0,f,c
  3487   000F98  D7E7               	goto	l2294
  3488   000F9A  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  3489   000F9E  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3490   000FA2  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3491   000FA6  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  3492   000FAA  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  3493   000FAE  EC49  F008         	call	___ftpack	;wreg free
  3494   000FB2  C001  F01C         	movff	?___ftpack,?___ftdiv
  3495   000FB6  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  3496   000FBA  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  3497   000FBE  0012               	return		;funcret
  3498   000FC0                     __end_of___ftdiv:
  3499                           	callstack 0
  3500                           
  3501 ;; *************** function ___ftadd *****************
  3502 ;; Defined at:
  3503 ;;		line 86 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftadd.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  f1              3   42[COMRAM] float 
  3506 ;;  f2              3   45[COMRAM] float 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  exp1            1   53[COMRAM] unsigned char 
  3509 ;;  exp2            1   52[COMRAM] unsigned char 
  3510 ;;  sign            1   51[COMRAM] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  3   42[COMRAM] float 
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3520 ;;      Params:         6       0       0       0       0       0       0       0       0
  3521 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3522 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3523 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3524 ;;Total ram usage:       12 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; Hardware stack levels required when called: 2
  3527 ;; This function calls:
  3528 ;;		___ftpack
  3529 ;; This function is called by:
  3530 ;;		_choose_scale_temperature_and_fill_buffers
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text25
  3535   000C3E                     __ptext25:
  3536                           	callstack 0
  3537   000C3E                     ___ftadd:
  3538                           	callstack 27
  3539                           
  3540                           ;incstack = 0
  3541   000C3E  C02D  F031         	movff	___ftadd@f1+2,??___ftadd
  3542   000C42  6A32               	clrf	(??___ftadd+1)^0,c
  3543   000C44  6A33               	clrf	(??___ftadd+2)^0,c
  3544   000C46  342C               	rlcf	(___ftadd@f1+1)^0,w,c
  3545   000C48  3631               	rlcf	??___ftadd^0,f,c
  3546   000C4A  E301               	bnc	u1461
  3547   000C4C  8032               	bsf	(??___ftadd+1)^0,0,c
  3548   000C4E                     u1461:
  3549   000C4E  5031               	movf	??___ftadd^0,w,c
  3550   000C50  6E36               	movwf	___ftadd@exp1^0,c
  3551   000C52  C030  F031         	movff	___ftadd@f2+2,??___ftadd
  3552   000C56  6A32               	clrf	(??___ftadd+1)^0,c
  3553   000C58  6A33               	clrf	(??___ftadd+2)^0,c
  3554   000C5A  342F               	rlcf	(___ftadd@f2+1)^0,w,c
  3555   000C5C  3631               	rlcf	??___ftadd^0,f,c
  3556   000C5E  E301               	bnc	u1471
  3557   000C60  8032               	bsf	(??___ftadd+1)^0,0,c
  3558   000C62                     u1471:
  3559   000C62  5031               	movf	??___ftadd^0,w,c
  3560   000C64  6E35               	movwf	___ftadd@exp2^0,c
  3561   000C66  5036               	movf	___ftadd@exp1^0,w,c
  3562   000C68  B4D8               	btfsc	status,2,c
  3563   000C6A  D00A               	goto	u1500
  3564   000C6C  5035               	movf	___ftadd@exp2^0,w,c
  3565   000C6E  5C36               	subwf	___ftadd@exp1^0,w,c
  3566   000C70  B0D8               	btfsc	status,0,c
  3567   000C72  D00D               	goto	l2200
  3568   000C74  5036               	movf	___ftadd@exp1^0,w,c
  3569   000C76  5C35               	subwf	___ftadd@exp2^0,w,c
  3570   000C78  6E31               	movwf	??___ftadd^0,c
  3571   000C7A  0E18               	movlw	24
  3572   000C7C  6431               	cpfsgt	??___ftadd^0,c
  3573   000C7E  D007               	goto	l2200
  3574   000C80                     u1500:
  3575   000C80  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  3576   000C84  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  3577   000C88  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  3578   000C8C  0012               	return	
  3579   000C8E                     l2200:
  3580   000C8E  5035               	movf	___ftadd@exp2^0,w,c
  3581   000C90  B4D8               	btfsc	status,2,c
  3582   000C92  D00A               	goto	u1530
  3583   000C94  5036               	movf	___ftadd@exp1^0,w,c
  3584   000C96  5C35               	subwf	___ftadd@exp2^0,w,c
  3585   000C98  B0D8               	btfsc	status,0,c
  3586   000C9A  D00D               	goto	l2206
  3587   000C9C  5035               	movf	___ftadd@exp2^0,w,c
  3588   000C9E  5C36               	subwf	___ftadd@exp1^0,w,c
  3589   000CA0  6E31               	movwf	??___ftadd^0,c
  3590   000CA2  0E18               	movlw	24
  3591   000CA4  6431               	cpfsgt	??___ftadd^0,c
  3592   000CA6  D007               	goto	l2206
  3593   000CA8                     u1530:
  3594   000CA8  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  3595   000CAC  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  3596   000CB0  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  3597   000CB4  0012               	return	
  3598   000CB6                     l2206:
  3599   000CB6  0E06               	movlw	6
  3600   000CB8  6E34               	movwf	___ftadd@sign^0,c
  3601   000CBA  BE2D               	btfsc	(___ftadd@f1+2)^0,7,c
  3602   000CBC  8E34               	bsf	___ftadd@sign^0,7,c
  3603   000CBE  BE30               	btfsc	(___ftadd@f2+2)^0,7,c
  3604   000CC0  8C34               	bsf	___ftadd@sign^0,6,c
  3605   000CC2  8E2C               	bsf	(___ftadd@f1+1)^0,7,c
  3606   000CC4  0EFF               	movlw	255
  3607   000CC6  162B               	andwf	___ftadd@f1^0,f,c
  3608   000CC8  0EFF               	movlw	255
  3609   000CCA  162C               	andwf	(___ftadd@f1+1)^0,f,c
  3610   000CCC  0E00               	movlw	0
  3611   000CCE  162D               	andwf	(___ftadd@f1+2)^0,f,c
  3612   000CD0  8E2F               	bsf	(___ftadd@f2+1)^0,7,c
  3613   000CD2  0EFF               	movlw	255
  3614   000CD4  162E               	andwf	___ftadd@f2^0,f,c
  3615   000CD6  0EFF               	movlw	255
  3616   000CD8  162F               	andwf	(___ftadd@f2+1)^0,f,c
  3617   000CDA  0E00               	movlw	0
  3618   000CDC  1630               	andwf	(___ftadd@f2+2)^0,f,c
  3619   000CDE  5035               	movf	___ftadd@exp2^0,w,c
  3620   000CE0  5C36               	subwf	___ftadd@exp1^0,w,c
  3621   000CE2  B0D8               	btfsc	status,0,c
  3622   000CE4  D01B               	goto	l2232
  3623   000CE6                     u1560:
  3624   000CE6  90D8               	bcf	status,0,c
  3625   000CE8  362E               	rlcf	___ftadd@f2^0,f,c
  3626   000CEA  362F               	rlcf	(___ftadd@f2+1)^0,f,c
  3627   000CEC  3630               	rlcf	(___ftadd@f2+2)^0,f,c
  3628   000CEE  0635               	decf	___ftadd@exp2^0,f,c
  3629   000CF0  5036               	movf	___ftadd@exp1^0,w,c
  3630   000CF2  1835               	xorwf	___ftadd@exp2^0,w,c
  3631   000CF4  B4D8               	btfsc	status,2,c
  3632   000CF6  D00D               	goto	l2230
  3633   000CF8  0634               	decf	___ftadd@sign^0,f,c
  3634   000CFA  C034  F031         	movff	___ftadd@sign,??___ftadd
  3635   000CFE  0E07               	movlw	7
  3636   000D00  1631               	andwf	??___ftadd^0,f,c
  3637   000D02  B4D8               	btfsc	status,2,c
  3638   000D04  D006               	goto	l2230
  3639   000D06  D7EF               	goto	u1560
  3640   000D08                     l2228:
  3641   000D08  90D8               	bcf	status,0,c
  3642   000D0A  322D               	rrcf	(___ftadd@f1+2)^0,f,c
  3643   000D0C  322C               	rrcf	(___ftadd@f1+1)^0,f,c
  3644   000D0E  322B               	rrcf	___ftadd@f1^0,f,c
  3645   000D10  2A36               	incf	___ftadd@exp1^0,f,c
  3646   000D12                     l2230:
  3647   000D12  5035               	movf	___ftadd@exp2^0,w,c
  3648   000D14  1836               	xorwf	___ftadd@exp1^0,w,c
  3649   000D16  B4D8               	btfsc	status,2,c
  3650   000D18  D01F               	goto	u1630
  3651   000D1A  D7F6               	goto	l2228
  3652   000D1C                     l2232:
  3653   000D1C  5036               	movf	___ftadd@exp1^0,w,c
  3654   000D1E  5C35               	subwf	___ftadd@exp2^0,w,c
  3655   000D20  B0D8               	btfsc	status,0,c
  3656   000D22  D01A               	goto	u1630
  3657   000D24                     u1600:
  3658   000D24  90D8               	bcf	status,0,c
  3659   000D26  362B               	rlcf	___ftadd@f1^0,f,c
  3660   000D28  362C               	rlcf	(___ftadd@f1+1)^0,f,c
  3661   000D2A  362D               	rlcf	(___ftadd@f1+2)^0,f,c
  3662   000D2C  0636               	decf	___ftadd@exp1^0,f,c
  3663   000D2E  5036               	movf	___ftadd@exp1^0,w,c
  3664   000D30  1835               	xorwf	___ftadd@exp2^0,w,c
  3665   000D32  B4D8               	btfsc	status,2,c
  3666   000D34  D00D               	goto	l2242
  3667   000D36  0634               	decf	___ftadd@sign^0,f,c
  3668   000D38  C034  F031         	movff	___ftadd@sign,??___ftadd
  3669   000D3C  0E07               	movlw	7
  3670   000D3E  1631               	andwf	??___ftadd^0,f,c
  3671   000D40  B4D8               	btfsc	status,2,c
  3672   000D42  D006               	goto	l2242
  3673   000D44  D7EF               	goto	u1600
  3674   000D46                     l2240:
  3675   000D46  90D8               	bcf	status,0,c
  3676   000D48  3230               	rrcf	(___ftadd@f2+2)^0,f,c
  3677   000D4A  322F               	rrcf	(___ftadd@f2+1)^0,f,c
  3678   000D4C  322E               	rrcf	___ftadd@f2^0,f,c
  3679   000D4E  2A35               	incf	___ftadd@exp2^0,f,c
  3680   000D50                     l2242:
  3681   000D50  5035               	movf	___ftadd@exp2^0,w,c
  3682   000D52  1836               	xorwf	___ftadd@exp1^0,w,c
  3683   000D54  A4D8               	btfss	status,2,c
  3684   000D56  D7F7               	goto	l2240
  3685   000D58                     u1630:
  3686   000D58  AE34               	btfss	___ftadd@sign^0,7,c
  3687   000D5A  D00C               	goto	l719
  3688   000D5C  0EFF               	movlw	255
  3689   000D5E  1A2B               	xorwf	___ftadd@f1^0,f,c
  3690   000D60  0EFF               	movlw	255
  3691   000D62  1A2C               	xorwf	(___ftadd@f1+1)^0,f,c
  3692   000D64  0EFF               	movlw	255
  3693   000D66  1A2D               	xorwf	(___ftadd@f1+2)^0,f,c
  3694   000D68  0E01               	movlw	1
  3695   000D6A  262B               	addwf	___ftadd@f1^0,f,c
  3696   000D6C  0E00               	movlw	0
  3697   000D6E  222C               	addwfc	(___ftadd@f1+1)^0,f,c
  3698   000D70  0E00               	movlw	0
  3699   000D72  222D               	addwfc	(___ftadd@f1+2)^0,f,c
  3700   000D74                     l719:
  3701   000D74  AC34               	btfss	___ftadd@sign^0,6,c
  3702   000D76  D00C               	goto	l2248
  3703   000D78  0EFF               	movlw	255
  3704   000D7A  1A2E               	xorwf	___ftadd@f2^0,f,c
  3705   000D7C  0EFF               	movlw	255
  3706   000D7E  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  3707   000D80  0EFF               	movlw	255
  3708   000D82  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  3709   000D84  0E01               	movlw	1
  3710   000D86  262E               	addwf	___ftadd@f2^0,f,c
  3711   000D88  0E00               	movlw	0
  3712   000D8A  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  3713   000D8C  0E00               	movlw	0
  3714   000D8E  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  3715   000D90                     l2248:
  3716   000D90  0E00               	movlw	0
  3717   000D92  6E34               	movwf	___ftadd@sign^0,c
  3718   000D94  502B               	movf	___ftadd@f1^0,w,c
  3719   000D96  262E               	addwf	___ftadd@f2^0,f,c
  3720   000D98  502C               	movf	(___ftadd@f1+1)^0,w,c
  3721   000D9A  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  3722   000D9C  502D               	movf	(___ftadd@f1+2)^0,w,c
  3723   000D9E  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  3724   000DA0  AE30               	btfss	(___ftadd@f2+2)^0,7,c
  3725   000DA2  D00E               	goto	l2258
  3726   000DA4  0EFF               	movlw	255
  3727   000DA6  1A2E               	xorwf	___ftadd@f2^0,f,c
  3728   000DA8  0EFF               	movlw	255
  3729   000DAA  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  3730   000DAC  0EFF               	movlw	255
  3731   000DAE  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  3732   000DB0  0E01               	movlw	1
  3733   000DB2  262E               	addwf	___ftadd@f2^0,f,c
  3734   000DB4  0E00               	movlw	0
  3735   000DB6  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  3736   000DB8  0E00               	movlw	0
  3737   000DBA  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  3738   000DBC  0E01               	movlw	1
  3739   000DBE  6E34               	movwf	___ftadd@sign^0,c
  3740   000DC0                     l2258:
  3741   000DC0  C02E  F001         	movff	___ftadd@f2,___ftpack@arg
  3742   000DC4  C02F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3743   000DC8  C030  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3744   000DCC  C036  F004         	movff	___ftadd@exp1,___ftpack@exp
  3745   000DD0  C034  F005         	movff	___ftadd@sign,___ftpack@sign
  3746   000DD4  EC49  F008         	call	___ftpack	;wreg free
  3747   000DD8  C001  F02B         	movff	?___ftpack,?___ftadd
  3748   000DDC  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  3749   000DE0  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  3750   000DE4  0012               	return		;funcret
  3751   000DE6                     __end_of___ftadd:
  3752                           	callstack 0
  3753                           
  3754 ;; *************** function ___ftpack *****************
  3755 ;; Defined at:
  3756 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/float.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  arg             3    0[COMRAM] unsigned um
  3759 ;;  exp             1    3[COMRAM] unsigned char 
  3760 ;;  sign            1    4[COMRAM] unsigned char 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  3    0[COMRAM] float 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3772 ;;      Params:         5       0       0       0       0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3774 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3775 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3776 ;;Total ram usage:        8 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 1
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		___ftadd
  3783 ;;		___ftdiv
  3784 ;;		___ftmul
  3785 ;;		___lbtoft
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text26
  3790   001092                     __ptext26:
  3791                           	callstack 0
  3792   001092                     ___ftpack:
  3793                           	callstack 27
  3794                           
  3795                           ;incstack = 0
  3796   001092  5004               	movf	___ftpack@exp^0,w,c
  3797   001094  B4D8               	btfsc	status,2,c
  3798   001096  D005               	goto	u1150
  3799   001098  5001               	movf	___ftpack@arg^0,w,c
  3800   00109A  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  3801   00109C  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  3802   00109E  A4D8               	btfss	status,2,c
  3803   0010A0  D00C               	goto	l1974
  3804   0010A2                     u1150:
  3805   0010A2  0E00               	movlw	0
  3806   0010A4  6E01               	movwf	?___ftpack^0,c
  3807   0010A6  0E00               	movlw	0
  3808   0010A8  6E02               	movwf	(?___ftpack+1)^0,c
  3809   0010AA  0E00               	movlw	0
  3810   0010AC  6E03               	movwf	(?___ftpack+2)^0,c
  3811   0010AE  0012               	return	
  3812   0010B0                     l1972:
  3813   0010B0  2A04               	incf	___ftpack@exp^0,f,c
  3814   0010B2  90D8               	bcf	status,0,c
  3815   0010B4  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  3816   0010B6  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  3817   0010B8  3201               	rrcf	___ftpack@arg^0,f,c
  3818   0010BA                     l1974:
  3819   0010BA  0E00               	movlw	0
  3820   0010BC  1401               	andwf	___ftpack@arg^0,w,c
  3821   0010BE  6E06               	movwf	??___ftpack^0,c
  3822   0010C0  0E00               	movlw	0
  3823   0010C2  1402               	andwf	(___ftpack@arg+1)^0,w,c
  3824   0010C4  6E07               	movwf	(??___ftpack+1)^0,c
  3825   0010C6  0EFE               	movlw	254
  3826   0010C8  1403               	andwf	(___ftpack@arg+2)^0,w,c
  3827   0010CA  6E08               	movwf	(??___ftpack+2)^0,c
  3828   0010CC  5006               	movf	??___ftpack^0,w,c
  3829   0010CE  1007               	iorwf	(??___ftpack+1)^0,w,c
  3830   0010D0  1008               	iorwf	(??___ftpack+2)^0,w,c
  3831   0010D2  B4D8               	btfsc	status,2,c
  3832   0010D4  D00C               	goto	l1980
  3833   0010D6  D7EC               	goto	l1972
  3834   0010D8                     l1976:
  3835   0010D8  2A04               	incf	___ftpack@exp^0,f,c
  3836   0010DA  0E01               	movlw	1
  3837   0010DC  2601               	addwf	___ftpack@arg^0,f,c
  3838   0010DE  0E00               	movlw	0
  3839   0010E0  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  3840   0010E2  0E00               	movlw	0
  3841   0010E4  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  3842   0010E6  90D8               	bcf	status,0,c
  3843   0010E8  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  3844   0010EA  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  3845   0010EC  3201               	rrcf	___ftpack@arg^0,f,c
  3846   0010EE                     l1980:
  3847   0010EE  0E00               	movlw	0
  3848   0010F0  1401               	andwf	___ftpack@arg^0,w,c
  3849   0010F2  6E06               	movwf	??___ftpack^0,c
  3850   0010F4  0E00               	movlw	0
  3851   0010F6  1402               	andwf	(___ftpack@arg+1)^0,w,c
  3852   0010F8  6E07               	movwf	(??___ftpack+1)^0,c
  3853   0010FA  0EFF               	movlw	255
  3854   0010FC  1403               	andwf	(___ftpack@arg+2)^0,w,c
  3855   0010FE  6E08               	movwf	(??___ftpack+2)^0,c
  3856   001100  5006               	movf	??___ftpack^0,w,c
  3857   001102  1007               	iorwf	(??___ftpack+1)^0,w,c
  3858   001104  1008               	iorwf	(??___ftpack+2)^0,w,c
  3859   001106  B4D8               	btfsc	status,2,c
  3860   001108  D006               	goto	l1984
  3861   00110A  D7E6               	goto	l1976
  3862   00110C                     l1982:
  3863   00110C  0604               	decf	___ftpack@exp^0,f,c
  3864   00110E  90D8               	bcf	status,0,c
  3865   001110  3601               	rlcf	___ftpack@arg^0,f,c
  3866   001112  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  3867   001114  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  3868   001116                     l1984:
  3869   001116  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  3870   001118  D003               	goto	u1190
  3871   00111A  0E02               	movlw	2
  3872   00111C  6004               	cpfslt	___ftpack@exp^0,c
  3873   00111E  D7F6               	goto	l1982
  3874   001120                     u1190:
  3875   001120  A004               	btfss	___ftpack@exp^0,0,c
  3876   001122  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  3877   001124  90D8               	bcf	status,0,c
  3878   001126  3204               	rrcf	___ftpack@exp^0,f,c
  3879   001128  5004               	movf	___ftpack@exp^0,w,c
  3880   00112A  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  3881   00112C  5005               	movf	___ftpack@sign^0,w,c
  3882   00112E  A4D8               	btfss	status,2,c
  3883   001130  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  3884   001132  C001  F001         	movff	___ftpack@arg,?___ftpack
  3885   001136  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3886   00113A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3887   00113E  0012               	return		;funcret
  3888   001140                     __end_of___ftpack:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _check_potentiometer_voltaje *****************
  3892 ;; Defined at:
  3893 ;;		line 208 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 4
  3914 ;; This function calls:
  3915 ;;		_BorraLCD
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text27
  3922   00166A                     __ptext27:
  3923                           	callstack 0
  3924   00166A                     _check_potentiometer_voltaje:
  3925                           	callstack 26
  3926                           
  3927                           ;LAB05.c: 209: ADON=1;
  3928                           
  3929                           ;incstack = 0
  3930   00166A  80C2               	bsf	4034,0,c	;volatile
  3931                           
  3932                           ;LAB05.c: 210: GO=1;
  3933   00166C  82C2               	bsf	4034,1,c	;volatile
  3934   00166E                     l261:
  3935   00166E  B2C2               	btfsc	4034,1,c	;volatile
  3936   001670  D7FE               	goto	l261
  3937                           
  3938                           ;LAB05.c: 212: BorraLCD();
  3939   001672  EC79  F00B         	call	_BorraLCD	;wreg free
  3940                           
  3941                           ;LAB05.c: 214: if(ADRES > 511)
  3942   001676  0E00               	movlw	0
  3943   001678  5CC3               	subwf	195,w,c	;volatile
  3944   00167A  0E02               	movlw	2
  3945   00167C  58C4               	subwfb	196,w,c	;volatile
  3946   00167E  A0D8               	btfss	status,0,c
  3947   001680  D002               	goto	l264
  3948                           
  3949                           ;LAB05.c: 215: RB0 = 1;
  3950   001682  8081               	bsf	3969,0,c	;volatile
  3951   001684  D001               	goto	l265
  3952   001686                     l264:
  3953                           
  3954                           ;LAB05.c: 216: else;LAB05.c: 217: RB0 = 0;
  3955   001686  9081               	bcf	3969,0,c	;volatile
  3956   001688                     l265:
  3957                           
  3958                           ;LAB05.c: 219: ADON=0;
  3959   001688  90C2               	bcf	4034,0,c	;volatile
  3960                           
  3961                           ;LAB05.c: 220: return;
  3962   00168A  0012               	return		;funcret
  3963   00168C                     __end_of_check_potentiometer_voltaje:
  3964                           	callstack 0
  3965                           
  3966 ;; *************** function _BorraLCD *****************
  3967 ;; Defined at:
  3968 ;;		line 112 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3982 ;;      Params:         0       0       0       0       0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3985 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; Hardware stack levels required when called: 3
  3989 ;; This function calls:
  3990 ;;		_EnviaDato
  3991 ;;		_HabilitaLCD
  3992 ;;		_RetardoLCD
  3993 ;; This function is called by:
  3994 ;;		_InicializaLCD
  3995 ;;		_MensajeLCD_Var
  3996 ;;		_welcome_operations
  3997 ;;		_check_potentiometer_voltaje
  3998 ;;		_show_temperature_LCD
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text28
  4003   0016F2                     __ptext28:
  4004                           	callstack 0
  4005   0016F2                     _BorraLCD:
  4006                           	callstack 25
  4007                           
  4008                           ;LibLCDXC8.h: 114: LATD0=0;
  4009                           
  4010                           ;incstack = 0
  4011   0016F2  908C               	bcf	3980,0,c	;volatile
  4012                           
  4013                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  4014   0016F4  0E01               	movlw	1
  4015   0016F6  EC1A  F00A         	call	_EnviaDato
  4016                           
  4017                           ;LibLCDXC8.h: 116: HabilitaLCD();
  4018   0016FA  EC83  F00B         	call	_HabilitaLCD	;wreg free
  4019                           
  4020                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  4021   0016FE  0E02               	movlw	2
  4022   001700  EC63  F009         	call	_RetardoLCD
  4023   001704  0012               	return		;funcret
  4024   001706                     __end_of_BorraLCD:
  4025                           	callstack 0
  4026                           
  4027 ;; *************** function _EnviaDato *****************
  4028 ;; Defined at:
  4029 ;;		line 59 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  a               1    wreg     unsigned char 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  a               1    3[COMRAM] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0, cstack
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4043 ;;      Params:         0       0       0       0       0       0       0       0       0
  4044 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4045 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4046 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4047 ;;Total ram usage:        2 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 2
  4050 ;; This function calls:
  4051 ;;		_HabilitaLCD
  4052 ;;		_RetardoLCD
  4053 ;; This function is called by:
  4054 ;;		_InicializaLCD
  4055 ;;		_BorraLCD
  4056 ;;		_EscribeLCD_c
  4057 ;;		_DireccionaLCD
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text29
  4062   001434                     __ptext29:
  4063                           	callstack 0
  4064   001434                     _EnviaDato:
  4065                           	callstack 25
  4066                           
  4067                           ;incstack = 0
  4068                           ;EnviaDato@a stored from wreg
  4069   001434  6E04               	movwf	EnviaDato@a^0,c
  4070                           
  4071                           ;LibLCDXC8.h: 60: if(interfaz==4){
  4072   001436  0E04               	movlw	4
  4073   001438  185A               	xorwf	_interfaz^0,w,c
  4074   00143A  A4D8               	btfss	status,2,c
  4075   00143C  D017               	goto	l1936
  4076                           
  4077                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4078   00143E  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  4079   001442  0EF0               	movlw	240
  4080   001444  1603               	andwf	??_EnviaDato^0,f,c
  4081   001446  508C               	movf	140,w,c	;volatile
  4082   001448  0B0F               	andlw	15
  4083   00144A  1003               	iorwf	??_EnviaDato^0,w,c
  4084   00144C  6E8C               	movwf	140,c	;volatile
  4085                           
  4086                           ;LibLCDXC8.h: 62: HabilitaLCD();
  4087   00144E  EC83  F00B         	call	_HabilitaLCD	;wreg free
  4088                           
  4089                           ;LibLCDXC8.h: 63: RetardoLCD(1);
  4090   001452  0E01               	movlw	1
  4091   001454  EC63  F009         	call	_RetardoLCD
  4092                           
  4093                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
  4094   001458  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  4095   00145C  3A03               	swapf	??_EnviaDato^0,f,c
  4096   00145E  0EF0               	movlw	240
  4097   001460  1603               	andwf	??_EnviaDato^0,f,c
  4098   001462  508C               	movf	140,w,c	;volatile
  4099   001464  0B0F               	andlw	15
  4100   001466  1003               	iorwf	??_EnviaDato^0,w,c
  4101   001468  6E8C               	movwf	140,c	;volatile
  4102                           
  4103                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
  4104   00146A  0012               	return	
  4105   00146C                     l1936:
  4106   00146C  0E08               	movlw	8
  4107   00146E  185A               	xorwf	_interfaz^0,w,c
  4108   001470  A4D8               	btfss	status,2,c
  4109   001472  0012               	return	
  4110                           
  4111                           ;LibLCDXC8.h: 68: LATD=a;
  4112   001474  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  4113   001478  0012               	return		;funcret
  4114   00147A                     __end_of_EnviaDato:
  4115                           	callstack 0
  4116                           
  4117 ;; *************** function _RetardoLCD *****************
  4118 ;; Defined at:
  4119 ;;		line 288 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  a               1    wreg     unsigned char 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  a               1    1[COMRAM] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4133 ;;      Params:         0       0       0       0       0       0       0       0       0
  4134 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4135 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4136 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4137 ;;Total ram usage:        2 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; Hardware stack levels required when called: 1
  4140 ;; This function calls:
  4141 ;;		Nothing
  4142 ;; This function is called by:
  4143 ;;		_EnviaDato
  4144 ;;		_InicializaLCD
  4145 ;;		_BorraLCD
  4146 ;;		_EscribeLCD_c
  4147 ;;		_DireccionaLCD
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text30
  4152   0012C6                     __ptext30:
  4153                           	callstack 0
  4154   0012C6                     _RetardoLCD:
  4155                           	callstack 26
  4156                           
  4157                           ;incstack = 0
  4158                           ;RetardoLCD@a stored from wreg
  4159   0012C6  6E02               	movwf	RetardoLCD@a^0,c
  4160                           
  4161                           ;LibLCDXC8.h: 289: switch(a){
  4162   0012C8  D023               	goto	l1924
  4163   0012CA                     l1914:
  4164   0012CA  0E27               	movlw	39
  4165   0012CC  6E01               	movwf	??_RetardoLCD^0,c
  4166   0012CE  0EF5               	movlw	245
  4167   0012D0                     u2097:
  4168   0012D0  2EE8               	decfsz	wreg,f,c
  4169   0012D2  D7FE               	bra	u2097
  4170   0012D4  2E01               	decfsz	??_RetardoLCD^0,f,c
  4171   0012D6  D7FC               	bra	u2097
  4172   0012D8  F000               	nop	
  4173                           
  4174                           ;LibLCDXC8.h: 292: break;
  4175   0012DA  0012               	return	
  4176   0012DC                     l1916:
  4177   0012DC  0E03               	movlw	3
  4178   0012DE  6E01               	movwf	??_RetardoLCD^0,c
  4179   0012E0  0E98               	movlw	152
  4180   0012E2                     u2107:
  4181   0012E2  2EE8               	decfsz	wreg,f,c
  4182   0012E4  D7FE               	bra	u2107
  4183   0012E6  2E01               	decfsz	??_RetardoLCD^0,f,c
  4184   0012E8  D7FC               	bra	u2107
  4185                           
  4186                           ;LibLCDXC8.h: 294: _delay((unsigned long)((640)*(8000000/4000000.0)));
  4187   0012EA  0EB6               	movlw	182
  4188   0012EC                     u2117:
  4189   0012EC  D000               	nop2	
  4190   0012EE  D000               	nop2	
  4191   0012F0  2EE8               	decfsz	wreg,f,c
  4192   0012F2  D7FC               	bra	u2117
  4193   0012F4  D000               	nop2	
  4194   0012F6  D000               	nop2	
  4195   0012F8  D000               	nop2	
  4196                           
  4197                           ;LibLCDXC8.h: 296: break;
  4198   0012FA  0012               	return	
  4199   0012FC                     l1918:
  4200   0012FC  0E42               	movlw	66
  4201   0012FE                     u2127:
  4202   0012FE  2EE8               	decfsz	wreg,f,c
  4203   001300  D7FE               	bra	u2127
  4204   001302  D000               	nop2	
  4205                           
  4206                           ;LibLCDXC8.h: 299: break;
  4207   001304  0012               	return	
  4208   001306                     l1920:
  4209   001306  0E1A               	movlw	26
  4210   001308                     u2137:
  4211   001308  2EE8               	decfsz	wreg,f,c
  4212   00130A  D7FE               	bra	u2137
  4213   00130C  D000               	nop2	
  4214                           
  4215                           ;LibLCDXC8.h: 302: break;
  4216   00130E  0012               	return	
  4217   001310                     l1924:
  4218   001310  5002               	movf	RetardoLCD@a^0,w,c
  4219                           
  4220                           ; Switch size 1, requested type "simple"
  4221                           ; Number of cases is 4, Range of values is 1 to 4
  4222                           ; switch strategies available:
  4223                           ; Name         Instructions Cycles
  4224                           ; simple_byte           13     7 (average)
  4225                           ;	Chosen strategy is simple_byte
  4226   001312  0A01               	xorlw	1	; case 1
  4227   001314  B4D8               	btfsc	status,2,c
  4228   001316  D7D9               	goto	l1914
  4229   001318  0A03               	xorlw	3	; case 2
  4230   00131A  B4D8               	btfsc	status,2,c
  4231   00131C  D7DF               	goto	l1916
  4232   00131E  0A01               	xorlw	1	; case 3
  4233   001320  B4D8               	btfsc	status,2,c
  4234   001322  D7EC               	goto	l1918
  4235   001324  0A07               	xorlw	7	; case 4
  4236   001326  A4D8               	btfss	status,2,c
  4237   001328  0012               	return	
  4238   00132A  D7ED               	goto	l1920
  4239   00132C                     __end_of_RetardoLCD:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function _HabilitaLCD *****************
  4243 ;; Defined at:
  4244 ;;		line 105 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		wreg
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4258 ;;      Params:         0       0       0       0       0       0       0       0       0
  4259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4261 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4262 ;;Total ram usage:        0 bytes
  4263 ;; Hardware stack levels used: 1
  4264 ;; Hardware stack levels required when called: 1
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_EnviaDato
  4269 ;;		_InicializaLCD
  4270 ;;		_BorraLCD
  4271 ;;		_EscribeLCD_c
  4272 ;;		_DireccionaLCD
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text31
  4277   001706                     __ptext31:
  4278                           	callstack 0
  4279   001706                     _HabilitaLCD:
  4280                           	callstack 26
  4281                           
  4282                           ;LibLCDXC8.h: 107: LATD1=1;
  4283                           
  4284                           ;incstack = 0
  4285   001706  828C               	bsf	3980,1,c	;volatile
  4286                           
  4287                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
  4288   001708  0E1A               	movlw	26
  4289   00170A                     u2147:
  4290   00170A  2EE8               	decfsz	wreg,f,c
  4291   00170C  D7FE               	bra	u2147
  4292   00170E  D000               	nop2	
  4293                           
  4294                           ;LibLCDXC8.h: 110: LATD1=0;
  4295   001710  928C               	bcf	3980,1,c	;volatile
  4296   001712  0012               	return		;funcret
  4297   001714                     __end_of_HabilitaLCD:
  4298                           	callstack 0
  4299                           
  4300 ;; *************** function _ISR *****************
  4301 ;; Defined at:
  4302 ;;		line 386 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4319 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4320 ;;Total ram usage:        0 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		Interrupt level 2
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	intcode
  4330   000008                     __pintcode:
  4331                           	callstack 0
  4332   000008                     _ISR:
  4333                           	callstack 25
  4334                           
  4335                           ;incstack = 0
  4336   000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4337   00000A  ED46  F00B         	call	int_func,f	;refresh shadow registers
  4338                           
  4339                           	psect	intcode_body
  4340   00168C                     __pintcode_body:
  4341                           	callstack 25
  4342   00168C                     int_func:
  4343                           	callstack 25
  4344   00168C  0006               	pop		; remove dummy address from shadow register refresh
  4345                           
  4346                           ;LAB05.c: 387: if(TMR0IF==1){
  4347   00168E  A4F2               	btfss	4082,2,c	;volatile
  4348   001690  D00C               	goto	i2l352
  4349                           
  4350                           ;LAB05.c: 388: TMR0=PreloadTMR0;
  4351   001692  C058  FFD6         	movff	_PreloadTMR0,4054	;volatile
  4352   001696  C059  FFD7         	movff	_PreloadTMR0+1,4055	;volatile
  4353                           
  4354                           ;LAB05.c: 389: TMR0IF=0;
  4355   00169A  94F2               	bcf	4082,2,c	;volatile
  4356                           
  4357                           ;LAB05.c: 390: RC2=~RC2;
  4358   00169C  B482               	btfsc	3970,2,c	;volatile
  4359   00169E  D002               	goto	i2u110_40
  4360   0016A0  8482               	bsf	3970,2,c	;volatile
  4361   0016A2  D001               	goto	i2u111_45
  4362   0016A4                     i2u110_40:
  4363   0016A4  9482               	bcf	3970,2,c	;volatile
  4364   0016A6                     i2u111_45:
  4365                           
  4366                           ;LAB05.c: 391: Enable_sample=1;
  4367   0016A6  0E01               	movlw	1
  4368   0016A8  6E48               	movwf	_Enable_sample^0,c
  4369   0016AA                     i2l352:
  4370   0016AA  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4371   0016AC  0011               	retfie		f
  4372   0016AE                     __end_of_ISR:
  4373                           	callstack 0
  4374                           
  4375                           	psect	rparam
  4376   000000                     
  4377                           	psect	temp
  4378   00005B                     btemp:
  4379                           	callstack 0
  4380   00005B                     	ds	1
  4381   000000                     int$flags	set	btemp
  4382   000000                     wtemp8	set	btemp+1
  4383   000000                     ttemp5	set	btemp+1
  4384   000000                     ttemp6	set	btemp+4
  4385   000000                     ttemp7	set	btemp+8
  4386                           
  4387                           	psect	idloc
  4388                           
  4389                           ;Config register IDLOC0 @ 0x200000
  4390                           ;	unspecified, using default values
  4391   200000                     	org	2097152
  4392   200000  FF                 	db	255
  4393                           
  4394                           ;Config register IDLOC1 @ 0x200001
  4395                           ;	unspecified, using default values
  4396   200001                     	org	2097153
  4397   200001  FF                 	db	255
  4398                           
  4399                           ;Config register IDLOC2 @ 0x200002
  4400                           ;	unspecified, using default values
  4401   200002                     	org	2097154
  4402   200002  FF                 	db	255
  4403                           
  4404                           ;Config register IDLOC3 @ 0x200003
  4405                           ;	unspecified, using default values
  4406   200003                     	org	2097155
  4407   200003  FF                 	db	255
  4408                           
  4409                           ;Config register IDLOC4 @ 0x200004
  4410                           ;	unspecified, using default values
  4411   200004                     	org	2097156
  4412   200004  FF                 	db	255
  4413                           
  4414                           ;Config register IDLOC5 @ 0x200005
  4415                           ;	unspecified, using default values
  4416   200005                     	org	2097157
  4417   200005  FF                 	db	255
  4418                           
  4419                           ;Config register IDLOC6 @ 0x200006
  4420                           ;	unspecified, using default values
  4421   200006                     	org	2097158
  4422   200006  FF                 	db	255
  4423                           
  4424                           ;Config register IDLOC7 @ 0x200007
  4425                           ;	unspecified, using default values
  4426   200007                     	org	2097159
  4427   200007  FF                 	db	255
  4428                           
  4429                           	psect	config
  4430                           
  4431                           ;Config register CONFIG1L @ 0x300000
  4432                           ;	unspecified, using default values
  4433                           ;	PLL Prescaler Selection bits
  4434                           ;	PLLDIV = 0x0, unprogrammed default
  4435                           ;	System Clock Postscaler Selection bits
  4436                           ;	CPUDIV = 0x0, unprogrammed default
  4437                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4438                           ;	USBDIV = 0x0, unprogrammed default
  4439   300000                     	org	3145728
  4440   300000  00                 	db	0
  4441                           
  4442                           ;Config register CONFIG1H @ 0x300001
  4443                           ;	Oscillator Selection bits
  4444                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4445                           ;	Fail-Safe Clock Monitor Enable bit
  4446                           ;	FCMEN = 0x0, unprogrammed default
  4447                           ;	Internal/External Oscillator Switchover bit
  4448                           ;	IESO = 0x0, unprogrammed default
  4449   300001                     	org	3145729
  4450   300001  09                 	db	9
  4451                           
  4452                           ;Config register CONFIG2L @ 0x300002
  4453                           ;	unspecified, using default values
  4454                           ;	Power-up Timer Enable bit
  4455                           ;	PWRT = 0x1, unprogrammed default
  4456                           ;	Brown-out Reset Enable bits
  4457                           ;	BOR = 0x3, unprogrammed default
  4458                           ;	Brown-out Reset Voltage bits
  4459                           ;	BORV = 0x3, unprogrammed default
  4460                           ;	USB Voltage Regulator Enable bit
  4461                           ;	VREGEN = 0x0, unprogrammed default
  4462   300002                     	org	3145730
  4463   300002  1F                 	db	31
  4464                           
  4465                           ;Config register CONFIG2H @ 0x300003
  4466                           ;	Watchdog Timer Enable bit
  4467                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4468                           ;	Watchdog Timer Postscale Select bits
  4469                           ;	WDTPS = 512, 1:512
  4470   300003                     	org	3145731
  4471   300003  12                 	db	18
  4472                           
  4473                           ; Padding undefined space
  4474   300004                     	org	3145732
  4475   300004  FF                 	db	255
  4476                           
  4477                           ;Config register CONFIG3H @ 0x300005
  4478                           ;	unspecified, using default values
  4479                           ;	CCP2 MUX bit
  4480                           ;	CCP2MX = 0x1, unprogrammed default
  4481                           ;	PORTB A/D Enable bit
  4482                           ;	PBADEN = 0x1, unprogrammed default
  4483                           ;	Low-Power Timer 1 Oscillator Enable bit
  4484                           ;	LPT1OSC = 0x0, unprogrammed default
  4485                           ;	MCLR Pin Enable bit
  4486                           ;	MCLRE = 0x1, unprogrammed default
  4487   300005                     	org	3145733
  4488   300005  83                 	db	131
  4489                           
  4490                           ;Config register CONFIG4L @ 0x300006
  4491                           ;	unspecified, using default values
  4492                           ;	Stack Full/Underflow Reset Enable bit
  4493                           ;	STVREN = 0x1, unprogrammed default
  4494                           ;	Single-Supply ICSP Enable bit
  4495                           ;	LVP = 0x1, unprogrammed default
  4496                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4497                           ;	ICPRT = 0x0, unprogrammed default
  4498                           ;	Extended Instruction Set Enable bit
  4499                           ;	XINST = 0x0, unprogrammed default
  4500                           ;	Background Debugger Enable bit
  4501                           ;	DEBUG = 0x1, unprogrammed default
  4502   300006                     	org	3145734
  4503   300006  85                 	db	133
  4504                           
  4505                           ; Padding undefined space
  4506   300007                     	org	3145735
  4507   300007  FF                 	db	255
  4508                           
  4509                           ;Config register CONFIG5L @ 0x300008
  4510                           ;	unspecified, using default values
  4511                           ;	Code Protection bit
  4512                           ;	CP0 = 0x1, unprogrammed default
  4513                           ;	Code Protection bit
  4514                           ;	CP1 = 0x1, unprogrammed default
  4515                           ;	Code Protection bit
  4516                           ;	CP2 = 0x1, unprogrammed default
  4517                           ;	Code Protection bit
  4518                           ;	CP3 = 0x1, unprogrammed default
  4519   300008                     	org	3145736
  4520   300008  0F                 	db	15
  4521                           
  4522                           ;Config register CONFIG5H @ 0x300009
  4523                           ;	unspecified, using default values
  4524                           ;	Boot Block Code Protection bit
  4525                           ;	CPB = 0x1, unprogrammed default
  4526                           ;	Data EEPROM Code Protection bit
  4527                           ;	CPD = 0x1, unprogrammed default
  4528   300009                     	org	3145737
  4529   300009  C0                 	db	192
  4530                           
  4531                           ;Config register CONFIG6L @ 0x30000A
  4532                           ;	unspecified, using default values
  4533                           ;	Write Protection bit
  4534                           ;	WRT0 = 0x1, unprogrammed default
  4535                           ;	Write Protection bit
  4536                           ;	WRT1 = 0x1, unprogrammed default
  4537                           ;	Write Protection bit
  4538                           ;	WRT2 = 0x1, unprogrammed default
  4539                           ;	Write Protection bit
  4540                           ;	WRT3 = 0x1, unprogrammed default
  4541   30000A                     	org	3145738
  4542   30000A  0F                 	db	15
  4543                           
  4544                           ;Config register CONFIG6H @ 0x30000B
  4545                           ;	unspecified, using default values
  4546                           ;	Configuration Register Write Protection bit
  4547                           ;	WRTC = 0x1, unprogrammed default
  4548                           ;	Boot Block Write Protection bit
  4549                           ;	WRTB = 0x1, unprogrammed default
  4550                           ;	Data EEPROM Write Protection bit
  4551                           ;	WRTD = 0x1, unprogrammed default
  4552   30000B                     	org	3145739
  4553   30000B  E0                 	db	224
  4554                           
  4555                           ;Config register CONFIG7L @ 0x30000C
  4556                           ;	unspecified, using default values
  4557                           ;	Table Read Protection bit
  4558                           ;	EBTR0 = 0x1, unprogrammed default
  4559                           ;	Table Read Protection bit
  4560                           ;	EBTR1 = 0x1, unprogrammed default
  4561                           ;	Table Read Protection bit
  4562                           ;	EBTR2 = 0x1, unprogrammed default
  4563                           ;	Table Read Protection bit
  4564                           ;	EBTR3 = 0x1, unprogrammed default
  4565   30000C                     	org	3145740
  4566   30000C  0F                 	db	15
  4567                           
  4568                           ;Config register CONFIG7H @ 0x30000D
  4569                           ;	unspecified, using default values
  4570                           ;	Boot Block Table Read Protection bit
  4571                           ;	EBTRB = 0x1, unprogrammed default
  4572   30000D                     	org	3145741
  4573   30000D  40                 	db	64
  4574                           tosu	equ	0xFFF
  4575                           tosh	equ	0xFFE
  4576                           tosl	equ	0xFFD
  4577                           stkptr	equ	0xFFC
  4578                           pclatu	equ	0xFFB
  4579                           pclath	equ	0xFFA
  4580                           pcl	equ	0xFF9
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           prodh	equ	0xFF4
  4586                           prodl	equ	0xFF3
  4587                           indf0	equ	0xFEF
  4588                           postinc0	equ	0xFEE
  4589                           postdec0	equ	0xFED
  4590                           preinc0	equ	0xFEC
  4591                           plusw0	equ	0xFEB
  4592                           fsr0h	equ	0xFEA
  4593                           fsr0l	equ	0xFE9
  4594                           wreg	equ	0xFE8
  4595                           indf1	equ	0xFE7
  4596                           postinc1	equ	0xFE6
  4597                           postdec1	equ	0xFE5
  4598                           preinc1	equ	0xFE4
  4599                           plusw1	equ	0xFE3
  4600                           fsr1h	equ	0xFE2
  4601                           fsr1l	equ	0xFE1
  4602                           bsr	equ	0xFE0
  4603                           indf2	equ	0xFDF
  4604                           postinc2	equ	0xFDE
  4605                           postdec2	equ	0xFDD
  4606                           preinc2	equ	0xFDC
  4607                           plusw2	equ	0xFDB
  4608                           fsr2h	equ	0xFDA
  4609                           fsr2l	equ	0xFD9
  4610                           status	equ	0xFD8

Data Sizes:
    Strings     140
    Constant    10
    Data        3
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      90
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_10(CODE[17]), STR_9(CODE[18]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_5(CODE[3]), STR_4(CODE[9]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_11(CODE[7]), ?_sprintf(COMRAM[2]), STR_6(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 32
		 -> Buffer_LCD(BANK0[32]), Buffer_RS232(COMRAM[12]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[14]), STR_2(CODE[20]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_choose_scale_temperature_and_fill_buffers
    _welcome_operations->_MensajeLCD_Var
    _MensajeLCD_Var->_DireccionaLCD
    _MensajeLCD_Var->_EscribeLCD_c
    _show_temperature_LCD->_DireccionaLCD
    _show_temperature_LCD->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _send_temperature_RS232->_Transmitir
    _measure_temperature_c->_LeerHT11
    _LeerHT11->_LeerByte
    _LeerByte->_LeerBit
    _InicializaLCD->_EnviaDato
    _choose_scale_temperature_and_fill_buffers->___fttol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21820
        _check_potentiometer_voltaje
_choose_scale_temperature_and_fill_b
                 _init_configuration
              _measure_temperature_c
          _save_temperature_c_EEPROM
             _send_temperature_RS232
               _show_temperature_LCD
             _show_temperature_c_RGB
                 _welcome_operations
 ---------------------------------------------------------------------------------
 (1) _welcome_operations                                   2     2      0     846
                                              8 COMRAM     2     2      0
                           _BorraLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       3     2      1     736
                                              5 COMRAM     3     2      1
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _show_temperature_c_RGB                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _show_temperature_LCD                                 2     2      0     443
                                              5 COMRAM     2     2      0
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _DireccionaLCD                                        1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _send_temperature_RS232                               3     3      0      45
                                              1 COMRAM     3     3      0
                         _Transmitir
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _save_temperature_c_EEPROM                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _measure_temperature_c                                0     0      0      75
                           _LeerHT11
 ---------------------------------------------------------------------------------
 (2) _LeerHT11                                             3     3      0      75
                                              4 COMRAM     2     2      0
                           _LeerByte
 ---------------------------------------------------------------------------------
 (3) _LeerByte                                             3     3      0      75
                                              1 COMRAM     3     3      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (4) _LeerBit                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_configuration                                   2     2      0     265
                                              4 COMRAM     2     2      0
                       _ConfiguraLCD
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (2) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _choose_scale_temperature_and_fill_buffers            2     2      0   20036
                                             69 COMRAM     2     2      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8    5222
                                             12 COMRAM    17     9      8
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    2075
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1574
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2866
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     480
                                             54 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3602
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3404
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4392
                                             42 COMRAM    12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _check_potentiometer_voltaje                          0     0      0     110
                           _BorraLCD
 ---------------------------------------------------------------------------------
 (3) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_potentiometer_voltaje
     _BorraLCD
       _EnviaDato
         _HabilitaLCD
         _RetardoLCD
       _HabilitaLCD
       _RetardoLCD
   _choose_scale_temperature_and_fill_buffers
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
       ___ftmul (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
     ___ftdiv
     ___ftmul
     ___fttol
       ___ftadd (ARG)
       ___ftdiv (ARG)
       ___ftmul (ARG)
       ___lbtoft (ARG)
     ___lbtoft
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_configuration
     _ConfiguraLCD
     _InicializaLCD
       _BorraLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _measure_temperature_c
     _LeerHT11
       _LeerByte
         _LeerBit
   _save_temperature_c_EEPROM
   _send_temperature_RS232
     _Transmitir
   _show_temperature_LCD
     _BorraLCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _show_temperature_c_RGB
   _welcome_operations
     _BorraLCD
     _MensajeLCD_Var
       _BorraLCD
       _DireccionaLCD
       _EscribeLCD_c

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      34        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     47      5A       1       95.7%
BITBIGSFRll         20      0       0      32        0.0%
BITBIGSFRhhhhl      1A      0       0      21        0.0%
BITBIGSFRhllh       14      0       0      28        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhlhhh       B      0       0      24        0.0%
BITBIGSFRhlhlh       8      0       0      26        0.0%
BITBIGSFRhlhhl       7      0       0      25        0.0%
BITBIGSFRlhh         5      0       0      30        0.0%
BITBIGSFRhllll       4      0       0      29        0.0%
BITBIGSFRlhl         1      0       0      31        0.0%
BITBIGSFRhlhll       1      0       0      27        0.0%
BITBIGSFRhhhl        1      0       0      22        0.0%
BITBIGSFRhhl         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A      33        0.0%
DATA                 0      0      7A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jun  2 15:49:36 2023

                                      Transmitir@BufferT 0001  
                               ??_show_temperature_c_RGB 0001  
                                                     _GO 7E11  
                                                     u60 1620  
                                                     _TO 7E83  
                                             EnviaDato@a 0004  
                                           ___ftadd@exp1 0036  
                                           ___ftadd@exp2 0035  
                                           ___ftadd@sign 0034  
                                          _InicializaLCD 1140  
                                                    l312 13A6  
                                                    l261 166E  
                                                    l333 161C  
                                                    l317 13C2  
                                                    l264 1686  
                                                    l328 15F8  
                                                    l265 1688  
                                                    l291 094E  
                                                    l284 12BE  
                                                    l293 09CE  
                                                    l289 08EA  
                                                    l730 0F8E  
                                                    l719 0D74  
                                                    l868 142A  
                                                    l878 1538  
                                                    _GIE 7F97  
                                                    _RA1 7C01  
                                                    _RB0 7C08  
                                                    _RA2 7C02  
                                                    _RC1 7C11  
                                                    _RC2 7C12  
                                                    _RE0 7C20  
                                                    _RE1 7C21  
                                                    _RE2 7C22  
                                                    u230 16C0  
                                                    _ISR 0008  
                                                    _Che 0049  
                                                    _Hum 004A  
                                                    wreg 0FE8  
                          __end_of_measure_temperature_c 1726  
                                                   ?_ISR 0001  
                                           ___ftdiv@cntr 0025  
                                           ___ftdiv@sign 002A  
                                                   l2006 13F8  
                                                   l2110 0A72  
                                                   l1214 1650  
                                                   l2102 135E  
                                                   l2200 0C8E  
                                                   l2008 1400  
                                                   l2018 1420  
                                                   l2034 152E  
                                                   l2026 150E  
                                                   l2106 1376  
                                                   l2028 1516  
                                                   l2132 0AE4  
                                                   l2116 0A88  
                                                   l2044 1152  
                                                   l2230 0D12  
                                                   l2206 0CB6  
                                                   l2134 0B0C  
                                                   l2126 0AB6  
                                                   l2118 0A8E  
                                                   l2054 1170  
                                                   l2240 0D46  
                                                   l2232 0D1C  
                                                   l2320 0E36  
                                                   l2144 0B1C  
                                                   l2064 118E  
                                                   l1176 160C  
                                                   l2242 0D50  
                                                   l2314 0E0E  
                                                   l2162 0B78  
                                                   l2146 0B52  
                                                   l2228 0D08  
                                                   l2156 0B74  
                                                   l2084 11C6  
                                                   l2334 0E68  
                                                   l2094 1332  
                                                   l2248 0D90  
                                                   l2344 0E90  
                                                   l2184 0C12  
                                                   l2176 0BBC  
                                                   l2258 0DC0  
                                                   l2274 0F2A  
                                                   l2338 0E78  
                                                   l2362 0FEC  
                                                   l2178 0BC2  
                                                   l2098 1348  
                                                   l2268 0F02  
                                                   l2348 0EA0  
                                                   l2380 1040  
                                                   l2532 14E0  
                                                   l2294 0F68  
                                                   l2390 1058  
                                                   l1478 1716  
                                                   l1822 1588  
                                                   l2526 14C8  
                                                   l2470 1552  
                                                   l1920 1306  
                                                   l2392 1064  
                                                   l2384 1050  
                                                   l2536 14F0  
                                                   l1840 1278  
                                                   l2544 15CA  
                                                   l1914 12CA  
                                                   l1826 1598  
                                                   l1916 12DC  
                                                   l1924 1310  
                                                   l1852 12A2  
                                                   l1844 1286  
                                                   l1836 126A  
                                                   l1918 12FC  
                                                   l2398 1080  
                                                   l1936 146C  
                                                   l1856 12B0  
                                                   l1848 1294  
                                                   l1980 10EE  
                                                   l1972 10B0  
                                                   l1982 110C  
                                                   l1974 10BA  
                                                   l1984 1116  
                                                   l1976 10D8  
                                                   _ADON 7E10  
                                                   STR_1 0872  
                                                   STR_2 080B  
                                                   STR_3 0864  
                                                   STR_4 087F  
                                                   STR_5 0894  
                                                   STR_6 088F  
                                                   STR_7 0831  
                                                   STR_8 0853  
                                                   STR_9 081F  
                                                   u1150 10A2  
                                                   u1230 1404  
                                                   u2007 1570  
                                                   u2017 15B0  
                                                   u2107 12E2  
                                                   u2027 139C  
                                                   u1500 0C80  
                                                   u1260 151A  
                                                   u1420 0BA4  
                                                   u2117 12EC  
                                                   u2037 13AC  
                                                   u1190 1120  
                                                   u1350 0A7A  
                                                   u2127 12FE  
                                                   u2047 13B8  
                                                   u1600 0D24  
                                                   u1440 0C1A  
                                                   _LATD 0F8C  
                                                   u2137 1308  
                                                   u2057 15FE  
                                                   _LATE 0F8D  
                                                   u1530 0CA8  
                                                   u1450 0C34  
                                                   u1370 0ADC  
                                                   u2147 170A  
                                                   u2067 160E  
                                                   u1380 0B04  
                                                   u1461 0C4E  
                                                   u2077 11E6  
                                                   u1630 0D58  
                                                   u1471 0C62  
                                                   u2087 124E  
                                                   u1560 0CE6  
                                                   u1800 100A  
                                                   u2097 12D0  
                                                   u1721 0DF6  
                                                   u1377 0AD2  
                                                   u1387 0AFA  
                                                   u1741 0E1E  
                                                   u1805 1002  
                                                   u1671 0EEA  
                                                   u1840 106A  
                                                   u1691 0F12  
                                                   u1781 0FD0  
                                                   u1790 0FDA  
                                                   _TMR0 0FD6  
                                                   _TRMT 7D61  
                                         ??_EscribeLCD_c 0005  
                                                   _Temp 004B  
                                                   _main 15C0  
                                           ___ftpack@arg 0001  
                                           ___ftpack@exp 0004  
                                                   fsr0h 0FEA  
                                                   indf0 0FEF  
                                                   fsr2h 0FDA  
                                                   fsr0l 0FE9  
                                                   indf2 0FDF  
                                                   fsr2l 0FD9  
                                                   btemp 005B  
                                                   prodl 0FF3  
                                                   start 000E  
                                           ___ftmul@cntr 001A  
                                        __end_of_LeerBit 1624  
                                           ___param_bank 0000  
                                           ___ftmul@sign 001B  
                                                  ??_ISR 0001  
                                           ___fttol@exp1 0045  
                                           ___fttol@lval 0041  
                            ??_save_temperature_c_EEPROM 0001  
                                         ?_InicializaLCD 0001  
                                                  ?_main 0001  
      __end_of_choose_scale_temperature_and_fill_buffers 0A6C  
            ??_choose_scale_temperature_and_fill_buffers 0046  
             ?_choose_scale_temperature_and_fill_buffers 0001  
              _choose_scale_temperature_and_fill_buffers 0898  
                                                  _ADRES 0FC3  
                                        __end_of___ftadd 0DE6  
                                                  STR_10 0842  
                                                  STR_11 0888  
                                          EscribeLCD_c@a 0005  
                                        __end_of___ftdiv 0FC0  
                                        __end_of___ftmul 0EDA  
                                                  _T0CON 0FD5  
                                        __end_of___fttol 1092  
                                                  _LATB0 7C50  
                                                  _LATC1 7C59  
                                                  _LATD0 7C60  
                                                  _LATC2 7C5A  
                                                  _LATD1 7C61  
                                        __end_of___lwdiv 1434  
                                        __end_of___lwmod 1542  
                                                  i2l352 16AA  
                                             _Buffer_LCD 0060  
                                                  _RCSTA 0FAB  
                                                  _SPBRG 0FAF  
                                                  _TRISA 0F92  
                                                  _TRISD 0F95  
                                                  _TRISE 0F96  
                                                  _TXREG 0FAD  
                                                  _TXSTA 0FAC  
                                        __end_of_dpowers 080B  
                                          ___ftpack@sign 0005  
choose_scale_temperature_and_fill_buffers@temp_converted 0046  
                                                  tablat 0FF5  
                                            _HabilitaLCD 1706  
                                                  ttemp5 005C  
                                                  ttemp6 005F  
                                                  ttemp7 0063  
                                                  status 0FD8  
                                                  wtemp8 005C  
                                        __end_of_sprintf 0C3E  
                                       __end_of_BorraLCD 1706  
                                       __end_of_LeerHT11 13E2  
                                        __initialization 147A  
                                       __end_of_LeerByte 166A  
                                           __end_of_main 15F4  
                                                 ??_main 0048  
                                   __end_of_ConfiguraLCD 16C6  
                                          ___fttol@sign1 0040  
                                  MensajeLCD_Var@counter 0008  
                                          __activetblptr 0002  
                                                 _ADCON0 0FC2  
                                                 _ADCON1 0FC1  
                                                 _ADCON2 0FC0  
                                         DireccionaLCD@a 0005  
                                       __end_of___ftpack 1140  
                                       __end_of___lbtoft 1648  
                              _save_temperature_c_EEPROM 172A  
                                                 _OSCCON 0FD3  
                                                 _TMR0IE 7F95  
                                                 _TMR0IF 7F92  
                                                 _TMR0ON 7EAF  
                                                 _TRISB0 7C98  
                                                 _TRISC1 7CA1  
                                                 _TRISC2 7CA2  
                                                 _SWDTEN 7E88  
                                              ??_LeerBit 0001  
                                  __end_of_DireccionaLCD 16F2  
                                             _RetardoLCD 12C6  
                          send_temperature_RS232@counter 0004  
                                              ??___ftadd 0031  
                                              ??___ftdiv 0022  
                                              ??___ftmul 0013  
                                              ??___fttol 003B  
                                              ??___lwdiv 0005  
                                              ??___lwmod 000C  
                                        ??_InicializaLCD 0005  
                                                 clear_0 149E  
                                                 clear_1 14AA  
                                                 isa$std 0001  
                                   __end_of_EscribeLCD_c 16DC  
                                  ___ftmul@f3_as_product 0017  
                                           __pdataCOMRAM 0058  
                                           __mediumconst 0000  
                                 _send_temperature_RS232 1582  
                                                 tblptrh 0FF7  
                                                 tblptrl 0FF6  
                                                 tblptru 0FF8  
                                              ??_sprintf 0015  
                                             _Transmitir 1714  
                                 _show_temperature_c_RGB 125C  
                                             __accesstop 0060  
                                __end_of__initialization 14B0  
                                             ___ftadd@f1 002B  
                                             ___ftadd@f2 002E  
                                          ___rparam_used 0001  
                                             ___ftdiv@f1 001C  
                                             ___ftdiv@f2 001F  
                                             ___ftdiv@f3 0026  
                             __end_of_welcome_operations 1582  
                                             ___lbtoft@c 000C  
                                             ___ftmul@f1 000D  
                                             ___ftmul@f2 0010  
                                             ___fttol@f1 0037  
                                         __pcstackCOMRAM 0001  
                                      __end_of_EnviaDato 147A  
                                              ?_BorraLCD 0001  
                                              ?_LeerHT11 0001  
                                         _MensajeLCD_Var 132C  
                             __end_of_init_configuration 125C  
                                              ?_LeerByte 0001  
                                             __pbssBANK0 0060  
                                        MensajeLCD_Var@a 0006  
                                            ?_RetardoLCD 0001  
                                            RetardoLCD@a 0002  
                                                _BAUDCON 0FB8  
                                              ?___ftpack 0001  
                                              ?___lbtoft 0009  
                                           _Buffer_RS232 004C  
                                 __end_of_MensajeLCD_Var 1390  
                                             ??_BorraLCD 0005  
                                             ??_LeerHT11 0005  
                                            ?_Transmitir 0001  
                                             ??_LeerByte 0002  
                                  _measure_temperature_c 1720  
                                           ?_HabilitaLCD 0001  
                                                _LeerBit 15F4  
                                           _ConfiguraLCD 16AE  
                                                __Hparam 0000  
                                                __Lparam 0000  
                                                ___ftadd 0C3E  
                                                ___ftdiv 0EDA  
                                            _PreloadTMR0 0058  
                                                ___ftmul 0DE6  
                                                ___fttol 0FC0  
                                                ___lwdiv 13E2  
                                                ___lwmod 1500  
                                           __psmallconst 0800  
                                                __pcinit 147A  
                                             ??___ftpack 0006  
                                             ??___lbtoft 000C  
                                                __ramtop 0800  
                                                __ptext0 15C0  
                                                __ptext1 1542  
                                                __ptext2 132C  
                                                __ptext3 125C  
                                                __ptext4 14BE  
                                                __ptext5 16C6  
                                                __ptext6 16DC  
                                                __ptext7 1582  
                                                __ptext8 1714  
                                                __ptext9 172A  
                                                _dpowers 0801  
                    __end_of_check_potentiometer_voltaje 168C  
                            _check_potentiometer_voltaje 166A  
                                        ?_MensajeLCD_Var 0006  
                                                _sprintf 0A6C  
                                         __pintcode_body 168C  
                                   end_of_initialization 14B0  
                          ??_check_potentiometer_voltaje 0005  
                                          __Lmediumconst 0000  
                                                int_func 168C  
                                           _EscribeLCD_c 16C6  
                                                postdec2 0FDD  
                      __end_of_save_temperature_c_EEPROM 172C  
                                                postinc0 0FEE  
                                                postinc2 0FDE  
                                ?_send_temperature_RS232 0001  
                                              LeerByte@i 0004  
                                ?_show_temperature_c_RGB 0001  
                                 ?_measure_temperature_c 0001  
                                            ___ftdiv@exp 0029  
                                            ___ftmul@exp 0016  
                         __end_of_send_temperature_RS232 15C0  
                                          __pidataCOMRAM 1726  
                                  __end_of_InicializaLCD 11DC  
                                     _welcome_operations 1542  
                                              _EnviaDato 1434  
                         __end_of_show_temperature_c_RGB 12C6  
                                    start_initialization 147A  
                                            __end_of_ISR 16AE  
                                    ?_welcome_operations 0001  
                            show_temperature_LCD@counter 0007  
                                           ??_RetardoLCD 0001  
                                   ??_welcome_operations 0009  
                                     _init_configuration 11DC  
                                    ?_init_configuration 0001  
                                          _Enable_sample 0048  
                                             ?_EnviaDato 0001  
                                            __pbssCOMRAM 0048  
                                     __end_of_RetardoLCD 132C  
                           __end_of_show_temperature_LCD 1500  
                                           ??_Transmitir 0001  
                                   ??_init_configuration 0005  
                                            sprintf@flag 0016  
                                            sprintf@prec 0017  
                                               ?_LeerBit 0001  
                                          _DireccionaLCD 16DC  
                                       ___lwdiv@dividend 0001  
                                              __pintcode 0008  
                                               ?___ftadd 002B  
                                               ?___ftdiv 001C  
                                               ?___ftmul 000D  
                                               ?___fttol 0037  
                                               ?___lwdiv 0001  
                                               ?___lwmod 0008  
                                     __end_of_Transmitir 1720  
                                       ??_MensajeLCD_Var 0007  
                                          LeerHT11@contr 0006  
                                            __smallconst 0800  
                                       ___lwdiv@quotient 0005  
                                               ?_sprintf 000D  
                                         ?_DireccionaLCD 0001  
                                               i2u110_40 16A4  
                                               i2u111_45 16A6  
                                            ??_EnviaDato 0003  
                                ??_measure_temperature_c 0007  
                                               _BorraLCD 16F2  
                                               _LeerHT11 1390  
                                               _LeerByte 1648  
                                               __Hrparam 0000  
                                               __Lrparam 0000  
                                   _show_temperature_LCD 14BE  
                             ?_save_temperature_c_EEPROM 0001  
                                               ___ftpack 1092  
                                               ___lbtoft 1624  
                                          ConfiguraLCD@a 0001  
                                             sprintf@val 001B  
                                        ___lwdiv@divisor 0003  
                                        ___lwdiv@counter 0007  
                                               __ptext10 1720  
                                               __ptext11 1390  
                                               __ptext20 13E2  
                                               __ptext12 1648  
                                               __ptext21 1624  
                                               __ptext13 15F4  
                                               __ptext30 12C6  
                                               __ptext22 0FC0  
                                               __ptext14 11DC  
                                               __ptext31 1706  
                                               __ptext23 0DE6  
                                               __ptext15 1140  
                                               __ptext24 0EDA  
                                               __ptext16 16AE  
                                               __ptext25 0C3E  
                                               __ptext17 0898  
                                               __ptext26 1092  
                                               __ptext18 0A6C  
                                               __ptext27 166A  
                                               __ptext19 1500  
                                               __ptext28 16F2  
                                               __ptext29 1434  
                                        ??_DireccionaLCD 0005  
                                               _interfaz 005A  
                                               isa$xinst 0000  
                                  ?_show_temperature_LCD 0001  
                                               int$flags 005B  
                                               intlevel2 0000  
                                              sprintf@ap 001A  
                                              sprintf@cp 0018  
                                          ??_HabilitaLCD 0001  
                                              sprintf@sp 000D  
                                       ___lwmod@dividend 0008  
                                          ?_ConfiguraLCD 0001  
                                               sprintf@c 001D  
                                               sprintf@f 000E  
                                        ___lwmod@divisor 000A  
                                        ___lwmod@counter 000C  
                           ?_check_potentiometer_voltaje 0001  
                                         ??_ConfiguraLCD 0001  
                                          ?_EscribeLCD_c 0001  
                                             LeerBit@res 0001  
                               ??_send_temperature_RS232 0002  
                                    __end_of_HabilitaLCD 1714  
                                            LeerByte@res 0003  
                                 ??_show_temperature_LCD 0006  
