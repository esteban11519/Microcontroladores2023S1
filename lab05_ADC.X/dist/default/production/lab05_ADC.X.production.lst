

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jun  3 02:13:57 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 09/02/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4550 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataCOMRAM
    85   001662                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _interfaz
    89   001662  08                 	db	8
    90                           
    91                           	psect	smallconst
    92   000800                     __psmallconst:
    93                           	callstack 0
    94   000800  00                 	db	0
    95   000801                     _dpowers:
    96                           	callstack 0
    97   000801  0001               	dw	1
    98   000803  000A               	dw	10
    99   000805  0064               	dw	100
   100   000807  03E8               	dw	1000
   101   000809  2710               	dw	10000
   102   00080B                     __end_of_dpowers:
   103                           	callstack 0
   104   000000                     _TRISD	set	3989
   105   000000                     _TRISB0	set	31896
   106   000000                     _TRISC2	set	31906
   107   000000                     _RC2	set	31762
   108   000000                     _TRMT	set	32097
   109   000000                     _RA3	set	31747
   110   000000                     _RE1	set	31777
   111   000000                     _RE2	set	31778
   112   000000                     _GO	set	32273
   113   000000                     _ADON	set	32272
   114   000000                     _TMR0ON	set	32431
   115   000000                     _GIE	set	32663
   116   000000                     _TMR0IE	set	32661
   117   000000                     _LATC2	set	31834
   118   000000                     _TRISA3	set	31891
   119   000000                     _LATD1	set	31841
   120   000000                     _LATD0	set	31840
   121   000000                     _LATD	set	3980
   122   000000                     _RA2	set	31746
   123   000000                     _RB0	set	31752
   124   000000                     _LATB0	set	31824
   125   000000                     _LATC0	set	31832
   126   000000                     _LATE	set	3981
   127   000000                     _TRISE	set	3990
   128   000000                     _RCSTA	set	4011
   129   000000                     _TXSTA	set	4012
   130   000000                     _TRISA2	set	31890
   131   000000                     _SWDTEN	set	32392
   132   000000                     _OSCCON	set	4051
   133   000000                     _T0CON	set	4053
   134   000000                     _TXREG	set	4013
   135   000000                     _SPBRG	set	4015
   136   000000                     _BAUDCON	set	4024
   137   000000                     _ADCON2	set	4032
   138   000000                     _ADCON1	set	4033
   139   000000                     _ADRES	set	4035
   140   000000                     _ADCON0	set	4034
   141   000000                     _TO	set	32387
   142   000000                     _TMR0	set	4054
   143   000000                     _TMR0IF	set	32658
   144   000000                     _RC0	set	31760
   145   000000                     _RE0	set	31776
   146   00080B                     STR_1:
   147   00080B  46                 	db	70	;'F'
   148   00080C  61                 	db	97	;'a'
   149   00080D  69                 	db	105	;'i'
   150   00080E  6C                 	db	108	;'l'
   151   00080F  65                 	db	101	;'e'
   152   000810  64                 	db	100	;'d'
   153   000811  20                 	db	32
   154   000812  44                 	db	68	;'D'
   155   000813  48                 	db	72	;'H'
   156   000814  54                 	db	84	;'T'
   157   000815  31                 	db	49	;'1'
   158   000816  31                 	db	49	;'1'
   159   000817  00                 	db	0
   160   000818                     STR_3:
   161   000818  0A                 	db	10
   162   000819  47                 	db	71	;'G'
   163   00081A  6F                 	db	111	;'o'
   164   00081B  64                 	db	100	;'d'
   165   00081C  20                 	db	32
   166   00081D  69                 	db	105	;'i'
   167   00081E  73                 	db	115	;'s'
   168   00081F  20                 	db	32
   169   000820  67                 	db	103	;'g'
   170   000821  6F                 	db	111	;'o'
   171   000822  6F                 	db	111	;'o'
   172   000823  64                 	db	100	;'d'
   173   000824  00                 	db	0
   174   000825                     STR_12:
   175   000825  54                 	db	84	;'T'
   176   000826  3A                 	db	58	;':'
   177   000827  20                 	db	32
   178   000828  25                 	db	37
   179   000829  69                 	db	105	;'i'
   180   00082A  20                 	db	32
   181   00082B  43                 	db	67	;'C'
   182   00082C  0A                 	db	10
   183   00082D  00                 	db	0
   184   00082E                     STR_8:
   185   00082E  54                 	db	84	;'T'
   186   00082F  3A                 	db	58	;':'
   187   000830  20                 	db	32
   188   000831  25                 	db	37
   189   000832  69                 	db	105	;'i'
   190   000833  20                 	db	32
   191   000834  52                 	db	82	;'R'
   192   000835  61                 	db	97	;'a'
   193   000836  00                 	db	0
   194   000837                     STR_5:
   195   000837  48                 	db	72	;'H'
   196   000838  3A                 	db	58	;':'
   197   000839  20                 	db	32
   198   00083A  25                 	db	37
   199   00083B  69                 	db	105	;'i'
   200   00083C  20                 	db	32
   201   00083D  25                 	db	37
   202   00083E  63                 	db	99	;'c'
   203   00083F  00                 	db	0
   204   000840                     STR_4:
   205   000840  54                 	db	84	;'T'
   206   000841  3A                 	db	58	;':'
   207   000842  20                 	db	32
   208   000843  25                 	db	37
   209   000844  69                 	db	105	;'i'
   210   000845  20                 	db	32
   211   000846  43                 	db	67	;'C'
   212   000847  00                 	db	0
   213   000848                     STR_10:
   214   000848  54                 	db	84	;'T'
   215   000849  3A                 	db	58	;':'
   216   00084A  20                 	db	32
   217   00084B  25                 	db	37
   218   00084C  69                 	db	105	;'i'
   219   00084D  20                 	db	32
   220   00084E  46                 	db	70	;'F'
   221   00084F  00                 	db	0
   222   000850                     STR_6:
   223   000850  54                 	db	84	;'T'
   224   000851  3A                 	db	58	;':'
   225   000852  20                 	db	32
   226   000853  25                 	db	37
   227   000854  69                 	db	105	;'i'
   228   000855  20                 	db	32
   229   000856  4B                 	db	75	;'K'
   230   000857  00                 	db	0
   231   000858                     STR_2:
   232   000858  53                 	db	83	;'S'
   233   000859  65                 	db	101	;'e'
   234   00085A  6E                 	db	110	;'n'
   235   00085B  73                 	db	115	;'s'
   236   00085C  6F                 	db	111	;'o'
   237   00085D  72                 	db	114	;'r'
   238   00085E  73                 	db	115	;'s'
   239   00085F  00                 	db	0
   240   000860  00                 	db	0	; dummy byte at the end
   241   000000                     
   242                           ; #config settings
   243                           
   244                           	psect	cinit
   245   00155E                     __pcinit:
   246                           	callstack 0
   247   00155E                     start_initialization:
   248                           	callstack 0
   249   00155E                     __initialization:
   250                           	callstack 0
   251                           
   252                           ; Initialize objects allocated to COMRAM (1 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254   00155E  0E62               	movlw	low __pidataCOMRAM
   255   001560  6EF6               	movwf	tblptrl,c
   256   001562  0E16               	movlw	high __pidataCOMRAM
   257   001564  6EF7               	movwf	tblptrh,c
   258   001566  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259   001568  6EF8               	movwf	tblptru,c
   260   00156A  0009               	tblrd		*+	;fetch initializer
   261   00156C  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   262                           
   263                           ; Clear objects allocated to BANK0 (3 bytes)
   264   001570  0100               	movlb	0
   265   001572  6B86               	clrf	(__pbssBANK0+2)& (0+255),b
   266   001574  6B85               	clrf	(__pbssBANK0+1)& (0+255),b
   267   001576  6B84               	clrf	__pbssBANK0& (0+255),b
   268                           
   269                           ; Clear objects allocated to COMRAM (1 bytes)
   270   001578  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   271   00157A                     end_of_initialization:
   272                           	callstack 0
   273   00157A                     __end_of__initialization:
   274                           	callstack 0
   275   00157A  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   276   00157C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   277   00157E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   278   001580  6EF8               	movwf	tblptru,c
   279   001582  0100               	movlb	0
   280   001584  EF93  F009         	goto	_main	;jump to C main() function
   281                           
   282                           	psect	bssCOMRAM
   283   00004A                     __pbssCOMRAM:
   284                           	callstack 0
   285   00004A                     _Che:
   286                           	callstack 0
   287   00004A                     	ds	1
   288                           
   289                           	psect	dataCOMRAM
   290   00004B                     __pdataCOMRAM:
   291                           	callstack 0
   292   00004B                     _interfaz:
   293                           	callstack 0
   294   00004B                     	ds	1
   295                           
   296                           	psect	bssBANK0
   297   000084                     __pbssBANK0:
   298                           	callstack 0
   299   000084                     _Enable_sample:
   300                           	callstack 0
   301   000084                     	ds	1
   302   000085                     _Hum:
   303                           	callstack 0
   304   000085                     	ds	1
   305   000086                     _Temp:
   306                           	callstack 0
   307   000086                     	ds	1
   308                           
   309                           	psect	cstackBANK0
   310   000060                     __pcstackBANK0:
   311                           	callstack 0
   312   000060                     main@buffer_LCD_row_1:
   313                           	callstack 0
   314                           
   315                           ; 17 bytes @ 0x0
   316   000060                     	ds	17
   317   000071                     main@buffer_LCD_row_2:
   318                           	callstack 0
   319                           
   320                           ; 17 bytes @ 0x11
   321   000071                     	ds	17
   322   000082                     main@Temp_n1:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x22
   326   000082                     	ds	1
   327   000083                     main@Hum_n1:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x23
   331   000083                     	ds	1
   332                           
   333                           	psect	cstackCOMRAM
   334   000001                     __pcstackCOMRAM:
   335                           	callstack 0
   336   000001                     ??_RetardoLCD:
   337   000001                     ?___lwdiv:
   338                           	callstack 0
   339   000001                     ?___ftpack:
   340                           	callstack 0
   341   000001                     ConfiguraLCD@a:
   342                           	callstack 0
   343   000001                     Transmitir@BufferT:
   344                           	callstack 0
   345   000001                     ___lwdiv@dividend:
   346                           	callstack 0
   347   000001                     ___ftpack@arg:
   348                           	callstack 0
   349                           
   350                           ; 3 bytes @ 0x0
   351   000001                     	ds	1
   352   000002                     RetardoLCD@a:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x1
   356   000002                     	ds	1
   357   000003                     ??_EnviaDato:
   358   000003                     ___lwdiv@divisor:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x2
   362   000003                     	ds	1
   363   000004                     EnviaDato@a:
   364                           	callstack 0
   365   000004                     ___ftpack@exp:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x3
   369   000004                     	ds	1
   370   000005                     ??_init_configuration:
   371   000005                     EscribeLCD_c@a:
   372                           	callstack 0
   373   000005                     DireccionaLCD@a:
   374                           	callstack 0
   375   000005                     ___ftpack@sign:
   376                           	callstack 0
   377   000005                     ___lwdiv@quotient:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x4
   381   000005                     	ds	1
   382   000006                     ??___ftpack:
   383   000006                     MensajeLCD_Var@a:
   384                           	callstack 0
   385   000006                     show_temperature_LCD@buffer_LCD_row_1:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x5
   389   000006                     	ds	1
   390   000007                     ??_MensajeLCD_Var:
   391   000007                     show_temperature_LCD@buffer_LCD_row_2:
   392                           	callstack 0
   393   000007                     ___lwdiv@counter:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x6
   397   000007                     	ds	1
   398   000008                     ?___lwmod:
   399                           	callstack 0
   400   000008                     MensajeLCD_Var@counter:
   401                           	callstack 0
   402   000008                     show_temperature_LCD@Temp_n1:
   403                           	callstack 0
   404   000008                     ___lwmod@dividend:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x7
   408   000008                     	ds	1
   409   000009                     ??_welcome_operations:
   410   000009                     ?___lbtoft:
   411                           	callstack 0
   412   000009                     show_temperature_LCD@Hum_n1:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x8
   416   000009                     	ds	1
   417   00000A                     show_temperature_LCD@counter:
   418                           	callstack 0
   419   00000A                     ___lwmod@divisor:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x9
   423   00000A                     	ds	2
   424   00000C                     ___lbtoft@c:
   425                           	callstack 0
   426   00000C                     ___lwmod@counter:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0xB
   430   00000C                     	ds	1
   431   00000D                     ?_sprintf:
   432                           	callstack 0
   433   00000D                     ?___ftmul:
   434                           	callstack 0
   435   00000D                     sprintf@sp:
   436                           	callstack 0
   437   00000D                     ___ftmul@f1:
   438                           	callstack 0
   439                           
   440                           ; 3 bytes @ 0xC
   441   00000D                     	ds	1
   442   00000E                     sprintf@f:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0xD
   446   00000E                     	ds	2
   447   000010                     ___ftmul@f2:
   448                           	callstack 0
   449                           
   450                           ; 3 bytes @ 0xF
   451   000010                     	ds	3
   452   000013                     ??_sprintf:
   453   000013                     ??___ftmul:
   454                           
   455                           ; 1 bytes @ 0x12
   456   000013                     	ds	1
   457   000014                     sprintf@flag:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x13
   461   000014                     	ds	1
   462   000015                     sprintf@prec:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x14
   466   000015                     	ds	1
   467   000016                     sprintf@ap:
   468                           	callstack 0
   469   000016                     ___ftmul@exp:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x15
   473   000016                     	ds	1
   474   000017                     sprintf@val:
   475                           	callstack 0
   476   000017                     ___ftmul@f3_as_product:
   477                           	callstack 0
   478                           
   479                           ; 3 bytes @ 0x16
   480   000017                     	ds	2
   481   000019                     sprintf@c:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x18
   485   000019                     	ds	1
   486   00001A                     ??_send_temperature_RS232:
   487   00001A                     ___ftmul@cntr:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x19
   491   00001A                     	ds	1
   492   00001B                     ___ftmul@sign:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x1A
   496   00001B                     	ds	1
   497   00001C                     ?___ftdiv:
   498                           	callstack 0
   499   00001C                     ___ftdiv@f1:
   500                           	callstack 0
   501   00001C                     send_temperature_RS232@buffer_RS232:
   502                           	callstack 0
   503                           
   504                           ; 12 bytes @ 0x1B
   505   00001C                     	ds	3
   506   00001F                     ___ftdiv@f2:
   507                           	callstack 0
   508                           
   509                           ; 3 bytes @ 0x1E
   510   00001F                     	ds	3
   511   000022                     ??___ftdiv:
   512                           
   513                           ; 1 bytes @ 0x21
   514   000022                     	ds	3
   515   000025                     ___ftdiv@cntr:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x24
   519   000025                     	ds	1
   520   000026                     ___ftdiv@f3:
   521                           	callstack 0
   522                           
   523                           ; 3 bytes @ 0x25
   524   000026                     	ds	2
   525   000028                     send_temperature_RS232@counter:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x27
   529   000028                     	ds	1
   530   000029                     ___ftdiv@exp:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x28
   534   000029                     	ds	1
   535   00002A                     ___ftdiv@sign:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x29
   539   00002A                     	ds	1
   540   00002B                     ?___ftadd:
   541                           	callstack 0
   542   00002B                     ___ftadd@f1:
   543                           	callstack 0
   544                           
   545                           ; 3 bytes @ 0x2A
   546   00002B                     	ds	3
   547   00002E                     ___ftadd@f2:
   548                           	callstack 0
   549                           
   550                           ; 3 bytes @ 0x2D
   551   00002E                     	ds	3
   552   000031                     ??___ftadd:
   553                           
   554                           ; 1 bytes @ 0x30
   555   000031                     	ds	3
   556   000034                     ___ftadd@sign:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x33
   560   000034                     	ds	1
   561   000035                     ___ftadd@exp2:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x34
   565   000035                     	ds	1
   566   000036                     ___ftadd@exp1:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x35
   570   000036                     	ds	1
   571   000037                     ?___fttol:
   572                           	callstack 0
   573   000037                     ___fttol@f1:
   574                           	callstack 0
   575                           
   576                           ; 3 bytes @ 0x36
   577   000037                     	ds	4
   578   00003B                     ??___fttol:
   579                           
   580                           ; 1 bytes @ 0x3A
   581   00003B                     	ds	5
   582   000040                     ___fttol@sign1:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x3F
   586   000040                     	ds	1
   587   000041                     ___fttol@lval:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x40
   591   000041                     	ds	4
   592   000045                     ___fttol@exp1:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x44
   596   000045                     	ds	1
   597   000046                     choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x45
   601   000046                     	ds	1
   602   000047                     choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x46
   606   000047                     	ds	1
   607   000048                     choose_scale_temperature_and_fill_buffers@temp_converted:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x47
   611   000048                     	ds	2
   612   00004A                     
   613                           ; 1 bytes @ 0x49
   614 ;;
   615 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   616 ;;
   617 ;; *************** function _main *****************
   618 ;; Defined at:
   619 ;;		line 79 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  buffer_LCD_r   17   17[BANK0 ] unsigned char [17]
   624 ;;  buffer_LCD_r   17    0[BANK0 ] unsigned char [17]
   625 ;;  Hum_n1          1   35[BANK0 ] unsigned char 
   626 ;;  Temp_n1         1   34[BANK0 ] unsigned char 
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 3F/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   636 ;;      Params:         0       0       0       0       0       0       0       0       0
   637 ;;      Locals:         0      36       0       0       0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0       0       0       0       0
   639 ;;      Totals:         0      36       0       0       0       0       0       0       0
   640 ;;Total ram usage:       36 bytes
   641 ;; Hardware stack levels required when called: 6
   642 ;; This function calls:
   643 ;;		_check_potentiometer_voltaje
   644 ;;		_choose_scale_temperature_and_fill_buffers
   645 ;;		_init_configuration
   646 ;;		_save_temperature_c_EEPROM
   647 ;;		_send_temperature_RS232
   648 ;;		_show_temperature_LCD
   649 ;;		_show_temperature_c_RGB
   650 ;;		_welcome_operations
   651 ;; This function is called by:
   652 ;;		Startup code after reset
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text0
   657   001326                     __ptext0:
   658                           	callstack 0
   659   001326                     _main:
   660                           	callstack 25
   661                           
   662                           ;LAB05.c: 80: init_configuration();
   663                           
   664                           ;incstack = 0
   665   001326  EC1C  F009         	call	_init_configuration	;wreg free
   666                           
   667                           ;LAB05.c: 81: welcome_operations();
   668   00132A  EC8F  F00A         	call	_welcome_operations	;wreg free
   669                           
   670                           ;LAB05.c: 84: SWDTEN = 1;
   671   00132E  80D1               	bsf	4049,0,c	;volatile
   672                           
   673                           ;LAB05.c: 88: unsigned char buffer_LCD_row_1[17];;LAB05.c: 89: unsigned char buffer_LCD_
      +                          row_2[17];;LAB05.c: 92: unsigned char Temp_n1=255;
   674   001330  0100               	movlb	0	; () banked
   675   001332  6982               	setf	main@Temp_n1& (0+255),b
   676                           
   677                           ; BSR set to: 0
   678                           ;LAB05.c: 93: unsigned char Hum_n1=255;
   679   001334  6983               	setf	main@Hum_n1& (0+255),b
   680   001336                     l2580:
   681                           
   682                           ; BSR set to: 0
   683                           ;LAB05.c: 97: if(Enable_sample){
   684   001336  5184               	movf	_Enable_sample& (0+255),w,b
   685   001338  B4D8               	btfsc	status,2,c
   686   00133A  D7FD               	goto	l2580
   687                           
   688                           ; BSR set to: 0
   689                           ;LAB05.c: 99: Temp++;
   690   00133C  2B86               	incf	_Temp& (0+255),f,b
   691                           
   692                           ; BSR set to: 0
   693                           ;LAB05.c: 100: if(Temp > 50) Temp = 18;
   694   00133E  0E32               	movlw	50
   695   001340  6586               	cpfsgt	_Temp& (0+255),b
   696   001342  D002               	goto	l2588
   697                           
   698                           ; BSR set to: 0
   699   001344  0E12               	movlw	18
   700   001346  6F86               	movwf	_Temp& (0+255),b
   701   001348                     l2588:
   702                           
   703                           ; BSR set to: 0
   704                           ;LAB05.c: 101: Hum+=10;
   705   001348  0E0A               	movlw	10
   706   00134A  2785               	addwf	_Hum& (0+255),f,b
   707   00134C  0004               	clrwdt		;# 
   708                           
   709                           ;LAB05.c: 106: send_temperature_RS232();
   710   00134E  EC23  F00A         	call	_send_temperature_RS232	;wreg free
   711                           
   712                           ;LAB05.c: 107: save_temperature_c_EEPROM();
   713   001352  EC30  F00B         	call	_save_temperature_c_EEPROM	;wreg free
   714                           
   715                           ;LAB05.c: 108: choose_scale_temperature_and_fill_buffers(buffer_LCD_row_1,buffer_LCD_row
      +                          _2);
   716   001356  0E60               	movlw	low main@buffer_LCD_row_1
   717   001358  6E46               	movwf	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1^0,c
   718   00135A  0E71               	movlw	low main@buffer_LCD_row_2
   719   00135C  6E47               	movwf	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2^0,c
   720   00135E  EC31  F004         	call	_choose_scale_temperature_and_fill_buffers	;wreg free
   721                           
   722                           ;LAB05.c: 109: show_temperature_c_RGB();
   723   001362  EC5D  F009         	call	_show_temperature_c_RGB	;wreg free
   724                           
   725                           ; BSR set to: 0
   726                           ;LAB05.c: 110: show_temperature_LCD(buffer_LCD_row_1, buffer_LCD_row_2, Temp_n1, Hum_n1)
      +                          ;
   727   001366  0E60               	movlw	low main@buffer_LCD_row_1
   728   001368  6E06               	movwf	show_temperature_LCD@buffer_LCD_row_1^0,c
   729   00136A  0E71               	movlw	low main@buffer_LCD_row_2
   730   00136C  6E07               	movwf	show_temperature_LCD@buffer_LCD_row_2^0,c
   731   00136E  C082  F008         	movff	main@Temp_n1,show_temperature_LCD@Temp_n1
   732   001372  C083  F009         	movff	main@Hum_n1,show_temperature_LCD@Hum_n1
   733   001376  EC96  F008         	call	_show_temperature_LCD	;wreg free
   734                           
   735                           ;LAB05.c: 111: check_potentiometer_voltaje();
   736   00137A  ECE8  F00A         	call	_check_potentiometer_voltaje	;wreg free
   737                           
   738                           ;LAB05.c: 112: Enable_sample = 0;
   739   00137E  0E00               	movlw	0
   740   001380  0100               	movlb	0	; () banked
   741   001382  6F84               	movwf	_Enable_sample& (0+255),b
   742                           
   743                           ; BSR set to: 0
   744                           ;LAB05.c: 115: Temp_n1=Temp;
   745   001384  C086  F082         	movff	_Temp,main@Temp_n1
   746                           
   747                           ; BSR set to: 0
   748                           ;LAB05.c: 116: Hum_n1=Hum;
   749   001388  C085  F083         	movff	_Hum,main@Hum_n1
   750   00138C  D7D4               	goto	l2580
   751   00138E                     __end_of_main:
   752                           	callstack 0
   753                           
   754 ;; *************** function _welcome_operations *****************
   755 ;; Defined at:
   756 ;;		line 195 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   770 ;;      Params:         0       0       0       0       0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0       0       0       0       0
   772 ;;      Temps:          2       0       0       0       0       0       0       0       0
   773 ;;      Totals:         2       0       0       0       0       0       0       0       0
   774 ;;Total ram usage:        2 bytes
   775 ;; Hardware stack levels used: 1
   776 ;; Hardware stack levels required when called: 5
   777 ;; This function calls:
   778 ;;		_BorraLCD
   779 ;;		_MensajeLCD_Var
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text1
   786   00151E                     __ptext1:
   787                           	callstack 0
   788   00151E                     _welcome_operations:
   789                           	callstack 25
   790                           
   791                           ;LAB05.c: 198: if(TO==0){
   792                           
   793                           ; BSR set to: 0
   794                           ;incstack = 0
   795   00151E  B6D0               	btfsc	4048,3,c	;volatile
   796   001520  D006               	goto	l2438
   797                           
   798                           ;LAB05.c: 199: TO=1;
   799   001522  86D0               	bsf	4048,3,c	;volatile
   800                           
   801                           ;LAB05.c: 200: MensajeLCD_Var("Failed DHT11");
   802   001524  0E0B               	movlw	low STR_1
   803   001526  6E06               	movwf	MensajeLCD_Var@a^0,c
   804   001528  ECDA  F008         	call	_MensajeLCD_Var	;wreg free
   805   00152C  0003               	sleep		;# 
   806   00152E                     l2438:
   807                           
   808                           ;LAB05.c: 202: };LAB05.c: 204: BorraLCD();
   809   00152E  EC19  F00B         	call	_BorraLCD	;wreg free
   810                           
   811                           ;LAB05.c: 205: MensajeLCD_Var("Sensors");
   812   001532  0E58               	movlw	low STR_2
   813   001534  6E06               	movwf	MensajeLCD_Var@a^0,c
   814   001536  ECDA  F008         	call	_MensajeLCD_Var	;wreg free
   815                           
   816                           ;LAB05.c: 206: MensajeLCD_Var("\nGod is good");
   817   00153A  0E18               	movlw	low STR_3
   818   00153C  6E06               	movwf	MensajeLCD_Var@a^0,c
   819   00153E  ECDA  F008         	call	_MensajeLCD_Var	;wreg free
   820                           
   821                           ;LAB05.c: 207: _delay((unsigned long)((1000)*(8000000/4000.0)));
   822   001542  0E0B               	movlw	11
   823   001544  6E0A               	movwf	(??_welcome_operations+1)^0,c
   824   001546  0E26               	movlw	38
   825   001548  6E09               	movwf	??_welcome_operations^0,c
   826   00154A  0E5E               	movlw	94
   827   00154C                     u2097:
   828   00154C  2EE8               	decfsz	wreg,f,c
   829   00154E  D7FE               	bra	u2097
   830   001550  2E09               	decfsz	??_welcome_operations^0,f,c
   831   001552  D7FC               	bra	u2097
   832   001554  2E0A               	decfsz	(??_welcome_operations+1)^0,f,c
   833   001556  D7FA               	bra	u2097
   834                           
   835                           ;LAB05.c: 208: BorraLCD();
   836   001558  EC19  F00B         	call	_BorraLCD	;wreg free
   837   00155C  0012               	return		;funcret
   838   00155E                     __end_of_welcome_operations:
   839                           	callstack 0
   840                           
   841 ;; *************** function _MensajeLCD_Var *****************
   842 ;; Defined at:
   843 ;;		line 232 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  a               1    5[COMRAM] PTR unsigned char 
   846 ;;		 -> STR_3(13), STR_2(8), STR_1(13), 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  counter         1    7[COMRAM] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   858 ;;      Params:         1       0       0       0       0       0       0       0       0
   859 ;;      Locals:         1       0       0       0       0       0       0       0       0
   860 ;;      Temps:          1       0       0       0       0       0       0       0       0
   861 ;;      Totals:         3       0       0       0       0       0       0       0       0
   862 ;;Total ram usage:        3 bytes
   863 ;; Hardware stack levels used: 1
   864 ;; Hardware stack levels required when called: 4
   865 ;; This function calls:
   866 ;;		_BorraLCD
   867 ;;		_DireccionaLCD
   868 ;;		_EscribeLCD_c
   869 ;; This function is called by:
   870 ;;		_welcome_operations
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text2
   875   0011B4                     __ptext2:
   876                           	callstack 0
   877   0011B4                     _MensajeLCD_Var:
   878                           	callstack 25
   879                           
   880                           ;LibLCDXC8.h: 237: unsigned char counter=0;
   881                           
   882                           ;incstack = 0
   883   0011B4  0E00               	movlw	0
   884   0011B6  6E08               	movwf	MensajeLCD_Var@counter^0,c
   885                           
   886                           ;LibLCDXC8.h: 238: while(a[counter]!='\0' && counter<=255){
   887   0011B8  D032               	goto	l2084
   888   0011BA                     l2066:
   889                           
   890                           ;LibLCDXC8.h: 240: if(a[counter]=='\n'){
   891   0011BA  5006               	movf	MensajeLCD_Var@a^0,w,c
   892   0011BC  2408               	addwf	MensajeLCD_Var@counter^0,w,c
   893   0011BE  6E07               	movwf	??_MensajeLCD_Var^0,c
   894   0011C0  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   895   0011C4                     	if	1	;There is more than 1 active tblptr byte
   896   0011C4  0E08               	movlw	high __smallconst
   897   0011C6  6EF7               	movwf	tblptrh,c
   898   0011C8                     	endif
   899   0011C8                     	if	0	;tblptru may be non-zero
   900   0011C8                     	endif
   901   0011C8                     	if	0	;tblptru may be non-zero
   902   0011C8                     	endif
   903   0011C8  0008               	tblrd		*
   904   0011CA  50F5               	movf	tablat,w,c
   905   0011CC  0A0A               	xorlw	10
   906   0011CE  A4D8               	btfss	status,2,c
   907   0011D0  D004               	goto	l2072
   908                           
   909                           ;LibLCDXC8.h: 241: DireccionaLCD(0xC0);
   910   0011D2  0EC0               	movlw	192
   911   0011D4  EC0E  F00B         	call	_DireccionaLCD
   912                           
   913                           ;LibLCDXC8.h: 242: counter++;
   914   0011D8  2A08               	incf	MensajeLCD_Var@counter^0,f,c
   915   0011DA                     l2072:
   916                           
   917                           ;LibLCDXC8.h: 243: };LibLCDXC8.h: 245: if((counter+1)%32==0){
   918   0011DA  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
   919   0011DE  0E01               	movlw	1
   920   0011E0  2607               	addwf	??_MensajeLCD_Var^0,f,c
   921   0011E2  0E1F               	movlw	31
   922   0011E4  1607               	andwf	??_MensajeLCD_Var^0,f,c
   923   0011E6  A4D8               	btfss	status,2,c
   924   0011E8  D003               	goto	l2076
   925                           
   926                           ;LibLCDXC8.h: 246: BorraLCD();
   927   0011EA  EC19  F00B         	call	_BorraLCD	;wreg free
   928                           
   929                           ;LibLCDXC8.h: 247: }
   930   0011EE  D00B               	goto	l2080
   931   0011F0                     l2076:
   932                           
   933                           ;LibLCDXC8.h: 248: else if((counter+1)%16==0){
   934   0011F0  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
   935   0011F4  0E01               	movlw	1
   936   0011F6  2607               	addwf	??_MensajeLCD_Var^0,f,c
   937   0011F8  0E0F               	movlw	15
   938   0011FA  1607               	andwf	??_MensajeLCD_Var^0,f,c
   939   0011FC  A4D8               	btfss	status,2,c
   940   0011FE  D003               	goto	l2080
   941                           
   942                           ;LibLCDXC8.h: 249: DireccionaLCD(0xC0);
   943   001200  0EC0               	movlw	192
   944   001202  EC0E  F00B         	call	_DireccionaLCD
   945   001206                     l2080:
   946                           
   947                           ;LibLCDXC8.h: 250: };LibLCDXC8.h: 252: EscribeLCD_c(a[counter]);
   948   001206  5006               	movf	MensajeLCD_Var@a^0,w,c
   949   001208  2408               	addwf	MensajeLCD_Var@counter^0,w,c
   950   00120A  6E07               	movwf	??_MensajeLCD_Var^0,c
   951   00120C  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   952   001210                     	if	1	;There is more than 1 active tblptr byte
   953   001210  0E08               	movlw	high __smallconst
   954   001212  6EF7               	movwf	tblptrh,c
   955   001214                     	endif
   956   001214                     	if	0	;tblptru may be non-zero
   957   001214                     	endif
   958   001214                     	if	0	;tblptru may be non-zero
   959   001214                     	endif
   960   001214  0008               	tblrd		*
   961   001216  50F5               	movf	tablat,w,c
   962   001218  EC03  F00B         	call	_EscribeLCD_c
   963                           
   964                           ;LibLCDXC8.h: 253: counter++;
   965   00121C  2A08               	incf	MensajeLCD_Var@counter^0,f,c
   966   00121E                     l2084:
   967   00121E  5006               	movf	MensajeLCD_Var@a^0,w,c
   968   001220  2408               	addwf	MensajeLCD_Var@counter^0,w,c
   969   001222  6E07               	movwf	??_MensajeLCD_Var^0,c
   970   001224  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   971   001228                     	if	1	;There is more than 1 active tblptr byte
   972   001228  0E08               	movlw	high __smallconst
   973   00122A  6EF7               	movwf	tblptrh,c
   974   00122C                     	endif
   975   00122C                     	if	0	;tblptru may be non-zero
   976   00122C                     	endif
   977   00122C                     	if	0	;tblptru may be non-zero
   978   00122C                     	endif
   979   00122C  0008               	tblrd		*
   980   00122E  50F5               	movf	tablat,w,c
   981   001230  0900               	iorlw	0
   982   001232  B4D8               	btfsc	status,2,c
   983   001234  0012               	return	
   984   001236  D7C1               	goto	l2066
   985   001238                     __end_of_MensajeLCD_Var:
   986                           	callstack 0
   987                           
   988 ;; *************** function _show_temperature_c_RGB *****************
   989 ;; Defined at:
   990 ;;		line 229 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 3F/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1004 ;;      Params:         0       0       0       0       0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1007 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1008 ;;Total ram usage:        0 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 1
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text3
  1019   0012BA                     __ptext3:
  1020                           	callstack 0
  1021   0012BA                     _show_temperature_c_RGB:
  1022                           	callstack 29
  1023                           
  1024                           ;LAB05.c: 230: if(Temp<22){
  1025                           
  1026                           ;incstack = 0
  1027   0012BA  0E16               	movlw	22
  1028   0012BC  0100               	movlb	0	; () banked
  1029   0012BE  6186               	cpfslt	_Temp& (0+255),b
  1030   0012C0  D004               	goto	l2504
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;LAB05.c: 232: RE0=1;
  1034   0012C2  8084               	bsf	3972,0,c	;volatile
  1035                           
  1036                           ;LAB05.c: 233: RE2=1;
  1037   0012C4  8484               	bsf	3972,2,c	;volatile
  1038                           
  1039                           ;LAB05.c: 234: RE1=1;
  1040   0012C6  8284               	bsf	3972,1,c	;volatile
  1041                           
  1042                           ;LAB05.c: 235: }
  1043   0012C8  0012               	return	
  1044   0012CA                     l2504:
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;LAB05.c: 236: else if(Temp<25) {
  1048   0012CA  0E19               	movlw	25
  1049   0012CC  6186               	cpfslt	_Temp& (0+255),b
  1050   0012CE  D004               	goto	l2508
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;LAB05.c: 238: RE0=0;
  1054   0012D0  9084               	bcf	3972,0,c	;volatile
  1055                           
  1056                           ;LAB05.c: 239: RE2=1;
  1057   0012D2  8484               	bsf	3972,2,c	;volatile
  1058                           
  1059                           ;LAB05.c: 240: RE1=0;
  1060   0012D4  9284               	bcf	3972,1,c	;volatile
  1061                           
  1062                           ;LAB05.c: 241: }
  1063   0012D6  0012               	return	
  1064   0012D8                     l2508:
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;LAB05.c: 242: else if(Temp<28){
  1068   0012D8  0E1C               	movlw	28
  1069   0012DA  6186               	cpfslt	_Temp& (0+255),b
  1070   0012DC  D004               	goto	l2512
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;LAB05.c: 244: RE0=1;
  1074   0012DE  8084               	bsf	3972,0,c	;volatile
  1075                           
  1076                           ;LAB05.c: 245: RE2=1;
  1077   0012E0  8484               	bsf	3972,2,c	;volatile
  1078                           
  1079                           ;LAB05.c: 246: RE1=0;
  1080   0012E2  9284               	bcf	3972,1,c	;volatile
  1081                           
  1082                           ;LAB05.c: 248: }
  1083   0012E4  0012               	return	
  1084   0012E6                     l2512:
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;LAB05.c: 249: else if(Temp<31){
  1088   0012E6  0E1F               	movlw	31
  1089   0012E8  6186               	cpfslt	_Temp& (0+255),b
  1090   0012EA  D004               	goto	l2516
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;LAB05.c: 251: RE0=1;
  1094   0012EC  8084               	bsf	3972,0,c	;volatile
  1095                           
  1096                           ;LAB05.c: 252: RE2=0;
  1097   0012EE  9484               	bcf	3972,2,c	;volatile
  1098                           
  1099                           ;LAB05.c: 253: RE1=0;
  1100   0012F0  9284               	bcf	3972,1,c	;volatile
  1101                           
  1102                           ;LAB05.c: 254: }
  1103   0012F2  0012               	return	
  1104   0012F4                     l2516:
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;LAB05.c: 255: else if(Temp<34){
  1108   0012F4  0E22               	movlw	34
  1109   0012F6  6186               	cpfslt	_Temp& (0+255),b
  1110   0012F8  D004               	goto	l2520
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;LAB05.c: 257: RE0=1;
  1114   0012FA  8084               	bsf	3972,0,c	;volatile
  1115                           
  1116                           ;LAB05.c: 258: RE2=0;
  1117   0012FC  9484               	bcf	3972,2,c	;volatile
  1118                           
  1119                           ;LAB05.c: 259: RE1=1;
  1120   0012FE  8284               	bsf	3972,1,c	;volatile
  1121                           
  1122                           ;LAB05.c: 260: }
  1123   001300  0012               	return	
  1124   001302                     l2520:
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;LAB05.c: 261: else if(Temp<37){
  1128   001302  0E25               	movlw	37
  1129   001304  6186               	cpfslt	_Temp& (0+255),b
  1130   001306  D004               	goto	l2524
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;LAB05.c: 263: RE0=0;
  1134   001308  9084               	bcf	3972,0,c	;volatile
  1135                           
  1136                           ;LAB05.c: 264: RE2=0;
  1137   00130A  9484               	bcf	3972,2,c	;volatile
  1138                           
  1139                           ;LAB05.c: 265: RE1=1;
  1140   00130C  8284               	bsf	3972,1,c	;volatile
  1141                           
  1142                           ;LAB05.c: 266: }
  1143   00130E  0012               	return	
  1144   001310                     l2524:
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;LAB05.c: 267: else if(Temp<40){
  1148   001310  0E28               	movlw	40
  1149   001312  6186               	cpfslt	_Temp& (0+255),b
  1150   001314  D004               	goto	l275
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;LAB05.c: 269: RE0=0;
  1154   001316  9084               	bcf	3972,0,c	;volatile
  1155                           
  1156                           ;LAB05.c: 270: RE2=1;
  1157   001318  8484               	bsf	3972,2,c	;volatile
  1158                           
  1159                           ;LAB05.c: 271: RE1=1;
  1160   00131A  8284               	bsf	3972,1,c	;volatile
  1161                           
  1162                           ;LAB05.c: 272: }
  1163   00131C  0012               	return	
  1164   00131E                     l275:
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;LAB05.c: 273: else{;LAB05.c: 275: RE0=0;
  1168   00131E  9084               	bcf	3972,0,c	;volatile
  1169                           
  1170                           ;LAB05.c: 276: RE2=0;
  1171   001320  9484               	bcf	3972,2,c	;volatile
  1172                           
  1173                           ;LAB05.c: 277: RE1=0;
  1174   001322  9284               	bcf	3972,1,c	;volatile
  1175                           
  1176                           ; BSR set to: 0
  1177   001324  0012               	return		;funcret
  1178   001326                     __end_of_show_temperature_c_RGB:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _show_temperature_LCD *****************
  1182 ;; Defined at:
  1183 ;;		line 330 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  buffer_LCD_r    1    5[COMRAM] PTR unsigned char 
  1186 ;;		 -> main@buffer_LCD_row_1(17), 
  1187 ;;  buffer_LCD_r    1    6[COMRAM] PTR unsigned char 
  1188 ;;		 -> main@buffer_LCD_row_2(17), 
  1189 ;;  Temp_n1         1    7[COMRAM] unsigned char 
  1190 ;;  Hum_n1          1    8[COMRAM] unsigned char 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  counter         1    9[COMRAM] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 3F/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1202 ;;      Params:         4       0       0       0       0       0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1205 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1206 ;;Total ram usage:        5 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 4
  1209 ;; This function calls:
  1210 ;;		_DireccionaLCD
  1211 ;;		_EscribeLCD_c
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text4
  1218   00112C                     __ptext4:
  1219                           	callstack 0
  1220   00112C                     _show_temperature_LCD:
  1221                           	callstack 26
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;LAB05.c: 331: unsigned char counter=0;
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;incstack = 0
  1228   00112C  0E00               	movlw	0
  1229   00112E  6E0A               	movwf	show_temperature_LCD@counter^0,c
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;LAB05.c: 333: if(Temp_n1!=Temp){
  1233   001130  5186               	movf	_Temp& (0+255),w,b
  1234   001132  1808               	xorwf	show_temperature_LCD@Temp_n1^0,w,c
  1235   001134  B4D8               	btfsc	status,2,c
  1236   001136  D01B               	goto	u1980
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;LAB05.c: 334: DireccionaLCD(0x80);
  1240   001138  0E80               	movlw	128
  1241   00113A  EC0E  F00B         	call	_DireccionaLCD
  1242                           
  1243                           ;LAB05.c: 336: while (buffer_LCD_row_1[counter]!='\0') {
  1244   00113E  D008               	goto	l2538
  1245   001140                     l2534:
  1246                           
  1247                           ;LAB05.c: 337: EscribeLCD_c(buffer_LCD_row_1[counter]);
  1248   001140  5006               	movf	show_temperature_LCD@buffer_LCD_row_1^0,w,c
  1249   001142  240A               	addwf	show_temperature_LCD@counter^0,w,c
  1250   001144  6ED9               	movwf	fsr2l,c
  1251   001146  6ADA               	clrf	fsr2h,c
  1252   001148  50DF               	movf	indf2,w,c
  1253   00114A  EC03  F00B         	call	_EscribeLCD_c
  1254                           
  1255                           ;LAB05.c: 338: counter++;
  1256   00114E  2A0A               	incf	show_temperature_LCD@counter^0,f,c
  1257   001150                     l2538:
  1258   001150  5006               	movf	show_temperature_LCD@buffer_LCD_row_1^0,w,c
  1259   001152  240A               	addwf	show_temperature_LCD@counter^0,w,c
  1260   001154  6ED9               	movwf	fsr2l,c
  1261   001156  6ADA               	clrf	fsr2h,c
  1262   001158  50DF               	movf	indf2,w,c
  1263   00115A  B4D8               	btfsc	status,2,c
  1264   00115C  D005               	goto	l2544
  1265   00115E  D7F0               	goto	l2534
  1266   001160                     l2540:
  1267                           
  1268                           ;LAB05.c: 342: EscribeLCD_c(' ');
  1269   001160  0E20               	movlw	32
  1270   001162  EC03  F00B         	call	_EscribeLCD_c
  1271                           
  1272                           ;LAB05.c: 343: counter++;
  1273   001166  2A0A               	incf	show_temperature_LCD@counter^0,f,c
  1274   001168                     l2544:
  1275   001168  0E0F               	movlw	15
  1276   00116A  640A               	cpfsgt	show_temperature_LCD@counter^0,c
  1277   00116C  D7F9               	goto	l2540
  1278   00116E                     u1980:
  1279                           
  1280                           ;LAB05.c: 344: };LAB05.c: 345: };LAB05.c: 347: counter=0;
  1281   00116E  0E00               	movlw	0
  1282   001170  6E0A               	movwf	show_temperature_LCD@counter^0,c
  1283                           
  1284                           ;LAB05.c: 349: if(Hum_n1!=Hum){
  1285   001172  0100               	movlb	0	; () banked
  1286   001174  5185               	movf	_Hum& (0+255),w,b
  1287   001176  1809               	xorwf	show_temperature_LCD@Hum_n1^0,w,c
  1288   001178  B4D8               	btfsc	status,2,c
  1289   00117A  0012               	return	
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;LAB05.c: 350: DireccionaLCD(0xC0);
  1293   00117C  0EC0               	movlw	192
  1294   00117E  EC0E  F00B         	call	_DireccionaLCD
  1295                           
  1296                           ;LAB05.c: 353: while (buffer_LCD_row_2[counter]!='\0') {
  1297   001182  D008               	goto	l2556
  1298   001184                     l2552:
  1299                           
  1300                           ;LAB05.c: 354: EscribeLCD_c(buffer_LCD_row_2[counter]);
  1301   001184  5007               	movf	show_temperature_LCD@buffer_LCD_row_2^0,w,c
  1302   001186  240A               	addwf	show_temperature_LCD@counter^0,w,c
  1303   001188  6ED9               	movwf	fsr2l,c
  1304   00118A  6ADA               	clrf	fsr2h,c
  1305   00118C  50DF               	movf	indf2,w,c
  1306   00118E  EC03  F00B         	call	_EscribeLCD_c
  1307                           
  1308                           ;LAB05.c: 355: counter++;
  1309   001192  2A0A               	incf	show_temperature_LCD@counter^0,f,c
  1310   001194                     l2556:
  1311   001194  5007               	movf	show_temperature_LCD@buffer_LCD_row_2^0,w,c
  1312   001196  240A               	addwf	show_temperature_LCD@counter^0,w,c
  1313   001198  6ED9               	movwf	fsr2l,c
  1314   00119A  6ADA               	clrf	fsr2h,c
  1315   00119C  50DF               	movf	indf2,w,c
  1316   00119E  B4D8               	btfsc	status,2,c
  1317   0011A0  D005               	goto	l2562
  1318   0011A2  D7F0               	goto	l2552
  1319   0011A4                     l2558:
  1320                           
  1321                           ;LAB05.c: 360: EscribeLCD_c(' ');
  1322   0011A4  0E20               	movlw	32
  1323   0011A6  EC03  F00B         	call	_EscribeLCD_c
  1324                           
  1325                           ;LAB05.c: 361: counter++;
  1326   0011AA  2A0A               	incf	show_temperature_LCD@counter^0,f,c
  1327   0011AC                     l2562:
  1328   0011AC  0E0F               	movlw	15
  1329   0011AE  640A               	cpfsgt	show_temperature_LCD@counter^0,c
  1330   0011B0  D7F9               	goto	l2558
  1331   0011B2  0012               	return	
  1332   0011B4                     __end_of_show_temperature_LCD:
  1333                           	callstack 0
  1334                           
  1335 ;; *************** function _EscribeLCD_c *****************
  1336 ;; Defined at:
  1337 ;;		line 136 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  a               1    wreg     unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  a               1    4[COMRAM] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0
  1352 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1354 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1355 ;;Total ram usage:        1 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 3
  1358 ;; This function calls:
  1359 ;;		_EnviaDato
  1360 ;;		_HabilitaLCD
  1361 ;;		_RetardoLCD
  1362 ;; This function is called by:
  1363 ;;		_MensajeLCD_Var
  1364 ;;		_show_temperature_LCD
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text5
  1369   001606                     __ptext5:
  1370                           	callstack 0
  1371   001606                     _EscribeLCD_c:
  1372                           	callstack 25
  1373                           
  1374                           ;incstack = 0
  1375                           ;EscribeLCD_c@a stored from wreg
  1376   001606  6E05               	movwf	EscribeLCD_c@a^0,c
  1377                           
  1378                           ;LibLCDXC8.h: 140: LATD0=1;
  1379   001608  808C               	bsf	3980,0,c	;volatile
  1380                           
  1381                           ;LibLCDXC8.h: 141: EnviaDato(a);
  1382   00160A  5005               	movf	EscribeLCD_c@a^0,w,c
  1383   00160C  EC4B  F00A         	call	_EnviaDato
  1384                           
  1385                           ;LibLCDXC8.h: 142: HabilitaLCD();
  1386   001610  EC23  F00B         	call	_HabilitaLCD	;wreg free
  1387                           
  1388                           ;LibLCDXC8.h: 143: RetardoLCD(4);
  1389   001614  0E04               	movlw	4
  1390   001616  ECC7  F009         	call	_RetardoLCD
  1391   00161A  0012               	return		;funcret
  1392   00161C                     __end_of_EscribeLCD_c:
  1393                           	callstack 0
  1394                           
  1395 ;; *************** function _DireccionaLCD *****************
  1396 ;; Defined at:
  1397 ;;		line 257 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  a               1    wreg     unsigned char 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  a               1    4[COMRAM] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0
  1412 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1414 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1415 ;;Total ram usage:        1 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 3
  1418 ;; This function calls:
  1419 ;;		_EnviaDato
  1420 ;;		_HabilitaLCD
  1421 ;;		_RetardoLCD
  1422 ;; This function is called by:
  1423 ;;		_MensajeLCD_Var
  1424 ;;		_show_temperature_LCD
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text6
  1429   00161C                     __ptext6:
  1430                           	callstack 0
  1431   00161C                     _DireccionaLCD:
  1432                           	callstack 25
  1433                           
  1434                           ;incstack = 0
  1435                           ;DireccionaLCD@a stored from wreg
  1436   00161C  6E05               	movwf	DireccionaLCD@a^0,c
  1437                           
  1438                           ;LibLCDXC8.h: 260: LATD0=0;
  1439   00161E  908C               	bcf	3980,0,c	;volatile
  1440                           
  1441                           ;LibLCDXC8.h: 261: EnviaDato(a);
  1442   001620  5005               	movf	DireccionaLCD@a^0,w,c
  1443   001622  EC4B  F00A         	call	_EnviaDato
  1444                           
  1445                           ;LibLCDXC8.h: 262: HabilitaLCD();
  1446   001626  EC23  F00B         	call	_HabilitaLCD	;wreg free
  1447                           
  1448                           ;LibLCDXC8.h: 263: RetardoLCD(4);
  1449   00162A  0E04               	movlw	4
  1450   00162C  ECC7  F009         	call	_RetardoLCD
  1451   001630  0012               	return		;funcret
  1452   001632                     __end_of_DireccionaLCD:
  1453                           	callstack 0
  1454                           
  1455 ;; *************** function _send_temperature_RS232 *****************
  1456 ;; Defined at:
  1457 ;;		line 317 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  buffer_RS232   12   27[COMRAM] unsigned char [12]
  1462 ;;  counter         1   39[COMRAM] unsigned char 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0
  1473 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1474 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1475 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1476 ;;Total ram usage:       15 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; Hardware stack levels required when called: 3
  1479 ;; This function calls:
  1480 ;;		_Transmitir
  1481 ;;		_sprintf
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text7
  1488   001446                     __ptext7:
  1489                           	callstack 0
  1490   001446                     _send_temperature_RS232:
  1491                           	callstack 27
  1492                           
  1493                           ;LAB05.c: 318: unsigned char counter=0;
  1494                           
  1495                           ;incstack = 0
  1496   001446  0E00               	movlw	0
  1497   001448  6E28               	movwf	send_temperature_RS232@counter^0,c
  1498                           
  1499                           ;LAB05.c: 319: unsigned char buffer_RS232[12];;LAB05.c: 320: sprintf(buffer_RS232, "T: %
      +                          i C\n",Temp);
  1500   00144A  0E1C               	movlw	low send_temperature_RS232@buffer_RS232
  1501   00144C  6E0D               	movwf	sprintf@sp^0,c
  1502   00144E  0E25               	movlw	low STR_12
  1503   001450  6E0E               	movwf	sprintf@f^0,c
  1504   001452  C086  F00F         	movff	_Temp,?_sprintf+2
  1505   001456  6A10               	clrf	(?_sprintf+3)^0,c
  1506   001458  ECF5  F005         	call	_sprintf	;wreg free
  1507                           
  1508                           ;LAB05.c: 322: while(buffer_RS232[counter]!='\0'){
  1509   00145C  D008               	goto	l2458
  1510   00145E                     l2454:
  1511                           
  1512                           ;LAB05.c: 323: Transmitir(buffer_RS232[counter]);
  1513   00145E  5028               	movf	send_temperature_RS232@counter^0,w,c
  1514   001460  0F1C               	addlw	low send_temperature_RS232@buffer_RS232
  1515   001462  6ED9               	movwf	fsr2l,c
  1516   001464  6ADA               	clrf	fsr2h,c
  1517   001466  50DF               	movf	indf2,w,c
  1518   001468  EC2A  F00B         	call	_Transmitir
  1519                           
  1520                           ;LAB05.c: 324: counter++;
  1521   00146C  2A28               	incf	send_temperature_RS232@counter^0,f,c
  1522   00146E                     l2458:
  1523   00146E  5028               	movf	send_temperature_RS232@counter^0,w,c
  1524   001470  0F1C               	addlw	low send_temperature_RS232@buffer_RS232
  1525   001472  6ED9               	movwf	fsr2l,c
  1526   001474  6ADA               	clrf	fsr2h,c
  1527   001476  50DF               	movf	indf2,w,c
  1528   001478  A4D8               	btfss	status,2,c
  1529   00147A  D7F1               	goto	l2454
  1530                           
  1531                           ;LAB05.c: 325: };LAB05.c: 326: _delay((unsigned long)((200)*(8000000/4000.0)));
  1532   00147C  0E03               	movlw	3
  1533   00147E  6E1B               	movwf	(??_send_temperature_RS232+1)^0,c
  1534   001480  0E08               	movlw	8
  1535   001482  6E1A               	movwf	??_send_temperature_RS232^0,c
  1536   001484  0E77               	movlw	119
  1537   001486                     u2107:
  1538   001486  2EE8               	decfsz	wreg,f,c
  1539   001488  D7FE               	bra	u2107
  1540   00148A  2E1A               	decfsz	??_send_temperature_RS232^0,f,c
  1541   00148C  D7FC               	bra	u2107
  1542   00148E  2E1B               	decfsz	(??_send_temperature_RS232+1)^0,f,c
  1543   001490  D7FA               	bra	u2107
  1544   001492  F000               	nop	
  1545   001494  0012               	return		;funcret
  1546   001496                     __end_of_send_temperature_RS232:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _Transmitir *****************
  1550 ;; Defined at:
  1551 ;;		line 416 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  BufferT         1    wreg     unsigned char 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  BufferT         1    0[COMRAM] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0
  1566 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1568 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1569 ;;Total ram usage:        1 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 1
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_send_temperature_RS232
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text8
  1580   001654                     __ptext8:
  1581                           	callstack 0
  1582   001654                     _Transmitir:
  1583                           	callstack 28
  1584                           
  1585                           ;incstack = 0
  1586                           ;Transmitir@BufferT stored from wreg
  1587   001654  6E01               	movwf	Transmitir@BufferT^0,c
  1588   001656                     
  1589                           ;LAB05.c: 417: while(TRMT==0);
  1590   001656  A2AC               	btfss	4012,1,c	;volatile
  1591   001658  D7FE               	goto	l2154
  1592                           
  1593                           ;LAB05.c: 418: TXREG=BufferT;
  1594   00165A  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1595   00165E  0012               	return		;funcret
  1596   001660                     __end_of_Transmitir:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _save_temperature_c_EEPROM *****************
  1600 ;; Defined at:
  1601 ;;		line 226 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		None
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1615 ;;      Params:         0       0       0       0       0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1618 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1619 ;;Total ram usage:        0 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; Hardware stack levels required when called: 1
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text9
  1630   001660                     __ptext9:
  1631                           	callstack 0
  1632   001660                     _save_temperature_c_EEPROM:
  1633                           	callstack 29
  1634                           
  1635                           ;LAB05.c: 227: return;
  1636                           
  1637                           ;incstack = 0
  1638   001660  0012               	return		;funcret
  1639   001662                     __end_of_save_temperature_c_EEPROM:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _init_configuration *****************
  1643 ;; Defined at:
  1644 ;;		line 124 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1660 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1661 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1662 ;;Total ram usage:        2 bytes
  1663 ;; Hardware stack levels used: 1
  1664 ;; Hardware stack levels required when called: 5
  1665 ;; This function calls:
  1666 ;;		_ConfiguraLCD
  1667 ;;		_InicializaLCD
  1668 ;; This function is called by:
  1669 ;;		_main
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text10
  1674   001238                     __ptext10:
  1675                           	callstack 0
  1676   001238                     _init_configuration:
  1677                           	callstack 25
  1678                           
  1679                           ;LAB05.c: 127: OSCCON=0b01110000;
  1680                           
  1681                           ;incstack = 0
  1682   001238  0E70               	movlw	112
  1683   00123A  6ED3               	movwf	211,c	;volatile
  1684                           
  1685                           ;LAB05.c: 128: _delay((unsigned long)((1)*(8000000/4000.0)));
  1686   00123C  0E03               	movlw	3
  1687   00123E  6E05               	movwf	??_init_configuration^0,c
  1688   001240  0E98               	movlw	152
  1689   001242                     u2117:
  1690   001242  2EE8               	decfsz	wreg,f,c
  1691   001244  D7FE               	bra	u2117
  1692   001246  2E05               	decfsz	??_init_configuration^0,f,c
  1693   001248  D7FC               	bra	u2117
  1694                           
  1695                           ;LAB05.c: 131: LATC0=0;
  1696   00124A  908B               	bcf	3979,0,c	;volatile
  1697                           
  1698                           ;LAB05.c: 134: TXSTA=0b00100000;
  1699   00124C  0E20               	movlw	32
  1700   00124E  6EAC               	movwf	172,c	;volatile
  1701                           
  1702                           ;LAB05.c: 135: RCSTA=0b10000000;
  1703   001250  0E80               	movlw	128
  1704   001252  6EAB               	movwf	171,c	;volatile
  1705                           
  1706                           ;LAB05.c: 136: BAUDCON=0b00000000;
  1707   001254  0E00               	movlw	0
  1708   001256  6EB8               	movwf	184,c	;volatile
  1709                           
  1710                           ;LAB05.c: 137: SPBRG=12;
  1711   001258  0E0C               	movlw	12
  1712   00125A  6EAF               	movwf	175,c	;volatile
  1713                           
  1714                           ;LAB05.c: 140: ADCON1=13;
  1715   00125C  0E0D               	movlw	13
  1716   00125E  6EC1               	movwf	193,c	;volatile
  1717                           
  1718                           ;LAB05.c: 143: TRISE=0b11111000;
  1719   001260  0EF8               	movlw	248
  1720   001262  6E96               	movwf	150,c	;volatile
  1721                           
  1722                           ;LAB05.c: 144: LATE=1;
  1723   001264  0E01               	movlw	1
  1724   001266  6E8D               	movwf	141,c	;volatile
  1725                           
  1726                           ;LAB05.c: 147: TRISA2=1;
  1727   001268  8492               	bsf	3986,2,c	;volatile
  1728                           
  1729                           ;LAB05.c: 148: TRISA3=1;
  1730   00126A  8692               	bsf	3986,3,c	;volatile
  1731                           
  1732                           ;LAB05.c: 151: TRISC2=0;
  1733   00126C  9494               	bcf	3988,2,c	;volatile
  1734                           
  1735                           ;LAB05.c: 152: LATC2=0;
  1736   00126E  948B               	bcf	3979,2,c	;volatile
  1737                           
  1738                           ;LAB05.c: 155: TRISB0=0;
  1739   001270  9093               	bcf	3987,0,c	;volatile
  1740                           
  1741                           ;LAB05.c: 156: LATB0=0;
  1742   001272  908A               	bcf	3978,0,c	;volatile
  1743                           
  1744                           ;LAB05.c: 160: ADCON0=0b00000101;
  1745   001274  0E05               	movlw	5
  1746   001276  6EC2               	movwf	194,c	;volatile
  1747                           
  1748                           ;LAB05.c: 162: ADCON2=0b11001001;
  1749   001278  0EC9               	movlw	201
  1750   00127A  6EC0               	movwf	192,c	;volatile
  1751                           
  1752                           ;LAB05.c: 174: T0CON=0b00000100;
  1753   00127C  0E04               	movlw	4
  1754   00127E  6ED5               	movwf	213,c	;volatile
  1755                           
  1756                           ;LAB05.c: 175: TMR0=3036;
  1757   001280  0E0B               	movlw	11
  1758   001282  6ED7               	movwf	215,c	;volatile
  1759   001284  0EDC               	movlw	220
  1760   001286  6ED6               	movwf	214,c	;volatile
  1761                           
  1762                           ;LAB05.c: 179: TMR0IF=0;
  1763   001288  94F2               	bcf	4082,2,c	;volatile
  1764                           
  1765                           ;LAB05.c: 180: TMR0IE=1;
  1766   00128A  8AF2               	bsf	4082,5,c	;volatile
  1767                           
  1768                           ;LAB05.c: 181: GIE=1;
  1769   00128C  8EF2               	bsf	4082,7,c	;volatile
  1770                           
  1771                           ;LAB05.c: 183: TMR0ON=1;
  1772   00128E  8ED5               	bsf	4053,7,c	;volatile
  1773                           
  1774                           ;LAB05.c: 186: TRISD=0;
  1775   001290  0E00               	movlw	0
  1776   001292  6E95               	movwf	149,c	;volatile
  1777                           
  1778                           ;LAB05.c: 187: LATD=0;
  1779   001294  0E00               	movlw	0
  1780   001296  6E8C               	movwf	140,c	;volatile
  1781                           
  1782                           ;LAB05.c: 188: ConfiguraLCD(4);
  1783   001298  0E04               	movlw	4
  1784   00129A  ECF7  F00A         	call	_ConfiguraLCD
  1785                           
  1786                           ;LAB05.c: 189: InicializaLCD();
  1787   00129E  EC48  F008         	call	_InicializaLCD	;wreg free
  1788                           
  1789                           ;LAB05.c: 190: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1790   0012A2  0E0B               	movlw	11
  1791   0012A4  6E06               	movwf	(??_init_configuration+1)^0,c
  1792   0012A6  0E26               	movlw	38
  1793   0012A8  6E05               	movwf	??_init_configuration^0,c
  1794   0012AA  0E5E               	movlw	94
  1795   0012AC                     u2127:
  1796   0012AC  2EE8               	decfsz	wreg,f,c
  1797   0012AE  D7FE               	bra	u2127
  1798   0012B0  2E05               	decfsz	??_init_configuration^0,f,c
  1799   0012B2  D7FC               	bra	u2127
  1800   0012B4  2E06               	decfsz	(??_init_configuration+1)^0,f,c
  1801   0012B6  D7FA               	bra	u2127
  1802   0012B8  0012               	return		;funcret
  1803   0012BA                     __end_of_init_configuration:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function _InicializaLCD *****************
  1807 ;; Defined at:
  1808 ;;		line 71 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1822 ;;      Params:         0       0       0       0       0       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1825 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 4
  1829 ;; This function calls:
  1830 ;;		_BorraLCD
  1831 ;;		_EnviaDato
  1832 ;;		_HabilitaLCD
  1833 ;;		_RetardoLCD
  1834 ;; This function is called by:
  1835 ;;		_init_configuration
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text11
  1840   001090                     __ptext11:
  1841                           	callstack 0
  1842   001090                     _InicializaLCD:
  1843                           	callstack 25
  1844                           
  1845                           ;LibLCDXC8.h: 73: LATD0=0;
  1846                           
  1847                           ;incstack = 0
  1848   001090  908C               	bcf	3980,0,c	;volatile
  1849                           
  1850                           ;LibLCDXC8.h: 74: if(interfaz==4)
  1851   001092  0E04               	movlw	4
  1852   001094  184B               	xorwf	_interfaz^0,w,c
  1853   001096  A4D8               	btfss	status,2,c
  1854   001098  D004               	goto	l2016
  1855                           
  1856                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
  1857   00109A  508C               	movf	140,w,c	;volatile
  1858   00109C  0B0F               	andlw	15
  1859   00109E  0930               	iorlw	48
  1860   0010A0  D001               	goto	L1
  1861   0010A2                     l2016:
  1862                           
  1863                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  1864   0010A2  0E3F               	movlw	63
  1865   0010A4                     L1:
  1866   0010A4  6E8C               	movwf	140,c	;volatile
  1867                           
  1868                           ;LibLCDXC8.h: 78: HabilitaLCD();
  1869   0010A6  EC23  F00B         	call	_HabilitaLCD	;wreg free
  1870                           
  1871                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  1872   0010AA  0E01               	movlw	1
  1873   0010AC  ECC7  F009         	call	_RetardoLCD
  1874                           
  1875                           ;LibLCDXC8.h: 80: if(interfaz==4)
  1876   0010B0  0E04               	movlw	4
  1877   0010B2  184B               	xorwf	_interfaz^0,w,c
  1878   0010B4  A4D8               	btfss	status,2,c
  1879   0010B6  D004               	goto	l2026
  1880                           
  1881                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
  1882   0010B8  508C               	movf	140,w,c	;volatile
  1883   0010BA  0B0F               	andlw	15
  1884   0010BC  0930               	iorlw	48
  1885   0010BE  D001               	goto	L2
  1886   0010C0                     l2026:
  1887                           
  1888                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  1889   0010C0  0E3F               	movlw	63
  1890   0010C2                     L2:
  1891   0010C2  6E8C               	movwf	140,c	;volatile
  1892                           
  1893                           ;LibLCDXC8.h: 84: HabilitaLCD();
  1894   0010C4  EC23  F00B         	call	_HabilitaLCD	;wreg free
  1895                           
  1896                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  1897   0010C8  0E03               	movlw	3
  1898   0010CA  ECC7  F009         	call	_RetardoLCD
  1899                           
  1900                           ;LibLCDXC8.h: 86: if(interfaz==4)
  1901   0010CE  0E04               	movlw	4
  1902   0010D0  184B               	xorwf	_interfaz^0,w,c
  1903   0010D2  A4D8               	btfss	status,2,c
  1904   0010D4  D004               	goto	l2036
  1905                           
  1906                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
  1907   0010D6  508C               	movf	140,w,c	;volatile
  1908   0010D8  0B0F               	andlw	15
  1909   0010DA  0930               	iorlw	48
  1910   0010DC  D001               	goto	L3
  1911   0010DE                     l2036:
  1912                           
  1913                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  1914   0010DE  0E3F               	movlw	63
  1915   0010E0                     L3:
  1916   0010E0  6E8C               	movwf	140,c	;volatile
  1917                           
  1918                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1919   0010E2  EC23  F00B         	call	_HabilitaLCD	;wreg free
  1920                           
  1921                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1922   0010E6  0E04               	movlw	4
  1923   0010E8  ECC7  F009         	call	_RetardoLCD
  1924                           
  1925                           ;LibLCDXC8.h: 92: if(interfaz==4){
  1926   0010EC  0E04               	movlw	4
  1927   0010EE  184B               	xorwf	_interfaz^0,w,c
  1928   0010F0  A4D8               	btfss	status,2,c
  1929   0010F2  D011               	goto	l2056
  1930                           
  1931                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
  1932   0010F4  508C               	movf	140,w,c	;volatile
  1933   0010F6  0B0F               	andlw	15
  1934   0010F8  0920               	iorlw	32
  1935   0010FA  6E8C               	movwf	140,c	;volatile
  1936                           
  1937                           ;LibLCDXC8.h: 94: HabilitaLCD();
  1938   0010FC  EC23  F00B         	call	_HabilitaLCD	;wreg free
  1939                           
  1940                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  1941   001100  0E04               	movlw	4
  1942   001102  ECC7  F009         	call	_RetardoLCD
  1943                           
  1944                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
  1945   001106  0E2F               	movlw	47
  1946   001108  EC4B  F00A         	call	_EnviaDato
  1947                           
  1948                           ;LibLCDXC8.h: 97: HabilitaLCD();
  1949   00110C  EC23  F00B         	call	_HabilitaLCD	;wreg free
  1950                           
  1951                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  1952   001110  0E04               	movlw	4
  1953   001112  ECC7  F009         	call	_RetardoLCD
  1954   001116                     l2056:
  1955                           
  1956                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  1957   001116  EC19  F00B         	call	_BorraLCD	;wreg free
  1958                           
  1959                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  1960   00111A  0E0F               	movlw	15
  1961   00111C  EC4B  F00A         	call	_EnviaDato
  1962                           
  1963                           ;LibLCDXC8.h: 102: HabilitaLCD();
  1964   001120  EC23  F00B         	call	_HabilitaLCD	;wreg free
  1965                           
  1966                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  1967   001124  0E04               	movlw	4
  1968   001126  ECC7  F009         	call	_RetardoLCD
  1969   00112A  0012               	return		;funcret
  1970   00112C                     __end_of_InicializaLCD:
  1971                           	callstack 0
  1972                           
  1973 ;; *************** function _BorraLCD *****************
  1974 ;; Defined at:
  1975 ;;		line 112 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1989 ;;      Params:         0       0       0       0       0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 3
  1996 ;; This function calls:
  1997 ;;		_EnviaDato
  1998 ;;		_HabilitaLCD
  1999 ;;		_RetardoLCD
  2000 ;; This function is called by:
  2001 ;;		_InicializaLCD
  2002 ;;		_MensajeLCD_Var
  2003 ;;		_welcome_operations
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text12
  2008   001632                     __ptext12:
  2009                           	callstack 0
  2010   001632                     _BorraLCD:
  2011                           	callstack 25
  2012                           
  2013                           ;LibLCDXC8.h: 114: LATD0=0;
  2014                           
  2015                           ;incstack = 0
  2016   001632  908C               	bcf	3980,0,c	;volatile
  2017                           
  2018                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2019   001634  0E01               	movlw	1
  2020   001636  EC4B  F00A         	call	_EnviaDato
  2021                           
  2022                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2023   00163A  EC23  F00B         	call	_HabilitaLCD	;wreg free
  2024                           
  2025                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2026   00163E  0E02               	movlw	2
  2027   001640  ECC7  F009         	call	_RetardoLCD
  2028   001644  0012               	return		;funcret
  2029   001646                     __end_of_BorraLCD:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _EnviaDato *****************
  2033 ;; Defined at:
  2034 ;;		line 59 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  a               1    wreg     unsigned char 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  a               1    3[COMRAM] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0
  2049 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2050 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2051 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2052 ;;Total ram usage:        2 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 2
  2055 ;; This function calls:
  2056 ;;		_HabilitaLCD
  2057 ;;		_RetardoLCD
  2058 ;; This function is called by:
  2059 ;;		_InicializaLCD
  2060 ;;		_BorraLCD
  2061 ;;		_EscribeLCD_c
  2062 ;;		_DireccionaLCD
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text13
  2067   001496                     __ptext13:
  2068                           	callstack 0
  2069   001496                     _EnviaDato:
  2070                           	callstack 25
  2071                           
  2072                           ;incstack = 0
  2073                           ;EnviaDato@a stored from wreg
  2074   001496  6E04               	movwf	EnviaDato@a^0,c
  2075                           
  2076                           ;LibLCDXC8.h: 60: if(interfaz==4){
  2077   001498  0E04               	movlw	4
  2078   00149A  184B               	xorwf	_interfaz^0,w,c
  2079   00149C  A4D8               	btfss	status,2,c
  2080   00149E  D017               	goto	l1904
  2081                           
  2082                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2083   0014A0  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  2084   0014A4  0EF0               	movlw	240
  2085   0014A6  1603               	andwf	??_EnviaDato^0,f,c
  2086   0014A8  508C               	movf	140,w,c	;volatile
  2087   0014AA  0B0F               	andlw	15
  2088   0014AC  1003               	iorwf	??_EnviaDato^0,w,c
  2089   0014AE  6E8C               	movwf	140,c	;volatile
  2090                           
  2091                           ;LibLCDXC8.h: 62: HabilitaLCD();
  2092   0014B0  EC23  F00B         	call	_HabilitaLCD	;wreg free
  2093                           
  2094                           ;LibLCDXC8.h: 63: RetardoLCD(1);
  2095   0014B4  0E01               	movlw	1
  2096   0014B6  ECC7  F009         	call	_RetardoLCD
  2097                           
  2098                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
  2099   0014BA  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  2100   0014BE  3A03               	swapf	??_EnviaDato^0,f,c
  2101   0014C0  0EF0               	movlw	240
  2102   0014C2  1603               	andwf	??_EnviaDato^0,f,c
  2103   0014C4  508C               	movf	140,w,c	;volatile
  2104   0014C6  0B0F               	andlw	15
  2105   0014C8  1003               	iorwf	??_EnviaDato^0,w,c
  2106   0014CA  6E8C               	movwf	140,c	;volatile
  2107                           
  2108                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
  2109   0014CC  0012               	return	
  2110   0014CE                     l1904:
  2111   0014CE  0E08               	movlw	8
  2112   0014D0  184B               	xorwf	_interfaz^0,w,c
  2113   0014D2  A4D8               	btfss	status,2,c
  2114   0014D4  0012               	return	
  2115                           
  2116                           ;LibLCDXC8.h: 68: LATD=a;
  2117   0014D6  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  2118   0014DA  0012               	return		;funcret
  2119   0014DC                     __end_of_EnviaDato:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _RetardoLCD *****************
  2123 ;; Defined at:
  2124 ;;		line 293 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  a               1    wreg     unsigned char 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  a               1    1[COMRAM] unsigned char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0
  2139 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2140 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2141 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2142 ;;Total ram usage:        2 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_EnviaDato
  2149 ;;		_InicializaLCD
  2150 ;;		_BorraLCD
  2151 ;;		_EscribeLCD_c
  2152 ;;		_DireccionaLCD
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text14
  2157   00138E                     __ptext14:
  2158                           	callstack 0
  2159   00138E                     _RetardoLCD:
  2160                           	callstack 26
  2161                           
  2162                           ;incstack = 0
  2163                           ;RetardoLCD@a stored from wreg
  2164   00138E  6E02               	movwf	RetardoLCD@a^0,c
  2165                           
  2166                           ;LibLCDXC8.h: 294: switch(a){
  2167   001390  D023               	goto	l1892
  2168   001392                     l1882:
  2169   001392  0E27               	movlw	39
  2170   001394  6E01               	movwf	??_RetardoLCD^0,c
  2171   001396  0EF5               	movlw	245
  2172   001398                     u2137:
  2173   001398  2EE8               	decfsz	wreg,f,c
  2174   00139A  D7FE               	bra	u2137
  2175   00139C  2E01               	decfsz	??_RetardoLCD^0,f,c
  2176   00139E  D7FC               	bra	u2137
  2177   0013A0  F000               	nop	
  2178                           
  2179                           ;LibLCDXC8.h: 297: break;
  2180   0013A2  0012               	return	
  2181   0013A4                     l1884:
  2182   0013A4  0E03               	movlw	3
  2183   0013A6  6E01               	movwf	??_RetardoLCD^0,c
  2184   0013A8  0E98               	movlw	152
  2185   0013AA                     u2147:
  2186   0013AA  2EE8               	decfsz	wreg,f,c
  2187   0013AC  D7FE               	bra	u2147
  2188   0013AE  2E01               	decfsz	??_RetardoLCD^0,f,c
  2189   0013B0  D7FC               	bra	u2147
  2190                           
  2191                           ;LibLCDXC8.h: 299: _delay((unsigned long)((640)*(8000000/4000000.0)));
  2192   0013B2  0EB6               	movlw	182
  2193   0013B4                     u2157:
  2194   0013B4  D000               	nop2	
  2195   0013B6  D000               	nop2	
  2196   0013B8  2EE8               	decfsz	wreg,f,c
  2197   0013BA  D7FC               	bra	u2157
  2198   0013BC  D000               	nop2	
  2199   0013BE  D000               	nop2	
  2200   0013C0  D000               	nop2	
  2201                           
  2202                           ;LibLCDXC8.h: 301: break;
  2203   0013C2  0012               	return	
  2204   0013C4                     l1886:
  2205   0013C4  0E42               	movlw	66
  2206   0013C6                     u2167:
  2207   0013C6  2EE8               	decfsz	wreg,f,c
  2208   0013C8  D7FE               	bra	u2167
  2209   0013CA  D000               	nop2	
  2210                           
  2211                           ;LibLCDXC8.h: 304: break;
  2212   0013CC  0012               	return	
  2213   0013CE                     l1888:
  2214   0013CE  0E1A               	movlw	26
  2215   0013D0                     u2177:
  2216   0013D0  2EE8               	decfsz	wreg,f,c
  2217   0013D2  D7FE               	bra	u2177
  2218   0013D4  D000               	nop2	
  2219                           
  2220                           ;LibLCDXC8.h: 307: break;
  2221   0013D6  0012               	return	
  2222   0013D8                     l1892:
  2223   0013D8  5002               	movf	RetardoLCD@a^0,w,c
  2224                           
  2225                           ; Switch size 1, requested type "simple"
  2226                           ; Number of cases is 4, Range of values is 1 to 4
  2227                           ; switch strategies available:
  2228                           ; Name         Instructions Cycles
  2229                           ; simple_byte           13     7 (average)
  2230                           ;	Chosen strategy is simple_byte
  2231   0013DA  0A01               	xorlw	1	; case 1
  2232   0013DC  B4D8               	btfsc	status,2,c
  2233   0013DE  D7D9               	goto	l1882
  2234   0013E0  0A03               	xorlw	3	; case 2
  2235   0013E2  B4D8               	btfsc	status,2,c
  2236   0013E4  D7DF               	goto	l1884
  2237   0013E6  0A01               	xorlw	1	; case 3
  2238   0013E8  B4D8               	btfsc	status,2,c
  2239   0013EA  D7EC               	goto	l1886
  2240   0013EC  0A07               	xorlw	7	; case 4
  2241   0013EE  A4D8               	btfss	status,2,c
  2242   0013F0  0012               	return	
  2243   0013F2  D7ED               	goto	l1888
  2244   0013F4                     __end_of_RetardoLCD:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _HabilitaLCD *****************
  2248 ;; Defined at:
  2249 ;;		line 105 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2263 ;;      Params:         0       0       0       0       0       0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2266 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2267 ;;Total ram usage:        0 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 1
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_EnviaDato
  2274 ;;		_InicializaLCD
  2275 ;;		_BorraLCD
  2276 ;;		_EscribeLCD_c
  2277 ;;		_DireccionaLCD
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text15
  2282   001646                     __ptext15:
  2283                           	callstack 0
  2284   001646                     _HabilitaLCD:
  2285                           	callstack 26
  2286                           
  2287                           ;LibLCDXC8.h: 107: LATD1=1;
  2288                           
  2289                           ;incstack = 0
  2290   001646  828C               	bsf	3980,1,c	;volatile
  2291                           
  2292                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
  2293   001648  0E1A               	movlw	26
  2294   00164A                     u2187:
  2295   00164A  2EE8               	decfsz	wreg,f,c
  2296   00164C  D7FE               	bra	u2187
  2297   00164E  D000               	nop2	
  2298                           
  2299                           ;LibLCDXC8.h: 110: LATD1=0;
  2300   001650  928C               	bcf	3980,1,c	;volatile
  2301   001652  0012               	return		;funcret
  2302   001654                     __end_of_HabilitaLCD:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _ConfiguraLCD *****************
  2306 ;; Defined at:
  2307 ;;		line 55 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  a               1    wreg     unsigned char 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  a               1    0[COMRAM] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2321 ;;      Params:         0       0       0       0       0       0       0       0       0
  2322 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2324 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2325 ;;Total ram usage:        1 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 1
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_init_configuration
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text16
  2336   0015EE                     __ptext16:
  2337                           	callstack 0
  2338   0015EE                     _ConfiguraLCD:
  2339                           	callstack 28
  2340                           
  2341                           ;incstack = 0
  2342                           ;ConfiguraLCD@a stored from wreg
  2343   0015EE  6E01               	movwf	ConfiguraLCD@a^0,c
  2344                           
  2345                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
  2346   0015F0  0E04               	movlw	4
  2347   0015F2  1801               	xorwf	ConfiguraLCD@a^0,w,c
  2348   0015F4  B4D8               	btfsc	status,2,c
  2349   0015F6  D004               	goto	u1220
  2350   0015F8  0E08               	movlw	8
  2351   0015FA  1801               	xorwf	ConfiguraLCD@a^0,w,c
  2352   0015FC  A4D8               	btfss	status,2,c
  2353   0015FE  0012               	return	
  2354   001600                     u1220:
  2355                           
  2356                           ;LibLCDXC8.h: 57: interfaz=a;
  2357   001600  C001  F04B         	movff	ConfiguraLCD@a,_interfaz
  2358   001604  0012               	return		;funcret
  2359   001606                     __end_of_ConfiguraLCD:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _choose_scale_temperature_and_fill_buffers *****************
  2363 ;; Defined at:
  2364 ;;		line 284 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  buffer_LCD_r    1   69[COMRAM] PTR unsigned char 
  2367 ;;		 -> main@buffer_LCD_row_1(17), 
  2368 ;;  buffer_LCD_r    1   70[COMRAM] PTR unsigned char 
  2369 ;;		 -> main@buffer_LCD_row_2(17), 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  temp_convert    2   71[COMRAM] int 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2381 ;;      Params:         2       0       0       0       0       0       0       0       0
  2382 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2384 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2385 ;;Total ram usage:        4 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 3
  2388 ;; This function calls:
  2389 ;;		___ftadd
  2390 ;;		___ftdiv
  2391 ;;		___ftmul
  2392 ;;		___fttol
  2393 ;;		___lbtoft
  2394 ;;		_sprintf
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text17
  2401   000862                     __ptext17:
  2402                           	callstack 0
  2403   000862                     _choose_scale_temperature_and_fill_buffers:
  2404                           	callstack 27
  2405                           
  2406                           ;LAB05.c: 287: if(RA2==0 && RA3==0){
  2407                           
  2408                           ;incstack = 0
  2409   000862  A480               	btfss	3968,2,c	;volatile
  2410   000864  B680               	btfsc	3968,3,c	;volatile
  2411   000866  D017               	goto	l280
  2412                           
  2413                           ;LAB05.c: 290: sprintf(buffer_LCD_row_1, "T: %i C",Temp);
  2414   000868  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  2415   00086C  0E40               	movlw	low STR_4
  2416   00086E  6E0E               	movwf	sprintf@f^0,c
  2417   000870  C086  F00F         	movff	_Temp,?_sprintf+2
  2418   000874  6A10               	clrf	(?_sprintf+3)^0,c
  2419   000876  ECF5  F005         	call	_sprintf	;wreg free
  2420                           
  2421                           ;LAB05.c: 291: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  2422   00087A  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  2423   00087E  0E37               	movlw	low STR_5
  2424   000880  6E0E               	movwf	sprintf@f^0,c
  2425   000882  C085  F00F         	movff	_Hum,?_sprintf+2
  2426   000886  6A10               	clrf	(?_sprintf+3)^0,c
  2427   000888  0E00               	movlw	0
  2428   00088A  6E12               	movwf	(?_sprintf+5)^0,c
  2429   00088C  0E25               	movlw	37
  2430   00088E  6E11               	movwf	(?_sprintf+4)^0,c
  2431   000890  ECF5  F005         	call	_sprintf	;wreg free
  2432                           
  2433                           ;LAB05.c: 292: }
  2434   000894  0012               	return	
  2435   000896                     l280:
  2436                           
  2437                           ;LAB05.c: 293: else if(RA2==0 && RA3==1){
  2438   000896  A480               	btfss	3968,2,c	;volatile
  2439   000898  A680               	btfss	3968,3,c	;volatile
  2440   00089A  D036               	goto	l282
  2441                           
  2442                           ;LAB05.c: 295: temp_converted = Temp + 273.15;
  2443   00089C  0E93               	movlw	147
  2444   00089E  6E2E               	movwf	___ftadd@f2^0,c
  2445   0008A0  0E88               	movlw	136
  2446   0008A2  6E2F               	movwf	(___ftadd@f2+1)^0,c
  2447   0008A4  0E43               	movlw	67
  2448   0008A6  6E30               	movwf	(___ftadd@f2+2)^0,c
  2449   0008A8  0100               	movlb	0	; () banked
  2450   0008AA  5186               	movf	_Temp& (0+255),w,b
  2451   0008AC  ECC4  F00A         	call	___lbtoft
  2452   0008B0  C009  F02B         	movff	?___lbtoft,___ftadd@f1
  2453   0008B4  C00A  F02C         	movff	?___lbtoft+1,___ftadd@f1+1
  2454   0008B8  C00B  F02D         	movff	?___lbtoft+2,___ftadd@f1+2
  2455   0008BC  EC21  F005         	call	___ftadd	;wreg free
  2456   0008C0  C02B  F037         	movff	?___ftadd,___fttol@f1
  2457   0008C4  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  2458   0008C8  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  2459   0008CC  EC88  F007         	call	___fttol	;wreg free
  2460   0008D0  C037  F048         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  2461   0008D4  C038  F049         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  2462                           
  2463                           ;LAB05.c: 296: sprintf(buffer_LCD_row_1, "T: %i K",temp_converted);
  2464   0008D8  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  2465   0008DC  0E50               	movlw	low STR_6
  2466   0008DE  6E0E               	movwf	sprintf@f^0,c
  2467   0008E0  C048  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  2468   0008E4  C049  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  2469   0008E8  ECF5  F005         	call	_sprintf	;wreg free
  2470                           
  2471                           ;LAB05.c: 297: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  2472   0008EC  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  2473   0008F0  0E37               	movlw	low STR_5
  2474   0008F2  6E0E               	movwf	sprintf@f^0,c
  2475   0008F4  C085  F00F         	movff	_Hum,?_sprintf+2
  2476   0008F8  6A10               	clrf	(?_sprintf+3)^0,c
  2477   0008FA  0E00               	movlw	0
  2478   0008FC  6E12               	movwf	(?_sprintf+5)^0,c
  2479   0008FE  0E25               	movlw	37
  2480   000900  6E11               	movwf	(?_sprintf+4)^0,c
  2481   000902  ECF5  F005         	call	_sprintf	;wreg free
  2482                           
  2483                           ;LAB05.c: 298: }
  2484   000906  0012               	return	
  2485   000908                     l282:
  2486                           
  2487                           ;LAB05.c: 299: else if(RA2==1 && RA3==0){
  2488   000908  B480               	btfsc	3968,2,c	;volatile
  2489   00090A  B680               	btfsc	3968,3,c	;volatile
  2490   00090C  D044               	goto	l284
  2491                           
  2492                           ;LAB05.c: 301: temp_converted = Temp*1.8 + 491.67;
  2493   00090E  0ED6               	movlw	214
  2494   000910  6E2E               	movwf	___ftadd@f2^0,c
  2495   000912  0EF5               	movlw	245
  2496   000914  6E2F               	movwf	(___ftadd@f2+1)^0,c
  2497   000916  0E43               	movlw	67
  2498   000918  6E30               	movwf	(___ftadd@f2+2)^0,c
  2499   00091A  0E66               	movlw	102
  2500   00091C  6E10               	movwf	___ftmul@f2^0,c
  2501   00091E  0EE6               	movlw	230
  2502   000920  6E11               	movwf	(___ftmul@f2+1)^0,c
  2503   000922  0E3F               	movlw	63
  2504   000924  6E12               	movwf	(___ftmul@f2+2)^0,c
  2505   000926  0100               	movlb	0	; () banked
  2506   000928  5186               	movf	_Temp& (0+255),w,b
  2507   00092A  ECC4  F00A         	call	___lbtoft
  2508   00092E  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  2509   000932  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  2510   000936  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  2511   00093A  EC9B  F006         	call	___ftmul	;wreg free
  2512   00093E  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  2513   000942  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  2514   000946  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  2515   00094A  EC21  F005         	call	___ftadd	;wreg free
  2516   00094E  C02B  F037         	movff	?___ftadd,___fttol@f1
  2517   000952  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  2518   000956  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  2519   00095A  EC88  F007         	call	___fttol	;wreg free
  2520   00095E  C037  F048         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  2521   000962  C038  F049         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  2522                           
  2523                           ;LAB05.c: 302: sprintf(buffer_LCD_row_1, "T: %i Ra",temp_converted);
  2524   000966  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  2525   00096A  0E2E               	movlw	low STR_8
  2526   00096C  6E0E               	movwf	sprintf@f^0,c
  2527   00096E  C048  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  2528   000972  C049  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  2529   000976  ECF5  F005         	call	_sprintf	;wreg free
  2530                           
  2531                           ;LAB05.c: 303: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  2532   00097A  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  2533   00097E  0E37               	movlw	low STR_5
  2534   000980  6E0E               	movwf	sprintf@f^0,c
  2535   000982  C085  F00F         	movff	_Hum,?_sprintf+2
  2536   000986  6A10               	clrf	(?_sprintf+3)^0,c
  2537   000988  0E00               	movlw	0
  2538   00098A  6E12               	movwf	(?_sprintf+5)^0,c
  2539   00098C  0E25               	movlw	37
  2540   00098E  6E11               	movwf	(?_sprintf+4)^0,c
  2541   000990  ECF5  F005         	call	_sprintf	;wreg free
  2542                           
  2543                           ;LAB05.c: 305: }
  2544   000994  0012               	return	
  2545   000996                     l284:
  2546                           
  2547                           ;LAB05.c: 306: else if(RA2==1 && RA3==1){
  2548   000996  A480               	btfss	3968,2,c	;volatile
  2549   000998  0012               	return	
  2550   00099A  A680               	btfss	3968,3,c	;volatile
  2551   00099C  0012               	return	
  2552                           
  2553                           ;LAB05.c: 308: temp_converted = Temp*9.0/5.0 + 32.0;
  2554   00099E  0E00               	movlw	0
  2555   0009A0  6E2E               	movwf	___ftadd@f2^0,c
  2556   0009A2  0E00               	movlw	0
  2557   0009A4  6E2F               	movwf	(___ftadd@f2+1)^0,c
  2558   0009A6  0E42               	movlw	66
  2559   0009A8  6E30               	movwf	(___ftadd@f2+2)^0,c
  2560   0009AA  0E00               	movlw	0
  2561   0009AC  6E1F               	movwf	___ftdiv@f2^0,c
  2562   0009AE  0EA0               	movlw	160
  2563   0009B0  6E20               	movwf	(___ftdiv@f2+1)^0,c
  2564   0009B2  0E40               	movlw	64
  2565   0009B4  6E21               	movwf	(___ftdiv@f2+2)^0,c
  2566   0009B6  0E00               	movlw	0
  2567   0009B8  6E10               	movwf	___ftmul@f2^0,c
  2568   0009BA  0E10               	movlw	16
  2569   0009BC  6E11               	movwf	(___ftmul@f2+1)^0,c
  2570   0009BE  0E41               	movlw	65
  2571   0009C0  6E12               	movwf	(___ftmul@f2+2)^0,c
  2572   0009C2  0100               	movlb	0	; () banked
  2573   0009C4  5186               	movf	_Temp& (0+255),w,b
  2574   0009C6  ECC4  F00A         	call	___lbtoft
  2575   0009CA  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  2576   0009CE  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  2577   0009D2  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  2578   0009D6  EC9B  F006         	call	___ftmul	;wreg free
  2579   0009DA  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2580   0009DE  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2581   0009E2  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2582   0009E6  EC15  F007         	call	___ftdiv	;wreg free
  2583   0009EA  C01C  F02B         	movff	?___ftdiv,___ftadd@f1
  2584   0009EE  C01D  F02C         	movff	?___ftdiv+1,___ftadd@f1+1
  2585   0009F2  C01E  F02D         	movff	?___ftdiv+2,___ftadd@f1+2
  2586   0009F6  EC21  F005         	call	___ftadd	;wreg free
  2587   0009FA  C02B  F037         	movff	?___ftadd,___fttol@f1
  2588   0009FE  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  2589   000A02  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  2590   000A06  EC88  F007         	call	___fttol	;wreg free
  2591   000A0A  C037  F048         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  2592   000A0E  C038  F049         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  2593                           
  2594                           ;LAB05.c: 310: sprintf(buffer_LCD_row_1, "T: %i F",temp_converted);
  2595   000A12  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  2596   000A16  0E48               	movlw	low STR_10
  2597   000A18  6E0E               	movwf	sprintf@f^0,c
  2598   000A1A  C048  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  2599   000A1E  C049  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  2600   000A22  ECF5  F005         	call	_sprintf	;wreg free
  2601                           
  2602                           ;LAB05.c: 311: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  2603   000A26  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  2604   000A2A  0E37               	movlw	low STR_5
  2605   000A2C  6E0E               	movwf	sprintf@f^0,c
  2606   000A2E  C085  F00F         	movff	_Hum,?_sprintf+2
  2607   000A32  6A10               	clrf	(?_sprintf+3)^0,c
  2608   000A34  0E00               	movlw	0
  2609   000A36  6E12               	movwf	(?_sprintf+5)^0,c
  2610   000A38  0E25               	movlw	37
  2611   000A3A  6E11               	movwf	(?_sprintf+4)^0,c
  2612   000A3C  ECF5  F005         	call	_sprintf	;wreg free
  2613   000A40  0012               	return	
  2614   000A42                     __end_of_choose_scale_temperature_and_fill_buffers:
  2615                           	callstack 0
  2616                           
  2617 ;; *************** function _sprintf *****************
  2618 ;; Defined at:
  2619 ;;		line 505 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/doprnt.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  sp              1   12[COMRAM] PTR unsigned char 
  2622 ;;		 -> send_temperature_RS232@buffer_RS232(12), main@buffer_LCD_row_2(17), main@buffer_LCD_row_1(17), 
  2623 ;;  f               1   13[COMRAM] PTR const unsigned char 
  2624 ;;		 -> STR_12(9), STR_11(9), STR_10(8), STR_9(9), 
  2625 ;;		 -> STR_8(9), STR_7(9), STR_6(8), STR_5(9), 
  2626 ;;		 -> STR_4(8), 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  tmpval          4    0        struct .
  2629 ;;  cp              3    0        PTR const unsigned char 
  2630 ;;  val             2   22[COMRAM] unsigned int 
  2631 ;;  len             2    0        unsigned int 
  2632 ;;  c               1   24[COMRAM] unsigned char 
  2633 ;;  ap              1   21[COMRAM] PTR void [1]
  2634 ;;		 -> ?_sprintf(2), 
  2635 ;;  prec            1   20[COMRAM] char 
  2636 ;;  flag            1   19[COMRAM] unsigned char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  2   12[COMRAM] int 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2646 ;;      Params:         6       0       0       0       0       0       0       0       0
  2647 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2648 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2649 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2650 ;;Total ram usage:       13 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 2
  2653 ;; This function calls:
  2654 ;;		___lwdiv
  2655 ;;		___lwmod
  2656 ;; This function is called by:
  2657 ;;		_choose_scale_temperature_and_fill_buffers
  2658 ;;		_send_temperature_RS232
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text18
  2663   000BEA                     __ptext18:
  2664                           	callstack 0
  2665   000BEA                     _sprintf:
  2666                           	callstack 27
  2667                           
  2668                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2669                           
  2670                           ;incstack = 0
  2671   000BEA  0E0F               	movlw	low (?_sprintf+2)
  2672   000BEC  6E16               	movwf	sprintf@ap^0,c
  2673                           
  2674                           ;doprnt.c: 553: while((c = *f++)) {
  2675   000BEE  D091               	goto	u1360
  2676   000BF0                     l2088:
  2677                           
  2678                           ;doprnt.c: 555: if(c != '%')
  2679   000BF0  0E25               	movlw	37
  2680   000BF2  1819               	xorwf	sprintf@c^0,w,c
  2681   000BF4  B4D8               	btfsc	status,2,c
  2682   000BF6  D007               	goto	l2094
  2683   000BF8                     u1310:
  2684                           
  2685                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2686   000BF8  500D               	movf	sprintf@sp^0,w,c
  2687   000BFA  6ED9               	movwf	fsr2l,c
  2688   000BFC  6ADA               	clrf	fsr2h,c
  2689   000BFE  C019  FFDF         	movff	sprintf@c,indf2
  2690   000C02  2A0D               	incf	sprintf@sp^0,f,c
  2691                           
  2692                           ;doprnt.c: 559: continue;
  2693   000C04  D086               	goto	u1360
  2694   000C06                     l2094:
  2695                           
  2696                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2697   000C06  0E00               	movlw	0
  2698   000C08  6E14               	movwf	sprintf@flag^0,c
  2699                           
  2700                           ;doprnt.c: 661: switch(c = *f++) {
  2701   000C0A  D008               	goto	l2106
  2702   000C0C                     l2096:
  2703                           
  2704                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  2705   000C0C  5016               	movf	sprintf@ap^0,w,c
  2706   000C0E  6ED9               	movwf	fsr2l,c
  2707   000C10  6ADA               	clrf	fsr2h,c
  2708   000C12  50DF               	movf	indf2,w,c
  2709   000C14  6E19               	movwf	sprintf@c^0,c
  2710   000C16  0E02               	movlw	2
  2711   000C18  2616               	addwf	sprintf@ap^0,f,c
  2712   000C1A  D7EE               	goto	u1310
  2713   000C1C                     l2106:
  2714   000C1C  2A0E               	incf	sprintf@f^0,f,c
  2715   000C1E  040E               	decf	sprintf@f^0,w,c
  2716   000C20  6E13               	movwf	??_sprintf^0,c
  2717   000C22  C013  FFF6         	movff	??_sprintf,tblptrl
  2718   000C26                     	if	1	;There is more than 1 active tblptr byte
  2719   000C26  0E08               	movlw	high __smallconst
  2720   000C28  6EF7               	movwf	tblptrh,c
  2721   000C2A                     	endif
  2722   000C2A                     	if	0	;tblptru may be non-zero
  2723   000C2A                     	endif
  2724   000C2A                     	if	0	;tblptru may be non-zero
  2725   000C2A                     	endif
  2726   000C2A  0008               	tblrd		*
  2727   000C2C  CFF5 F019          	movff	tablat,sprintf@c
  2728   000C30  5019               	movf	sprintf@c^0,w,c
  2729                           
  2730                           ; Switch size 1, requested type "simple"
  2731                           ; Number of cases is 4, Range of values is 0 to 105
  2732                           ; switch strategies available:
  2733                           ; Name         Instructions Cycles
  2734                           ; simple_byte           13     7 (average)
  2735                           ;	Chosen strategy is simple_byte
  2736   000C32  0A00               	xorlw	0	; case 0
  2737   000C34  B4D8               	btfsc	status,2,c
  2738   000C36  D07A               	goto	u1370
  2739   000C38  0A63               	xorlw	99	; case 99
  2740   000C3A  B4D8               	btfsc	status,2,c
  2741   000C3C  D7E7               	goto	l2096
  2742   000C3E  0A07               	xorlw	7	; case 100
  2743   000C40  B4D8               	btfsc	status,2,c
  2744   000C42  D003               	goto	l2108
  2745   000C44  0A0D               	xorlw	13	; case 105
  2746   000C46  A4D8               	btfss	status,2,c
  2747   000C48  D7D7               	goto	u1310
  2748   000C4A                     l2108:
  2749                           
  2750                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2751   000C4A  5016               	movf	sprintf@ap^0,w,c
  2752   000C4C  6ED9               	movwf	fsr2l,c
  2753   000C4E  6ADA               	clrf	fsr2h,c
  2754   000C50  CFDE F017          	movff	postinc2,sprintf@val
  2755   000C54  CFDD F018          	movff	postdec2,sprintf@val+1
  2756   000C58  0E02               	movlw	2
  2757   000C5A  2616               	addwf	sprintf@ap^0,f,c
  2758                           
  2759                           ;doprnt.c: 1287: if((int)val < 0) {
  2760   000C5C  AE18               	btfss	(sprintf@val+1)^0,7,c
  2761   000C5E  D006               	goto	l2118
  2762                           
  2763                           ;doprnt.c: 1288: flag |= 0x03;
  2764   000C60  0E03               	movlw	3
  2765   000C62  1214               	iorwf	sprintf@flag^0,f,c
  2766                           
  2767                           ;doprnt.c: 1289: val = -val;
  2768   000C64  6C17               	negf	sprintf@val^0,c
  2769   000C66  1E18               	comf	(sprintf@val+1)^0,f,c
  2770   000C68  B0D8               	btfsc	status,0,c
  2771   000C6A  2A18               	incf	(sprintf@val+1)^0,f,c
  2772   000C6C                     l2118:
  2773                           
  2774                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2775   000C6C  0E01               	movlw	1
  2776   000C6E  6E19               	movwf	sprintf@c^0,c
  2777   000C70                     l2124:
  2778                           
  2779                           ;doprnt.c: 1332: if(val < dpowers[c])
  2780   000C70  5019               	movf	sprintf@c^0,w,c
  2781   000C72  0D02               	mullw	2
  2782   000C74  50F3               	movf	243,w,c
  2783   000C76  0F01               	addlw	low _dpowers
  2784   000C78  6E13               	movwf	??_sprintf^0,c
  2785   000C7A  C013  FFF6         	movff	??_sprintf,tblptrl
  2786   000C7E                     	if	1	;There is more than 1 active tblptr byte
  2787   000C7E  0E08               	movlw	high __smallconst
  2788   000C80  6EF7               	movwf	tblptrh,c
  2789   000C82                     	endif
  2790   000C82                     	if	0	;tblptru may be non-zero
  2791   000C82                     	endif
  2792   000C82                     	if	0	;tblptru may be non-zero
  2793   000C82                     	endif
  2794   000C82  0009               	tblrd		*+
  2795   000C84  50F5               	movf	tablat,w,c
  2796   000C86  5C17               	subwf	sprintf@val^0,w,c
  2797   000C88  0009               	tblrd		*+
  2798   000C8A  50F5               	movf	tablat,w,c
  2799   000C8C  5818               	subwfb	(sprintf@val+1)^0,w,c
  2800   000C8E  A0D8               	btfss	status,0,c
  2801   000C90  D005               	goto	u1340
  2802   000C92  2A19               	incf	sprintf@c^0,f,c
  2803   000C94  0E05               	movlw	5
  2804   000C96  1819               	xorwf	sprintf@c^0,w,c
  2805   000C98  A4D8               	btfss	status,2,c
  2806   000C9A  D7EA               	goto	l2124
  2807   000C9C                     u1340:
  2808                           
  2809                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2810   000C9C  C014  F013         	movff	sprintf@flag,??_sprintf
  2811   000CA0  0E03               	movlw	3
  2812   000CA2  1613               	andwf	??_sprintf^0,f,c
  2813   000CA4  B4D8               	btfsc	status,2,c
  2814   000CA6  D006               	goto	l2138
  2815                           
  2816                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2817   000CA8  500D               	movf	sprintf@sp^0,w,c
  2818   000CAA  6ED9               	movwf	fsr2l,c
  2819   000CAC  6ADA               	clrf	fsr2h,c
  2820   000CAE  0E2D               	movlw	45
  2821   000CB0  6EDF               	movwf	indf2,c
  2822   000CB2  2A0D               	incf	sprintf@sp^0,f,c
  2823   000CB4                     l2138:
  2824                           
  2825                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2826   000CB4  C019  F015         	movff	sprintf@c,sprintf@prec
  2827                           
  2828                           ;doprnt.c: 1500: while(prec--) {
  2829   000CB8  D028               	goto	l2146
  2830   000CBA                     l2140:
  2831                           
  2832                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2833   000CBA  5015               	movf	sprintf@prec^0,w,c
  2834   000CBC  0D02               	mullw	2
  2835   000CBE  50F3               	movf	243,w,c
  2836   000CC0  0F01               	addlw	low _dpowers
  2837   000CC2  6E13               	movwf	??_sprintf^0,c
  2838   000CC4  C013  FFF6         	movff	??_sprintf,tblptrl
  2839   000CC8                     	if	1	;There is more than 1 active tblptr byte
  2840   000CC8  0E08               	movlw	high __smallconst
  2841   000CCA  6EF7               	movwf	tblptrh,c
  2842   000CCC                     	endif
  2843   000CCC                     	if	0	;tblptru may be non-zero
  2844   000CCC                     	endif
  2845   000CCC                     	if	0	;tblptru may be non-zero
  2846   000CCC                     	endif
  2847   000CCC  0009               	tblrd		*+
  2848   000CCE  CFF5 F003          	movff	tablat,___lwdiv@divisor
  2849   000CD2  000A               	tblrd		*-
  2850   000CD4  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  2851   000CD8  C017  F001         	movff	sprintf@val,___lwdiv@dividend
  2852   000CDC  C018  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  2853   000CE0  ECFA  F009         	call	___lwdiv	;wreg free
  2854   000CE4  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2855   000CE8  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2856   000CEC  0E00               	movlw	0
  2857   000CEE  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  2858   000CF0  0E0A               	movlw	10
  2859   000CF2  6E0A               	movwf	___lwmod@divisor^0,c
  2860   000CF4  EC6E  F00A         	call	___lwmod	;wreg free
  2861   000CF8  5008               	movf	?___lwmod^0,w,c
  2862   000CFA  0F30               	addlw	48
  2863   000CFC  6E19               	movwf	sprintf@c^0,c
  2864                           
  2865                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2866   000CFE  500D               	movf	sprintf@sp^0,w,c
  2867   000D00  6ED9               	movwf	fsr2l,c
  2868   000D02  6ADA               	clrf	fsr2h,c
  2869   000D04  C019  FFDF         	movff	sprintf@c,indf2
  2870   000D08  2A0D               	incf	sprintf@sp^0,f,c
  2871   000D0A                     l2146:
  2872   000D0A  0615               	decf	sprintf@prec^0,f,c
  2873   000D0C  2815               	incf	sprintf@prec^0,w,c
  2874   000D0E  A4D8               	btfss	status,2,c
  2875   000D10  D7D4               	goto	l2140
  2876   000D12                     u1360:
  2877   000D12  2A0E               	incf	sprintf@f^0,f,c
  2878   000D14  040E               	decf	sprintf@f^0,w,c
  2879   000D16  6E13               	movwf	??_sprintf^0,c
  2880   000D18  C013  FFF6         	movff	??_sprintf,tblptrl
  2881   000D1C                     	if	1	;There is more than 1 active tblptr byte
  2882   000D1C  0E08               	movlw	high __smallconst
  2883   000D1E  6EF7               	movwf	tblptrh,c
  2884   000D20                     	endif
  2885   000D20                     	if	0	;tblptru may be non-zero
  2886   000D20                     	endif
  2887   000D20                     	if	0	;tblptru may be non-zero
  2888   000D20                     	endif
  2889   000D20  0008               	tblrd		*
  2890   000D22  CFF5 F019          	movff	tablat,sprintf@c
  2891   000D26  5019               	movf	sprintf@c^0,w,c
  2892   000D28  A4D8               	btfss	status,2,c
  2893   000D2A  D762               	goto	l2088
  2894   000D2C                     u1370:
  2895                           
  2896                           ;doprnt.c: 1564: *sp = 0;
  2897   000D2C  500D               	movf	sprintf@sp^0,w,c
  2898   000D2E  6ED9               	movwf	fsr2l,c
  2899   000D30  6ADA               	clrf	fsr2h,c
  2900   000D32  6ADF               	clrf	indf2,c
  2901   000D34  0012               	return		;funcret
  2902   000D36                     __end_of_sprintf:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function ___lwmod *****************
  2906 ;; Defined at:
  2907 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwmod.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  dividend        2    7[COMRAM] unsigned int 
  2910 ;;  divisor         2    9[COMRAM] unsigned int 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  counter         1   11[COMRAM] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  2    7[COMRAM] unsigned int 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2922 ;;      Params:         4       0       0       0       0       0       0       0       0
  2923 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2925 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2926 ;;Total ram usage:        5 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 1
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_sprintf
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text19
  2937   0014DC                     __ptext19:
  2938                           	callstack 0
  2939   0014DC                     ___lwmod:
  2940                           	callstack 27
  2941                           
  2942                           ;incstack = 0
  2943   0014DC  500A               	movf	___lwmod@divisor^0,w,c
  2944   0014DE  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  2945   0014E0  B4D8               	btfsc	status,2,c
  2946   0014E2  D018               	goto	l874
  2947   0014E4  0E01               	movlw	1
  2948   0014E6  6E0C               	movwf	___lwmod@counter^0,c
  2949   0014E8  D004               	goto	l1996
  2950   0014EA                     l1994:
  2951   0014EA  90D8               	bcf	status,0,c
  2952   0014EC  360A               	rlcf	___lwmod@divisor^0,f,c
  2953   0014EE  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  2954   0014F0  2A0C               	incf	___lwmod@counter^0,f,c
  2955   0014F2                     l1996:
  2956   0014F2  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  2957   0014F4  D7FA               	goto	l1994
  2958   0014F6                     u1190:
  2959   0014F6  500A               	movf	___lwmod@divisor^0,w,c
  2960   0014F8  5C08               	subwf	___lwmod@dividend^0,w,c
  2961   0014FA  500B               	movf	(___lwmod@divisor+1)^0,w,c
  2962   0014FC  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  2963   0014FE  A0D8               	btfss	status,0,c
  2964   001500  D004               	goto	l2002
  2965   001502  500A               	movf	___lwmod@divisor^0,w,c
  2966   001504  5E08               	subwf	___lwmod@dividend^0,f,c
  2967   001506  500B               	movf	(___lwmod@divisor+1)^0,w,c
  2968   001508  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  2969   00150A                     l2002:
  2970   00150A  90D8               	bcf	status,0,c
  2971   00150C  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  2972   00150E  320A               	rrcf	___lwmod@divisor^0,f,c
  2973   001510  2E0C               	decfsz	___lwmod@counter^0,f,c
  2974   001512  D7F1               	goto	u1190
  2975   001514                     l874:
  2976   001514  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2977   001518  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2978   00151C  0012               	return		;funcret
  2979   00151E                     __end_of___lwmod:
  2980                           	callstack 0
  2981                           
  2982 ;; *************** function ___lwdiv *****************
  2983 ;; Defined at:
  2984 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwdiv.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  dividend        2    0[COMRAM] unsigned int 
  2987 ;;  divisor         2    2[COMRAM] unsigned int 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  quotient        2    4[COMRAM] unsigned int 
  2990 ;;  counter         1    6[COMRAM] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  2    0[COMRAM] unsigned int 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3000 ;;      Params:         4       0       0       0       0       0       0       0       0
  3001 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3003 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3004 ;;Total ram usage:        7 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 1
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_sprintf
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text20
  3015   0013F4                     __ptext20:
  3016                           	callstack 0
  3017   0013F4                     ___lwdiv:
  3018                           	callstack 27
  3019                           
  3020                           ;incstack = 0
  3021   0013F4  0E00               	movlw	0
  3022   0013F6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3023   0013F8  0E00               	movlw	0
  3024   0013FA  6E05               	movwf	___lwdiv@quotient^0,c
  3025   0013FC  5003               	movf	___lwdiv@divisor^0,w,c
  3026   0013FE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3027   001400  B4D8               	btfsc	status,2,c
  3028   001402  D01C               	goto	l864
  3029   001404  0E01               	movlw	1
  3030   001406  6E07               	movwf	___lwdiv@counter^0,c
  3031   001408  D004               	goto	l1976
  3032   00140A                     l1974:
  3033   00140A  90D8               	bcf	status,0,c
  3034   00140C  3603               	rlcf	___lwdiv@divisor^0,f,c
  3035   00140E  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3036   001410  2A07               	incf	___lwdiv@counter^0,f,c
  3037   001412                     l1976:
  3038   001412  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3039   001414  D7FA               	goto	l1974
  3040   001416                     u1160:
  3041   001416  90D8               	bcf	status,0,c
  3042   001418  3605               	rlcf	___lwdiv@quotient^0,f,c
  3043   00141A  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3044   00141C  5003               	movf	___lwdiv@divisor^0,w,c
  3045   00141E  5C01               	subwf	___lwdiv@dividend^0,w,c
  3046   001420  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3047   001422  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3048   001424  A0D8               	btfss	status,0,c
  3049   001426  D005               	goto	l1986
  3050   001428  5003               	movf	___lwdiv@divisor^0,w,c
  3051   00142A  5E01               	subwf	___lwdiv@dividend^0,f,c
  3052   00142C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3053   00142E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3054   001430  8005               	bsf	___lwdiv@quotient^0,0,c
  3055   001432                     l1986:
  3056   001432  90D8               	bcf	status,0,c
  3057   001434  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3058   001436  3203               	rrcf	___lwdiv@divisor^0,f,c
  3059   001438  2E07               	decfsz	___lwdiv@counter^0,f,c
  3060   00143A  D7ED               	goto	u1160
  3061   00143C                     l864:
  3062   00143C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3063   001440  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3064   001444  0012               	return		;funcret
  3065   001446                     __end_of___lwdiv:
  3066                           	callstack 0
  3067                           
  3068 ;; *************** function ___lbtoft *****************
  3069 ;; Defined at:
  3070 ;;		line 27 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbtoft.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  c               1    wreg     unsigned char 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  c               1   11[COMRAM] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  3    8[COMRAM] float 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 3F/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3084 ;;      Params:         3       0       0       0       0       0       0       0       0
  3085 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3087 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3088 ;;Total ram usage:        4 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 2
  3091 ;; This function calls:
  3092 ;;		___ftpack
  3093 ;; This function is called by:
  3094 ;;		_choose_scale_temperature_and_fill_buffers
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text21
  3099   001588                     __ptext21:
  3100                           	callstack 0
  3101   001588                     ___lbtoft:
  3102                           	callstack 27
  3103                           
  3104                           ;incstack = 0
  3105                           ;___lbtoft@c stored from wreg
  3106   001588  6E0C               	movwf	___lbtoft@c^0,c
  3107   00158A  500C               	movf	___lbtoft@c^0,w,c
  3108   00158C  6E01               	movwf	___ftpack@arg^0,c
  3109   00158E  6A02               	clrf	(___ftpack@arg+1)^0,c
  3110   001590  6A03               	clrf	(___ftpack@arg+2)^0,c
  3111   001592  0E8E               	movlw	142
  3112   001594  6E04               	movwf	___ftpack@exp^0,c
  3113   001596  0E00               	movlw	0
  3114   001598  6E05               	movwf	___ftpack@sign^0,c
  3115   00159A  ECF1  F007         	call	___ftpack	;wreg free
  3116   00159E  C001  F009         	movff	?___ftpack,?___lbtoft
  3117   0015A2  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  3118   0015A6  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  3119   0015AA  0012               	return		;funcret
  3120   0015AC                     __end_of___lbtoft:
  3121                           	callstack 0
  3122                           
  3123 ;; *************** function ___fttol *****************
  3124 ;; Defined at:
  3125 ;;		line 44 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/fttol.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  f1              3   54[COMRAM] float 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  lval            4   64[COMRAM] unsigned long 
  3130 ;;  exp1            1   68[COMRAM] unsigned char 
  3131 ;;  sign1           1   63[COMRAM] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  4   54[COMRAM] long 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3141 ;;      Params:         4       0       0       0       0       0       0       0       0
  3142 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3143 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3144 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3145 ;;Total ram usage:       15 bytes
  3146 ;; Hardware stack levels used: 1
  3147 ;; Hardware stack levels required when called: 1
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_choose_scale_temperature_and_fill_buffers
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text22
  3156   000F10                     __ptext22:
  3157                           	callstack 0
  3158   000F10                     ___fttol:
  3159                           	callstack 28
  3160                           
  3161                           ;incstack = 0
  3162   000F10  C039  F03B         	movff	___fttol@f1+2,??___fttol
  3163   000F14  6A3C               	clrf	(??___fttol+1)^0,c
  3164   000F16  6A3D               	clrf	(??___fttol+2)^0,c
  3165   000F18  3438               	rlcf	(___fttol@f1+1)^0,w,c
  3166   000F1A  363B               	rlcf	??___fttol^0,f,c
  3167   000F1C  E301               	bnc	u1711
  3168   000F1E  803C               	bsf	(??___fttol+1)^0,0,c
  3169   000F20                     u1711:
  3170   000F20  503B               	movf	??___fttol^0,w,c
  3171   000F22  6E45               	movwf	___fttol@exp1^0,c
  3172   000F24  5045               	movf	___fttol@exp1^0,w,c
  3173   000F26  A4D8               	btfss	status,2,c
  3174   000F28  D009               	goto	l2330
  3175   000F2A                     u1720:
  3176   000F2A  0E00               	movlw	0
  3177   000F2C  6E37               	movwf	?___fttol^0,c
  3178   000F2E  0E00               	movlw	0
  3179   000F30  6E38               	movwf	(?___fttol+1)^0,c
  3180   000F32  0E00               	movlw	0
  3181   000F34  6E39               	movwf	(?___fttol+2)^0,c
  3182   000F36  0E00               	movlw	0
  3183   000F38  6E3A               	movwf	(?___fttol+3)^0,c
  3184   000F3A  0012               	return	
  3185   000F3C                     l2330:
  3186   000F3C  0E17               	movlw	23
  3187   000F3E  6E3B               	movwf	??___fttol^0,c
  3188   000F40  C037  F03C         	movff	___fttol@f1,??___fttol+1
  3189   000F44  C038  F03D         	movff	___fttol@f1+1,??___fttol+2
  3190   000F48  C039  F03E         	movff	___fttol@f1+2,??___fttol+3
  3191   000F4C  283B               	incf	??___fttol^0,w,c
  3192   000F4E  6E3F               	movwf	(??___fttol+4)^0,c
  3193   000F50  D004               	goto	u1730
  3194   000F52                     u1735:
  3195   000F52  90D8               	bcf	status,0,c
  3196   000F54  323E               	rrcf	(??___fttol+3)^0,f,c
  3197   000F56  323D               	rrcf	(??___fttol+2)^0,f,c
  3198   000F58  323C               	rrcf	(??___fttol+1)^0,f,c
  3199   000F5A                     u1730:
  3200   000F5A  2E3F               	decfsz	(??___fttol+4)^0,f,c
  3201   000F5C  D7FA               	goto	u1735
  3202   000F5E  503C               	movf	(??___fttol+1)^0,w,c
  3203   000F60  6E40               	movwf	___fttol@sign1^0,c
  3204   000F62  8E38               	bsf	(___fttol@f1+1)^0,7,c
  3205   000F64  0EFF               	movlw	255
  3206   000F66  1637               	andwf	___fttol@f1^0,f,c
  3207   000F68  0EFF               	movlw	255
  3208   000F6A  1638               	andwf	(___fttol@f1+1)^0,f,c
  3209   000F6C  0E00               	movlw	0
  3210   000F6E  1639               	andwf	(___fttol@f1+2)^0,f,c
  3211   000F70  5037               	movf	___fttol@f1^0,w,c
  3212   000F72  6E41               	movwf	___fttol@lval^0,c
  3213   000F74  5038               	movf	(___fttol@f1+1)^0,w,c
  3214   000F76  6E42               	movwf	(___fttol@lval+1)^0,c
  3215   000F78  5039               	movf	(___fttol@f1+2)^0,w,c
  3216   000F7A  6E43               	movwf	(___fttol@lval+2)^0,c
  3217   000F7C  6A44               	clrf	(___fttol@lval+3)^0,c
  3218   000F7E  0E8E               	movlw	142
  3219   000F80  5E45               	subwf	___fttol@exp1^0,f,c
  3220   000F82  AE45               	btfss	___fttol@exp1^0,7,c
  3221   000F84  D00D               	goto	l2352
  3222   000F86  5045               	movf	___fttol@exp1^0,w,c
  3223   000F88  0A80               	xorlw	128
  3224   000F8A  0F8F               	addlw	143
  3225   000F8C  A0D8               	btfss	status,0,c
  3226   000F8E  D7CD               	goto	u1720
  3227   000F90                     l2348:
  3228   000F90  90D8               	bcf	status,0,c
  3229   000F92  3244               	rrcf	(___fttol@lval+3)^0,f,c
  3230   000F94  3243               	rrcf	(___fttol@lval+2)^0,f,c
  3231   000F96  3242               	rrcf	(___fttol@lval+1)^0,f,c
  3232   000F98  3241               	rrcf	___fttol@lval^0,f,c
  3233   000F9A  3E45               	incfsz	___fttol@exp1^0,f,c
  3234   000F9C  D7F9               	goto	l2348
  3235   000F9E  D00D               	goto	u1770
  3236   000FA0                     l2352:
  3237   000FA0  0E17               	movlw	23
  3238   000FA2  6445               	cpfsgt	___fttol@exp1^0,c
  3239   000FA4  D007               	goto	l2360
  3240   000FA6  D7C1               	goto	u1720
  3241   000FA8                     l2358:
  3242   000FA8  90D8               	bcf	status,0,c
  3243   000FAA  3641               	rlcf	___fttol@lval^0,f,c
  3244   000FAC  3642               	rlcf	(___fttol@lval+1)^0,f,c
  3245   000FAE  3643               	rlcf	(___fttol@lval+2)^0,f,c
  3246   000FB0  3644               	rlcf	(___fttol@lval+3)^0,f,c
  3247   000FB2  0645               	decf	___fttol@exp1^0,f,c
  3248   000FB4                     l2360:
  3249   000FB4  5045               	movf	___fttol@exp1^0,w,c
  3250   000FB6  A4D8               	btfss	status,2,c
  3251   000FB8  D7F7               	goto	l2358
  3252   000FBA                     u1770:
  3253   000FBA  5040               	movf	___fttol@sign1^0,w,c
  3254   000FBC  B4D8               	btfsc	status,2,c
  3255   000FBE  D008               	goto	l2366
  3256   000FC0  1E44               	comf	(___fttol@lval+3)^0,f,c
  3257   000FC2  1E43               	comf	(___fttol@lval+2)^0,f,c
  3258   000FC4  1E42               	comf	(___fttol@lval+1)^0,f,c
  3259   000FC6  6C41               	negf	___fttol@lval^0,c
  3260   000FC8  0E00               	movlw	0
  3261   000FCA  2242               	addwfc	(___fttol@lval+1)^0,f,c
  3262   000FCC  2243               	addwfc	(___fttol@lval+2)^0,f,c
  3263   000FCE  2244               	addwfc	(___fttol@lval+3)^0,f,c
  3264   000FD0                     l2366:
  3265   000FD0  C041  F037         	movff	___fttol@lval,?___fttol
  3266   000FD4  C042  F038         	movff	___fttol@lval+1,?___fttol+1
  3267   000FD8  C043  F039         	movff	___fttol@lval+2,?___fttol+2
  3268   000FDC  C044  F03A         	movff	___fttol@lval+3,?___fttol+3
  3269   000FE0  0012               	return		;funcret
  3270   000FE2                     __end_of___fttol:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function ___ftmul *****************
  3274 ;; Defined at:
  3275 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftmul.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  f1              3   12[COMRAM] float 
  3278 ;;  f2              3   15[COMRAM] float 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3281 ;;  sign            1   26[COMRAM] unsigned char 
  3282 ;;  cntr            1   25[COMRAM] unsigned char 
  3283 ;;  exp             1   21[COMRAM] unsigned char 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  3   12[COMRAM] float 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3293 ;;      Params:         6       0       0       0       0       0       0       0       0
  3294 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3295 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3296 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3297 ;;Total ram usage:       15 bytes
  3298 ;; Hardware stack levels used: 1
  3299 ;; Hardware stack levels required when called: 2
  3300 ;; This function calls:
  3301 ;;		___ftpack
  3302 ;; This function is called by:
  3303 ;;		_choose_scale_temperature_and_fill_buffers
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text23
  3308   000D36                     __ptext23:
  3309                           	callstack 0
  3310   000D36                     ___ftmul:
  3311                           	callstack 27
  3312                           
  3313                           ;incstack = 0
  3314   000D36  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3315   000D3A  6A14               	clrf	(??___ftmul+1)^0,c
  3316   000D3C  6A15               	clrf	(??___ftmul+2)^0,c
  3317   000D3E  340E               	rlcf	(___ftmul@f1+1)^0,w,c
  3318   000D40  3613               	rlcf	??___ftmul^0,f,c
  3319   000D42  E301               	bnc	u1651
  3320   000D44  8014               	bsf	(??___ftmul+1)^0,0,c
  3321   000D46                     u1651:
  3322   000D46  5013               	movf	??___ftmul^0,w,c
  3323   000D48  6E16               	movwf	___ftmul@exp^0,c
  3324   000D4A  5016               	movf	___ftmul@exp^0,w,c
  3325   000D4C  A4D8               	btfss	status,2,c
  3326   000D4E  D007               	goto	l2282
  3327   000D50  0E00               	movlw	0
  3328   000D52  6E0D               	movwf	?___ftmul^0,c
  3329   000D54  0E00               	movlw	0
  3330   000D56  6E0E               	movwf	(?___ftmul+1)^0,c
  3331   000D58  0E00               	movlw	0
  3332   000D5A  6E0F               	movwf	(?___ftmul+2)^0,c
  3333   000D5C  0012               	return	
  3334   000D5E                     l2282:
  3335   000D5E  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3336   000D62  6A14               	clrf	(??___ftmul+1)^0,c
  3337   000D64  6A15               	clrf	(??___ftmul+2)^0,c
  3338   000D66  3411               	rlcf	(___ftmul@f2+1)^0,w,c
  3339   000D68  3613               	rlcf	??___ftmul^0,f,c
  3340   000D6A  E301               	bnc	u1671
  3341   000D6C  8014               	bsf	(??___ftmul+1)^0,0,c
  3342   000D6E                     u1671:
  3343   000D6E  5013               	movf	??___ftmul^0,w,c
  3344   000D70  6E1B               	movwf	___ftmul@sign^0,c
  3345   000D72  501B               	movf	___ftmul@sign^0,w,c
  3346   000D74  A4D8               	btfss	status,2,c
  3347   000D76  D007               	goto	l2288
  3348   000D78  0E00               	movlw	0
  3349   000D7A  6E0D               	movwf	?___ftmul^0,c
  3350   000D7C  0E00               	movlw	0
  3351   000D7E  6E0E               	movwf	(?___ftmul+1)^0,c
  3352   000D80  0E00               	movlw	0
  3353   000D82  6E0F               	movwf	(?___ftmul+2)^0,c
  3354   000D84  0012               	return	
  3355   000D86                     l2288:
  3356   000D86  501B               	movf	___ftmul@sign^0,w,c
  3357   000D88  0F7B               	addlw	123
  3358   000D8A  2616               	addwf	___ftmul@exp^0,f,c
  3359   000D8C  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3360   000D90  5012               	movf	(___ftmul@f2+2)^0,w,c
  3361   000D92  1A1B               	xorwf	___ftmul@sign^0,f,c
  3362   000D94  0E80               	movlw	128
  3363   000D96  161B               	andwf	___ftmul@sign^0,f,c
  3364   000D98  8E0E               	bsf	(___ftmul@f1+1)^0,7,c
  3365   000D9A  8E11               	bsf	(___ftmul@f2+1)^0,7,c
  3366   000D9C  0EFF               	movlw	255
  3367   000D9E  1610               	andwf	___ftmul@f2^0,f,c
  3368   000DA0  0EFF               	movlw	255
  3369   000DA2  1611               	andwf	(___ftmul@f2+1)^0,f,c
  3370   000DA4  0E00               	movlw	0
  3371   000DA6  1612               	andwf	(___ftmul@f2+2)^0,f,c
  3372   000DA8  0E00               	movlw	0
  3373   000DAA  6E17               	movwf	___ftmul@f3_as_product^0,c
  3374   000DAC  0E00               	movlw	0
  3375   000DAE  6E18               	movwf	(___ftmul@f3_as_product+1)^0,c
  3376   000DB0  0E00               	movlw	0
  3377   000DB2  6E19               	movwf	(___ftmul@f3_as_product+2)^0,c
  3378   000DB4  0E07               	movlw	7
  3379   000DB6  6E1A               	movwf	___ftmul@cntr^0,c
  3380   000DB8                     l2302:
  3381   000DB8  A00D               	btfss	___ftmul@f1^0,0,c
  3382   000DBA  D006               	goto	l2306
  3383   000DBC  5010               	movf	___ftmul@f2^0,w,c
  3384   000DBE  2617               	addwf	___ftmul@f3_as_product^0,f,c
  3385   000DC0  5011               	movf	(___ftmul@f2+1)^0,w,c
  3386   000DC2  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  3387   000DC4  5012               	movf	(___ftmul@f2+2)^0,w,c
  3388   000DC6  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  3389   000DC8                     l2306:
  3390   000DC8  90D8               	bcf	status,0,c
  3391   000DCA  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  3392   000DCC  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  3393   000DCE  320D               	rrcf	___ftmul@f1^0,f,c
  3394   000DD0  90D8               	bcf	status,0,c
  3395   000DD2  3610               	rlcf	___ftmul@f2^0,f,c
  3396   000DD4  3611               	rlcf	(___ftmul@f2+1)^0,f,c
  3397   000DD6  3612               	rlcf	(___ftmul@f2+2)^0,f,c
  3398   000DD8  2E1A               	decfsz	___ftmul@cntr^0,f,c
  3399   000DDA  D7EE               	goto	l2302
  3400   000DDC  0E09               	movlw	9
  3401   000DDE  6E1A               	movwf	___ftmul@cntr^0,c
  3402   000DE0                     l2312:
  3403   000DE0  A00D               	btfss	___ftmul@f1^0,0,c
  3404   000DE2  D006               	goto	l2316
  3405   000DE4  5010               	movf	___ftmul@f2^0,w,c
  3406   000DE6  2617               	addwf	___ftmul@f3_as_product^0,f,c
  3407   000DE8  5011               	movf	(___ftmul@f2+1)^0,w,c
  3408   000DEA  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  3409   000DEC  5012               	movf	(___ftmul@f2+2)^0,w,c
  3410   000DEE  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  3411   000DF0                     l2316:
  3412   000DF0  90D8               	bcf	status,0,c
  3413   000DF2  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  3414   000DF4  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  3415   000DF6  320D               	rrcf	___ftmul@f1^0,f,c
  3416   000DF8  90D8               	bcf	status,0,c
  3417   000DFA  3219               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  3418   000DFC  3218               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  3419   000DFE  3217               	rrcf	___ftmul@f3_as_product^0,f,c
  3420   000E00  2E1A               	decfsz	___ftmul@cntr^0,f,c
  3421   000E02  D7EE               	goto	l2312
  3422   000E04  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3423   000E08  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3424   000E0C  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3425   000E10  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3426   000E14  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3427   000E18  ECF1  F007         	call	___ftpack	;wreg free
  3428   000E1C  C001  F00D         	movff	?___ftpack,?___ftmul
  3429   000E20  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3430   000E24  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3431   000E28  0012               	return		;funcret
  3432   000E2A                     __end_of___ftmul:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function ___ftdiv *****************
  3436 ;; Defined at:
  3437 ;;		line 54 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftdiv.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  f1              3   27[COMRAM] float 
  3440 ;;  f2              3   30[COMRAM] float 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  f3              3   37[COMRAM] float 
  3443 ;;  sign            1   41[COMRAM] unsigned char 
  3444 ;;  exp             1   40[COMRAM] unsigned char 
  3445 ;;  cntr            1   36[COMRAM] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  3   27[COMRAM] float 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3455 ;;      Params:         6       0       0       0       0       0       0       0       0
  3456 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3457 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3458 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3459 ;;Total ram usage:       15 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 2
  3462 ;; This function calls:
  3463 ;;		___ftpack
  3464 ;; This function is called by:
  3465 ;;		_choose_scale_temperature_and_fill_buffers
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text24
  3470   000E2A                     __ptext24:
  3471                           	callstack 0
  3472   000E2A                     ___ftdiv:
  3473                           	callstack 27
  3474                           
  3475                           ;incstack = 0
  3476   000E2A  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  3477   000E2E  6A23               	clrf	(??___ftdiv+1)^0,c
  3478   000E30  6A24               	clrf	(??___ftdiv+2)^0,c
  3479   000E32  341D               	rlcf	(___ftdiv@f1+1)^0,w,c
  3480   000E34  3622               	rlcf	??___ftdiv^0,f,c
  3481   000E36  E301               	bnc	u1601
  3482   000E38  8023               	bsf	(??___ftdiv+1)^0,0,c
  3483   000E3A                     u1601:
  3484   000E3A  5022               	movf	??___ftdiv^0,w,c
  3485   000E3C  6E29               	movwf	___ftdiv@exp^0,c
  3486   000E3E  5029               	movf	___ftdiv@exp^0,w,c
  3487   000E40  A4D8               	btfss	status,2,c
  3488   000E42  D007               	goto	l2236
  3489   000E44  0E00               	movlw	0
  3490   000E46  6E1C               	movwf	?___ftdiv^0,c
  3491   000E48  0E00               	movlw	0
  3492   000E4A  6E1D               	movwf	(?___ftdiv+1)^0,c
  3493   000E4C  0E00               	movlw	0
  3494   000E4E  6E1E               	movwf	(?___ftdiv+2)^0,c
  3495   000E50  0012               	return	
  3496   000E52                     l2236:
  3497   000E52  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  3498   000E56  6A23               	clrf	(??___ftdiv+1)^0,c
  3499   000E58  6A24               	clrf	(??___ftdiv+2)^0,c
  3500   000E5A  3420               	rlcf	(___ftdiv@f2+1)^0,w,c
  3501   000E5C  3622               	rlcf	??___ftdiv^0,f,c
  3502   000E5E  E301               	bnc	u1621
  3503   000E60  8023               	bsf	(??___ftdiv+1)^0,0,c
  3504   000E62                     u1621:
  3505   000E62  5022               	movf	??___ftdiv^0,w,c
  3506   000E64  6E2A               	movwf	___ftdiv@sign^0,c
  3507   000E66  502A               	movf	___ftdiv@sign^0,w,c
  3508   000E68  A4D8               	btfss	status,2,c
  3509   000E6A  D007               	goto	l2242
  3510   000E6C  0E00               	movlw	0
  3511   000E6E  6E1C               	movwf	?___ftdiv^0,c
  3512   000E70  0E00               	movlw	0
  3513   000E72  6E1D               	movwf	(?___ftdiv+1)^0,c
  3514   000E74  0E00               	movlw	0
  3515   000E76  6E1E               	movwf	(?___ftdiv+2)^0,c
  3516   000E78  0012               	return	
  3517   000E7A                     l2242:
  3518   000E7A  0E00               	movlw	0
  3519   000E7C  6E26               	movwf	___ftdiv@f3^0,c
  3520   000E7E  0E00               	movlw	0
  3521   000E80  6E27               	movwf	(___ftdiv@f3+1)^0,c
  3522   000E82  0E00               	movlw	0
  3523   000E84  6E28               	movwf	(___ftdiv@f3+2)^0,c
  3524   000E86  502A               	movf	___ftdiv@sign^0,w,c
  3525   000E88  0F89               	addlw	137
  3526   000E8A  5E29               	subwf	___ftdiv@exp^0,f,c
  3527   000E8C  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3528   000E90  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3529   000E92  1A2A               	xorwf	___ftdiv@sign^0,f,c
  3530   000E94  0E80               	movlw	128
  3531   000E96  162A               	andwf	___ftdiv@sign^0,f,c
  3532   000E98  8E1D               	bsf	(___ftdiv@f1+1)^0,7,c
  3533   000E9A  0EFF               	movlw	255
  3534   000E9C  161C               	andwf	___ftdiv@f1^0,f,c
  3535   000E9E  0EFF               	movlw	255
  3536   000EA0  161D               	andwf	(___ftdiv@f1+1)^0,f,c
  3537   000EA2  0E00               	movlw	0
  3538   000EA4  161E               	andwf	(___ftdiv@f1+2)^0,f,c
  3539   000EA6  8E20               	bsf	(___ftdiv@f2+1)^0,7,c
  3540   000EA8  0EFF               	movlw	255
  3541   000EAA  161F               	andwf	___ftdiv@f2^0,f,c
  3542   000EAC  0EFF               	movlw	255
  3543   000EAE  1620               	andwf	(___ftdiv@f2+1)^0,f,c
  3544   000EB0  0E00               	movlw	0
  3545   000EB2  1621               	andwf	(___ftdiv@f2+2)^0,f,c
  3546   000EB4  0E18               	movlw	24
  3547   000EB6  6E25               	movwf	___ftdiv@cntr^0,c
  3548   000EB8                     l2262:
  3549   000EB8  90D8               	bcf	status,0,c
  3550   000EBA  3626               	rlcf	___ftdiv@f3^0,f,c
  3551   000EBC  3627               	rlcf	(___ftdiv@f3+1)^0,f,c
  3552   000EBE  3628               	rlcf	(___ftdiv@f3+2)^0,f,c
  3553   000EC0  501F               	movf	___ftdiv@f2^0,w,c
  3554   000EC2  5C1C               	subwf	___ftdiv@f1^0,w,c
  3555   000EC4  5020               	movf	(___ftdiv@f2+1)^0,w,c
  3556   000EC6  581D               	subwfb	(___ftdiv@f1+1)^0,w,c
  3557   000EC8  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3558   000ECA  581E               	subwfb	(___ftdiv@f1+2)^0,w,c
  3559   000ECC  A0D8               	btfss	status,0,c
  3560   000ECE  D007               	goto	l726
  3561   000ED0  501F               	movf	___ftdiv@f2^0,w,c
  3562   000ED2  5E1C               	subwf	___ftdiv@f1^0,f,c
  3563   000ED4  5020               	movf	(___ftdiv@f2+1)^0,w,c
  3564   000ED6  5A1D               	subwfb	(___ftdiv@f1+1)^0,f,c
  3565   000ED8  5021               	movf	(___ftdiv@f2+2)^0,w,c
  3566   000EDA  5A1E               	subwfb	(___ftdiv@f1+2)^0,f,c
  3567   000EDC  8026               	bsf	___ftdiv@f3^0,0,c
  3568   000EDE                     l726:
  3569   000EDE  90D8               	bcf	status,0,c
  3570   000EE0  361C               	rlcf	___ftdiv@f1^0,f,c
  3571   000EE2  361D               	rlcf	(___ftdiv@f1+1)^0,f,c
  3572   000EE4  361E               	rlcf	(___ftdiv@f1+2)^0,f,c
  3573   000EE6  2E25               	decfsz	___ftdiv@cntr^0,f,c
  3574   000EE8  D7E7               	goto	l2262
  3575   000EEA  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  3576   000EEE  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3577   000EF2  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3578   000EF6  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  3579   000EFA  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  3580   000EFE  ECF1  F007         	call	___ftpack	;wreg free
  3581   000F02  C001  F01C         	movff	?___ftpack,?___ftdiv
  3582   000F06  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  3583   000F0A  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  3584   000F0E  0012               	return		;funcret
  3585   000F10                     __end_of___ftdiv:
  3586                           	callstack 0
  3587                           
  3588 ;; *************** function ___ftadd *****************
  3589 ;; Defined at:
  3590 ;;		line 86 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftadd.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  f1              3   42[COMRAM] float 
  3593 ;;  f2              3   45[COMRAM] float 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  exp1            1   53[COMRAM] unsigned char 
  3596 ;;  exp2            1   52[COMRAM] unsigned char 
  3597 ;;  sign            1   51[COMRAM] unsigned char 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  3   42[COMRAM] float 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3607 ;;      Params:         6       0       0       0       0       0       0       0       0
  3608 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3609 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3610 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3611 ;;Total ram usage:       12 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 2
  3614 ;; This function calls:
  3615 ;;		___ftpack
  3616 ;; This function is called by:
  3617 ;;		_choose_scale_temperature_and_fill_buffers
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text25
  3622   000A42                     __ptext25:
  3623                           	callstack 0
  3624   000A42                     ___ftadd:
  3625                           	callstack 27
  3626                           
  3627                           ;incstack = 0
  3628   000A42  C02D  F031         	movff	___ftadd@f1+2,??___ftadd
  3629   000A46  6A32               	clrf	(??___ftadd+1)^0,c
  3630   000A48  6A33               	clrf	(??___ftadd+2)^0,c
  3631   000A4A  342C               	rlcf	(___ftadd@f1+1)^0,w,c
  3632   000A4C  3631               	rlcf	??___ftadd^0,f,c
  3633   000A4E  E301               	bnc	u1391
  3634   000A50  8032               	bsf	(??___ftadd+1)^0,0,c
  3635   000A52                     u1391:
  3636   000A52  5031               	movf	??___ftadd^0,w,c
  3637   000A54  6E36               	movwf	___ftadd@exp1^0,c
  3638   000A56  C030  F031         	movff	___ftadd@f2+2,??___ftadd
  3639   000A5A  6A32               	clrf	(??___ftadd+1)^0,c
  3640   000A5C  6A33               	clrf	(??___ftadd+2)^0,c
  3641   000A5E  342F               	rlcf	(___ftadd@f2+1)^0,w,c
  3642   000A60  3631               	rlcf	??___ftadd^0,f,c
  3643   000A62  E301               	bnc	u1401
  3644   000A64  8032               	bsf	(??___ftadd+1)^0,0,c
  3645   000A66                     u1401:
  3646   000A66  5031               	movf	??___ftadd^0,w,c
  3647   000A68  6E35               	movwf	___ftadd@exp2^0,c
  3648   000A6A  5036               	movf	___ftadd@exp1^0,w,c
  3649   000A6C  B4D8               	btfsc	status,2,c
  3650   000A6E  D00A               	goto	u1430
  3651   000A70  5035               	movf	___ftadd@exp2^0,w,c
  3652   000A72  5C36               	subwf	___ftadd@exp1^0,w,c
  3653   000A74  B0D8               	btfsc	status,0,c
  3654   000A76  D00D               	goto	l2168
  3655   000A78  5036               	movf	___ftadd@exp1^0,w,c
  3656   000A7A  5C35               	subwf	___ftadd@exp2^0,w,c
  3657   000A7C  6E31               	movwf	??___ftadd^0,c
  3658   000A7E  0E18               	movlw	24
  3659   000A80  6431               	cpfsgt	??___ftadd^0,c
  3660   000A82  D007               	goto	l2168
  3661   000A84                     u1430:
  3662   000A84  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  3663   000A88  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  3664   000A8C  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  3665   000A90  0012               	return	
  3666   000A92                     l2168:
  3667   000A92  5035               	movf	___ftadd@exp2^0,w,c
  3668   000A94  B4D8               	btfsc	status,2,c
  3669   000A96  D00A               	goto	u1460
  3670   000A98  5036               	movf	___ftadd@exp1^0,w,c
  3671   000A9A  5C35               	subwf	___ftadd@exp2^0,w,c
  3672   000A9C  B0D8               	btfsc	status,0,c
  3673   000A9E  D00D               	goto	l2174
  3674   000AA0  5035               	movf	___ftadd@exp2^0,w,c
  3675   000AA2  5C36               	subwf	___ftadd@exp1^0,w,c
  3676   000AA4  6E31               	movwf	??___ftadd^0,c
  3677   000AA6  0E18               	movlw	24
  3678   000AA8  6431               	cpfsgt	??___ftadd^0,c
  3679   000AAA  D007               	goto	l2174
  3680   000AAC                     u1460:
  3681   000AAC  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  3682   000AB0  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  3683   000AB4  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  3684   000AB8  0012               	return	
  3685   000ABA                     l2174:
  3686   000ABA  0E06               	movlw	6
  3687   000ABC  6E34               	movwf	___ftadd@sign^0,c
  3688   000ABE  BE2D               	btfsc	(___ftadd@f1+2)^0,7,c
  3689   000AC0  8E34               	bsf	___ftadd@sign^0,7,c
  3690   000AC2  BE30               	btfsc	(___ftadd@f2+2)^0,7,c
  3691   000AC4  8C34               	bsf	___ftadd@sign^0,6,c
  3692   000AC6  8E2C               	bsf	(___ftadd@f1+1)^0,7,c
  3693   000AC8  0EFF               	movlw	255
  3694   000ACA  162B               	andwf	___ftadd@f1^0,f,c
  3695   000ACC  0EFF               	movlw	255
  3696   000ACE  162C               	andwf	(___ftadd@f1+1)^0,f,c
  3697   000AD0  0E00               	movlw	0
  3698   000AD2  162D               	andwf	(___ftadd@f1+2)^0,f,c
  3699   000AD4  8E2F               	bsf	(___ftadd@f2+1)^0,7,c
  3700   000AD6  0EFF               	movlw	255
  3701   000AD8  162E               	andwf	___ftadd@f2^0,f,c
  3702   000ADA  0EFF               	movlw	255
  3703   000ADC  162F               	andwf	(___ftadd@f2+1)^0,f,c
  3704   000ADE  0E00               	movlw	0
  3705   000AE0  1630               	andwf	(___ftadd@f2+2)^0,f,c
  3706   000AE2  5035               	movf	___ftadd@exp2^0,w,c
  3707   000AE4  5C36               	subwf	___ftadd@exp1^0,w,c
  3708   000AE6  B0D8               	btfsc	status,0,c
  3709   000AE8  D01B               	goto	l2200
  3710   000AEA                     u1490:
  3711   000AEA  90D8               	bcf	status,0,c
  3712   000AEC  362E               	rlcf	___ftadd@f2^0,f,c
  3713   000AEE  362F               	rlcf	(___ftadd@f2+1)^0,f,c
  3714   000AF0  3630               	rlcf	(___ftadd@f2+2)^0,f,c
  3715   000AF2  0635               	decf	___ftadd@exp2^0,f,c
  3716   000AF4  5036               	movf	___ftadd@exp1^0,w,c
  3717   000AF6  1835               	xorwf	___ftadd@exp2^0,w,c
  3718   000AF8  B4D8               	btfsc	status,2,c
  3719   000AFA  D00D               	goto	l2198
  3720   000AFC  0634               	decf	___ftadd@sign^0,f,c
  3721   000AFE  C034  F031         	movff	___ftadd@sign,??___ftadd
  3722   000B02  0E07               	movlw	7
  3723   000B04  1631               	andwf	??___ftadd^0,f,c
  3724   000B06  B4D8               	btfsc	status,2,c
  3725   000B08  D006               	goto	l2198
  3726   000B0A  D7EF               	goto	u1490
  3727   000B0C                     l2196:
  3728   000B0C  90D8               	bcf	status,0,c
  3729   000B0E  322D               	rrcf	(___ftadd@f1+2)^0,f,c
  3730   000B10  322C               	rrcf	(___ftadd@f1+1)^0,f,c
  3731   000B12  322B               	rrcf	___ftadd@f1^0,f,c
  3732   000B14  2A36               	incf	___ftadd@exp1^0,f,c
  3733   000B16                     l2198:
  3734   000B16  5035               	movf	___ftadd@exp2^0,w,c
  3735   000B18  1836               	xorwf	___ftadd@exp1^0,w,c
  3736   000B1A  B4D8               	btfsc	status,2,c
  3737   000B1C  D01F               	goto	u1560
  3738   000B1E  D7F6               	goto	l2196
  3739   000B20                     l2200:
  3740   000B20  5036               	movf	___ftadd@exp1^0,w,c
  3741   000B22  5C35               	subwf	___ftadd@exp2^0,w,c
  3742   000B24  B0D8               	btfsc	status,0,c
  3743   000B26  D01A               	goto	u1560
  3744   000B28                     u1530:
  3745   000B28  90D8               	bcf	status,0,c
  3746   000B2A  362B               	rlcf	___ftadd@f1^0,f,c
  3747   000B2C  362C               	rlcf	(___ftadd@f1+1)^0,f,c
  3748   000B2E  362D               	rlcf	(___ftadd@f1+2)^0,f,c
  3749   000B30  0636               	decf	___ftadd@exp1^0,f,c
  3750   000B32  5036               	movf	___ftadd@exp1^0,w,c
  3751   000B34  1835               	xorwf	___ftadd@exp2^0,w,c
  3752   000B36  B4D8               	btfsc	status,2,c
  3753   000B38  D00D               	goto	l2210
  3754   000B3A  0634               	decf	___ftadd@sign^0,f,c
  3755   000B3C  C034  F031         	movff	___ftadd@sign,??___ftadd
  3756   000B40  0E07               	movlw	7
  3757   000B42  1631               	andwf	??___ftadd^0,f,c
  3758   000B44  B4D8               	btfsc	status,2,c
  3759   000B46  D006               	goto	l2210
  3760   000B48  D7EF               	goto	u1530
  3761   000B4A                     l2208:
  3762   000B4A  90D8               	bcf	status,0,c
  3763   000B4C  3230               	rrcf	(___ftadd@f2+2)^0,f,c
  3764   000B4E  322F               	rrcf	(___ftadd@f2+1)^0,f,c
  3765   000B50  322E               	rrcf	___ftadd@f2^0,f,c
  3766   000B52  2A35               	incf	___ftadd@exp2^0,f,c
  3767   000B54                     l2210:
  3768   000B54  5035               	movf	___ftadd@exp2^0,w,c
  3769   000B56  1836               	xorwf	___ftadd@exp1^0,w,c
  3770   000B58  A4D8               	btfss	status,2,c
  3771   000B5A  D7F7               	goto	l2208
  3772   000B5C                     u1560:
  3773   000B5C  AE34               	btfss	___ftadd@sign^0,7,c
  3774   000B5E  D00C               	goto	l715
  3775   000B60  0EFF               	movlw	255
  3776   000B62  1A2B               	xorwf	___ftadd@f1^0,f,c
  3777   000B64  0EFF               	movlw	255
  3778   000B66  1A2C               	xorwf	(___ftadd@f1+1)^0,f,c
  3779   000B68  0EFF               	movlw	255
  3780   000B6A  1A2D               	xorwf	(___ftadd@f1+2)^0,f,c
  3781   000B6C  0E01               	movlw	1
  3782   000B6E  262B               	addwf	___ftadd@f1^0,f,c
  3783   000B70  0E00               	movlw	0
  3784   000B72  222C               	addwfc	(___ftadd@f1+1)^0,f,c
  3785   000B74  0E00               	movlw	0
  3786   000B76  222D               	addwfc	(___ftadd@f1+2)^0,f,c
  3787   000B78                     l715:
  3788   000B78  AC34               	btfss	___ftadd@sign^0,6,c
  3789   000B7A  D00C               	goto	l2216
  3790   000B7C  0EFF               	movlw	255
  3791   000B7E  1A2E               	xorwf	___ftadd@f2^0,f,c
  3792   000B80  0EFF               	movlw	255
  3793   000B82  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  3794   000B84  0EFF               	movlw	255
  3795   000B86  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  3796   000B88  0E01               	movlw	1
  3797   000B8A  262E               	addwf	___ftadd@f2^0,f,c
  3798   000B8C  0E00               	movlw	0
  3799   000B8E  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  3800   000B90  0E00               	movlw	0
  3801   000B92  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  3802   000B94                     l2216:
  3803   000B94  0E00               	movlw	0
  3804   000B96  6E34               	movwf	___ftadd@sign^0,c
  3805   000B98  502B               	movf	___ftadd@f1^0,w,c
  3806   000B9A  262E               	addwf	___ftadd@f2^0,f,c
  3807   000B9C  502C               	movf	(___ftadd@f1+1)^0,w,c
  3808   000B9E  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  3809   000BA0  502D               	movf	(___ftadd@f1+2)^0,w,c
  3810   000BA2  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  3811   000BA4  AE30               	btfss	(___ftadd@f2+2)^0,7,c
  3812   000BA6  D00E               	goto	l2226
  3813   000BA8  0EFF               	movlw	255
  3814   000BAA  1A2E               	xorwf	___ftadd@f2^0,f,c
  3815   000BAC  0EFF               	movlw	255
  3816   000BAE  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  3817   000BB0  0EFF               	movlw	255
  3818   000BB2  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  3819   000BB4  0E01               	movlw	1
  3820   000BB6  262E               	addwf	___ftadd@f2^0,f,c
  3821   000BB8  0E00               	movlw	0
  3822   000BBA  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  3823   000BBC  0E00               	movlw	0
  3824   000BBE  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  3825   000BC0  0E01               	movlw	1
  3826   000BC2  6E34               	movwf	___ftadd@sign^0,c
  3827   000BC4                     l2226:
  3828   000BC4  C02E  F001         	movff	___ftadd@f2,___ftpack@arg
  3829   000BC8  C02F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3830   000BCC  C030  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3831   000BD0  C036  F004         	movff	___ftadd@exp1,___ftpack@exp
  3832   000BD4  C034  F005         	movff	___ftadd@sign,___ftpack@sign
  3833   000BD8  ECF1  F007         	call	___ftpack	;wreg free
  3834   000BDC  C001  F02B         	movff	?___ftpack,?___ftadd
  3835   000BE0  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  3836   000BE4  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  3837   000BE8  0012               	return		;funcret
  3838   000BEA                     __end_of___ftadd:
  3839                           	callstack 0
  3840                           
  3841 ;; *************** function ___ftpack *****************
  3842 ;; Defined at:
  3843 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/float.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  arg             3    0[COMRAM] unsigned um
  3846 ;;  exp             1    3[COMRAM] unsigned char 
  3847 ;;  sign            1    4[COMRAM] unsigned char 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  3    0[COMRAM] float 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3859 ;;      Params:         5       0       0       0       0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3861 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3862 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3863 ;;Total ram usage:        8 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 1
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		___ftadd
  3870 ;;		___ftdiv
  3871 ;;		___ftmul
  3872 ;;		___lbtoft
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text26
  3877   000FE2                     __ptext26:
  3878                           	callstack 0
  3879   000FE2                     ___ftpack:
  3880                           	callstack 27
  3881                           
  3882                           ;incstack = 0
  3883   000FE2  5004               	movf	___ftpack@exp^0,w,c
  3884   000FE4  B4D8               	btfsc	status,2,c
  3885   000FE6  D005               	goto	u1080
  3886   000FE8  5001               	movf	___ftpack@arg^0,w,c
  3887   000FEA  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  3888   000FEC  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  3889   000FEE  A4D8               	btfss	status,2,c
  3890   000FF0  D00C               	goto	l1942
  3891   000FF2                     u1080:
  3892   000FF2  0E00               	movlw	0
  3893   000FF4  6E01               	movwf	?___ftpack^0,c
  3894   000FF6  0E00               	movlw	0
  3895   000FF8  6E02               	movwf	(?___ftpack+1)^0,c
  3896   000FFA  0E00               	movlw	0
  3897   000FFC  6E03               	movwf	(?___ftpack+2)^0,c
  3898   000FFE  0012               	return	
  3899   001000                     l1940:
  3900   001000  2A04               	incf	___ftpack@exp^0,f,c
  3901   001002  90D8               	bcf	status,0,c
  3902   001004  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  3903   001006  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  3904   001008  3201               	rrcf	___ftpack@arg^0,f,c
  3905   00100A                     l1942:
  3906   00100A  0E00               	movlw	0
  3907   00100C  1401               	andwf	___ftpack@arg^0,w,c
  3908   00100E  6E06               	movwf	??___ftpack^0,c
  3909   001010  0E00               	movlw	0
  3910   001012  1402               	andwf	(___ftpack@arg+1)^0,w,c
  3911   001014  6E07               	movwf	(??___ftpack+1)^0,c
  3912   001016  0EFE               	movlw	254
  3913   001018  1403               	andwf	(___ftpack@arg+2)^0,w,c
  3914   00101A  6E08               	movwf	(??___ftpack+2)^0,c
  3915   00101C  5006               	movf	??___ftpack^0,w,c
  3916   00101E  1007               	iorwf	(??___ftpack+1)^0,w,c
  3917   001020  1008               	iorwf	(??___ftpack+2)^0,w,c
  3918   001022  B4D8               	btfsc	status,2,c
  3919   001024  D00C               	goto	l1948
  3920   001026  D7EC               	goto	l1940
  3921   001028                     l1944:
  3922   001028  2A04               	incf	___ftpack@exp^0,f,c
  3923   00102A  0E01               	movlw	1
  3924   00102C  2601               	addwf	___ftpack@arg^0,f,c
  3925   00102E  0E00               	movlw	0
  3926   001030  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  3927   001032  0E00               	movlw	0
  3928   001034  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  3929   001036  90D8               	bcf	status,0,c
  3930   001038  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  3931   00103A  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  3932   00103C  3201               	rrcf	___ftpack@arg^0,f,c
  3933   00103E                     l1948:
  3934   00103E  0E00               	movlw	0
  3935   001040  1401               	andwf	___ftpack@arg^0,w,c
  3936   001042  6E06               	movwf	??___ftpack^0,c
  3937   001044  0E00               	movlw	0
  3938   001046  1402               	andwf	(___ftpack@arg+1)^0,w,c
  3939   001048  6E07               	movwf	(??___ftpack+1)^0,c
  3940   00104A  0EFF               	movlw	255
  3941   00104C  1403               	andwf	(___ftpack@arg+2)^0,w,c
  3942   00104E  6E08               	movwf	(??___ftpack+2)^0,c
  3943   001050  5006               	movf	??___ftpack^0,w,c
  3944   001052  1007               	iorwf	(??___ftpack+1)^0,w,c
  3945   001054  1008               	iorwf	(??___ftpack+2)^0,w,c
  3946   001056  B4D8               	btfsc	status,2,c
  3947   001058  D006               	goto	l1952
  3948   00105A  D7E6               	goto	l1944
  3949   00105C                     l1950:
  3950   00105C  0604               	decf	___ftpack@exp^0,f,c
  3951   00105E  90D8               	bcf	status,0,c
  3952   001060  3601               	rlcf	___ftpack@arg^0,f,c
  3953   001062  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  3954   001064  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  3955   001066                     l1952:
  3956   001066  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  3957   001068  D003               	goto	u1120
  3958   00106A  0E02               	movlw	2
  3959   00106C  6004               	cpfslt	___ftpack@exp^0,c
  3960   00106E  D7F6               	goto	l1950
  3961   001070                     u1120:
  3962   001070  A004               	btfss	___ftpack@exp^0,0,c
  3963   001072  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  3964   001074  90D8               	bcf	status,0,c
  3965   001076  3204               	rrcf	___ftpack@exp^0,f,c
  3966   001078  5004               	movf	___ftpack@exp^0,w,c
  3967   00107A  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  3968   00107C  5005               	movf	___ftpack@sign^0,w,c
  3969   00107E  A4D8               	btfss	status,2,c
  3970   001080  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  3971   001082  C001  F001         	movff	___ftpack@arg,?___ftpack
  3972   001086  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3973   00108A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3974   00108E  0012               	return		;funcret
  3975   001090                     __end_of___ftpack:
  3976                           	callstack 0
  3977                           
  3978 ;; *************** function _check_potentiometer_voltaje *****************
  3979 ;; Defined at:
  3980 ;;		line 215 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, status,2, status,0
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3994 ;;      Params:         0       0       0       0       0       0       0       0       0
  3995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3996 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3997 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3998 ;;Total ram usage:        0 bytes
  3999 ;; Hardware stack levels used: 1
  4000 ;; Hardware stack levels required when called: 1
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_main
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text27
  4009   0015D0                     __ptext27:
  4010                           	callstack 0
  4011   0015D0                     _check_potentiometer_voltaje:
  4012                           	callstack 29
  4013                           
  4014                           ;LAB05.c: 216: ADON=1;
  4015                           
  4016                           ;incstack = 0
  4017   0015D0  80C2               	bsf	4034,0,c	;volatile
  4018                           
  4019                           ;LAB05.c: 217: GO=1;
  4020   0015D2  82C2               	bsf	4034,1,c	;volatile
  4021   0015D4                     l252:
  4022   0015D4  B2C2               	btfsc	4034,1,c	;volatile
  4023   0015D6  D7FE               	goto	l252
  4024                           
  4025                           ;LAB05.c: 219: if(ADRES > 511)
  4026   0015D8  0E00               	movlw	0
  4027   0015DA  5CC3               	subwf	195,w,c	;volatile
  4028   0015DC  0E02               	movlw	2
  4029   0015DE  58C4               	subwfb	196,w,c	;volatile
  4030   0015E0  A0D8               	btfss	status,0,c
  4031   0015E2  D002               	goto	l255
  4032                           
  4033                           ;LAB05.c: 220: RB0 = 1;
  4034   0015E4  8081               	bsf	3969,0,c	;volatile
  4035   0015E6  D001               	goto	l256
  4036   0015E8                     l255:
  4037                           
  4038                           ;LAB05.c: 221: else;LAB05.c: 222: RB0 = 0;
  4039   0015E8  9081               	bcf	3969,0,c	;volatile
  4040   0015EA                     l256:
  4041                           
  4042                           ;LAB05.c: 223: ADON=0;
  4043   0015EA  90C2               	bcf	4034,0,c	;volatile
  4044                           
  4045                           ;LAB05.c: 224: return;
  4046   0015EC  0012               	return		;funcret
  4047   0015EE                     __end_of_check_potentiometer_voltaje:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function _ISR *****************
  4051 ;; Defined at:
  4052 ;;		line 422 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used: 1
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		Interrupt level 2
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	intcode
  4080   000008                     __pintcode:
  4081                           	callstack 0
  4082   000008                     _ISR:
  4083                           	callstack 25
  4084                           
  4085                           ;incstack = 0
  4086   000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4087   00000A  EDD6  F00A         	call	int_func,f	;refresh shadow registers
  4088                           
  4089                           	psect	intcode_body
  4090   0015AC                     __pintcode_body:
  4091                           	callstack 25
  4092   0015AC                     int_func:
  4093                           	callstack 25
  4094   0015AC  0006               	pop		; remove dummy address from shadow register refresh
  4095                           
  4096                           ;LAB05.c: 423: if(TMR0IF==1){
  4097   0015AE  A4F2               	btfss	4082,2,c	;volatile
  4098   0015B0  D00D               	goto	i2l353
  4099                           
  4100                           ;LAB05.c: 424: TMR0=3036;
  4101   0015B2  0E0B               	movlw	11
  4102   0015B4  6ED7               	movwf	215,c	;volatile
  4103   0015B6  0EDC               	movlw	220
  4104   0015B8  6ED6               	movwf	214,c	;volatile
  4105                           
  4106                           ;LAB05.c: 425: TMR0IF=0;
  4107   0015BA  94F2               	bcf	4082,2,c	;volatile
  4108                           
  4109                           ;LAB05.c: 426: RC2=~RC2;
  4110   0015BC  B482               	btfsc	3970,2,c	;volatile
  4111   0015BE  D002               	goto	i2u207_40
  4112   0015C0  8482               	bsf	3970,2,c	;volatile
  4113   0015C2  D001               	goto	i2u208_45
  4114   0015C4                     i2u207_40:
  4115   0015C4  9482               	bcf	3970,2,c	;volatile
  4116   0015C6                     i2u208_45:
  4117                           
  4118                           ;LAB05.c: 427: Enable_sample=1;
  4119   0015C6  0E01               	movlw	1
  4120   0015C8  0100               	movlb	0	; () banked
  4121   0015CA  6F84               	movwf	_Enable_sample& (0+255),b
  4122   0015CC                     i2l353:
  4123   0015CC  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4124   0015CE  0011               	retfie		f
  4125   0015D0                     __end_of_ISR:
  4126                           	callstack 0
  4127                           
  4128                           	psect	rparam
  4129   000000                     
  4130                           	psect	temp
  4131   00004C                     btemp:
  4132                           	callstack 0
  4133   00004C                     	ds	1
  4134   000000                     int$flags	set	btemp
  4135   000000                     wtemp8	set	btemp+1
  4136   000000                     ttemp5	set	btemp+1
  4137   000000                     ttemp6	set	btemp+4
  4138   000000                     ttemp7	set	btemp+8
  4139                           
  4140                           	psect	idloc
  4141                           
  4142                           ;Config register IDLOC0 @ 0x200000
  4143                           ;	unspecified, using default values
  4144   200000                     	org	2097152
  4145   200000  FF                 	db	255
  4146                           
  4147                           ;Config register IDLOC1 @ 0x200001
  4148                           ;	unspecified, using default values
  4149   200001                     	org	2097153
  4150   200001  FF                 	db	255
  4151                           
  4152                           ;Config register IDLOC2 @ 0x200002
  4153                           ;	unspecified, using default values
  4154   200002                     	org	2097154
  4155   200002  FF                 	db	255
  4156                           
  4157                           ;Config register IDLOC3 @ 0x200003
  4158                           ;	unspecified, using default values
  4159   200003                     	org	2097155
  4160   200003  FF                 	db	255
  4161                           
  4162                           ;Config register IDLOC4 @ 0x200004
  4163                           ;	unspecified, using default values
  4164   200004                     	org	2097156
  4165   200004  FF                 	db	255
  4166                           
  4167                           ;Config register IDLOC5 @ 0x200005
  4168                           ;	unspecified, using default values
  4169   200005                     	org	2097157
  4170   200005  FF                 	db	255
  4171                           
  4172                           ;Config register IDLOC6 @ 0x200006
  4173                           ;	unspecified, using default values
  4174   200006                     	org	2097158
  4175   200006  FF                 	db	255
  4176                           
  4177                           ;Config register IDLOC7 @ 0x200007
  4178                           ;	unspecified, using default values
  4179   200007                     	org	2097159
  4180   200007  FF                 	db	255
  4181                           
  4182                           	psect	config
  4183                           
  4184                           ;Config register CONFIG1L @ 0x300000
  4185                           ;	unspecified, using default values
  4186                           ;	PLL Prescaler Selection bits
  4187                           ;	PLLDIV = 0x0, unprogrammed default
  4188                           ;	System Clock Postscaler Selection bits
  4189                           ;	CPUDIV = 0x0, unprogrammed default
  4190                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4191                           ;	USBDIV = 0x0, unprogrammed default
  4192   300000                     	org	3145728
  4193   300000  00                 	db	0
  4194                           
  4195                           ;Config register CONFIG1H @ 0x300001
  4196                           ;	Oscillator Selection bits
  4197                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4198                           ;	Fail-Safe Clock Monitor Enable bit
  4199                           ;	FCMEN = 0x0, unprogrammed default
  4200                           ;	Internal/External Oscillator Switchover bit
  4201                           ;	IESO = 0x0, unprogrammed default
  4202   300001                     	org	3145729
  4203   300001  09                 	db	9
  4204                           
  4205                           ;Config register CONFIG2L @ 0x300002
  4206                           ;	unspecified, using default values
  4207                           ;	Power-up Timer Enable bit
  4208                           ;	PWRT = 0x1, unprogrammed default
  4209                           ;	Brown-out Reset Enable bits
  4210                           ;	BOR = 0x3, unprogrammed default
  4211                           ;	Brown-out Reset Voltage bits
  4212                           ;	BORV = 0x3, unprogrammed default
  4213                           ;	USB Voltage Regulator Enable bit
  4214                           ;	VREGEN = 0x0, unprogrammed default
  4215   300002                     	org	3145730
  4216   300002  1F                 	db	31
  4217                           
  4218                           ;Config register CONFIG2H @ 0x300003
  4219                           ;	Watchdog Timer Enable bit
  4220                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4221                           ;	Watchdog Timer Postscale Select bits
  4222                           ;	WDTPS = 512, 1:512
  4223   300003                     	org	3145731
  4224   300003  12                 	db	18
  4225                           
  4226                           ; Padding undefined space
  4227   300004                     	org	3145732
  4228   300004  FF                 	db	255
  4229                           
  4230                           ;Config register CONFIG3H @ 0x300005
  4231                           ;	unspecified, using default values
  4232                           ;	CCP2 MUX bit
  4233                           ;	CCP2MX = 0x1, unprogrammed default
  4234                           ;	PORTB A/D Enable bit
  4235                           ;	PBADEN = 0x1, unprogrammed default
  4236                           ;	Low-Power Timer 1 Oscillator Enable bit
  4237                           ;	LPT1OSC = 0x0, unprogrammed default
  4238                           ;	MCLR Pin Enable bit
  4239                           ;	MCLRE = 0x1, unprogrammed default
  4240   300005                     	org	3145733
  4241   300005  83                 	db	131
  4242                           
  4243                           ;Config register CONFIG4L @ 0x300006
  4244                           ;	unspecified, using default values
  4245                           ;	Stack Full/Underflow Reset Enable bit
  4246                           ;	STVREN = 0x1, unprogrammed default
  4247                           ;	Single-Supply ICSP Enable bit
  4248                           ;	LVP = 0x1, unprogrammed default
  4249                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4250                           ;	ICPRT = 0x0, unprogrammed default
  4251                           ;	Extended Instruction Set Enable bit
  4252                           ;	XINST = 0x0, unprogrammed default
  4253                           ;	Background Debugger Enable bit
  4254                           ;	DEBUG = 0x1, unprogrammed default
  4255   300006                     	org	3145734
  4256   300006  85                 	db	133
  4257                           
  4258                           ; Padding undefined space
  4259   300007                     	org	3145735
  4260   300007  FF                 	db	255
  4261                           
  4262                           ;Config register CONFIG5L @ 0x300008
  4263                           ;	unspecified, using default values
  4264                           ;	Code Protection bit
  4265                           ;	CP0 = 0x1, unprogrammed default
  4266                           ;	Code Protection bit
  4267                           ;	CP1 = 0x1, unprogrammed default
  4268                           ;	Code Protection bit
  4269                           ;	CP2 = 0x1, unprogrammed default
  4270                           ;	Code Protection bit
  4271                           ;	CP3 = 0x1, unprogrammed default
  4272   300008                     	org	3145736
  4273   300008  0F                 	db	15
  4274                           
  4275                           ;Config register CONFIG5H @ 0x300009
  4276                           ;	unspecified, using default values
  4277                           ;	Boot Block Code Protection bit
  4278                           ;	CPB = 0x1, unprogrammed default
  4279                           ;	Data EEPROM Code Protection bit
  4280                           ;	CPD = 0x1, unprogrammed default
  4281   300009                     	org	3145737
  4282   300009  C0                 	db	192
  4283                           
  4284                           ;Config register CONFIG6L @ 0x30000A
  4285                           ;	unspecified, using default values
  4286                           ;	Write Protection bit
  4287                           ;	WRT0 = 0x1, unprogrammed default
  4288                           ;	Write Protection bit
  4289                           ;	WRT1 = 0x1, unprogrammed default
  4290                           ;	Write Protection bit
  4291                           ;	WRT2 = 0x1, unprogrammed default
  4292                           ;	Write Protection bit
  4293                           ;	WRT3 = 0x1, unprogrammed default
  4294   30000A                     	org	3145738
  4295   30000A  0F                 	db	15
  4296                           
  4297                           ;Config register CONFIG6H @ 0x30000B
  4298                           ;	unspecified, using default values
  4299                           ;	Configuration Register Write Protection bit
  4300                           ;	WRTC = 0x1, unprogrammed default
  4301                           ;	Boot Block Write Protection bit
  4302                           ;	WRTB = 0x1, unprogrammed default
  4303                           ;	Data EEPROM Write Protection bit
  4304                           ;	WRTD = 0x1, unprogrammed default
  4305   30000B                     	org	3145739
  4306   30000B  E0                 	db	224
  4307                           
  4308                           ;Config register CONFIG7L @ 0x30000C
  4309                           ;	unspecified, using default values
  4310                           ;	Table Read Protection bit
  4311                           ;	EBTR0 = 0x1, unprogrammed default
  4312                           ;	Table Read Protection bit
  4313                           ;	EBTR1 = 0x1, unprogrammed default
  4314                           ;	Table Read Protection bit
  4315                           ;	EBTR2 = 0x1, unprogrammed default
  4316                           ;	Table Read Protection bit
  4317                           ;	EBTR3 = 0x1, unprogrammed default
  4318   30000C                     	org	3145740
  4319   30000C  0F                 	db	15
  4320                           
  4321                           ;Config register CONFIG7H @ 0x30000D
  4322                           ;	unspecified, using default values
  4323                           ;	Boot Block Table Read Protection bit
  4324                           ;	EBTRB = 0x1, unprogrammed default
  4325   30000D                     	org	3145741
  4326   30000D  40                 	db	64
  4327                           tosu	equ	0xFFF
  4328                           tosh	equ	0xFFE
  4329                           tosl	equ	0xFFD
  4330                           stkptr	equ	0xFFC
  4331                           pclatu	equ	0xFFB
  4332                           pclath	equ	0xFFA
  4333                           pcl	equ	0xFF9
  4334                           tblptru	equ	0xFF8
  4335                           tblptrh	equ	0xFF7
  4336                           tblptrl	equ	0xFF6
  4337                           tablat	equ	0xFF5
  4338                           prodh	equ	0xFF4
  4339                           prodl	equ	0xFF3
  4340                           indf0	equ	0xFEF
  4341                           postinc0	equ	0xFEE
  4342                           postdec0	equ	0xFED
  4343                           preinc0	equ	0xFEC
  4344                           plusw0	equ	0xFEB
  4345                           fsr0h	equ	0xFEA
  4346                           fsr0l	equ	0xFE9
  4347                           wreg	equ	0xFE8
  4348                           indf1	equ	0xFE7
  4349                           postinc1	equ	0xFE6
  4350                           postdec1	equ	0xFE5
  4351                           preinc1	equ	0xFE4
  4352                           plusw1	equ	0xFE3
  4353                           fsr1h	equ	0xFE2
  4354                           fsr1l	equ	0xFE1
  4355                           bsr	equ	0xFE0
  4356                           indf2	equ	0xFDF
  4357                           postinc2	equ	0xFDE
  4358                           postdec2	equ	0xFDD
  4359                           preinc2	equ	0xFDC
  4360                           plusw2	equ	0xFDB
  4361                           fsr2h	equ	0xFDA
  4362                           fsr2l	equ	0xFD9
  4363                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    10
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      75
    BANK0           160     36      39
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_12(CODE[9]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[9]), 
		 -> STR_8(CODE[9]), STR_7(CODE[9]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> send_temperature_RS232@buffer_RS232(COMRAM[12]), main@buffer_LCD_row_2(BANK0[17]), main@buffer_LCD_row_1(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    show_temperature_LCD@buffer_LCD_row_2	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_2(BANK0[17]), 

    show_temperature_LCD@buffer_LCD_row_1	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_1(BANK0[17]), 

    choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_2(BANK0[17]), 

    choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_1(BANK0[17]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[8]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_choose_scale_temperature_and_fill_buffers
    _welcome_operations->_MensajeLCD_Var
    _MensajeLCD_Var->_DireccionaLCD
    _MensajeLCD_Var->_EscribeLCD_c
    _show_temperature_LCD->_DireccionaLCD
    _show_temperature_LCD->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _send_temperature_RS232->_sprintf
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD
    _choose_scale_temperature_and_fill_buffers->___fttol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   28589
                                              0 BANK0     36    36      0
        _check_potentiometer_voltaje
_choose_scale_temperature_and_fill_b
                 _init_configuration
          _save_temperature_c_EEPROM
             _send_temperature_RS232
               _show_temperature_LCD
             _show_temperature_c_RGB
                 _welcome_operations
 ---------------------------------------------------------------------------------
 (1) _welcome_operations                                   2     2      0     891
                                              8 COMRAM     2     2      0
                           _BorraLCD
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       3     2      1     781
                                              5 COMRAM     3     2      1
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (1) _show_temperature_c_RGB                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _show_temperature_LCD                                 5     1      4     838
                                              5 COMRAM     5     1      4
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _DireccionaLCD                                        1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _send_temperature_RS232                              15    15      0    5709
                                             25 COMRAM    15    15      0
                         _Transmitir
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _save_temperature_c_EEPROM                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_configuration                                   2     2      0     286
                                              4 COMRAM     2     2      0
                       _ConfiguraLCD
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (2) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfiguraLCD                                         1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _choose_scale_temperature_and_fill_buffers            4     2      2   20705
                                             69 COMRAM     4     2      2
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    5563
                                             12 COMRAM    13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    2075
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1574
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2866
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     480
                                             54 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3602
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3404
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4392
                                             42 COMRAM    12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _check_potentiometer_voltaje                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_potentiometer_voltaje
   _choose_scale_temperature_and_fill_buffers
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
       ___ftmul (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
     ___ftdiv
     ___ftmul
     ___fttol
       ___ftadd (ARG)
       ___ftdiv (ARG)
       ___ftmul (ARG)
       ___lbtoft (ARG)
     ___lbtoft
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_configuration
     _ConfiguraLCD
     _InicializaLCD
       _BorraLCD
         _EnviaDato
           _HabilitaLCD
           _RetardoLCD
         _HabilitaLCD
         _RetardoLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _save_temperature_c_EEPROM
   _send_temperature_RS232
     _Transmitir
     _sprintf
   _show_temperature_LCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _show_temperature_c_RGB
   _welcome_operations
     _BorraLCD
     _MensajeLCD_Var
       _BorraLCD
       _DireccionaLCD
       _EscribeLCD_c

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      34        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      27       5       24.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      4B       1       79.8%
BITBIGSFRll         20      0       0      32        0.0%
BITBIGSFRhhhhl      1A      0       0      21        0.0%
BITBIGSFRhllh       14      0       0      28        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhlhhh       B      0       0      24        0.0%
BITBIGSFRhlhlh       8      0       0      26        0.0%
BITBIGSFRhlhhl       7      0       0      25        0.0%
BITBIGSFRlhh         5      0       0      30        0.0%
BITBIGSFRhllll       4      0       0      29        0.0%
BITBIGSFRlhl         1      0       0      31        0.0%
BITBIGSFRhlhll       1      0       0      27        0.0%
BITBIGSFRhhhl        1      0       0      22        0.0%
BITBIGSFRhhl         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      33        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jun  3 02:13:57 2023

                                        Transmitir@BufferT 0001  
                                 ??_show_temperature_c_RGB 0001  
                                                       _GO 7E11  
                                                       _TO 7E83  
                                               EnviaDato@a 0004  
                                             ___ftadd@exp1 0036  
                                             ___ftadd@exp2 0035  
                                              main@Temp_n1 0082  
                                             ___ftadd@sign 0034  
                                            _InicializaLCD 1090  
                                                      l252 15D4  
                                                      l255 15E8  
                                                      l256 15EA  
                                                      l280 0896  
                                                      l282 0908  
                                                      l275 131E  
                                                      l284 0996  
                                                      l715 0B78  
                                                      l726 0EDE  
                                                      l864 143C  
                                                      l874 1514  
                                                      _GIE 7F97  
                                                      _RB0 7C08  
                                                      _RA2 7C02  
                                                      _RA3 7C03  
                                                      _RC0 7C10  
                                                      _RC2 7C12  
                                                      _RE0 7C20  
                                                      _RE1 7C21  
                                                      _RE2 7C22  
                                                      _ISR 0008  
                                                      _Che 004A  
                                                      _Hum 0085  
                                                      wreg 0FE8  
                                                     ?_ISR 0001  
                                             ___ftdiv@cntr 0025  
                                             ___ftdiv@sign 002A  
                                                     l2002 150A  
                                                     l2200 0B20  
                                                     l2016 10A2  
                                                     l2210 0B54  
                                                     l2106 0C1C  
                                                     l2026 10C0  
                                                     l2140 0CBA  
                                                     l2124 0C70  
                                                     l2108 0C4A  
                                                     l2036 10DE  
                                                     l2302 0DB8  
                                                     l2118 0C6C  
                                                     l2216 0B94  
                                                     l2208 0B4A  
                                                     l2312 0DE0  
                                                     l2056 1116  
                                                     l2080 1206  
                                                     l2072 11DA  
                                                     l2226 0BC4  
                                                     l2242 0E7A  
                                                     l2306 0DC8  
                                                     l2330 0F3C  
                                                     l2146 0D0A  
                                                     l2138 0CB4  
                                                     l2154 1656  
                                                     l2066 11BA  
                                                     l2236 0E52  
                                                     l2316 0DF0  
                                                     l2076 11F0  
                                                     l2084 121E  
                                                     l2174 0ABA  
                                                     l2262 0EB8  
                                                     l2094 0C06  
                                                     l2168 0A92  
                                                     l2360 0FB4  
                                                     l2352 0FA0  
                                                     l2096 0C0C  
                                                     l2088 0BF0  
                                                     l2520 1302  
                                                     l2512 12E6  
                                                     l2504 12CA  
                                                     l2282 0D5E  
                                                     l2196 0B0C  
                                                     l2348 0F90  
                                                     l2540 1160  
                                                     l2524 1310  
                                                     l2516 12F4  
                                                     l2508 12D8  
                                                     l2198 0B16  
                                                     l2366 0FD0  
                                                     l2358 0FA8  
                                                     l2454 145E  
                                                     l2534 1140  
                                                     l2438 152E  
                                                     l2288 0D86  
                                                     l1904 14CE  
                                                     l2552 1184  
                                                     l2544 1168  
                                                     l2458 146E  
                                                     l2562 11AC  
                                                     l2538 1150  
                                                     l1940 1000  
                                                     l2556 1194  
                                                     l2580 1336  
                                                     l1950 105C  
                                                     l1942 100A  
                                                     l2558 11A4  
                                                     l1952 1066  
                                                     l1944 1028  
                                                     l1882 1392  
                                                     l1948 103E  
                                                     l1884 13A4  
                                                     l1892 13D8  
                                                     l2588 1348  
                                                     l1974 140A  
                                                     l1886 13C4  
                                                     l1976 1412  
                                                     l1888 13CE  
                                                     l1986 1432  
                                                     l1994 14EA  
                                                     l1996 14F2  
                                                     _ADON 7E10  
                                                     STR_1 080B  
                                                     STR_2 0858  
                                                     STR_3 0818  
                                                     STR_4 0840  
                                                     STR_5 0837  
                                                     STR_6 0850  
                                                     STR_7 0837  
                                                     STR_8 082E  
                                                     STR_9 0837  
                                                     u1120 1070  
                                                     u1220 1600  
                                                     u1310 0BF8  
                                                     u1080 0FF2  
                                                     u1160 1416  
                                                     u1401 0A66  
                                                     u2107 1486  
                                                     u1340 0C9C  
                                                     u2117 1242  
                                                     u1430 0A84  
                                                     u1190 14F6  
                                                     u2127 12AC  
                                                     u1360 0D12  
                                                     _LATD 0F8C  
                                                     u1601 0E3A  
                                                     u2137 1398  
                                                     _LATE 0F8D  
                                                     u1530 0B28  
                                                     u1370 0D2C  
                                                     u2147 13AA  
                                                     u1460 0AAC  
                                                     u1621 0E62  
                                                     u2157 13B4  
                                                     u1391 0A52  
                                                     u1711 0F20  
                                                     u2167 13C6  
                                                     u1560 0B5C  
                                                     u1720 0F2A  
                                                     u2177 13D0  
                                                     u2097 154C  
                                                     u1490 0AEA  
                                                     u1730 0F5A  
                                                     u1651 0D46  
                                                     u2187 164A  
                                                     u1671 0D6E  
                                                     u1735 0F52  
                                                     u1770 0FBA  
                                                     u1980 116E  
                                                     _TMR0 0FD6  
                                                     _TRMT 7D61  
                                           ??_EscribeLCD_c 0005  
                                                     _Temp 0086  
                                                     _main 1326  
                                             ___ftpack@arg 0001  
                                             ___ftpack@exp 0004  
                                                     fsr2h 0FDA  
                                                     indf2 0FDF  
                                                     fsr2l 0FD9  
                                                     btemp 004C  
                                     main@buffer_LCD_row_1 0060  
                                     main@buffer_LCD_row_2 0071  
                                                     prodl 0FF3  
                                                     start 000E  
                                             ___ftmul@cntr 001A  
                                             ___param_bank 0000  
                                             ___ftmul@sign 001B  
                                                    ??_ISR 0001  
                                             ___fttol@exp1 0045  
                                             ___fttol@lval 0041  
                              ??_save_temperature_c_EEPROM 0001  
                                           ?_InicializaLCD 0001  
                                                    ?_main 0001  
        __end_of_choose_scale_temperature_and_fill_buffers 0A42  
              ??_choose_scale_temperature_and_fill_buffers 0048  
               ?_choose_scale_temperature_and_fill_buffers 0046  
                _choose_scale_temperature_and_fill_buffers 0862  
                                                    _ADRES 0FC3  
                                          __end_of___ftadd 0BEA  
                                                    STR_10 0848  
                                                    STR_11 0837  
                                                    STR_12 0825  
                                            EscribeLCD_c@a 0005  
                                          __end_of___ftdiv 0F10  
                                          __end_of___ftmul 0E2A  
                                                    _T0CON 0FD5  
                                          __end_of___fttol 0FE2  
                                                    _LATB0 7C50  
                                                    _LATC0 7C58  
                                                    _LATD0 7C60  
                                                    _LATC2 7C5A  
                                                    _LATD1 7C61  
                                          __end_of___lwdiv 1446  
                                          __end_of___lwmod 151E  
                                                    i2l353 15CC  
                                                    _RCSTA 0FAB  
                                                    _SPBRG 0FAF  
                                                    _TRISD 0F95  
                                                    _TRISE 0F96  
                                                    _TXREG 0FAD  
                                                    _TXSTA 0FAC  
                                          __end_of_dpowers 080B  
                                            ___ftpack@sign 0005  
  choose_scale_temperature_and_fill_buffers@temp_converted 0048  
                                                    tablat 0FF5  
                                              _HabilitaLCD 1646  
                                                    ttemp5 004D  
                                                    ttemp6 0050  
                                                    ttemp7 0054  
                                                    status 0FD8  
                                                    wtemp8 004D  
                                          __end_of_sprintf 0D36  
                                         __end_of_BorraLCD 1646  
                                          __initialization 155E  
                                             __end_of_main 138E  
                                                   ??_main 004A  
                                     __end_of_ConfiguraLCD 1606  
                                            ___fttol@sign1 0040  
                                    MensajeLCD_Var@counter 0008  
                                            __activetblptr 0002  
                                                   _ADCON0 0FC2  
                                                   _ADCON1 0FC1  
                                                   _ADCON2 0FC0  
                                           DireccionaLCD@a 0005  
                                         __end_of___ftpack 1090  
                                         __end_of___lbtoft 15AC  
                                _save_temperature_c_EEPROM 1660  
                                                   _OSCCON 0FD3  
                                                   _TMR0IE 7F95  
                                                   _TMR0IF 7F92  
                                                   _TMR0ON 7EAF  
                                                   _TRISA2 7C92  
                                                   _TRISB0 7C98  
                                                   _TRISA3 7C93  
                                                   _TRISC2 7CA2  
                                                   _SWDTEN 7E88  
                                    __end_of_DireccionaLCD 1632  
                                               _RetardoLCD 138E  
choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1 0046  
choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2 0047  
                            send_temperature_RS232@counter 0028  
                                                ??___ftadd 0031  
                                                ??___ftdiv 0022  
                                                ??___ftmul 0013  
                                                ??___fttol 003B  
                                                ??___lwdiv 0005  
                                                ??___lwmod 000C  
                                          ??_InicializaLCD 0005  
                                                   isa$std 0001  
                                     __end_of_EscribeLCD_c 161C  
                                    ___ftmul@f3_as_product 0017  
                                             __pdataCOMRAM 004B  
                                             __mediumconst 0000  
                                   _send_temperature_RS232 1446  
                                                   tblptrh 0FF7  
                                                   tblptrl 0FF6  
                                                   tblptru 0FF8  
                                                ??_sprintf 0013  
                                               _Transmitir 1654  
                                   _show_temperature_c_RGB 12BA  
                                               __accesstop 0060  
                                  __end_of__initialization 157A  
                                               ___ftadd@f1 002B  
                                               ___ftadd@f2 002E  
                                            ___rparam_used 0001  
                                               ___ftdiv@f1 001C  
                                               ___ftdiv@f2 001F  
                                               ___ftdiv@f3 0026  
                               __end_of_welcome_operations 155E  
                                               ___lbtoft@c 000C  
                                               ___ftmul@f1 000D  
                                               ___ftmul@f2 0010  
                                               ___fttol@f1 0037  
                                           __pcstackCOMRAM 0001  
                                        __end_of_EnviaDato 14DC  
                                                ?_BorraLCD 0001  
                                           _MensajeLCD_Var 11B4  
                               __end_of_init_configuration 12BA  
                                               __pbssBANK0 0084  
                                          MensajeLCD_Var@a 0006  
                                              ?_RetardoLCD 0001  
                                              RetardoLCD@a 0002  
                                                  _BAUDCON 0FB8  
                                                ?___ftpack 0001  
                                                ?___lbtoft 0009  
                                   __end_of_MensajeLCD_Var 1238  
                                               ??_BorraLCD 0005  
                                              ?_Transmitir 0001  
                                             ?_HabilitaLCD 0001  
                                             _ConfiguraLCD 15EE  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                                  ___ftadd 0A42  
                                                  ___ftdiv 0E2A  
                                                  ___ftmul 0D36  
                                                  ___fttol 0F10  
                                                  ___lwdiv 13F4  
                                                  ___lwmod 14DC  
                                             __psmallconst 0800  
                                                  __pcinit 155E  
                                               ??___ftpack 0006  
                                               ??___lbtoft 000C  
                                                  __ramtop 0800  
                                                  __ptext0 1326  
                                                  __ptext1 151E  
                                                  __ptext2 11B4  
                                                  __ptext3 12BA  
                                                  __ptext4 112C  
                                                  __ptext5 1606  
                                                  __ptext6 161C  
                                                  __ptext7 1446  
                                                  __ptext8 1654  
                                                  __ptext9 1660  
                                                  _dpowers 0801  
                      __end_of_check_potentiometer_voltaje 15EE  
                              _check_potentiometer_voltaje 15D0  
                                          ?_MensajeLCD_Var 0006  
                                                  _sprintf 0BEA  
                                           __pintcode_body 15AC  
                                     end_of_initialization 157A  
                            ??_check_potentiometer_voltaje 0001  
                                            __Lmediumconst 0000  
                                                  int_func 15AC  
                                             _EscribeLCD_c 1606  
                                                  postdec2 0FDD  
                        __end_of_save_temperature_c_EEPROM 1662  
                                                  postinc2 0FDE  
                                  ?_send_temperature_RS232 0001  
                                  ?_show_temperature_c_RGB 0001  
                                               main@Hum_n1 0083  
                                              ___ftdiv@exp 0029  
                                              ___ftmul@exp 0016  
                           __end_of_send_temperature_RS232 1496  
                              show_temperature_LCD@Temp_n1 0008  
                                            __pidataCOMRAM 1662  
                                    __end_of_InicializaLCD 112C  
                                       _welcome_operations 151E  
                                                _EnviaDato 1496  
                           __end_of_show_temperature_c_RGB 1326  
                                      start_initialization 155E  
                                              __end_of_ISR 15D0  
                                      ?_welcome_operations 0001  
                              show_temperature_LCD@counter 000A  
                                             ??_RetardoLCD 0001  
                                     ??_welcome_operations 0009  
                                       _init_configuration 1238  
                                      ?_init_configuration 0001  
                                            _Enable_sample 0084  
                                               ?_EnviaDato 0001  
                                              __pbssCOMRAM 004A  
                                       __end_of_RetardoLCD 13F4  
                                            __pcstackBANK0 0060  
                             __end_of_show_temperature_LCD 11B4  
                                             ??_Transmitir 0001  
                                     ??_init_configuration 0005  
                                              sprintf@flag 0014  
                                              sprintf@prec 0015  
                                            _DireccionaLCD 161C  
                                         ___lwdiv@dividend 0001  
                                                __pintcode 0008  
                                                 ?___ftadd 002B  
                                                 ?___ftdiv 001C  
                                                 ?___ftmul 000D  
                                                 ?___fttol 0037  
                                                 ?___lwdiv 0001  
                                                 ?___lwmod 0008  
                                       __end_of_Transmitir 1660  
                                         ??_MensajeLCD_Var 0007  
                       send_temperature_RS232@buffer_RS232 001C  
                                              __smallconst 0800  
                                         ___lwdiv@quotient 0005  
                                                 ?_sprintf 000D  
                                           ?_DireccionaLCD 0001  
                                                 i2u207_40 15C4  
                                                 i2u208_45 15C6  
                                              ??_EnviaDato 0003  
                               show_temperature_LCD@Hum_n1 0009  
                                                 _BorraLCD 1632  
                                                 __Hrparam 0000  
                                                 __Lrparam 0000  
                                     _show_temperature_LCD 112C  
                               ?_save_temperature_c_EEPROM 0001  
                                                 ___ftpack 0FE2  
                                                 ___lbtoft 1588  
                                            ConfiguraLCD@a 0001  
                                               sprintf@val 0017  
                                          ___lwdiv@divisor 0003  
                                          ___lwdiv@counter 0007  
                                                 __ptext10 1238  
                                                 __ptext11 1090  
                                                 __ptext20 13F4  
                                                 __ptext12 1632  
                                                 __ptext21 1588  
                                                 __ptext13 1496  
                                                 __ptext22 0F10  
                                                 __ptext14 138E  
                                                 __ptext23 0D36  
                                                 __ptext15 1646  
                                                 __ptext24 0E2A  
                                                 __ptext16 15EE  
                                                 __ptext25 0A42  
                                                 __ptext17 0862  
                                                 __ptext26 0FE2  
                                                 __ptext18 0BEA  
                                                 __ptext27 15D0  
                                                 __ptext19 14DC  
                                          ??_DireccionaLCD 0005  
                                                 _interfaz 004B  
                                                 isa$xinst 0000  
                                    ?_show_temperature_LCD 0006  
                                                 int$flags 004C  
                     show_temperature_LCD@buffer_LCD_row_1 0006  
                     show_temperature_LCD@buffer_LCD_row_2 0007  
                                                 intlevel2 0000  
                                                sprintf@ap 0016  
                                            ??_HabilitaLCD 0001  
                                                sprintf@sp 000D  
                                         ___lwmod@dividend 0008  
                                            ?_ConfiguraLCD 0001  
                                                 sprintf@c 0019  
                                                 sprintf@f 000E  
                                          ___lwmod@divisor 000A  
                                          ___lwmod@counter 000C  
                             ?_check_potentiometer_voltaje 0001  
                                           ??_ConfiguraLCD 0001  
                                            ?_EscribeLCD_c 0001  
                                 ??_send_temperature_RS232 001A  
                                      __end_of_HabilitaLCD 1654  
                                   ??_show_temperature_LCD 000A  
