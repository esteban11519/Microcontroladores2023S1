

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun  4 02:22:11 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 09/02/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4550 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataCOMRAM
    94   001930                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _interfaz
    98   001930  08                 	db	8
    99                           
   100                           	psect	smallconst
   101   000800                     __psmallconst:
   102                           	callstack 0
   103   000800  00                 	db	0
   104   000801                     _dpowers:
   105                           	callstack 0
   106   000801  0001               	dw	1
   107   000803  000A               	dw	10
   108   000805  0064               	dw	100
   109   000807  03E8               	dw	1000
   110   000809  2710               	dw	10000
   111   00080B                     __end_of_dpowers:
   112                           	callstack 0
   113   000000                     _EECON2	set	4007
   114   000000                     _TRISD	set	3989
   115   000000                     _TRISB0	set	31896
   116   000000                     _TRISC2	set	31906
   117   000000                     _RD	set	32048
   118   000000                     _WR	set	32049
   119   000000                     _TRMT	set	32097
   120   000000                     _RA3	set	31747
   121   000000                     _RA2	set	31746
   122   000000                     _RE1	set	31777
   123   000000                     _RE2	set	31778
   124   000000                     _GO	set	32273
   125   000000                     _ADON	set	32272
   126   000000                     _TRISA4	set	31892
   127   000000                     _TMR0ON	set	32431
   128   000000                     _GIE	set	32663
   129   000000                     _TMR0IE	set	32661
   130   000000                     _TRISA3	set	31891
   131   000000                     _LATD1	set	31841
   132   000000                     _LATD0	set	31840
   133   000000                     _LATD	set	3980
   134   000000                     _RA4	set	31748
   135   000000                     _LATB0	set	31824
   136   000000                     _LATC2	set	31834
   137   000000                     _LATE	set	3981
   138   000000                     _TRISE	set	3990
   139   000000                     _RCSTA	set	4011
   140   000000                     _TXSTA	set	4012
   141   000000                     _TRISA2	set	31890
   142   000000                     _SWDTEN	set	32392
   143   000000                     _OSCCON	set	4051
   144   000000                     _T0CON	set	4053
   145   000000                     _TXREG	set	4013
   146   000000                     _SPBRG	set	4015
   147   000000                     _BAUDCON	set	4024
   148   000000                     _ADCON2	set	4032
   149   000000                     _ADCON1	set	4033
   150   000000                     _ADRES	set	4035
   151   000000                     _ADCON0	set	4034
   152   000000                     _TO	set	32387
   153   000000                     _EEDATA	set	4008
   154   000000                     _EEADR	set	4009
   155   000000                     _WREN	set	32050
   156   000000                     _TMR0	set	4054
   157   000000                     _TMR0IF	set	32658
   158   000000                     _RC2	set	31762
   159   000000                     _RE0	set	31776
   160   000000                     _RB0	set	31752
   161   000000                     _LATA4	set	31820
   162   00080B                     STR_4:
   163   00080B  4C                 	db	76	;'L'
   164   00080C  61                 	db	97	;'a'
   165   00080D  73                 	db	115	;'s'
   166   00080E  74                 	db	116	;'t'
   167   00080F  20                 	db	32
   168   000810  54                 	db	84	;'T'
   169   000811  65                 	db	101	;'e'
   170   000812  6D                 	db	109	;'m'
   171   000813  70                 	db	112	;'p'
   172   000814  65                 	db	101	;'e'
   173   000815  74                 	db	116	;'t'
   174   000816  61                 	db	97	;'a'
   175   000817  74                 	db	116	;'t'
   176   000818  75                 	db	117	;'u'
   177   000819  72                 	db	114	;'r'
   178   00081A  65                 	db	101	;'e'
   179   00081B  00                 	db	0
   180   00081C                     STR_1:
   181   00081C  46                 	db	70	;'F'
   182   00081D  61                 	db	97	;'a'
   183   00081E  69                 	db	105	;'i'
   184   00081F  6C                 	db	108	;'l'
   185   000820  65                 	db	101	;'e'
   186   000821  64                 	db	100	;'d'
   187   000822  20                 	db	32
   188   000823  44                 	db	68	;'D'
   189   000824  48                 	db	72	;'H'
   190   000825  54                 	db	84	;'T'
   191   000826  31                 	db	49	;'1'
   192   000827  31                 	db	49	;'1'
   193   000828  00                 	db	0
   194   000829                     STR_3:
   195   000829  0A                 	db	10
   196   00082A  47                 	db	71	;'G'
   197   00082B  6F                 	db	111	;'o'
   198   00082C  64                 	db	100	;'d'
   199   00082D  20                 	db	32
   200   00082E  69                 	db	105	;'i'
   201   00082F  73                 	db	115	;'s'
   202   000830  20                 	db	32
   203   000831  67                 	db	103	;'g'
   204   000832  6F                 	db	111	;'o'
   205   000833  6F                 	db	111	;'o'
   206   000834  64                 	db	100	;'d'
   207   000835  00                 	db	0
   208   000836                     STR_15:
   209   000836  54                 	db	84	;'T'
   210   000837  3A                 	db	58	;':'
   211   000838  20                 	db	32
   212   000839  25                 	db	37
   213   00083A  69                 	db	105	;'i'
   214   00083B  20                 	db	32
   215   00083C  43                 	db	67	;'C'
   216   00083D  0A                 	db	10
   217   00083E  00                 	db	0
   218   00083F                     STR_11:
   219   00083F  54                 	db	84	;'T'
   220   000840  3A                 	db	58	;':'
   221   000841  20                 	db	32
   222   000842  25                 	db	37
   223   000843  69                 	db	105	;'i'
   224   000844  20                 	db	32
   225   000845  52                 	db	82	;'R'
   226   000846  61                 	db	97	;'a'
   227   000847  00                 	db	0
   228   000848                     STR_8:
   229   000848  48                 	db	72	;'H'
   230   000849  3A                 	db	58	;':'
   231   00084A  20                 	db	32
   232   00084B  25                 	db	37
   233   00084C  69                 	db	105	;'i'
   234   00084D  20                 	db	32
   235   00084E  25                 	db	37
   236   00084F  63                 	db	99	;'c'
   237   000850  00                 	db	0
   238   000851                     STR_7:
   239   000851  54                 	db	84	;'T'
   240   000852  3A                 	db	58	;':'
   241   000853  20                 	db	32
   242   000854  25                 	db	37
   243   000855  69                 	db	105	;'i'
   244   000856  20                 	db	32
   245   000857  43                 	db	67	;'C'
   246   000858  00                 	db	0
   247   000859                     STR_13:
   248   000859  54                 	db	84	;'T'
   249   00085A  3A                 	db	58	;':'
   250   00085B  20                 	db	32
   251   00085C  25                 	db	37
   252   00085D  69                 	db	105	;'i'
   253   00085E  20                 	db	32
   254   00085F  46                 	db	70	;'F'
   255   000860  00                 	db	0
   256   000861                     STR_9:
   257   000861  54                 	db	84	;'T'
   258   000862  3A                 	db	58	;':'
   259   000863  20                 	db	32
   260   000864  25                 	db	37
   261   000865  69                 	db	105	;'i'
   262   000866  20                 	db	32
   263   000867  4B                 	db	75	;'K'
   264   000868  00                 	db	0
   265   000869                     STR_2:
   266   000869  53                 	db	83	;'S'
   267   00086A  65                 	db	101	;'e'
   268   00086B  6E                 	db	110	;'n'
   269   00086C  73                 	db	115	;'s'
   270   00086D  6F                 	db	111	;'o'
   271   00086E  72                 	db	114	;'r'
   272   00086F  73                 	db	115	;'s'
   273   000870  00                 	db	0
   274   000871                     STR_5:
   275   000871  0A                 	db	10
   276   000872  54                 	db	84	;'T'
   277   000873  3A                 	db	58	;':'
   278   000874  20                 	db	32
   279   000875  00                 	db	0
   280   000876  00                 	db	0	; dummy byte at the end
   281   000000                     
   282                           ; #config settings
   283                           
   284                           	psect	cinit
   285   001784                     __pcinit:
   286                           	callstack 0
   287   001784                     start_initialization:
   288                           	callstack 0
   289   001784                     __initialization:
   290                           	callstack 0
   291                           
   292                           ; Initialize objects allocated to COMRAM (1 bytes)
   293                           ; load TBLPTR registers with __pidataCOMRAM
   294   001784  0E30               	movlw	low __pidataCOMRAM
   295   001786  6EF6               	movwf	tblptrl,c
   296   001788  0E19               	movlw	high __pidataCOMRAM
   297   00178A  6EF7               	movwf	tblptrh,c
   298   00178C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   299   00178E  6EF8               	movwf	tblptru,c
   300   001790  0009               	tblrd		*+	;fetch initializer
   301   001792  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   302                           
   303                           ; Clear objects allocated to BANK0 (4 bytes)
   304   001796  0100               	movlb	0
   305   001798  6B88               	clrf	(__pbssBANK0+3)& (0+255),b
   306   00179A  6B87               	clrf	(__pbssBANK0+2)& (0+255),b
   307   00179C  6B86               	clrf	(__pbssBANK0+1)& (0+255),b
   308   00179E  6B85               	clrf	__pbssBANK0& (0+255),b
   309                           
   310                           ; Clear objects allocated to COMRAM (1 bytes)
   311   0017A0  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   312   0017A2                     end_of_initialization:
   313                           	callstack 0
   314   0017A2                     __end_of__initialization:
   315                           	callstack 0
   316   0017A2  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   317   0017A4  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   318   0017A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   319   0017A8  6EF8               	movwf	tblptru,c
   320   0017AA  0100               	movlb	0
   321   0017AC  EF66  F00A         	goto	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMRAM
   324   00004B                     __pbssCOMRAM:
   325                           	callstack 0
   326   00004B                     _Che:
   327                           	callstack 0
   328   00004B                     	ds	1
   329                           
   330                           	psect	dataCOMRAM
   331   00004C                     __pdataCOMRAM:
   332                           	callstack 0
   333   00004C                     _interfaz:
   334                           	callstack 0
   335   00004C                     	ds	1
   336                           
   337                           	psect	bssBANK0
   338   000085                     __pbssBANK0:
   339                           	callstack 0
   340   000085                     _Scale_Temperature:
   341                           	callstack 0
   342   000085                     	ds	1
   343   000086                     _Enable_sample:
   344                           	callstack 0
   345   000086                     	ds	1
   346   000087                     _Hum:
   347                           	callstack 0
   348   000087                     	ds	1
   349   000088                     _Temp:
   350                           	callstack 0
   351   000088                     	ds	1
   352                           
   353                           	psect	cstackBANK0
   354   000060                     __pcstackBANK0:
   355                           	callstack 0
   356   000060                     main@buffer_LCD_row_1:
   357                           	callstack 0
   358                           
   359                           ; 17 bytes @ 0x0
   360   000060                     	ds	17
   361   000071                     main@buffer_LCD_row_2:
   362                           	callstack 0
   363                           
   364                           ; 17 bytes @ 0x11
   365   000071                     	ds	17
   366   000082                     main@Temp_n1:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x22
   370   000082                     	ds	1
   371   000083                     main@Hum_n1:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x23
   375   000083                     	ds	1
   376   000084                     main@Scale_Temperature_n1:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x24
   380   000084                     	ds	1
   381                           
   382                           	psect	cstackCOMRAM
   383   000001                     __pcstackCOMRAM:
   384                           	callstack 0
   385   000001                     ??_RetardoLCD:
   386   000001                     ??_DHT11_Start:
   387   000001                     ??_DHT11_CheckResponse:
   388   000001                     ??_DHT11_ReadData:
   389   000001                     ?___lwdiv:
   390                           	callstack 0
   391   000001                     ?___ftpack:
   392                           	callstack 0
   393   000001                     ConfiguraLCD@a:
   394                           	callstack 0
   395   000001                     Transmitir@BufferT:
   396                           	callstack 0
   397   000001                     EEPROM_Write@data:
   398                           	callstack 0
   399   000001                     EEPROM_Read@address:
   400                           	callstack 0
   401   000001                     ___lbmod@divisor:
   402                           	callstack 0
   403   000001                     ___lwdiv@dividend:
   404                           	callstack 0
   405   000001                     ___ftpack@arg:
   406                           	callstack 0
   407                           
   408                           ; 3 bytes @ 0x0
   409   000001                     	ds	1
   410   000002                     RetardoLCD@a:
   411                           	callstack 0
   412   000002                     DHT11_ReadData@i:
   413                           	callstack 0
   414   000002                     EEPROM_Write@address:
   415                           	callstack 0
   416   000002                     ___lbmod@dividend:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x1
   420   000002                     	ds	1
   421   000003                     ??_EnviaDato:
   422   000003                     DHT11_ReadData@data:
   423                           	callstack 0
   424   000003                     ___lbmod@counter:
   425                           	callstack 0
   426   000003                     ___lwdiv@divisor:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x2
   430   000003                     	ds	1
   431   000004                     EnviaDato@a:
   432                           	callstack 0
   433   000004                     ___ftpack@exp:
   434                           	callstack 0
   435   000004                     ___lbmod@rem:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x3
   439   000004                     	ds	1
   440   000005                     ??_init_configuration:
   441   000005                     EscribeLCD_c@a:
   442                           	callstack 0
   443   000005                     DireccionaLCD@a:
   444                           	callstack 0
   445   000005                     ___ftpack@sign:
   446                           	callstack 0
   447   000005                     ___lbdiv@divisor:
   448                           	callstack 0
   449   000005                     ___lwdiv@quotient:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x4
   453   000005                     	ds	1
   454   000006                     ??___ftpack:
   455   000006                     MensajeLCD_Var@a:
   456                           	callstack 0
   457   000006                     show_temperature_LCD@buffer_LCD_row_1:
   458                           	callstack 0
   459   000006                     ___lbdiv@dividend:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x5
   463   000006                     	ds	1
   464   000007                     ??_MensajeLCD_Var:
   465   000007                     show_temperature_LCD@buffer_LCD_row_2:
   466                           	callstack 0
   467   000007                     ___lbdiv@counter:
   468                           	callstack 0
   469   000007                     ___lwdiv@counter:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x6
   473   000007                     	ds	1
   474   000008                     ?___lwmod:
   475                           	callstack 0
   476   000008                     MensajeLCD_Var@counter:
   477                           	callstack 0
   478   000008                     show_temperature_LCD@Temp_n1:
   479                           	callstack 0
   480   000008                     ___lbdiv@quotient:
   481                           	callstack 0
   482   000008                     ___lwmod@dividend:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x7
   486   000008                     	ds	1
   487   000009                     ?___lbtoft:
   488                           	callstack 0
   489   000009                     EscribeLCD_n8@b:
   490                           	callstack 0
   491   000009                     show_temperature_LCD@Hum_n1:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x8
   495   000009                     	ds	1
   496   00000A                     EscribeLCD_n8@centena:
   497                           	callstack 0
   498   00000A                     show_temperature_LCD@Scale_Temperature_n1:
   499                           	callstack 0
   500   00000A                     ___lwmod@divisor:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x9
   504   00000A                     	ds	1
   505   00000B                     EscribeLCD_n8@decena:
   506                           	callstack 0
   507   00000B                     show_temperature_LCD@counter:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0xA
   511   00000B                     	ds	1
   512   00000C                     EscribeLCD_n8@unidad:
   513                           	callstack 0
   514   00000C                     ___lbtoft@c:
   515                           	callstack 0
   516   00000C                     ___lwmod@counter:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0xB
   520   00000C                     	ds	1
   521   00000D                     ?_sprintf:
   522                           	callstack 0
   523   00000D                     ?___ftmul:
   524                           	callstack 0
   525   00000D                     EscribeLCD_n8@a:
   526                           	callstack 0
   527   00000D                     sprintf@sp:
   528                           	callstack 0
   529   00000D                     ___ftmul@f1:
   530                           	callstack 0
   531                           
   532                           ; 3 bytes @ 0xC
   533   00000D                     	ds	1
   534   00000E                     ??_welcome_operations:
   535   00000E                     sprintf@f:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0xD
   539   00000E                     	ds	2
   540   000010                     ___ftmul@f2:
   541                           	callstack 0
   542                           
   543                           ; 3 bytes @ 0xF
   544   000010                     	ds	3
   545   000013                     ??_sprintf:
   546   000013                     ??___ftmul:
   547                           
   548                           ; 1 bytes @ 0x12
   549   000013                     	ds	1
   550   000014                     sprintf@flag:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x13
   554   000014                     	ds	1
   555   000015                     sprintf@prec:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x14
   559   000015                     	ds	1
   560   000016                     sprintf@ap:
   561                           	callstack 0
   562   000016                     ___ftmul@exp:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x15
   566   000016                     	ds	1
   567   000017                     sprintf@val:
   568                           	callstack 0
   569   000017                     ___ftmul@f3_as_product:
   570                           	callstack 0
   571                           
   572                           ; 3 bytes @ 0x16
   573   000017                     	ds	2
   574   000019                     sprintf@c:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x18
   578   000019                     	ds	1
   579   00001A                     ??_send_temperature_RS232:
   580   00001A                     ___ftmul@cntr:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x19
   584   00001A                     	ds	1
   585   00001B                     ___ftmul@sign:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x1A
   589   00001B                     	ds	1
   590   00001C                     ?___ftdiv:
   591                           	callstack 0
   592   00001C                     ___ftdiv@f1:
   593                           	callstack 0
   594   00001C                     send_temperature_RS232@buffer_RS232:
   595                           	callstack 0
   596                           
   597                           ; 12 bytes @ 0x1B
   598   00001C                     	ds	3
   599   00001F                     ___ftdiv@f2:
   600                           	callstack 0
   601                           
   602                           ; 3 bytes @ 0x1E
   603   00001F                     	ds	3
   604   000022                     ??___ftdiv:
   605                           
   606                           ; 1 bytes @ 0x21
   607   000022                     	ds	3
   608   000025                     ___ftdiv@cntr:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x24
   612   000025                     	ds	1
   613   000026                     ___ftdiv@f3:
   614                           	callstack 0
   615                           
   616                           ; 3 bytes @ 0x25
   617   000026                     	ds	2
   618   000028                     send_temperature_RS232@counter:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x27
   622   000028                     	ds	1
   623   000029                     ___ftdiv@exp:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x28
   627   000029                     	ds	1
   628   00002A                     ___ftdiv@sign:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x29
   632   00002A                     	ds	1
   633   00002B                     ?___ftadd:
   634                           	callstack 0
   635   00002B                     ___ftadd@f1:
   636                           	callstack 0
   637                           
   638                           ; 3 bytes @ 0x2A
   639   00002B                     	ds	3
   640   00002E                     ___ftadd@f2:
   641                           	callstack 0
   642                           
   643                           ; 3 bytes @ 0x2D
   644   00002E                     	ds	3
   645   000031                     ??___ftadd:
   646                           
   647                           ; 1 bytes @ 0x30
   648   000031                     	ds	3
   649   000034                     ___ftadd@sign:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x33
   653   000034                     	ds	1
   654   000035                     ___ftadd@exp2:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x34
   658   000035                     	ds	1
   659   000036                     ___ftadd@exp1:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x35
   663   000036                     	ds	1
   664   000037                     ?___fttol:
   665                           	callstack 0
   666   000037                     ___fttol@f1:
   667                           	callstack 0
   668                           
   669                           ; 3 bytes @ 0x36
   670   000037                     	ds	4
   671   00003B                     ??___fttol:
   672                           
   673                           ; 1 bytes @ 0x3A
   674   00003B                     	ds	5
   675   000040                     ___fttol@sign1:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x3F
   679   000040                     	ds	1
   680   000041                     ___fttol@lval:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x40
   684   000041                     	ds	4
   685   000045                     ___fttol@exp1:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x44
   689   000045                     	ds	1
   690   000046                     choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x45
   694   000046                     	ds	1
   695   000047                     choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x46
   699   000047                     	ds	1
   700   000048                     ??_choose_scale_temperature_and_fill_buffers:
   701                           
   702                           ; 1 bytes @ 0x47
   703   000048                     	ds	1
   704   000049                     choose_scale_temperature_and_fill_buffers@temp_converted:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x48
   708   000049                     	ds	2
   709   00004B                     
   710                           ; 1 bytes @ 0x4A
   711 ;;
   712 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   713 ;;
   714 ;; *************** function _main *****************
   715 ;; Defined at:
   716 ;;		line 86 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  buffer_LCD_r   17   17[BANK0 ] unsigned char [17]
   721 ;;  buffer_LCD_r   17    0[BANK0 ] unsigned char [17]
   722 ;;  Scale_Temper    1   36[BANK0 ] unsigned char 
   723 ;;  Hum_n1          1   35[BANK0 ] unsigned char 
   724 ;;  Temp_n1         1   34[BANK0 ] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 3F/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   734 ;;      Params:         0       0       0       0       0       0       0       0       0
   735 ;;      Locals:         0      37       0       0       0       0       0       0       0
   736 ;;      Temps:          0       0       0       0       0       0       0       0       0
   737 ;;      Totals:         0      37       0       0       0       0       0       0       0
   738 ;;Total ram usage:       37 bytes
   739 ;; Hardware stack levels required when called: 6
   740 ;; This function calls:
   741 ;;		_check_potentiometer_voltaje
   742 ;;		_choose_scale_temperature_and_fill_buffers
   743 ;;		_init_configuration
   744 ;;		_measure_temperature_c_humidity_per
   745 ;;		_save_temperature_c_EEPROM
   746 ;;		_send_temperature_RS232
   747 ;;		_show_temperature_LCD
   748 ;;		_show_temperature_c_RGB
   749 ;;		_welcome_operations
   750 ;; This function is called by:
   751 ;;		Startup code after reset
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text0
   756   0014CC                     __ptext0:
   757                           	callstack 0
   758   0014CC                     _main:
   759                           	callstack 25
   760                           
   761                           ;LAB05.c: 87: init_configuration();
   762                           
   763                           ;incstack = 0
   764   0014CC  ECB2  F009         	call	_init_configuration	;wreg free
   765                           
   766                           ;LAB05.c: 88: welcome_operations();
   767   0014D0  ECF2  F009         	call	_welcome_operations	;wreg free
   768                           
   769                           ;LAB05.c: 91: SWDTEN = 1;
   770   0014D4  80D1               	bsf	4049,0,c	;volatile
   771                           
   772                           ;LAB05.c: 95: unsigned char buffer_LCD_row_1[17];;LAB05.c: 96: unsigned char buffer_LCD_
      +                          row_2[17];;LAB05.c: 99: unsigned char Temp_n1=255;
   773   0014D6  0100               	movlb	0	; () banked
   774   0014D8  6982               	setf	main@Temp_n1& (0+255),b
   775                           
   776                           ; BSR set to: 0
   777                           ;LAB05.c: 100: unsigned char Hum_n1=255;
   778   0014DA  6983               	setf	main@Hum_n1& (0+255),b
   779                           
   780                           ; BSR set to: 0
   781                           ;LAB05.c: 101: unsigned char Scale_Temperature_n1=255;
   782   0014DC  6984               	setf	main@Scale_Temperature_n1& (0+255),b
   783   0014DE                     l2956:
   784                           
   785                           ; BSR set to: 0
   786                           ;LAB05.c: 105: if(Enable_sample){
   787   0014DE  5186               	movf	_Enable_sample& (0+255),w,b
   788   0014E0  B4D8               	btfsc	status,2,c
   789   0014E2  D7FD               	goto	l2956
   790                           
   791                           ; BSR set to: 0
   792                           ;LAB05.c: 110: measure_temperature_c_humidity_per();
   793   0014E4  ECED  F00B         	call	_measure_temperature_c_humidity_per	;wreg free
   794   0014E8  0004               	clrwdt		;# 
   795                           
   796                           ;LAB05.c: 112: send_temperature_RS232();
   797   0014EA  EC20  F00B         	call	_send_temperature_RS232	;wreg free
   798                           
   799                           ;LAB05.c: 113: save_temperature_c_EEPROM();
   800   0014EE  EC92  F00C         	call	_save_temperature_c_EEPROM	;wreg free
   801                           
   802                           ;LAB05.c: 114: choose_scale_temperature_and_fill_buffers(buffer_LCD_row_1,buffer_LCD_row
      +                          _2);
   803   0014F2  0E60               	movlw	low main@buffer_LCD_row_1
   804   0014F4  6E46               	movwf	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1^0,c
   805   0014F6  0E71               	movlw	low main@buffer_LCD_row_2
   806   0014F8  6E47               	movwf	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2^0,c
   807   0014FA  EC3C  F004         	call	_choose_scale_temperature_and_fill_buffers	;wreg free
   808                           
   809                           ;LAB05.c: 115: show_temperature_c_RGB();
   810   0014FE  EC30  F00A         	call	_show_temperature_c_RGB	;wreg free
   811                           
   812                           ; BSR set to: 0
   813                           ;LAB05.c: 116: show_temperature_LCD(buffer_LCD_row_1, buffer_LCD_row_2, Temp_n1, Hum_n1,
      +                           Scale_Temperature_n1);
   814   001502  0E60               	movlw	low main@buffer_LCD_row_1
   815   001504  6E06               	movwf	show_temperature_LCD@buffer_LCD_row_1^0,c
   816   001506  0E71               	movlw	low main@buffer_LCD_row_2
   817   001508  6E07               	movwf	show_temperature_LCD@buffer_LCD_row_2^0,c
   818   00150A  C082  F008         	movff	main@Temp_n1,show_temperature_LCD@Temp_n1
   819   00150E  C083  F009         	movff	main@Hum_n1,show_temperature_LCD@Hum_n1
   820   001512  C084  F00A         	movff	main@Scale_Temperature_n1,show_temperature_LCD@Scale_Temperature_n1
   821   001516  EC28  F009         	call	_show_temperature_LCD	;wreg free
   822                           
   823                           ;LAB05.c: 117: check_potentiometer_voltaje();
   824   00151A  EC44  F00C         	call	_check_potentiometer_voltaje	;wreg free
   825                           
   826                           ;LAB05.c: 118: Enable_sample = 0;
   827   00151E  0E00               	movlw	0
   828   001520  0100               	movlb	0	; () banked
   829   001522  6F86               	movwf	_Enable_sample& (0+255),b
   830                           
   831                           ; BSR set to: 0
   832                           ;LAB05.c: 121: Temp_n1=Temp;
   833   001524  C088  F082         	movff	_Temp,main@Temp_n1
   834                           
   835                           ; BSR set to: 0
   836                           ;LAB05.c: 122: Hum_n1=Hum;
   837   001528  C087  F083         	movff	_Hum,main@Hum_n1
   838                           
   839                           ; BSR set to: 0
   840                           ;LAB05.c: 123: Scale_Temperature_n1=Scale_Temperature;
   841   00152C  C085  F084         	movff	_Scale_Temperature,main@Scale_Temperature_n1
   842   001530  D7D6               	goto	l2956
   843   001532                     __end_of_main:
   844                           	callstack 0
   845                           
   846 ;; *************** function _welcome_operations *****************
   847 ;; Defined at:
   848 ;;		line 202 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   862 ;;      Params:         0       0       0       0       0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0       0       0       0       0
   864 ;;      Temps:          2       0       0       0       0       0       0       0       0
   865 ;;      Totals:         2       0       0       0       0       0       0       0       0
   866 ;;Total ram usage:        2 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; Hardware stack levels required when called: 5
   869 ;; This function calls:
   870 ;;		_BorraLCD
   871 ;;		_EEPROM_Read
   872 ;;		_EscribeLCD_n8
   873 ;;		_MensajeLCD_Var
   874 ;; This function is called by:
   875 ;;		_main
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text1
   880   0013E4                     __ptext1:
   881                           	callstack 0
   882   0013E4                     _welcome_operations:
   883                           	callstack 25
   884                           
   885                           ;LAB05.c: 206: if(TO==0){
   886                           
   887                           ; BSR set to: 0
   888                           ;incstack = 0
   889   0013E4  B6D0               	btfsc	4048,3,c	;volatile
   890   0013E6  D006               	goto	l2772
   891                           
   892                           ;LAB05.c: 207: TO=1;
   893   0013E8  86D0               	bsf	4048,3,c	;volatile
   894                           
   895                           ;LAB05.c: 208: MensajeLCD_Var("Failed DHT11");
   896   0013EA  0E1C               	movlw	low STR_1
   897   0013EC  6E06               	movwf	MensajeLCD_Var@a^0,c
   898   0013EE  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   899   0013F2  0003               	sleep		;# 
   900   0013F4                     l2772:
   901                           
   902                           ;LAB05.c: 210: };LAB05.c: 212: BorraLCD();
   903   0013F4  EC75  F00C         	call	_BorraLCD	;wreg free
   904                           
   905                           ;LAB05.c: 213: MensajeLCD_Var("Sensors");
   906   0013F8  0E69               	movlw	low STR_2
   907   0013FA  6E06               	movwf	MensajeLCD_Var@a^0,c
   908   0013FC  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   909                           
   910                           ;LAB05.c: 214: MensajeLCD_Var("\nGod is good");
   911   001400  0E29               	movlw	low STR_3
   912   001402  6E06               	movwf	MensajeLCD_Var@a^0,c
   913   001404  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   914                           
   915                           ;LAB05.c: 215: _delay((unsigned long)((1000)*(8000000/4000.0)));
   916   001408  0E0B               	movlw	11
   917   00140A  6E0F               	movwf	(??_welcome_operations+1)^0,c
   918   00140C  0E26               	movlw	38
   919   00140E  6E0E               	movwf	??_welcome_operations^0,c
   920   001410  0E5E               	movlw	94
   921   001412                     u2577:
   922   001412  2EE8               	decfsz	wreg,f,c
   923   001414  D7FE               	bra	u2577
   924   001416  2E0E               	decfsz	??_welcome_operations^0,f,c
   925   001418  D7FC               	bra	u2577
   926   00141A  2E0F               	decfsz	(??_welcome_operations+1)^0,f,c
   927   00141C  D7FA               	bra	u2577
   928                           
   929                           ;LAB05.c: 218: BorraLCD();
   930   00141E  EC75  F00C         	call	_BorraLCD	;wreg free
   931                           
   932                           ;LAB05.c: 219: MensajeLCD_Var("Last Tempetature");
   933   001422  0E0B               	movlw	low STR_4
   934   001424  6E06               	movwf	MensajeLCD_Var@a^0,c
   935   001426  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   936                           
   937                           ;LAB05.c: 220: MensajeLCD_Var("\nT: ");
   938   00142A  0E71               	movlw	low STR_5
   939   00142C  6E06               	movwf	MensajeLCD_Var@a^0,c
   940   00142E  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   941                           
   942                           ;LAB05.c: 221: EscribeLCD_n8(EEPROM_Read(0x0),2);
   943   001432  0E02               	movlw	2
   944   001434  6E09               	movwf	EscribeLCD_n8@b^0,c
   945   001436  0E00               	movlw	0
   946   001438  EC86  F00C         	call	_EEPROM_Read
   947   00143C  EC34  F007         	call	_EscribeLCD_n8
   948                           
   949                           ;LAB05.c: 222: MensajeLCD_Var(" C");
   950   001440  0E56               	movlw	low (STR_7+5)
   951   001442  6E06               	movwf	MensajeLCD_Var@a^0,c
   952   001444  EC70  F009         	call	_MensajeLCD_Var	;wreg free
   953                           
   954                           ;LAB05.c: 223: _delay((unsigned long)((1000)*(8000000/4000.0)));
   955   001448  0E0B               	movlw	11
   956   00144A  6E0F               	movwf	(??_welcome_operations+1)^0,c
   957   00144C  0E26               	movlw	38
   958   00144E  6E0E               	movwf	??_welcome_operations^0,c
   959   001450  0E5E               	movlw	94
   960   001452                     u2587:
   961   001452  2EE8               	decfsz	wreg,f,c
   962   001454  D7FE               	bra	u2587
   963   001456  2E0E               	decfsz	??_welcome_operations^0,f,c
   964   001458  D7FC               	bra	u2587
   965   00145A  2E0F               	decfsz	(??_welcome_operations+1)^0,f,c
   966   00145C  D7FA               	bra	u2587
   967   00145E  0012               	return		;funcret
   968   001460                     __end_of_welcome_operations:
   969                           	callstack 0
   970                           
   971 ;; *************** function _MensajeLCD_Var *****************
   972 ;; Defined at:
   973 ;;		line 232 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  a               1    5[COMRAM] PTR unsigned char 
   976 ;;		 -> STR_6(3), STR_5(5), STR_4(17), STR_3(13), 
   977 ;;		 -> STR_2(8), STR_1(13), 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  counter         1    7[COMRAM] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   989 ;;      Params:         1       0       0       0       0       0       0       0       0
   990 ;;      Locals:         1       0       0       0       0       0       0       0       0
   991 ;;      Temps:          1       0       0       0       0       0       0       0       0
   992 ;;      Totals:         3       0       0       0       0       0       0       0       0
   993 ;;Total ram usage:        3 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 4
   996 ;; This function calls:
   997 ;;		_BorraLCD
   998 ;;		_DireccionaLCD
   999 ;;		_EscribeLCD_c
  1000 ;; This function is called by:
  1001 ;;		_welcome_operations
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text2
  1006   0012E0                     __ptext2:
  1007                           	callstack 0
  1008   0012E0                     _MensajeLCD_Var:
  1009                           	callstack 25
  1010                           
  1011                           ;LibLCDXC8.h: 237: unsigned char counter=0;
  1012                           
  1013                           ;incstack = 0
  1014   0012E0  0E00               	movlw	0
  1015   0012E2  6E08               	movwf	MensajeLCD_Var@counter^0,c
  1016                           
  1017                           ;LibLCDXC8.h: 238: while(a[counter]!='\0' && counter<=255){
  1018   0012E4  D032               	goto	l2364
  1019   0012E6                     l2346:
  1020                           
  1021                           ;LibLCDXC8.h: 240: if(a[counter]=='\n'){
  1022   0012E6  5006               	movf	MensajeLCD_Var@a^0,w,c
  1023   0012E8  2408               	addwf	MensajeLCD_Var@counter^0,w,c
  1024   0012EA  6E07               	movwf	??_MensajeLCD_Var^0,c
  1025   0012EC  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1026   0012F0                     	if	1	;There is more than 1 active tblptr byte
  1027   0012F0  0E08               	movlw	high __smallconst
  1028   0012F2  6EF7               	movwf	tblptrh,c
  1029   0012F4                     	endif
  1030   0012F4                     	if	0	;tblptru may be non-zero
  1031   0012F4                     	endif
  1032   0012F4                     	if	0	;tblptru may be non-zero
  1033   0012F4                     	endif
  1034   0012F4  0008               	tblrd		*
  1035   0012F6  50F5               	movf	tablat,w,c
  1036   0012F8  0A0A               	xorlw	10
  1037   0012FA  A4D8               	btfss	status,2,c
  1038   0012FC  D004               	goto	l2352
  1039                           
  1040                           ;LibLCDXC8.h: 241: DireccionaLCD(0xC0);
  1041   0012FE  0EC0               	movlw	192
  1042   001300  EC6A  F00C         	call	_DireccionaLCD
  1043                           
  1044                           ;LibLCDXC8.h: 242: counter++;
  1045   001304  2A08               	incf	MensajeLCD_Var@counter^0,f,c
  1046   001306                     l2352:
  1047                           
  1048                           ;LibLCDXC8.h: 243: };LibLCDXC8.h: 245: if((counter+1)%32==0){
  1049   001306  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
  1050   00130A  0E01               	movlw	1
  1051   00130C  2607               	addwf	??_MensajeLCD_Var^0,f,c
  1052   00130E  0E1F               	movlw	31
  1053   001310  1607               	andwf	??_MensajeLCD_Var^0,f,c
  1054   001312  A4D8               	btfss	status,2,c
  1055   001314  D003               	goto	l2356
  1056                           
  1057                           ;LibLCDXC8.h: 246: BorraLCD();
  1058   001316  EC75  F00C         	call	_BorraLCD	;wreg free
  1059                           
  1060                           ;LibLCDXC8.h: 247: }
  1061   00131A  D00B               	goto	l2360
  1062   00131C                     l2356:
  1063                           
  1064                           ;LibLCDXC8.h: 248: else if((counter+1)%16==0){
  1065   00131C  C008  F007         	movff	MensajeLCD_Var@counter,??_MensajeLCD_Var
  1066   001320  0E01               	movlw	1
  1067   001322  2607               	addwf	??_MensajeLCD_Var^0,f,c
  1068   001324  0E0F               	movlw	15
  1069   001326  1607               	andwf	??_MensajeLCD_Var^0,f,c
  1070   001328  A4D8               	btfss	status,2,c
  1071   00132A  D003               	goto	l2360
  1072                           
  1073                           ;LibLCDXC8.h: 249: DireccionaLCD(0xC0);
  1074   00132C  0EC0               	movlw	192
  1075   00132E  EC6A  F00C         	call	_DireccionaLCD
  1076   001332                     l2360:
  1077                           
  1078                           ;LibLCDXC8.h: 250: };LibLCDXC8.h: 252: EscribeLCD_c(a[counter]);
  1079   001332  5006               	movf	MensajeLCD_Var@a^0,w,c
  1080   001334  2408               	addwf	MensajeLCD_Var@counter^0,w,c
  1081   001336  6E07               	movwf	??_MensajeLCD_Var^0,c
  1082   001338  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1083   00133C                     	if	1	;There is more than 1 active tblptr byte
  1084   00133C  0E08               	movlw	high __smallconst
  1085   00133E  6EF7               	movwf	tblptrh,c
  1086   001340                     	endif
  1087   001340                     	if	0	;tblptru may be non-zero
  1088   001340                     	endif
  1089   001340                     	if	0	;tblptru may be non-zero
  1090   001340                     	endif
  1091   001340  0008               	tblrd		*
  1092   001342  50F5               	movf	tablat,w,c
  1093   001344  EC5F  F00C         	call	_EscribeLCD_c
  1094                           
  1095                           ;LibLCDXC8.h: 253: counter++;
  1096   001348  2A08               	incf	MensajeLCD_Var@counter^0,f,c
  1097   00134A                     l2364:
  1098   00134A  5006               	movf	MensajeLCD_Var@a^0,w,c
  1099   00134C  2408               	addwf	MensajeLCD_Var@counter^0,w,c
  1100   00134E  6E07               	movwf	??_MensajeLCD_Var^0,c
  1101   001350  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1102   001354                     	if	1	;There is more than 1 active tblptr byte
  1103   001354  0E08               	movlw	high __smallconst
  1104   001356  6EF7               	movwf	tblptrh,c
  1105   001358                     	endif
  1106   001358                     	if	0	;tblptru may be non-zero
  1107   001358                     	endif
  1108   001358                     	if	0	;tblptru may be non-zero
  1109   001358                     	endif
  1110   001358  0008               	tblrd		*
  1111   00135A  50F5               	movf	tablat,w,c
  1112   00135C  0900               	iorlw	0
  1113   00135E  B4D8               	btfsc	status,2,c
  1114   001360  0012               	return	
  1115   001362  D7C1               	goto	l2346
  1116   001364                     __end_of_MensajeLCD_Var:
  1117                           	callstack 0
  1118                           
  1119 ;; *************** function _EscribeLCD_n8 *****************
  1120 ;; Defined at:
  1121 ;;		line 145 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  a               1    wreg     unsigned char 
  1124 ;;  b               1    8[COMRAM] unsigned char 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  a               1   12[COMRAM] unsigned char 
  1127 ;;  unidad          1   11[COMRAM] unsigned char 
  1128 ;;  decena          1   10[COMRAM] unsigned char 
  1129 ;;  centena         1    9[COMRAM] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1139 ;;      Params:         1       0       0       0       0       0       0       0       0
  1140 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1142 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1143 ;;Total ram usage:        5 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; Hardware stack levels required when called: 3
  1146 ;; This function calls:
  1147 ;;		_EnviaDato
  1148 ;;		_HabilitaLCD
  1149 ;;		_RetardoLCD
  1150 ;;		___lbdiv
  1151 ;;		___lbmod
  1152 ;; This function is called by:
  1153 ;;		_welcome_operations
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text3
  1158   000E68                     __ptext3:
  1159                           	callstack 0
  1160   000E68                     _EscribeLCD_n8:
  1161                           	callstack 26
  1162                           
  1163                           ;incstack = 0
  1164                           ;EscribeLCD_n8@a stored from wreg
  1165   000E68  6E0D               	movwf	EscribeLCD_n8@a^0,c
  1166                           
  1167                           ;LibLCDXC8.h: 150: unsigned char centena,decena,unidad;;LibLCDXC8.h: 151: LATD0=1;
  1168   000E6A  808C               	bsf	3980,0,c	;volatile
  1169                           
  1170                           ;LibLCDXC8.h: 152: switch(b){
  1171   000E6C  D065               	goto	l2342
  1172   000E6E                     l2310:
  1173   000E6E  0E0A               	movlw	10
  1174   000E70  6E01               	movwf	___lbmod@divisor^0,c
  1175   000E72  500D               	movf	EscribeLCD_n8@a^0,w,c
  1176   000E74  ECD8  F00B         	call	___lbmod
  1177   000E78  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  1178                           
  1179                           ;LibLCDXC8.h: 154: EnviaDato(unidad+48);
  1180   000E7A  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  1181   000E7C  0F30               	addlw	48
  1182   000E7E  EC48  F00B         	call	_EnviaDato
  1183                           
  1184                           ;LibLCDXC8.h: 155: HabilitaLCD();
  1185   000E82  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  1186                           
  1187                           ;LibLCDXC8.h: 156: RetardoLCD(4);
  1188   000E86  0E04               	movlw	4
  1189   000E88  EC99  F00A         	call	_RetardoLCD
  1190                           
  1191                           ;LibLCDXC8.h: 157: break;
  1192   000E8C  0012               	return	
  1193   000E8E                     l2316:
  1194   000E8E  0E0A               	movlw	10
  1195   000E90  6E05               	movwf	___lbdiv@divisor^0,c
  1196   000E92  0E64               	movlw	100
  1197   000E94  6E01               	movwf	___lbmod@divisor^0,c
  1198   000E96  500D               	movf	EscribeLCD_n8@a^0,w,c
  1199   000E98  ECD8  F00B         	call	___lbmod
  1200   000E9C  EC8C  F00B         	call	___lbdiv
  1201   000EA0  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  1202                           
  1203                           ;LibLCDXC8.h: 159: unidad=a%10;
  1204   000EA2  0E0A               	movlw	10
  1205   000EA4  6E01               	movwf	___lbmod@divisor^0,c
  1206   000EA6  500D               	movf	EscribeLCD_n8@a^0,w,c
  1207   000EA8  ECD8  F00B         	call	___lbmod
  1208   000EAC  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  1209                           
  1210                           ;LibLCDXC8.h: 160: EnviaDato(decena+48);
  1211   000EAE  500B               	movf	EscribeLCD_n8@decena^0,w,c
  1212   000EB0  0F30               	addlw	48
  1213   000EB2  EC48  F00B         	call	_EnviaDato
  1214                           
  1215                           ;LibLCDXC8.h: 161: HabilitaLCD();
  1216   000EB6  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  1217                           
  1218                           ;LibLCDXC8.h: 162: RetardoLCD(4);
  1219   000EBA  0E04               	movlw	4
  1220   000EBC  EC99  F00A         	call	_RetardoLCD
  1221                           
  1222                           ;LibLCDXC8.h: 163: EnviaDato(unidad+48);
  1223   000EC0  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  1224   000EC2  0F30               	addlw	48
  1225   000EC4  EC48  F00B         	call	_EnviaDato
  1226                           
  1227                           ;LibLCDXC8.h: 164: HabilitaLCD();
  1228   000EC8  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  1229                           
  1230                           ;LibLCDXC8.h: 165: RetardoLCD(4);
  1231   000ECC  0E04               	movlw	4
  1232   000ECE  EC99  F00A         	call	_RetardoLCD
  1233                           
  1234                           ;LibLCDXC8.h: 166: break;
  1235   000ED2  0012               	return	
  1236   000ED4                     l2326:
  1237   000ED4  0E64               	movlw	100
  1238   000ED6  6E05               	movwf	___lbdiv@divisor^0,c
  1239   000ED8  500D               	movf	EscribeLCD_n8@a^0,w,c
  1240   000EDA  EC8C  F00B         	call	___lbdiv
  1241   000EDE  6E0A               	movwf	EscribeLCD_n8@centena^0,c
  1242                           
  1243                           ;LibLCDXC8.h: 168: decena=(a%100)/10;
  1244   000EE0  0E0A               	movlw	10
  1245   000EE2  6E05               	movwf	___lbdiv@divisor^0,c
  1246   000EE4  0E64               	movlw	100
  1247   000EE6  6E01               	movwf	___lbmod@divisor^0,c
  1248   000EE8  500D               	movf	EscribeLCD_n8@a^0,w,c
  1249   000EEA  ECD8  F00B         	call	___lbmod
  1250   000EEE  EC8C  F00B         	call	___lbdiv
  1251   000EF2  6E0B               	movwf	EscribeLCD_n8@decena^0,c
  1252                           
  1253                           ;LibLCDXC8.h: 169: unidad=a%10;
  1254   000EF4  0E0A               	movlw	10
  1255   000EF6  6E01               	movwf	___lbmod@divisor^0,c
  1256   000EF8  500D               	movf	EscribeLCD_n8@a^0,w,c
  1257   000EFA  ECD8  F00B         	call	___lbmod
  1258   000EFE  6E0C               	movwf	EscribeLCD_n8@unidad^0,c
  1259                           
  1260                           ;LibLCDXC8.h: 170: EnviaDato(centena+48);
  1261   000F00  500A               	movf	EscribeLCD_n8@centena^0,w,c
  1262   000F02  0F30               	addlw	48
  1263   000F04  EC48  F00B         	call	_EnviaDato
  1264                           
  1265                           ;LibLCDXC8.h: 171: HabilitaLCD();
  1266   000F08  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  1267                           
  1268                           ;LibLCDXC8.h: 172: RetardoLCD(4);
  1269   000F0C  0E04               	movlw	4
  1270   000F0E  EC99  F00A         	call	_RetardoLCD
  1271                           
  1272                           ;LibLCDXC8.h: 173: EnviaDato(decena+48);
  1273   000F12  500B               	movf	EscribeLCD_n8@decena^0,w,c
  1274   000F14  0F30               	addlw	48
  1275   000F16  EC48  F00B         	call	_EnviaDato
  1276                           
  1277                           ;LibLCDXC8.h: 174: HabilitaLCD();
  1278   000F1A  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  1279                           
  1280                           ;LibLCDXC8.h: 175: RetardoLCD(4);
  1281   000F1E  0E04               	movlw	4
  1282   000F20  EC99  F00A         	call	_RetardoLCD
  1283                           
  1284                           ;LibLCDXC8.h: 176: EnviaDato(unidad+48);
  1285   000F24  500C               	movf	EscribeLCD_n8@unidad^0,w,c
  1286   000F26  0F30               	addlw	48
  1287   000F28  EC48  F00B         	call	_EnviaDato
  1288                           
  1289                           ;LibLCDXC8.h: 177: HabilitaLCD();
  1290   000F2C  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  1291                           
  1292                           ;LibLCDXC8.h: 178: RetardoLCD(4);
  1293   000F30  0E04               	movlw	4
  1294   000F32  EC99  F00A         	call	_RetardoLCD
  1295                           
  1296                           ;LibLCDXC8.h: 179: break;
  1297   000F36  0012               	return	
  1298   000F38                     l2342:
  1299   000F38  5009               	movf	EscribeLCD_n8@b^0,w,c
  1300                           
  1301                           ; Switch size 1, requested type "simple"
  1302                           ; Number of cases is 3, Range of values is 1 to 3
  1303                           ; switch strategies available:
  1304                           ; Name         Instructions Cycles
  1305                           ; simple_byte           10     6 (average)
  1306                           ;	Chosen strategy is simple_byte
  1307   000F3A  0A01               	xorlw	1	; case 1
  1308   000F3C  B4D8               	btfsc	status,2,c
  1309   000F3E  D797               	goto	l2310
  1310   000F40  0A03               	xorlw	3	; case 2
  1311   000F42  B4D8               	btfsc	status,2,c
  1312   000F44  D7A4               	goto	l2316
  1313   000F46  0A01               	xorlw	1	; case 3
  1314   000F48  A4D8               	btfss	status,2,c
  1315   000F4A  0012               	return	
  1316   000F4C  D7C3               	goto	l2326
  1317   000F4E                     __end_of_EscribeLCD_n8:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function ___lbmod *****************
  1321 ;; Defined at:
  1322 ;;		line 4 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbmod.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  dividend        1    wreg     unsigned char 
  1325 ;;  divisor         1    0[COMRAM] unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  dividend        1    1[COMRAM] unsigned char 
  1328 ;;  rem             1    3[COMRAM] unsigned char 
  1329 ;;  counter         1    2[COMRAM] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      unsigned char 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1339 ;;      Params:         1       0       0       0       0       0       0       0       0
  1340 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1342 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1343 ;;Total ram usage:        4 bytes
  1344 ;; Hardware stack levels used: 1
  1345 ;; Hardware stack levels required when called: 1
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_EscribeLCD_n8
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text4
  1354   0017B0                     __ptext4:
  1355                           	callstack 0
  1356   0017B0                     ___lbmod:
  1357                           	callstack 27
  1358                           
  1359                           ;incstack = 0
  1360                           ;___lbmod@dividend stored from wreg
  1361   0017B0  6E02               	movwf	___lbmod@dividend^0,c
  1362   0017B2  0E08               	movlw	8
  1363   0017B4  6E03               	movwf	___lbmod@counter^0,c
  1364   0017B6  0E00               	movlw	0
  1365   0017B8  6E04               	movwf	___lbmod@rem^0,c
  1366   0017BA                     l2198:
  1367   0017BA  90D8               	bcf	status,0,c
  1368   0017BC  3402               	rlcf	___lbmod@dividend^0,w,c
  1369   0017BE  3404               	rlcf	___lbmod@rem^0,w,c
  1370   0017C0  6E04               	movwf	___lbmod@rem^0,c
  1371   0017C2  90D8               	bcf	status,0,c
  1372   0017C4  3602               	rlcf	___lbmod@dividend^0,f,c
  1373   0017C6  5001               	movf	___lbmod@divisor^0,w,c
  1374   0017C8  5C04               	subwf	___lbmod@rem^0,w,c
  1375   0017CA  A0D8               	btfss	status,0,c
  1376   0017CC  D002               	goto	l2206
  1377   0017CE  5001               	movf	___lbmod@divisor^0,w,c
  1378   0017D0  5E04               	subwf	___lbmod@rem^0,f,c
  1379   0017D2                     l2206:
  1380   0017D2  2E03               	decfsz	___lbmod@counter^0,f,c
  1381   0017D4  D7F2               	goto	l2198
  1382   0017D6  5004               	movf	___lbmod@rem^0,w,c
  1383   0017D8  0012               	return		;funcret
  1384   0017DA                     __end_of___lbmod:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function ___lbdiv *****************
  1388 ;; Defined at:
  1389 ;;		line 4 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbdiv.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  dividend        1    wreg     unsigned char 
  1392 ;;  divisor         1    4[COMRAM] unsigned char 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  dividend        1    5[COMRAM] unsigned char 
  1395 ;;  quotient        1    7[COMRAM] unsigned char 
  1396 ;;  counter         1    6[COMRAM] unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      unsigned char 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2, status,0
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1406 ;;      Params:         1       0       0       0       0       0       0       0       0
  1407 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1409 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1410 ;;Total ram usage:        4 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 1
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_EscribeLCD_n8
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text5
  1421   001718                     __ptext5:
  1422                           	callstack 0
  1423   001718                     ___lbdiv:
  1424                           	callstack 27
  1425                           
  1426                           ;incstack = 0
  1427                           ;___lbdiv@dividend stored from wreg
  1428   001718  6E06               	movwf	___lbdiv@dividend^0,c
  1429   00171A  0E00               	movlw	0
  1430   00171C  6E08               	movwf	___lbdiv@quotient^0,c
  1431   00171E  5005               	movf	___lbdiv@divisor^0,w,c
  1432   001720  B4D8               	btfsc	status,2,c
  1433   001722  D015               	goto	l2192
  1434   001724  0E01               	movlw	1
  1435   001726  6E07               	movwf	___lbdiv@counter^0,c
  1436   001728  D003               	goto	l2180
  1437   00172A                     l2176:
  1438   00172A  90D8               	bcf	status,0,c
  1439   00172C  3605               	rlcf	___lbdiv@divisor^0,f,c
  1440   00172E  2A07               	incf	___lbdiv@counter^0,f,c
  1441   001730                     l2180:
  1442   001730  AE05               	btfss	___lbdiv@divisor^0,7,c
  1443   001732  D7FB               	goto	l2176
  1444   001734                     u1400:
  1445   001734  90D8               	bcf	status,0,c
  1446   001736  3608               	rlcf	___lbdiv@quotient^0,f,c
  1447   001738  5005               	movf	___lbdiv@divisor^0,w,c
  1448   00173A  5C06               	subwf	___lbdiv@dividend^0,w,c
  1449   00173C  A0D8               	btfss	status,0,c
  1450   00173E  D003               	goto	l2188
  1451   001740  5005               	movf	___lbdiv@divisor^0,w,c
  1452   001742  5E06               	subwf	___lbdiv@dividend^0,f,c
  1453   001744  8008               	bsf	___lbdiv@quotient^0,0,c
  1454   001746                     l2188:
  1455   001746  90D8               	bcf	status,0,c
  1456   001748  3205               	rrcf	___lbdiv@divisor^0,f,c
  1457   00174A  2E07               	decfsz	___lbdiv@counter^0,f,c
  1458   00174C  D7F3               	goto	u1400
  1459   00174E                     l2192:
  1460   00174E  5008               	movf	___lbdiv@quotient^0,w,c
  1461   001750  0012               	return		;funcret
  1462   001752                     __end_of___lbdiv:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _EEPROM_Read *****************
  1466 ;; Defined at:
  1467 ;;		line 479 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  address         1    wreg     unsigned char 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  address         1    0[COMRAM] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      unsigned char 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1481 ;;      Params:         0       0       0       0       0       0       0       0       0
  1482 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1484 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1485 ;;Total ram usage:        1 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; Hardware stack levels required when called: 1
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_welcome_operations
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text6
  1496   00190C                     __ptext6:
  1497                           	callstack 0
  1498   00190C                     _EEPROM_Read:
  1499                           	callstack 28
  1500                           
  1501                           ;incstack = 0
  1502                           ;EEPROM_Read@address stored from wreg
  1503   00190C  6E01               	movwf	EEPROM_Read@address^0,c
  1504                           
  1505                           ;LAB05.c: 480: EEADR=address;
  1506   00190E  C001  FFA9         	movff	EEPROM_Read@address,4009	;volatile
  1507                           
  1508                           ;LAB05.c: 481: RD=1;
  1509   001912  80A6               	bsf	4006,0,c	;volsfr
  1510                           
  1511                           ;LAB05.c: 482: return EEDATA;
  1512   001914  50A8               	movf	168,w,c	;volatile
  1513   001916  0012               	return		;funcret
  1514   001918                     __end_of_EEPROM_Read:
  1515                           	callstack 0
  1516                           
  1517 ;; *************** function _show_temperature_c_RGB *****************
  1518 ;; Defined at:
  1519 ;;		line 295 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 3F/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1533 ;;      Params:         0       0       0       0       0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1536 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1537 ;;Total ram usage:        0 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; Hardware stack levels required when called: 1
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text7
  1548   001460                     __ptext7:
  1549                           	callstack 0
  1550   001460                     _show_temperature_c_RGB:
  1551                           	callstack 29
  1552                           
  1553                           ;LAB05.c: 296: if(Temp<22){
  1554                           
  1555                           ;incstack = 0
  1556   001460  0E16               	movlw	22
  1557   001462  0100               	movlb	0	; () banked
  1558   001464  6188               	cpfslt	_Temp& (0+255),b
  1559   001466  D004               	goto	l2876
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;LAB05.c: 298: RE0=1;
  1563   001468  8084               	bsf	3972,0,c	;volatile
  1564                           
  1565                           ;LAB05.c: 299: RE2=1;
  1566   00146A  8484               	bsf	3972,2,c	;volatile
  1567                           
  1568                           ;LAB05.c: 300: RE1=1;
  1569   00146C  8284               	bsf	3972,1,c	;volatile
  1570                           
  1571                           ;LAB05.c: 301: }
  1572   00146E  0012               	return	
  1573   001470                     l2876:
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;LAB05.c: 302: else if(Temp<25) {
  1577   001470  0E19               	movlw	25
  1578   001472  6188               	cpfslt	_Temp& (0+255),b
  1579   001474  D004               	goto	l2880
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;LAB05.c: 304: RE0=0;
  1583   001476  9084               	bcf	3972,0,c	;volatile
  1584                           
  1585                           ;LAB05.c: 305: RE2=1;
  1586   001478  8484               	bsf	3972,2,c	;volatile
  1587                           
  1588                           ;LAB05.c: 306: RE1=0;
  1589   00147A  9284               	bcf	3972,1,c	;volatile
  1590                           
  1591                           ;LAB05.c: 307: }
  1592   00147C  0012               	return	
  1593   00147E                     l2880:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;LAB05.c: 308: else if(Temp<28){
  1597   00147E  0E1C               	movlw	28
  1598   001480  6188               	cpfslt	_Temp& (0+255),b
  1599   001482  D004               	goto	l2884
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;LAB05.c: 310: RE0=1;
  1603   001484  8084               	bsf	3972,0,c	;volatile
  1604                           
  1605                           ;LAB05.c: 311: RE2=1;
  1606   001486  8484               	bsf	3972,2,c	;volatile
  1607                           
  1608                           ;LAB05.c: 312: RE1=0;
  1609   001488  9284               	bcf	3972,1,c	;volatile
  1610                           
  1611                           ;LAB05.c: 314: }
  1612   00148A  0012               	return	
  1613   00148C                     l2884:
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;LAB05.c: 315: else if(Temp<31){
  1617   00148C  0E1F               	movlw	31
  1618   00148E  6188               	cpfslt	_Temp& (0+255),b
  1619   001490  D004               	goto	l2888
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;LAB05.c: 317: RE0=1;
  1623   001492  8084               	bsf	3972,0,c	;volatile
  1624                           
  1625                           ;LAB05.c: 318: RE2=0;
  1626   001494  9484               	bcf	3972,2,c	;volatile
  1627                           
  1628                           ;LAB05.c: 319: RE1=0;
  1629   001496  9284               	bcf	3972,1,c	;volatile
  1630                           
  1631                           ;LAB05.c: 320: }
  1632   001498  0012               	return	
  1633   00149A                     l2888:
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;LAB05.c: 321: else if(Temp<34){
  1637   00149A  0E22               	movlw	34
  1638   00149C  6188               	cpfslt	_Temp& (0+255),b
  1639   00149E  D004               	goto	l2892
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;LAB05.c: 323: RE0=1;
  1643   0014A0  8084               	bsf	3972,0,c	;volatile
  1644                           
  1645                           ;LAB05.c: 324: RE2=0;
  1646   0014A2  9484               	bcf	3972,2,c	;volatile
  1647                           
  1648                           ;LAB05.c: 325: RE1=1;
  1649   0014A4  8284               	bsf	3972,1,c	;volatile
  1650                           
  1651                           ;LAB05.c: 326: }
  1652   0014A6  0012               	return	
  1653   0014A8                     l2892:
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;LAB05.c: 327: else if(Temp<37){
  1657   0014A8  0E25               	movlw	37
  1658   0014AA  6188               	cpfslt	_Temp& (0+255),b
  1659   0014AC  D004               	goto	l2896
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;LAB05.c: 329: RE0=0;
  1663   0014AE  9084               	bcf	3972,0,c	;volatile
  1664                           
  1665                           ;LAB05.c: 330: RE2=0;
  1666   0014B0  9484               	bcf	3972,2,c	;volatile
  1667                           
  1668                           ;LAB05.c: 331: RE1=1;
  1669   0014B2  8284               	bsf	3972,1,c	;volatile
  1670                           
  1671                           ;LAB05.c: 332: }
  1672   0014B4  0012               	return	
  1673   0014B6                     l2896:
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;LAB05.c: 333: else if(Temp<40){
  1677   0014B6  0E28               	movlw	40
  1678   0014B8  6188               	cpfslt	_Temp& (0+255),b
  1679   0014BA  D004               	goto	l327
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;LAB05.c: 335: RE0=0;
  1683   0014BC  9084               	bcf	3972,0,c	;volatile
  1684                           
  1685                           ;LAB05.c: 336: RE2=1;
  1686   0014BE  8484               	bsf	3972,2,c	;volatile
  1687                           
  1688                           ;LAB05.c: 337: RE1=1;
  1689   0014C0  8284               	bsf	3972,1,c	;volatile
  1690                           
  1691                           ;LAB05.c: 338: }
  1692   0014C2  0012               	return	
  1693   0014C4                     l327:
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;LAB05.c: 339: else{;LAB05.c: 341: RE0=0;
  1697   0014C4  9084               	bcf	3972,0,c	;volatile
  1698                           
  1699                           ;LAB05.c: 342: RE2=0;
  1700   0014C6  9484               	bcf	3972,2,c	;volatile
  1701                           
  1702                           ;LAB05.c: 343: RE1=0;
  1703   0014C8  9284               	bcf	3972,1,c	;volatile
  1704                           
  1705                           ; BSR set to: 0
  1706   0014CA  0012               	return		;funcret
  1707   0014CC                     __end_of_show_temperature_c_RGB:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function _show_temperature_LCD *****************
  1711 ;; Defined at:
  1712 ;;		line 406 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  buffer_LCD_r    1    5[COMRAM] PTR unsigned char 
  1715 ;;		 -> main@buffer_LCD_row_1(17), 
  1716 ;;  buffer_LCD_r    1    6[COMRAM] PTR unsigned char 
  1717 ;;		 -> main@buffer_LCD_row_2(17), 
  1718 ;;  Temp_n1         1    7[COMRAM] unsigned char 
  1719 ;;  Hum_n1          1    8[COMRAM] unsigned char 
  1720 ;;  Scale_Temper    1    9[COMRAM] unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  counter         1   10[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 3F/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1732 ;;      Params:         5       0       0       0       0       0       0       0       0
  1733 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1735 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1736 ;;Total ram usage:        6 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 4
  1739 ;; This function calls:
  1740 ;;		_DireccionaLCD
  1741 ;;		_EscribeLCD_c
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text8
  1748   001250                     __ptext8:
  1749                           	callstack 0
  1750   001250                     _show_temperature_LCD:
  1751                           	callstack 26
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;LAB05.c: 407: unsigned char counter=0;
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;incstack = 0
  1758   001250  0E00               	movlw	0
  1759   001252  6E0B               	movwf	show_temperature_LCD@counter^0,c
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;LAB05.c: 409: if(Temp_n1!=Temp || Scale_Temperature!=Scale_Temperature_n1){
  1763   001254  5188               	movf	_Temp& (0+255),w,b
  1764   001256  1808               	xorwf	show_temperature_LCD@Temp_n1^0,w,c
  1765   001258  A4D8               	btfss	status,2,c
  1766   00125A  D004               	goto	u2450
  1767                           
  1768                           ; BSR set to: 0
  1769   00125C  500A               	movf	show_temperature_LCD@Scale_Temperature_n1^0,w,c
  1770   00125E  1985               	xorwf	_Scale_Temperature& (0+255),w,b
  1771   001260  B4D8               	btfsc	status,2,c
  1772   001262  D01B               	goto	u2470
  1773   001264                     u2450:
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;LAB05.c: 410: DireccionaLCD(0x80);
  1777   001264  0E80               	movlw	128
  1778   001266  EC6A  F00C         	call	_DireccionaLCD
  1779                           
  1780                           ;LAB05.c: 412: while (buffer_LCD_row_1[counter]!='\0') {
  1781   00126A  D008               	goto	l2912
  1782   00126C                     l2908:
  1783                           
  1784                           ;LAB05.c: 413: EscribeLCD_c(buffer_LCD_row_1[counter]);
  1785   00126C  5006               	movf	show_temperature_LCD@buffer_LCD_row_1^0,w,c
  1786   00126E  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1787   001270  6ED9               	movwf	fsr2l,c
  1788   001272  6ADA               	clrf	fsr2h,c
  1789   001274  50DF               	movf	indf2,w,c
  1790   001276  EC5F  F00C         	call	_EscribeLCD_c
  1791                           
  1792                           ;LAB05.c: 414: counter++;
  1793   00127A  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1794   00127C                     l2912:
  1795   00127C  5006               	movf	show_temperature_LCD@buffer_LCD_row_1^0,w,c
  1796   00127E  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1797   001280  6ED9               	movwf	fsr2l,c
  1798   001282  6ADA               	clrf	fsr2h,c
  1799   001284  50DF               	movf	indf2,w,c
  1800   001286  B4D8               	btfsc	status,2,c
  1801   001288  D005               	goto	l2918
  1802   00128A  D7F0               	goto	l2908
  1803   00128C                     l2914:
  1804                           
  1805                           ;LAB05.c: 418: EscribeLCD_c(' ');
  1806   00128C  0E20               	movlw	32
  1807   00128E  EC5F  F00C         	call	_EscribeLCD_c
  1808                           
  1809                           ;LAB05.c: 419: counter++;
  1810   001292  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1811   001294                     l2918:
  1812   001294  0E0F               	movlw	15
  1813   001296  640B               	cpfsgt	show_temperature_LCD@counter^0,c
  1814   001298  D7F9               	goto	l2914
  1815   00129A                     u2470:
  1816                           
  1817                           ;LAB05.c: 420: };LAB05.c: 421: };LAB05.c: 423: counter=0;
  1818   00129A  0E00               	movlw	0
  1819   00129C  6E0B               	movwf	show_temperature_LCD@counter^0,c
  1820                           
  1821                           ;LAB05.c: 425: if(Hum_n1!=Hum){
  1822   00129E  0100               	movlb	0	; () banked
  1823   0012A0  5187               	movf	_Hum& (0+255),w,b
  1824   0012A2  1809               	xorwf	show_temperature_LCD@Hum_n1^0,w,c
  1825   0012A4  B4D8               	btfsc	status,2,c
  1826   0012A6  0012               	return	
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;LAB05.c: 426: DireccionaLCD(0xC0);
  1830   0012A8  0EC0               	movlw	192
  1831   0012AA  EC6A  F00C         	call	_DireccionaLCD
  1832                           
  1833                           ;LAB05.c: 429: while (buffer_LCD_row_2[counter]!='\0') {
  1834   0012AE  D008               	goto	l2930
  1835   0012B0                     l2926:
  1836                           
  1837                           ;LAB05.c: 430: EscribeLCD_c(buffer_LCD_row_2[counter]);
  1838   0012B0  5007               	movf	show_temperature_LCD@buffer_LCD_row_2^0,w,c
  1839   0012B2  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1840   0012B4  6ED9               	movwf	fsr2l,c
  1841   0012B6  6ADA               	clrf	fsr2h,c
  1842   0012B8  50DF               	movf	indf2,w,c
  1843   0012BA  EC5F  F00C         	call	_EscribeLCD_c
  1844                           
  1845                           ;LAB05.c: 431: counter++;
  1846   0012BE  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1847   0012C0                     l2930:
  1848   0012C0  5007               	movf	show_temperature_LCD@buffer_LCD_row_2^0,w,c
  1849   0012C2  240B               	addwf	show_temperature_LCD@counter^0,w,c
  1850   0012C4  6ED9               	movwf	fsr2l,c
  1851   0012C6  6ADA               	clrf	fsr2h,c
  1852   0012C8  50DF               	movf	indf2,w,c
  1853   0012CA  B4D8               	btfsc	status,2,c
  1854   0012CC  D005               	goto	l2936
  1855   0012CE  D7F0               	goto	l2926
  1856   0012D0                     l2932:
  1857                           
  1858                           ;LAB05.c: 436: EscribeLCD_c(' ');
  1859   0012D0  0E20               	movlw	32
  1860   0012D2  EC5F  F00C         	call	_EscribeLCD_c
  1861                           
  1862                           ;LAB05.c: 437: counter++;
  1863   0012D6  2A0B               	incf	show_temperature_LCD@counter^0,f,c
  1864   0012D8                     l2936:
  1865   0012D8  0E0F               	movlw	15
  1866   0012DA  640B               	cpfsgt	show_temperature_LCD@counter^0,c
  1867   0012DC  D7F9               	goto	l2932
  1868   0012DE  0012               	return	
  1869   0012E0                     __end_of_show_temperature_LCD:
  1870                           	callstack 0
  1871                           
  1872 ;; *************** function _EscribeLCD_c *****************
  1873 ;; Defined at:
  1874 ;;		line 136 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  a               1    wreg     unsigned char 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  a               1    4[COMRAM] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1888 ;;      Params:         0       0       0       0       0       0       0       0       0
  1889 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1891 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1892 ;;Total ram usage:        1 bytes
  1893 ;; Hardware stack levels used: 1
  1894 ;; Hardware stack levels required when called: 3
  1895 ;; This function calls:
  1896 ;;		_EnviaDato
  1897 ;;		_HabilitaLCD
  1898 ;;		_RetardoLCD
  1899 ;; This function is called by:
  1900 ;;		_MensajeLCD_Var
  1901 ;;		_show_temperature_LCD
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text9
  1906   0018BE                     __ptext9:
  1907                           	callstack 0
  1908   0018BE                     _EscribeLCD_c:
  1909                           	callstack 25
  1910                           
  1911                           ;incstack = 0
  1912                           ;EscribeLCD_c@a stored from wreg
  1913   0018BE  6E05               	movwf	EscribeLCD_c@a^0,c
  1914                           
  1915                           ;LibLCDXC8.h: 140: LATD0=1;
  1916   0018C0  808C               	bsf	3980,0,c	;volatile
  1917                           
  1918                           ;LibLCDXC8.h: 141: EnviaDato(a);
  1919   0018C2  5005               	movf	EscribeLCD_c@a^0,w,c
  1920   0018C4  EC48  F00B         	call	_EnviaDato
  1921                           
  1922                           ;LibLCDXC8.h: 142: HabilitaLCD();
  1923   0018C8  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  1924                           
  1925                           ;LibLCDXC8.h: 143: RetardoLCD(4);
  1926   0018CC  0E04               	movlw	4
  1927   0018CE  EC99  F00A         	call	_RetardoLCD
  1928   0018D2  0012               	return		;funcret
  1929   0018D4                     __end_of_EscribeLCD_c:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _DireccionaLCD *****************
  1933 ;; Defined at:
  1934 ;;		line 257 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  a               1    wreg     unsigned char 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  a               1    4[COMRAM] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1948 ;;      Params:         0       0       0       0       0       0       0       0       0
  1949 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1951 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1952 ;;Total ram usage:        1 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 3
  1955 ;; This function calls:
  1956 ;;		_EnviaDato
  1957 ;;		_HabilitaLCD
  1958 ;;		_RetardoLCD
  1959 ;; This function is called by:
  1960 ;;		_MensajeLCD_Var
  1961 ;;		_show_temperature_LCD
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text10
  1966   0018D4                     __ptext10:
  1967                           	callstack 0
  1968   0018D4                     _DireccionaLCD:
  1969                           	callstack 25
  1970                           
  1971                           ;incstack = 0
  1972                           ;DireccionaLCD@a stored from wreg
  1973   0018D4  6E05               	movwf	DireccionaLCD@a^0,c
  1974                           
  1975                           ;LibLCDXC8.h: 260: LATD0=0;
  1976   0018D6  908C               	bcf	3980,0,c	;volatile
  1977                           
  1978                           ;LibLCDXC8.h: 261: EnviaDato(a);
  1979   0018D8  5005               	movf	DireccionaLCD@a^0,w,c
  1980   0018DA  EC48  F00B         	call	_EnviaDato
  1981                           
  1982                           ;LibLCDXC8.h: 262: HabilitaLCD();
  1983   0018DE  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  1984                           
  1985                           ;LibLCDXC8.h: 263: RetardoLCD(4);
  1986   0018E2  0E04               	movlw	4
  1987   0018E4  EC99  F00A         	call	_RetardoLCD
  1988   0018E8  0012               	return		;funcret
  1989   0018EA                     __end_of_DireccionaLCD:
  1990                           	callstack 0
  1991                           
  1992 ;; *************** function _send_temperature_RS232 *****************
  1993 ;; Defined at:
  1994 ;;		line 393 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  buffer_RS232   12   27[COMRAM] unsigned char [12]
  1999 ;;  counter         1   39[COMRAM] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2009 ;;      Params:         0       0       0       0       0       0       0       0       0
  2010 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2011 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2012 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2013 ;;Total ram usage:       15 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; Hardware stack levels required when called: 3
  2016 ;; This function calls:
  2017 ;;		_Transmitir
  2018 ;;		_sprintf
  2019 ;; This function is called by:
  2020 ;;		_main
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text11
  2025   001640                     __ptext11:
  2026                           	callstack 0
  2027   001640                     _send_temperature_RS232:
  2028                           	callstack 27
  2029                           
  2030                           ;LAB05.c: 394: unsigned char counter=0;
  2031                           
  2032                           ;incstack = 0
  2033   001640  0E00               	movlw	0
  2034   001642  6E28               	movwf	send_temperature_RS232@counter^0,c
  2035                           
  2036                           ;LAB05.c: 395: unsigned char buffer_RS232[12];;LAB05.c: 396: sprintf(buffer_RS232, "T: %
      +                          i C\n",Temp);
  2037   001644  0E1C               	movlw	low send_temperature_RS232@buffer_RS232
  2038   001646  6E0D               	movwf	sprintf@sp^0,c
  2039   001648  0E36               	movlw	low STR_15
  2040   00164A  6E0E               	movwf	sprintf@f^0,c
  2041   00164C  C088  F00F         	movff	_Temp,?_sprintf+2
  2042   001650  6A10               	clrf	(?_sprintf+3)^0,c
  2043   001652  EC14  F006         	call	_sprintf	;wreg free
  2044                           
  2045                           ;LAB05.c: 398: while(buffer_RS232[counter]!='\0'){
  2046   001656  D008               	goto	l2818
  2047   001658                     l2814:
  2048                           
  2049                           ;LAB05.c: 399: Transmitir(buffer_RS232[counter]);
  2050   001658  5028               	movf	send_temperature_RS232@counter^0,w,c
  2051   00165A  0F1C               	addlw	low send_temperature_RS232@buffer_RS232
  2052   00165C  6ED9               	movwf	fsr2l,c
  2053   00165E  6ADA               	clrf	fsr2h,c
  2054   001660  50DF               	movf	indf2,w,c
  2055   001662  EC8C  F00C         	call	_Transmitir
  2056                           
  2057                           ;LAB05.c: 400: counter++;
  2058   001666  2A28               	incf	send_temperature_RS232@counter^0,f,c
  2059   001668                     l2818:
  2060   001668  5028               	movf	send_temperature_RS232@counter^0,w,c
  2061   00166A  0F1C               	addlw	low send_temperature_RS232@buffer_RS232
  2062   00166C  6ED9               	movwf	fsr2l,c
  2063   00166E  6ADA               	clrf	fsr2h,c
  2064   001670  50DF               	movf	indf2,w,c
  2065   001672  A4D8               	btfss	status,2,c
  2066   001674  D7F1               	goto	l2814
  2067                           
  2068                           ;LAB05.c: 401: };LAB05.c: 402: _delay((unsigned long)((200)*(8000000/4000.0)));
  2069   001676  0E03               	movlw	3
  2070   001678  6E1B               	movwf	(??_send_temperature_RS232+1)^0,c
  2071   00167A  0E08               	movlw	8
  2072   00167C  6E1A               	movwf	??_send_temperature_RS232^0,c
  2073   00167E  0E77               	movlw	119
  2074   001680                     u2597:
  2075   001680  2EE8               	decfsz	wreg,f,c
  2076   001682  D7FE               	bra	u2597
  2077   001684  2E1A               	decfsz	??_send_temperature_RS232^0,f,c
  2078   001686  D7FC               	bra	u2597
  2079   001688  2E1B               	decfsz	(??_send_temperature_RS232+1)^0,f,c
  2080   00168A  D7FA               	bra	u2597
  2081   00168C  F000               	nop	
  2082   00168E  0012               	return		;funcret
  2083   001690                     __end_of_send_temperature_RS232:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function _Transmitir *****************
  2087 ;; Defined at:
  2088 ;;		line 446 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  BufferT         1    wreg     unsigned char 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  BufferT         1    0[COMRAM] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0
  2103 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2105 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2106 ;;Total ram usage:        1 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; Hardware stack levels required when called: 1
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_send_temperature_RS232
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text12
  2117   001918                     __ptext12:
  2118                           	callstack 0
  2119   001918                     _Transmitir:
  2120                           	callstack 28
  2121                           
  2122                           ;incstack = 0
  2123                           ;Transmitir@BufferT stored from wreg
  2124   001918  6E01               	movwf	Transmitir@BufferT^0,c
  2125   00191A                     
  2126                           ;LAB05.c: 447: while(TRMT==0);
  2127   00191A  A2AC               	btfss	4012,1,c	;volatile
  2128   00191C  D7FE               	goto	l2490
  2129                           
  2130                           ;LAB05.c: 448: TXREG=BufferT;
  2131   00191E  C001  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  2132   001922  0012               	return		;funcret
  2133   001924                     __end_of_Transmitir:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _save_temperature_c_EEPROM *****************
  2137 ;; Defined at:
  2138 ;;		line 291 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 2
  2159 ;; This function calls:
  2160 ;;		_EEPROM_Write
  2161 ;; This function is called by:
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text13
  2167   001924                     __ptext13:
  2168                           	callstack 0
  2169   001924                     _save_temperature_c_EEPROM:
  2170                           	callstack 28
  2171                           
  2172                           ;LAB05.c: 292: EEPROM_Write(0x0, Temp);
  2173                           
  2174                           ;incstack = 0
  2175   001924  C088  F001         	movff	_Temp,EEPROM_Write@data
  2176   001928  0E00               	movlw	0
  2177   00192A  EC35  F00C         	call	_EEPROM_Write
  2178   00192E  0012               	return		;funcret
  2179   001930                     __end_of_save_temperature_c_EEPROM:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _EEPROM_Write *****************
  2183 ;; Defined at:
  2184 ;;		line 462 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  address         1    wreg     unsigned char 
  2187 ;;  data            1    0[COMRAM] unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  address         1    1[COMRAM] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2199 ;;      Params:         1       0       0       0       0       0       0       0       0
  2200 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2202 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2203 ;;Total ram usage:        2 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 1
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_save_temperature_c_EEPROM
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text14
  2214   00186A                     __ptext14:
  2215                           	callstack 0
  2216   00186A                     _EEPROM_Write:
  2217                           	callstack 28
  2218                           
  2219                           ;incstack = 0
  2220                           ;EEPROM_Write@address stored from wreg
  2221   00186A  6E02               	movwf	EEPROM_Write@address^0,c
  2222                           
  2223                           ;LAB05.c: 463: EEADR=address;
  2224   00186C  C002  FFA9         	movff	EEPROM_Write@address,4009	;volatile
  2225                           
  2226                           ;LAB05.c: 464: EEDATA=data;
  2227   001870  C001  FFA8         	movff	EEPROM_Write@data,4008	;volatile
  2228                           
  2229                           ;LAB05.c: 466: WREN=1;
  2230   001874  84A6               	bsf	4006,2,c	;volsfr
  2231                           
  2232                           ;LAB05.c: 468: EECON2=0x55;
  2233   001876  0E55               	movlw	85
  2234   001878  6EA7               	movwf	167,c	;volsfr
  2235                           
  2236                           ;LAB05.c: 469: EECON2=0xAA;
  2237   00187A  0EAA               	movlw	170
  2238   00187C  6EA7               	movwf	167,c	;volsfr
  2239                           
  2240                           ;LAB05.c: 471: WR=1;
  2241   00187E  82A6               	bsf	4006,1,c	;volsfr
  2242   001880                     l379:
  2243   001880  B2A6               	btfsc	4006,1,c	;volsfr
  2244   001882  D7FE               	goto	l379
  2245                           
  2246                           ;LAB05.c: 474: WREN=0;
  2247   001884  94A6               	bcf	4006,2,c	;volsfr
  2248                           
  2249                           ;LAB05.c: 475: return;
  2250   001886  0012               	return		;funcret
  2251   001888                     __end_of_EEPROM_Write:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function _measure_temperature_c_humidity_per *****************
  2255 ;; Defined at:
  2256 ;;		line 228 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 3F/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2270 ;;      Params:         0       0       0       0       0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2273 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; Hardware stack levels required when called: 2
  2277 ;; This function calls:
  2278 ;;		_DHT11_CheckResponse
  2279 ;;		_DHT11_ReadData
  2280 ;;		_DHT11_Start
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text15
  2287   0017DA                     __ptext15:
  2288                           	callstack 0
  2289   0017DA                     _measure_temperature_c_humidity_per:
  2290                           	callstack 28
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;LAB05.c: 229: DHT11_Start();
  2294                           
  2295                           ;incstack = 0
  2296   0017DA  EC24  F00C         	call	_DHT11_Start	;wreg free
  2297                           
  2298                           ;LAB05.c: 230: DHT11_CheckResponse();
  2299   0017DE  ECA9  F00B         	call	_DHT11_CheckResponse	;wreg free
  2300                           
  2301                           ;LAB05.c: 233: Hum = DHT11_ReadData();
  2302   0017E2  ECCC  F00A         	call	_DHT11_ReadData	;wreg free
  2303   0017E6  0100               	movlb	0	; () banked
  2304   0017E8  6F87               	movwf	_Hum& (0+255),b
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;LAB05.c: 234: DHT11_ReadData();
  2308   0017EA  ECCC  F00A         	call	_DHT11_ReadData	;wreg free
  2309                           
  2310                           ;LAB05.c: 235: Temp = DHT11_ReadData();
  2311   0017EE  ECCC  F00A         	call	_DHT11_ReadData	;wreg free
  2312   0017F2  0100               	movlb	0	; () banked
  2313   0017F4  6F88               	movwf	_Temp& (0+255),b
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;LAB05.c: 236: DHT11_ReadData();
  2317   0017F6  ECCC  F00A         	call	_DHT11_ReadData	;wreg free
  2318                           
  2319                           ;LAB05.c: 237: DHT11_ReadData();
  2320   0017FA  ECCC  F00A         	call	_DHT11_ReadData	;wreg free
  2321   0017FE  0012               	return		;funcret
  2322   001800                     __end_of_measure_temperature_c_humidity_per:
  2323                           	callstack 0
  2324                           
  2325 ;; *************** function _DHT11_Start *****************
  2326 ;; Defined at:
  2327 ;;		line 259 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg
  2336 ;; Tracked objects:
  2337 ;;		On entry : 3F/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2341 ;;      Params:         0       0       0       0       0       0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2343 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2344 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2345 ;;Total ram usage:        1 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 1
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_measure_temperature_c_humidity_per
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text16
  2356   001848                     __ptext16:
  2357                           	callstack 0
  2358   001848                     _DHT11_Start:
  2359                           	callstack 28
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;LAB05.c: 261: TRISA4 = 0;
  2363                           
  2364                           ;incstack = 0
  2365   001848  9892               	bcf	3986,4,c	;volatile
  2366                           
  2367                           ;LAB05.c: 262: LATA4 = 0;
  2368   00184A  9889               	bcf	3977,4,c	;volatile
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;LAB05.c: 263: _delay((unsigned long)((18)*(8000000/4000.0)));
  2372   00184C  0E2F               	movlw	47
  2373   00184E  6E01               	movwf	??_DHT11_Start^0,c
  2374   001850  0EC0               	movlw	192
  2375   001852                     u2607:
  2376   001852  2EE8               	decfsz	wreg,f,c
  2377   001854  D7FE               	bra	u2607
  2378   001856  2E01               	decfsz	??_DHT11_Start^0,f,c
  2379   001858  D7FC               	bra	u2607
  2380                           
  2381                           ;LAB05.c: 264: LATA4 = 1;
  2382   00185A  8889               	bsf	3977,4,c	;volatile
  2383                           
  2384                           ;LAB05.c: 265: _delay((unsigned long)((20)*(8000000/4000000.0)));
  2385   00185C  0E0D               	movlw	13
  2386   00185E                     u2617:
  2387   00185E  2EE8               	decfsz	wreg,f,c
  2388   001860  D7FE               	bra	u2617
  2389   001862  F000               	nop	
  2390                           
  2391                           ;LAB05.c: 266: TRISA4 = 1;
  2392   001864  8892               	bsf	3986,4,c	;volatile
  2393                           
  2394                           ;LAB05.c: 267: LATA4 = 0;
  2395   001866  9889               	bcf	3977,4,c	;volatile
  2396   001868  0012               	return		;funcret
  2397   00186A                     __end_of_DHT11_Start:
  2398                           	callstack 0
  2399                           
  2400 ;; *************** function _DHT11_ReadData *****************
  2401 ;; Defined at:
  2402 ;;		line 243 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  data            1    2[COMRAM] unsigned char 
  2407 ;;  i               1    1[COMRAM] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      unsigned char 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2417 ;;      Params:         0       0       0       0       0       0       0       0       0
  2418 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2419 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2420 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2421 ;;Total ram usage:        3 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_measure_temperature_c_humidity_per
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text17
  2432   001598                     __ptext17:
  2433                           	callstack 0
  2434   001598                     _DHT11_ReadData:
  2435                           	callstack 28
  2436                           
  2437                           ;LAB05.c: 245: unsigned char i,data = 0;
  2438                           
  2439                           ;incstack = 0
  2440   001598  0E00               	movlw	0
  2441   00159A  6E03               	movwf	DHT11_ReadData@data^0,c
  2442                           
  2443                           ;LAB05.c: 246: for(i=0;i<8;i++)
  2444   00159C  0E00               	movlw	0
  2445   00159E  6E02               	movwf	DHT11_ReadData@i^0,c
  2446   0015A0                     l278:
  2447   0015A0  A880               	btfss	3968,4,c	;volatile
  2448   0015A2  D003               	goto	u1680
  2449   0015A4  6A01               	clrf	??_DHT11_ReadData^0,c
  2450   0015A6  2A01               	incf	??_DHT11_ReadData^0,f,c
  2451   0015A8  D001               	goto	u1698
  2452   0015AA                     u1680:
  2453   0015AA  6A01               	clrf	??_DHT11_ReadData^0,c
  2454   0015AC                     u1698:
  2455   0015AC  A001               	btfss	??_DHT11_ReadData^0,0,c
  2456   0015AE  D7F8               	goto	l278
  2457                           
  2458                           ;LAB05.c: 249: _delay((unsigned long)((30)*(8000000/4000000.0)));
  2459   0015B0  0E14               	movlw	20
  2460   0015B2                     u2627:
  2461   0015B2  2EE8               	decfsz	wreg,f,c
  2462   0015B4  D7FE               	bra	u2627
  2463                           
  2464                           ;LAB05.c: 250: if(RA4 & 1)
  2465   0015B6  A880               	btfss	3968,4,c	;volatile
  2466   0015B8  D003               	goto	u1710
  2467   0015BA  6A01               	clrf	??_DHT11_ReadData^0,c
  2468   0015BC  2A01               	incf	??_DHT11_ReadData^0,f,c
  2469   0015BE  D001               	goto	u1728
  2470   0015C0                     u1710:
  2471   0015C0  6A01               	clrf	??_DHT11_ReadData^0,c
  2472   0015C2                     u1728:
  2473   0015C2  A001               	btfss	??_DHT11_ReadData^0,0,c
  2474   0015C4  D003               	goto	l2400
  2475                           
  2476                           ;LAB05.c: 251: data = ((data<<1) | 1);
  2477   0015C6  80D8               	bsf	status,0,c
  2478   0015C8  3603               	rlcf	DHT11_ReadData@data^0,f,c
  2479   0015CA  D003               	goto	l283
  2480   0015CC                     l2400:
  2481                           
  2482                           ;LAB05.c: 252: else;LAB05.c: 253: data = (data<<1);
  2483   0015CC  5003               	movf	DHT11_ReadData@data^0,w,c
  2484   0015CE  2403               	addwf	DHT11_ReadData@data^0,w,c
  2485   0015D0  6E03               	movwf	DHT11_ReadData@data^0,c
  2486   0015D2                     l283:
  2487   0015D2  A880               	btfss	3968,4,c	;volatile
  2488   0015D4  D003               	goto	u1740
  2489   0015D6  6A01               	clrf	??_DHT11_ReadData^0,c
  2490   0015D8  2A01               	incf	??_DHT11_ReadData^0,f,c
  2491   0015DA  D001               	goto	u1758
  2492   0015DC                     u1740:
  2493   0015DC  6A01               	clrf	??_DHT11_ReadData^0,c
  2494   0015DE                     u1758:
  2495   0015DE  B001               	btfsc	??_DHT11_ReadData^0,0,c
  2496   0015E0  D7F8               	goto	l283
  2497   0015E2  2A02               	incf	DHT11_ReadData@i^0,f,c
  2498   0015E4  0E07               	movlw	7
  2499   0015E6  6402               	cpfsgt	DHT11_ReadData@i^0,c
  2500   0015E8  D7DB               	goto	l278
  2501                           
  2502                           ;LAB05.c: 255: };LAB05.c: 256: return data;
  2503   0015EA  5003               	movf	DHT11_ReadData@data^0,w,c
  2504   0015EC  0012               	return		;funcret
  2505   0015EE                     __end_of_DHT11_ReadData:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function _DHT11_CheckResponse *****************
  2509 ;; Defined at:
  2510 ;;		line 271 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		None
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2524 ;;      Params:         0       0       0       0       0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2526 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2527 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2528 ;;Total ram usage:        1 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_measure_temperature_c_humidity_per
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text18
  2539   001752                     __ptext18:
  2540                           	callstack 0
  2541   001752                     _DHT11_CheckResponse:
  2542                           	callstack 28
  2543                           
  2544                           ;LAB05.c: 273: while(RA4 & 1);
  2545                           
  2546                           ;incstack = 0
  2547   001752  A880               	btfss	3968,4,c	;volatile
  2548   001754  D003               	goto	u1590
  2549   001756  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2550   001758  2A01               	incf	??_DHT11_CheckResponse^0,f,c
  2551   00175A  D001               	goto	u1608
  2552   00175C                     u1590:
  2553   00175C  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2554   00175E                     u1608:
  2555   00175E  B001               	btfsc	??_DHT11_CheckResponse^0,0,c
  2556   001760  D7F8               	goto	__ptext18
  2557   001762                     u1610:
  2558   001762  A880               	btfss	3968,4,c	;volatile
  2559   001764  D003               	goto	u1620
  2560   001766  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2561   001768  2A01               	incf	??_DHT11_CheckResponse^0,f,c
  2562   00176A  D001               	goto	u1638
  2563   00176C                     u1620:
  2564   00176C  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2565   00176E                     u1638:
  2566   00176E  A001               	btfss	??_DHT11_CheckResponse^0,0,c
  2567   001770  D7F8               	goto	u1610
  2568   001772                     u1640:
  2569   001772  A880               	btfss	3968,4,c	;volatile
  2570   001774  D003               	goto	u1650
  2571   001776  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2572   001778  2A01               	incf	??_DHT11_CheckResponse^0,f,c
  2573   00177A  D001               	goto	u1668
  2574   00177C                     u1650:
  2575   00177C  6A01               	clrf	??_DHT11_CheckResponse^0,c
  2576   00177E                     u1668:
  2577   00177E  A001               	btfss	??_DHT11_CheckResponse^0,0,c
  2578   001780  0012               	return	
  2579   001782  D7F7               	goto	u1640
  2580   001784                     __end_of_DHT11_CheckResponse:
  2581                           	callstack 0
  2582                           
  2583 ;; *************** function _init_configuration *****************
  2584 ;; Defined at:
  2585 ;;		line 132 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2601 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2602 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2603 ;;Total ram usage:        2 bytes
  2604 ;; Hardware stack levels used: 1
  2605 ;; Hardware stack levels required when called: 5
  2606 ;; This function calls:
  2607 ;;		_ConfiguraLCD
  2608 ;;		_InicializaLCD
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text19
  2615   001364                     __ptext19:
  2616                           	callstack 0
  2617   001364                     _init_configuration:
  2618                           	callstack 25
  2619                           
  2620                           ;LAB05.c: 135: OSCCON=0b01110000;
  2621                           
  2622                           ;incstack = 0
  2623   001364  0E70               	movlw	112
  2624   001366  6ED3               	movwf	211,c	;volatile
  2625                           
  2626                           ;LAB05.c: 136: _delay((unsigned long)((1)*(8000000/4000.0)));
  2627   001368  0E03               	movlw	3
  2628   00136A  6E05               	movwf	??_init_configuration^0,c
  2629   00136C  0E98               	movlw	152
  2630   00136E                     u2637:
  2631   00136E  2EE8               	decfsz	wreg,f,c
  2632   001370  D7FE               	bra	u2637
  2633   001372  2E05               	decfsz	??_init_configuration^0,f,c
  2634   001374  D7FC               	bra	u2637
  2635                           
  2636                           ;LAB05.c: 141: TXSTA=0b00100000;
  2637   001376  0E20               	movlw	32
  2638   001378  6EAC               	movwf	172,c	;volatile
  2639                           
  2640                           ;LAB05.c: 142: RCSTA=0b10000000;
  2641   00137A  0E80               	movlw	128
  2642   00137C  6EAB               	movwf	171,c	;volatile
  2643                           
  2644                           ;LAB05.c: 143: BAUDCON=0b00000000;
  2645   00137E  0E00               	movlw	0
  2646   001380  6EB8               	movwf	184,c	;volatile
  2647                           
  2648                           ;LAB05.c: 144: SPBRG=12;
  2649   001382  0E0C               	movlw	12
  2650   001384  6EAF               	movwf	175,c	;volatile
  2651                           
  2652                           ;LAB05.c: 147: ADCON1=13;
  2653   001386  0E0D               	movlw	13
  2654   001388  6EC1               	movwf	193,c	;volatile
  2655                           
  2656                           ;LAB05.c: 150: TRISE=0b11111000;
  2657   00138A  0EF8               	movlw	248
  2658   00138C  6E96               	movwf	150,c	;volatile
  2659                           
  2660                           ;LAB05.c: 151: LATE=1;
  2661   00138E  0E01               	movlw	1
  2662   001390  6E8D               	movwf	141,c	;volatile
  2663                           
  2664                           ;LAB05.c: 154: TRISA2=1;
  2665   001392  8492               	bsf	3986,2,c	;volatile
  2666                           
  2667                           ;LAB05.c: 155: TRISA3=1;
  2668   001394  8692               	bsf	3986,3,c	;volatile
  2669                           
  2670                           ;LAB05.c: 158: TRISC2=0;
  2671   001396  9494               	bcf	3988,2,c	;volatile
  2672                           
  2673                           ;LAB05.c: 159: LATC2=0;
  2674   001398  948B               	bcf	3979,2,c	;volatile
  2675                           
  2676                           ;LAB05.c: 162: TRISB0=0;
  2677   00139A  9093               	bcf	3987,0,c	;volatile
  2678                           
  2679                           ;LAB05.c: 163: LATB0=0;
  2680   00139C  908A               	bcf	3978,0,c	;volatile
  2681                           
  2682                           ;LAB05.c: 167: ADCON0=0b00000101;
  2683   00139E  0E05               	movlw	5
  2684   0013A0  6EC2               	movwf	194,c	;volatile
  2685                           
  2686                           ;LAB05.c: 169: ADCON2=0b11001001;
  2687   0013A2  0EC9               	movlw	201
  2688   0013A4  6EC0               	movwf	192,c	;volatile
  2689                           
  2690                           ;LAB05.c: 181: T0CON=0b00000100;
  2691   0013A6  0E04               	movlw	4
  2692   0013A8  6ED5               	movwf	213,c	;volatile
  2693                           
  2694                           ;LAB05.c: 182: TMR0=3036;
  2695   0013AA  0E0B               	movlw	11
  2696   0013AC  6ED7               	movwf	215,c	;volatile
  2697   0013AE  0EDC               	movlw	220
  2698   0013B0  6ED6               	movwf	214,c	;volatile
  2699                           
  2700                           ;LAB05.c: 186: TMR0IF=0;
  2701   0013B2  94F2               	bcf	4082,2,c	;volatile
  2702                           
  2703                           ;LAB05.c: 187: TMR0IE=1;
  2704   0013B4  8AF2               	bsf	4082,5,c	;volatile
  2705                           
  2706                           ;LAB05.c: 188: GIE=1;
  2707   0013B6  8EF2               	bsf	4082,7,c	;volatile
  2708                           
  2709                           ;LAB05.c: 190: TMR0ON=1;
  2710   0013B8  8ED5               	bsf	4053,7,c	;volatile
  2711                           
  2712                           ;LAB05.c: 193: TRISD=0;
  2713   0013BA  0E00               	movlw	0
  2714   0013BC  6E95               	movwf	149,c	;volatile
  2715                           
  2716                           ;LAB05.c: 194: LATD=0;
  2717   0013BE  0E00               	movlw	0
  2718   0013C0  6E8C               	movwf	140,c	;volatile
  2719                           
  2720                           ;LAB05.c: 195: ConfiguraLCD(4);
  2721   0013C2  0E04               	movlw	4
  2722   0013C4  EC53  F00C         	call	_ConfiguraLCD
  2723                           
  2724                           ;LAB05.c: 196: InicializaLCD();
  2725   0013C8  ECDA  F008         	call	_InicializaLCD	;wreg free
  2726                           
  2727                           ;LAB05.c: 197: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2728   0013CC  0E0B               	movlw	11
  2729   0013CE  6E06               	movwf	(??_init_configuration+1)^0,c
  2730   0013D0  0E26               	movlw	38
  2731   0013D2  6E05               	movwf	??_init_configuration^0,c
  2732   0013D4  0E5E               	movlw	94
  2733   0013D6                     u2647:
  2734   0013D6  2EE8               	decfsz	wreg,f,c
  2735   0013D8  D7FE               	bra	u2647
  2736   0013DA  2E05               	decfsz	??_init_configuration^0,f,c
  2737   0013DC  D7FC               	bra	u2647
  2738   0013DE  2E06               	decfsz	(??_init_configuration+1)^0,f,c
  2739   0013E0  D7FA               	bra	u2647
  2740   0013E2  0012               	return		;funcret
  2741   0013E4                     __end_of_init_configuration:
  2742                           	callstack 0
  2743                           
  2744 ;; *************** function _InicializaLCD *****************
  2745 ;; Defined at:
  2746 ;;		line 71 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2760 ;;      Params:         0       0       0       0       0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2763 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 4
  2767 ;; This function calls:
  2768 ;;		_BorraLCD
  2769 ;;		_EnviaDato
  2770 ;;		_HabilitaLCD
  2771 ;;		_RetardoLCD
  2772 ;; This function is called by:
  2773 ;;		_init_configuration
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text20
  2778   0011B4                     __ptext20:
  2779                           	callstack 0
  2780   0011B4                     _InicializaLCD:
  2781                           	callstack 25
  2782                           
  2783                           ;LibLCDXC8.h: 73: LATD0=0;
  2784                           
  2785                           ;incstack = 0
  2786   0011B4  908C               	bcf	3980,0,c	;volatile
  2787                           
  2788                           ;LibLCDXC8.h: 74: if(interfaz==4)
  2789   0011B6  0E04               	movlw	4
  2790   0011B8  184C               	xorwf	_interfaz^0,w,c
  2791   0011BA  A4D8               	btfss	status,2,c
  2792   0011BC  D004               	goto	l2260
  2793                           
  2794                           ;LibLCDXC8.h: 75: LATD=(LATD & 0b00001111) | 0x30;
  2795   0011BE  508C               	movf	140,w,c	;volatile
  2796   0011C0  0B0F               	andlw	15
  2797   0011C2  0930               	iorlw	48
  2798   0011C4  D001               	goto	L1
  2799   0011C6                     l2260:
  2800                           
  2801                           ;LibLCDXC8.h: 76: else;LibLCDXC8.h: 77: LATD=0x3F;
  2802   0011C6  0E3F               	movlw	63
  2803   0011C8                     L1:
  2804   0011C8  6E8C               	movwf	140,c	;volatile
  2805                           
  2806                           ;LibLCDXC8.h: 78: HabilitaLCD();
  2807   0011CA  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  2808                           
  2809                           ;LibLCDXC8.h: 79: RetardoLCD(1);
  2810   0011CE  0E01               	movlw	1
  2811   0011D0  EC99  F00A         	call	_RetardoLCD
  2812                           
  2813                           ;LibLCDXC8.h: 80: if(interfaz==4)
  2814   0011D4  0E04               	movlw	4
  2815   0011D6  184C               	xorwf	_interfaz^0,w,c
  2816   0011D8  A4D8               	btfss	status,2,c
  2817   0011DA  D004               	goto	l2270
  2818                           
  2819                           ;LibLCDXC8.h: 81: LATD=(LATD & 0b00001111) | 0x30;
  2820   0011DC  508C               	movf	140,w,c	;volatile
  2821   0011DE  0B0F               	andlw	15
  2822   0011E0  0930               	iorlw	48
  2823   0011E2  D001               	goto	L2
  2824   0011E4                     l2270:
  2825                           
  2826                           ;LibLCDXC8.h: 82: else;LibLCDXC8.h: 83: LATD=0x3F;
  2827   0011E4  0E3F               	movlw	63
  2828   0011E6                     L2:
  2829   0011E6  6E8C               	movwf	140,c	;volatile
  2830                           
  2831                           ;LibLCDXC8.h: 84: HabilitaLCD();
  2832   0011E8  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  2833                           
  2834                           ;LibLCDXC8.h: 85: RetardoLCD(3);
  2835   0011EC  0E03               	movlw	3
  2836   0011EE  EC99  F00A         	call	_RetardoLCD
  2837                           
  2838                           ;LibLCDXC8.h: 86: if(interfaz==4)
  2839   0011F2  0E04               	movlw	4
  2840   0011F4  184C               	xorwf	_interfaz^0,w,c
  2841   0011F6  A4D8               	btfss	status,2,c
  2842   0011F8  D004               	goto	l2280
  2843                           
  2844                           ;LibLCDXC8.h: 87: LATD=(LATD & 0b00001111) | 0x30;
  2845   0011FA  508C               	movf	140,w,c	;volatile
  2846   0011FC  0B0F               	andlw	15
  2847   0011FE  0930               	iorlw	48
  2848   001200  D001               	goto	L3
  2849   001202                     l2280:
  2850                           
  2851                           ;LibLCDXC8.h: 88: else;LibLCDXC8.h: 89: LATD=0x3F;
  2852   001202  0E3F               	movlw	63
  2853   001204                     L3:
  2854   001204  6E8C               	movwf	140,c	;volatile
  2855                           
  2856                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2857   001206  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  2858                           
  2859                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2860   00120A  0E04               	movlw	4
  2861   00120C  EC99  F00A         	call	_RetardoLCD
  2862                           
  2863                           ;LibLCDXC8.h: 92: if(interfaz==4){
  2864   001210  0E04               	movlw	4
  2865   001212  184C               	xorwf	_interfaz^0,w,c
  2866   001214  A4D8               	btfss	status,2,c
  2867   001216  D011               	goto	l2300
  2868                           
  2869                           ;LibLCDXC8.h: 93: LATD=(LATD & 0b00001111) | 0x20;
  2870   001218  508C               	movf	140,w,c	;volatile
  2871   00121A  0B0F               	andlw	15
  2872   00121C  0920               	iorlw	32
  2873   00121E  6E8C               	movwf	140,c	;volatile
  2874                           
  2875                           ;LibLCDXC8.h: 94: HabilitaLCD();
  2876   001220  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  2877                           
  2878                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  2879   001224  0E04               	movlw	4
  2880   001226  EC99  F00A         	call	_RetardoLCD
  2881                           
  2882                           ;LibLCDXC8.h: 96: EnviaDato(0x2F);
  2883   00122A  0E2F               	movlw	47
  2884   00122C  EC48  F00B         	call	_EnviaDato
  2885                           
  2886                           ;LibLCDXC8.h: 97: HabilitaLCD();
  2887   001230  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  2888                           
  2889                           ;LibLCDXC8.h: 98: RetardoLCD(4);
  2890   001234  0E04               	movlw	4
  2891   001236  EC99  F00A         	call	_RetardoLCD
  2892   00123A                     l2300:
  2893                           
  2894                           ;LibLCDXC8.h: 99: };LibLCDXC8.h: 100: BorraLCD();
  2895   00123A  EC75  F00C         	call	_BorraLCD	;wreg free
  2896                           
  2897                           ;LibLCDXC8.h: 101: EnviaDato(0xF);
  2898   00123E  0E0F               	movlw	15
  2899   001240  EC48  F00B         	call	_EnviaDato
  2900                           
  2901                           ;LibLCDXC8.h: 102: HabilitaLCD();
  2902   001244  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  2903                           
  2904                           ;LibLCDXC8.h: 103: RetardoLCD(4);
  2905   001248  0E04               	movlw	4
  2906   00124A  EC99  F00A         	call	_RetardoLCD
  2907   00124E  0012               	return		;funcret
  2908   001250                     __end_of_InicializaLCD:
  2909                           	callstack 0
  2910                           
  2911 ;; *************** function _BorraLCD *****************
  2912 ;; Defined at:
  2913 ;;		line 112 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2930 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2931 ;;Total ram usage:        0 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 3
  2934 ;; This function calls:
  2935 ;;		_EnviaDato
  2936 ;;		_HabilitaLCD
  2937 ;;		_RetardoLCD
  2938 ;; This function is called by:
  2939 ;;		_InicializaLCD
  2940 ;;		_MensajeLCD_Var
  2941 ;;		_welcome_operations
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text21
  2946   0018EA                     __ptext21:
  2947                           	callstack 0
  2948   0018EA                     _BorraLCD:
  2949                           	callstack 25
  2950                           
  2951                           ;LibLCDXC8.h: 114: LATD0=0;
  2952                           
  2953                           ;incstack = 0
  2954   0018EA  908C               	bcf	3980,0,c	;volatile
  2955                           
  2956                           ;LibLCDXC8.h: 115: EnviaDato(0x01);
  2957   0018EC  0E01               	movlw	1
  2958   0018EE  EC48  F00B         	call	_EnviaDato
  2959                           
  2960                           ;LibLCDXC8.h: 116: HabilitaLCD();
  2961   0018F2  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  2962                           
  2963                           ;LibLCDXC8.h: 117: RetardoLCD(2);
  2964   0018F6  0E02               	movlw	2
  2965   0018F8  EC99  F00A         	call	_RetardoLCD
  2966   0018FC  0012               	return		;funcret
  2967   0018FE                     __end_of_BorraLCD:
  2968                           	callstack 0
  2969                           
  2970 ;; *************** function _EnviaDato *****************
  2971 ;; Defined at:
  2972 ;;		line 59 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  a               1    wreg     unsigned char 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  a               1    3[COMRAM] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2986 ;;      Params:         0       0       0       0       0       0       0       0       0
  2987 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2988 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2989 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2990 ;;Total ram usage:        2 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; Hardware stack levels required when called: 2
  2993 ;; This function calls:
  2994 ;;		_HabilitaLCD
  2995 ;;		_RetardoLCD
  2996 ;; This function is called by:
  2997 ;;		_InicializaLCD
  2998 ;;		_BorraLCD
  2999 ;;		_EscribeLCD_c
  3000 ;;		_EscribeLCD_n8
  3001 ;;		_DireccionaLCD
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text22
  3006   001690                     __ptext22:
  3007                           	callstack 0
  3008   001690                     _EnviaDato:
  3009                           	callstack 25
  3010                           
  3011                           ;incstack = 0
  3012                           ;EnviaDato@a stored from wreg
  3013   001690  6E04               	movwf	EnviaDato@a^0,c
  3014                           
  3015                           ;LibLCDXC8.h: 60: if(interfaz==4){
  3016   001692  0E04               	movlw	4
  3017   001694  184C               	xorwf	_interfaz^0,w,c
  3018   001696  A4D8               	btfss	status,2,c
  3019   001698  D017               	goto	l2106
  3020                           
  3021                           ;LibLCDXC8.h: 61: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3022   00169A  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  3023   00169E  0EF0               	movlw	240
  3024   0016A0  1603               	andwf	??_EnviaDato^0,f,c
  3025   0016A2  508C               	movf	140,w,c	;volatile
  3026   0016A4  0B0F               	andlw	15
  3027   0016A6  1003               	iorwf	??_EnviaDato^0,w,c
  3028   0016A8  6E8C               	movwf	140,c	;volatile
  3029                           
  3030                           ;LibLCDXC8.h: 62: HabilitaLCD();
  3031   0016AA  EC7F  F00C         	call	_HabilitaLCD	;wreg free
  3032                           
  3033                           ;LibLCDXC8.h: 63: RetardoLCD(1);
  3034   0016AE  0E01               	movlw	1
  3035   0016B0  EC99  F00A         	call	_RetardoLCD
  3036                           
  3037                           ;LibLCDXC8.h: 64: LATD=(LATD & 0b00001111) | (a<<4);
  3038   0016B4  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  3039   0016B8  3A03               	swapf	??_EnviaDato^0,f,c
  3040   0016BA  0EF0               	movlw	240
  3041   0016BC  1603               	andwf	??_EnviaDato^0,f,c
  3042   0016BE  508C               	movf	140,w,c	;volatile
  3043   0016C0  0B0F               	andlw	15
  3044   0016C2  1003               	iorwf	??_EnviaDato^0,w,c
  3045   0016C4  6E8C               	movwf	140,c	;volatile
  3046                           
  3047                           ;LibLCDXC8.h: 67: }else if(interfaz==8){
  3048   0016C6  0012               	return	
  3049   0016C8                     l2106:
  3050   0016C8  0E08               	movlw	8
  3051   0016CA  184C               	xorwf	_interfaz^0,w,c
  3052   0016CC  A4D8               	btfss	status,2,c
  3053   0016CE  0012               	return	
  3054                           
  3055                           ;LibLCDXC8.h: 68: LATD=a;
  3056   0016D0  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  3057   0016D4  0012               	return		;funcret
  3058   0016D6                     __end_of_EnviaDato:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function _RetardoLCD *****************
  3062 ;; Defined at:
  3063 ;;		line 293 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  a               1    wreg     unsigned char 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  a               1    1[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0
  3078 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3079 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3080 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3081 ;;Total ram usage:        2 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 1
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_EnviaDato
  3088 ;;		_InicializaLCD
  3089 ;;		_BorraLCD
  3090 ;;		_EscribeLCD_c
  3091 ;;		_EscribeLCD_n8
  3092 ;;		_DireccionaLCD
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text23
  3097   001532                     __ptext23:
  3098                           	callstack 0
  3099   001532                     _RetardoLCD:
  3100                           	callstack 26
  3101                           
  3102                           ;incstack = 0
  3103                           ;RetardoLCD@a stored from wreg
  3104   001532  6E02               	movwf	RetardoLCD@a^0,c
  3105                           
  3106                           ;LibLCDXC8.h: 294: switch(a){
  3107   001534  D023               	goto	l2094
  3108   001536                     l2084:
  3109   001536  0E27               	movlw	39
  3110   001538  6E01               	movwf	??_RetardoLCD^0,c
  3111   00153A  0EF5               	movlw	245
  3112   00153C                     u2657:
  3113   00153C  2EE8               	decfsz	wreg,f,c
  3114   00153E  D7FE               	bra	u2657
  3115   001540  2E01               	decfsz	??_RetardoLCD^0,f,c
  3116   001542  D7FC               	bra	u2657
  3117   001544  F000               	nop	
  3118                           
  3119                           ;LibLCDXC8.h: 297: break;
  3120   001546  0012               	return	
  3121   001548                     l2086:
  3122   001548  0E03               	movlw	3
  3123   00154A  6E01               	movwf	??_RetardoLCD^0,c
  3124   00154C  0E98               	movlw	152
  3125   00154E                     u2667:
  3126   00154E  2EE8               	decfsz	wreg,f,c
  3127   001550  D7FE               	bra	u2667
  3128   001552  2E01               	decfsz	??_RetardoLCD^0,f,c
  3129   001554  D7FC               	bra	u2667
  3130                           
  3131                           ;LibLCDXC8.h: 299: _delay((unsigned long)((640)*(8000000/4000000.0)));
  3132   001556  0EB6               	movlw	182
  3133   001558                     u2677:
  3134   001558  D000               	nop2	
  3135   00155A  D000               	nop2	
  3136   00155C  2EE8               	decfsz	wreg,f,c
  3137   00155E  D7FC               	bra	u2677
  3138   001560  D000               	nop2	
  3139   001562  D000               	nop2	
  3140   001564  D000               	nop2	
  3141                           
  3142                           ;LibLCDXC8.h: 301: break;
  3143   001566  0012               	return	
  3144   001568                     l2088:
  3145   001568  0E42               	movlw	66
  3146   00156A                     u2687:
  3147   00156A  2EE8               	decfsz	wreg,f,c
  3148   00156C  D7FE               	bra	u2687
  3149   00156E  D000               	nop2	
  3150                           
  3151                           ;LibLCDXC8.h: 304: break;
  3152   001570  0012               	return	
  3153   001572                     l2090:
  3154   001572  0E1A               	movlw	26
  3155   001574                     u2697:
  3156   001574  2EE8               	decfsz	wreg,f,c
  3157   001576  D7FE               	bra	u2697
  3158   001578  D000               	nop2	
  3159                           
  3160                           ;LibLCDXC8.h: 307: break;
  3161   00157A  0012               	return	
  3162   00157C                     l2094:
  3163   00157C  5002               	movf	RetardoLCD@a^0,w,c
  3164                           
  3165                           ; Switch size 1, requested type "simple"
  3166                           ; Number of cases is 4, Range of values is 1 to 4
  3167                           ; switch strategies available:
  3168                           ; Name         Instructions Cycles
  3169                           ; simple_byte           13     7 (average)
  3170                           ;	Chosen strategy is simple_byte
  3171   00157E  0A01               	xorlw	1	; case 1
  3172   001580  B4D8               	btfsc	status,2,c
  3173   001582  D7D9               	goto	l2084
  3174   001584  0A03               	xorlw	3	; case 2
  3175   001586  B4D8               	btfsc	status,2,c
  3176   001588  D7DF               	goto	l2086
  3177   00158A  0A01               	xorlw	1	; case 3
  3178   00158C  B4D8               	btfsc	status,2,c
  3179   00158E  D7EC               	goto	l2088
  3180   001590  0A07               	xorlw	7	; case 4
  3181   001592  A4D8               	btfss	status,2,c
  3182   001594  0012               	return	
  3183   001596  D7ED               	goto	l2090
  3184   001598                     __end_of_RetardoLCD:
  3185                           	callstack 0
  3186                           
  3187 ;; *************** function _HabilitaLCD *****************
  3188 ;; Defined at:
  3189 ;;		line 105 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3206 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels used: 1
  3209 ;; Hardware stack levels required when called: 1
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_EnviaDato
  3214 ;;		_InicializaLCD
  3215 ;;		_BorraLCD
  3216 ;;		_EscribeLCD_c
  3217 ;;		_EscribeLCD_n8
  3218 ;;		_DireccionaLCD
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text24
  3223   0018FE                     __ptext24:
  3224                           	callstack 0
  3225   0018FE                     _HabilitaLCD:
  3226                           	callstack 26
  3227                           
  3228                           ;LibLCDXC8.h: 107: LATD1=1;
  3229                           
  3230                           ;incstack = 0
  3231   0018FE  828C               	bsf	3980,1,c	;volatile
  3232                           
  3233                           ;LibLCDXC8.h: 108: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3234   001900  0E1A               	movlw	26
  3235   001902                     u2707:
  3236   001902  2EE8               	decfsz	wreg,f,c
  3237   001904  D7FE               	bra	u2707
  3238   001906  D000               	nop2	
  3239                           
  3240                           ;LibLCDXC8.h: 110: LATD1=0;
  3241   001908  928C               	bcf	3980,1,c	;volatile
  3242   00190A  0012               	return		;funcret
  3243   00190C                     __end_of_HabilitaLCD:
  3244                           	callstack 0
  3245                           
  3246 ;; *************** function _ConfiguraLCD *****************
  3247 ;; Defined at:
  3248 ;;		line 55 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LibLCDXC8.h"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  a               1    wreg     unsigned char 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  a               1    0[COMRAM] unsigned char 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      void 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2, status,0
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3262 ;;      Params:         0       0       0       0       0       0       0       0       0
  3263 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3265 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3266 ;;Total ram usage:        1 bytes
  3267 ;; Hardware stack levels used: 1
  3268 ;; Hardware stack levels required when called: 1
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_init_configuration
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text25
  3277   0018A6                     __ptext25:
  3278                           	callstack 0
  3279   0018A6                     _ConfiguraLCD:
  3280                           	callstack 28
  3281                           
  3282                           ;incstack = 0
  3283                           ;ConfiguraLCD@a stored from wreg
  3284   0018A6  6E01               	movwf	ConfiguraLCD@a^0,c
  3285                           
  3286                           ;LibLCDXC8.h: 56: if(a==4 | a ==8)
  3287   0018A8  0E04               	movlw	4
  3288   0018AA  1801               	xorwf	ConfiguraLCD@a^0,w,c
  3289   0018AC  B4D8               	btfsc	status,2,c
  3290   0018AE  D004               	goto	u1500
  3291   0018B0  0E08               	movlw	8
  3292   0018B2  1801               	xorwf	ConfiguraLCD@a^0,w,c
  3293   0018B4  A4D8               	btfss	status,2,c
  3294   0018B6  0012               	return	
  3295   0018B8                     u1500:
  3296                           
  3297                           ;LibLCDXC8.h: 57: interfaz=a;
  3298   0018B8  C001  F04C         	movff	ConfiguraLCD@a,_interfaz
  3299   0018BC  0012               	return		;funcret
  3300   0018BE                     __end_of_ConfiguraLCD:
  3301                           	callstack 0
  3302                           
  3303 ;; *************** function _choose_scale_temperature_and_fill_buffers *****************
  3304 ;; Defined at:
  3305 ;;		line 350 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  buffer_LCD_r    1   69[COMRAM] PTR unsigned char 
  3308 ;;		 -> main@buffer_LCD_row_1(17), 
  3309 ;;  buffer_LCD_r    1   70[COMRAM] PTR unsigned char 
  3310 ;;		 -> main@buffer_LCD_row_2(17), 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  temp_convert    2   72[COMRAM] int 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3322 ;;      Params:         2       0       0       0       0       0       0       0       0
  3323 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3324 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3325 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3326 ;;Total ram usage:        5 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 3
  3329 ;; This function calls:
  3330 ;;		___ftadd
  3331 ;;		___ftdiv
  3332 ;;		___ftmul
  3333 ;;		___fttol
  3334 ;;		___lbtoft
  3335 ;;		_sprintf
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text26
  3342   000878                     __ptext26:
  3343                           	callstack 0
  3344   000878                     _choose_scale_temperature_and_fill_buffers:
  3345                           	callstack 27
  3346                           
  3347                           ;LAB05.c: 353: _delay((unsigned long)((10)*(8000000/4000.0)));
  3348                           
  3349                           ;incstack = 0
  3350   000878  0E1A               	movlw	26
  3351   00087A  6E48               	movwf	??_choose_scale_temperature_and_fill_buffers^0,c
  3352   00087C  0EF8               	movlw	248
  3353   00087E                     u2717:
  3354   00087E  2EE8               	decfsz	wreg,f,c
  3355   000880  D7FE               	bra	u2717
  3356   000882  2E48               	decfsz	??_choose_scale_temperature_and_fill_buffers^0,f,c
  3357   000884  D7FC               	bra	u2717
  3358   000886  D000               	nop2	
  3359                           
  3360                           ;LAB05.c: 354: if(RA2==0 && RA3==0){
  3361   000888  A480               	btfss	3968,2,c	;volatile
  3362   00088A  B680               	btfsc	3968,3,c	;volatile
  3363   00088C  D01A               	goto	l332
  3364                           
  3365                           ;LAB05.c: 356: sprintf(buffer_LCD_row_1, "T: %i C",Temp);
  3366   00088E  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3367   000892  0E51               	movlw	low STR_7
  3368   000894  6E0E               	movwf	sprintf@f^0,c
  3369   000896  C088  F00F         	movff	_Temp,?_sprintf+2
  3370   00089A  6A10               	clrf	(?_sprintf+3)^0,c
  3371   00089C  EC14  F006         	call	_sprintf	;wreg free
  3372                           
  3373                           ;LAB05.c: 357: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3374   0008A0  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3375   0008A4  0E48               	movlw	low STR_8
  3376   0008A6  6E0E               	movwf	sprintf@f^0,c
  3377   0008A8  C087  F00F         	movff	_Hum,?_sprintf+2
  3378   0008AC  6A10               	clrf	(?_sprintf+3)^0,c
  3379   0008AE  0E00               	movlw	0
  3380   0008B0  6E12               	movwf	(?_sprintf+5)^0,c
  3381   0008B2  0E25               	movlw	37
  3382   0008B4  6E11               	movwf	(?_sprintf+4)^0,c
  3383   0008B6  EC14  F006         	call	_sprintf	;wreg free
  3384                           
  3385                           ;LAB05.c: 359: Scale_Temperature=0;
  3386   0008BA  0E00               	movlw	0
  3387   0008BC  0100               	movlb	0	; () banked
  3388   0008BE  6F85               	movwf	_Scale_Temperature& (0+255),b
  3389                           
  3390                           ;LAB05.c: 360: }
  3391   0008C0  0012               	return	
  3392   0008C2                     l332:
  3393                           
  3394                           ;LAB05.c: 361: else if(RA2==0 && RA3==1){
  3395   0008C2  A480               	btfss	3968,2,c	;volatile
  3396   0008C4  A680               	btfss	3968,3,c	;volatile
  3397   0008C6  D039               	goto	l334
  3398                           
  3399                           ;LAB05.c: 363: temp_converted = Temp + 273.15;
  3400   0008C8  0E93               	movlw	147
  3401   0008CA  6E2E               	movwf	___ftadd@f2^0,c
  3402   0008CC  0E88               	movlw	136
  3403   0008CE  6E2F               	movwf	(___ftadd@f2+1)^0,c
  3404   0008D0  0E43               	movlw	67
  3405   0008D2  6E30               	movwf	(___ftadd@f2+2)^0,c
  3406   0008D4  0100               	movlb	0	; () banked
  3407   0008D6  5188               	movf	_Temp& (0+255),w,b
  3408   0008D8  EC00  F00C         	call	___lbtoft
  3409   0008DC  C009  F02B         	movff	?___lbtoft,___ftadd@f1
  3410   0008E0  C00A  F02C         	movff	?___lbtoft+1,___ftadd@f1+1
  3411   0008E4  C00B  F02D         	movff	?___lbtoft+2,___ftadd@f1+2
  3412   0008E8  EC40  F005         	call	___ftadd	;wreg free
  3413   0008EC  C02B  F037         	movff	?___ftadd,___fttol@f1
  3414   0008F0  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  3415   0008F4  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  3416   0008F8  EC1A  F008         	call	___fttol	;wreg free
  3417   0008FC  C037  F049         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  3418   000900  C038  F04A         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  3419                           
  3420                           ;LAB05.c: 365: sprintf(buffer_LCD_row_1, "T: %i K",temp_converted);
  3421   000904  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3422   000908  0E61               	movlw	low STR_9
  3423   00090A  6E0E               	movwf	sprintf@f^0,c
  3424   00090C  C049  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  3425   000910  C04A  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  3426   000914  EC14  F006         	call	_sprintf	;wreg free
  3427                           
  3428                           ;LAB05.c: 366: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3429   000918  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3430   00091C  0E48               	movlw	low STR_8
  3431   00091E  6E0E               	movwf	sprintf@f^0,c
  3432   000920  C087  F00F         	movff	_Hum,?_sprintf+2
  3433   000924  6A10               	clrf	(?_sprintf+3)^0,c
  3434   000926  0E00               	movlw	0
  3435   000928  6E12               	movwf	(?_sprintf+5)^0,c
  3436   00092A  0E25               	movlw	37
  3437   00092C  6E11               	movwf	(?_sprintf+4)^0,c
  3438   00092E  EC14  F006         	call	_sprintf	;wreg free
  3439                           
  3440                           ;LAB05.c: 368: Scale_Temperature=1;
  3441   000932  0E01               	movlw	1
  3442   000934  0100               	movlb	0	; () banked
  3443   000936  6F85               	movwf	_Scale_Temperature& (0+255),b
  3444                           
  3445                           ;LAB05.c: 369: }
  3446   000938  0012               	return	
  3447   00093A                     l334:
  3448                           
  3449                           ;LAB05.c: 370: else if(RA2==1 && RA3==0){
  3450   00093A  B480               	btfsc	3968,2,c	;volatile
  3451   00093C  B680               	btfsc	3968,3,c	;volatile
  3452   00093E  D047               	goto	l336
  3453                           
  3454                           ;LAB05.c: 372: temp_converted = Temp*1.8 + 491.67;
  3455   000940  0ED6               	movlw	214
  3456   000942  6E2E               	movwf	___ftadd@f2^0,c
  3457   000944  0EF5               	movlw	245
  3458   000946  6E2F               	movwf	(___ftadd@f2+1)^0,c
  3459   000948  0E43               	movlw	67
  3460   00094A  6E30               	movwf	(___ftadd@f2+2)^0,c
  3461   00094C  0E66               	movlw	102
  3462   00094E  6E10               	movwf	___ftmul@f2^0,c
  3463   000950  0EE6               	movlw	230
  3464   000952  6E11               	movwf	(___ftmul@f2+1)^0,c
  3465   000954  0E3F               	movlw	63
  3466   000956  6E12               	movwf	(___ftmul@f2+2)^0,c
  3467   000958  0100               	movlb	0	; () banked
  3468   00095A  5188               	movf	_Temp& (0+255),w,b
  3469   00095C  EC00  F00C         	call	___lbtoft
  3470   000960  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  3471   000964  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  3472   000968  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  3473   00096C  ECBA  F006         	call	___ftmul	;wreg free
  3474   000970  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  3475   000974  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  3476   000978  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  3477   00097C  EC40  F005         	call	___ftadd	;wreg free
  3478   000980  C02B  F037         	movff	?___ftadd,___fttol@f1
  3479   000984  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  3480   000988  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  3481   00098C  EC1A  F008         	call	___fttol	;wreg free
  3482   000990  C037  F049         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  3483   000994  C038  F04A         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  3484                           
  3485                           ;LAB05.c: 374: sprintf(buffer_LCD_row_1, "T: %i Ra",temp_converted);
  3486   000998  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3487   00099C  0E3F               	movlw	low STR_11
  3488   00099E  6E0E               	movwf	sprintf@f^0,c
  3489   0009A0  C049  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  3490   0009A4  C04A  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  3491   0009A8  EC14  F006         	call	_sprintf	;wreg free
  3492                           
  3493                           ;LAB05.c: 375: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3494   0009AC  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3495   0009B0  0E48               	movlw	low STR_8
  3496   0009B2  6E0E               	movwf	sprintf@f^0,c
  3497   0009B4  C087  F00F         	movff	_Hum,?_sprintf+2
  3498   0009B8  6A10               	clrf	(?_sprintf+3)^0,c
  3499   0009BA  0E00               	movlw	0
  3500   0009BC  6E12               	movwf	(?_sprintf+5)^0,c
  3501   0009BE  0E25               	movlw	37
  3502   0009C0  6E11               	movwf	(?_sprintf+4)^0,c
  3503   0009C2  EC14  F006         	call	_sprintf	;wreg free
  3504                           
  3505                           ;LAB05.c: 377: Scale_Temperature=2;
  3506   0009C6  0E02               	movlw	2
  3507   0009C8  0100               	movlb	0	; () banked
  3508   0009CA  6F85               	movwf	_Scale_Temperature& (0+255),b
  3509                           
  3510                           ;LAB05.c: 379: }
  3511   0009CC  0012               	return	
  3512   0009CE                     l336:
  3513                           
  3514                           ;LAB05.c: 380: else if(RA2==1 && RA3==1){
  3515   0009CE  A480               	btfss	3968,2,c	;volatile
  3516   0009D0  0012               	return	
  3517   0009D2  A680               	btfss	3968,3,c	;volatile
  3518   0009D4  0012               	return	
  3519                           
  3520                           ;LAB05.c: 382: temp_converted = Temp*9.0/5.0 + 32.0;
  3521   0009D6  0E00               	movlw	0
  3522   0009D8  6E2E               	movwf	___ftadd@f2^0,c
  3523   0009DA  0E00               	movlw	0
  3524   0009DC  6E2F               	movwf	(___ftadd@f2+1)^0,c
  3525   0009DE  0E42               	movlw	66
  3526   0009E0  6E30               	movwf	(___ftadd@f2+2)^0,c
  3527   0009E2  0E00               	movlw	0
  3528   0009E4  6E1F               	movwf	___ftdiv@f2^0,c
  3529   0009E6  0EA0               	movlw	160
  3530   0009E8  6E20               	movwf	(___ftdiv@f2+1)^0,c
  3531   0009EA  0E40               	movlw	64
  3532   0009EC  6E21               	movwf	(___ftdiv@f2+2)^0,c
  3533   0009EE  0E00               	movlw	0
  3534   0009F0  6E10               	movwf	___ftmul@f2^0,c
  3535   0009F2  0E10               	movlw	16
  3536   0009F4  6E11               	movwf	(___ftmul@f2+1)^0,c
  3537   0009F6  0E41               	movlw	65
  3538   0009F8  6E12               	movwf	(___ftmul@f2+2)^0,c
  3539   0009FA  0100               	movlb	0	; () banked
  3540   0009FC  5188               	movf	_Temp& (0+255),w,b
  3541   0009FE  EC00  F00C         	call	___lbtoft
  3542   000A02  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  3543   000A06  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  3544   000A0A  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  3545   000A0E  ECBA  F006         	call	___ftmul	;wreg free
  3546   000A12  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  3547   000A16  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  3548   000A1A  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  3549   000A1E  ECA7  F007         	call	___ftdiv	;wreg free
  3550   000A22  C01C  F02B         	movff	?___ftdiv,___ftadd@f1
  3551   000A26  C01D  F02C         	movff	?___ftdiv+1,___ftadd@f1+1
  3552   000A2A  C01E  F02D         	movff	?___ftdiv+2,___ftadd@f1+2
  3553   000A2E  EC40  F005         	call	___ftadd	;wreg free
  3554   000A32  C02B  F037         	movff	?___ftadd,___fttol@f1
  3555   000A36  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  3556   000A3A  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  3557   000A3E  EC1A  F008         	call	___fttol	;wreg free
  3558   000A42  C037  F049         	movff	?___fttol,choose_scale_temperature_and_fill_buffers@temp_converted
  3559   000A46  C038  F04A         	movff	?___fttol+1,choose_scale_temperature_and_fill_buffers@temp_converted+1
  3560                           
  3561                           ;LAB05.c: 384: sprintf(buffer_LCD_row_1, "T: %i F",temp_converted);
  3562   000A4A  C046  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1,sprintf@sp
  3563   000A4E  0E59               	movlw	low STR_13
  3564   000A50  6E0E               	movwf	sprintf@f^0,c
  3565   000A52  C049  F00F         	movff	choose_scale_temperature_and_fill_buffers@temp_converted,?_sprintf+2
  3566   000A56  C04A  F010         	movff	choose_scale_temperature_and_fill_buffers@temp_converted+1,?_sprintf+3
  3567   000A5A  EC14  F006         	call	_sprintf	;wreg free
  3568                           
  3569                           ;LAB05.c: 385: sprintf(buffer_LCD_row_2, "H: %i %c",Hum,37);
  3570   000A5E  C047  F00D         	movff	choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2,sprintf@sp
  3571   000A62  0E48               	movlw	low STR_8
  3572   000A64  6E0E               	movwf	sprintf@f^0,c
  3573   000A66  C087  F00F         	movff	_Hum,?_sprintf+2
  3574   000A6A  6A10               	clrf	(?_sprintf+3)^0,c
  3575   000A6C  0E00               	movlw	0
  3576   000A6E  6E12               	movwf	(?_sprintf+5)^0,c
  3577   000A70  0E25               	movlw	37
  3578   000A72  6E11               	movwf	(?_sprintf+4)^0,c
  3579   000A74  EC14  F006         	call	_sprintf	;wreg free
  3580                           
  3581                           ;LAB05.c: 387: Scale_Temperature=3;
  3582   000A78  0E03               	movlw	3
  3583   000A7A  0100               	movlb	0	; () banked
  3584   000A7C  6F85               	movwf	_Scale_Temperature& (0+255),b
  3585   000A7E  0012               	return	
  3586   000A80                     __end_of_choose_scale_temperature_and_fill_buffers:
  3587                           	callstack 0
  3588                           
  3589 ;; *************** function _sprintf *****************
  3590 ;; Defined at:
  3591 ;;		line 505 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/doprnt.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  sp              1   12[COMRAM] PTR unsigned char 
  3594 ;;		 -> send_temperature_RS232@buffer_RS232(12), main@buffer_LCD_row_2(17), main@buffer_LCD_row_1(17), 
  3595 ;;  f               1   13[COMRAM] PTR const unsigned char 
  3596 ;;		 -> STR_15(9), STR_14(9), STR_13(8), STR_12(9), 
  3597 ;;		 -> STR_11(9), STR_10(9), STR_9(8), STR_8(9), 
  3598 ;;		 -> STR_7(8), 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  tmpval          4    0        struct .
  3601 ;;  cp              3    0        PTR const unsigned char 
  3602 ;;  val             2   22[COMRAM] unsigned int 
  3603 ;;  len             2    0        unsigned int 
  3604 ;;  c               1   24[COMRAM] unsigned char 
  3605 ;;  ap              1   21[COMRAM] PTR void [1]
  3606 ;;		 -> ?_sprintf(2), 
  3607 ;;  prec            1   20[COMRAM] char 
  3608 ;;  flag            1   19[COMRAM] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  2   12[COMRAM] int 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3618 ;;      Params:         6       0       0       0       0       0       0       0       0
  3619 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3620 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3621 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3622 ;;Total ram usage:       13 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 2
  3625 ;; This function calls:
  3626 ;;		___lwdiv
  3627 ;;		___lwmod
  3628 ;; This function is called by:
  3629 ;;		_choose_scale_temperature_and_fill_buffers
  3630 ;;		_send_temperature_RS232
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text27
  3635   000C28                     __ptext27:
  3636                           	callstack 0
  3637   000C28                     _sprintf:
  3638                           	callstack 27
  3639                           
  3640                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3641                           
  3642                           ;incstack = 0
  3643   000C28  0E0F               	movlw	low (?_sprintf+2)
  3644   000C2A  6E16               	movwf	sprintf@ap^0,c
  3645                           
  3646                           ;doprnt.c: 553: while((c = *f++)) {
  3647   000C2C  D091               	goto	u1840
  3648   000C2E                     l2424:
  3649                           
  3650                           ;doprnt.c: 555: if(c != '%')
  3651   000C2E  0E25               	movlw	37
  3652   000C30  1819               	xorwf	sprintf@c^0,w,c
  3653   000C32  B4D8               	btfsc	status,2,c
  3654   000C34  D007               	goto	l2430
  3655   000C36                     u1790:
  3656                           
  3657                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  3658   000C36  500D               	movf	sprintf@sp^0,w,c
  3659   000C38  6ED9               	movwf	fsr2l,c
  3660   000C3A  6ADA               	clrf	fsr2h,c
  3661   000C3C  C019  FFDF         	movff	sprintf@c,indf2
  3662   000C40  2A0D               	incf	sprintf@sp^0,f,c
  3663                           
  3664                           ;doprnt.c: 559: continue;
  3665   000C42  D086               	goto	u1840
  3666   000C44                     l2430:
  3667                           
  3668                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3669   000C44  0E00               	movlw	0
  3670   000C46  6E14               	movwf	sprintf@flag^0,c
  3671                           
  3672                           ;doprnt.c: 661: switch(c = *f++) {
  3673   000C48  D008               	goto	l2442
  3674   000C4A                     l2432:
  3675                           
  3676                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  3677   000C4A  5016               	movf	sprintf@ap^0,w,c
  3678   000C4C  6ED9               	movwf	fsr2l,c
  3679   000C4E  6ADA               	clrf	fsr2h,c
  3680   000C50  50DF               	movf	indf2,w,c
  3681   000C52  6E19               	movwf	sprintf@c^0,c
  3682   000C54  0E02               	movlw	2
  3683   000C56  2616               	addwf	sprintf@ap^0,f,c
  3684   000C58  D7EE               	goto	u1790
  3685   000C5A                     l2442:
  3686   000C5A  2A0E               	incf	sprintf@f^0,f,c
  3687   000C5C  040E               	decf	sprintf@f^0,w,c
  3688   000C5E  6E13               	movwf	??_sprintf^0,c
  3689   000C60  C013  FFF6         	movff	??_sprintf,tblptrl
  3690   000C64                     	if	1	;There is more than 1 active tblptr byte
  3691   000C64  0E08               	movlw	high __smallconst
  3692   000C66  6EF7               	movwf	tblptrh,c
  3693   000C68                     	endif
  3694   000C68                     	if	0	;tblptru may be non-zero
  3695   000C68                     	endif
  3696   000C68                     	if	0	;tblptru may be non-zero
  3697   000C68                     	endif
  3698   000C68  0008               	tblrd		*
  3699   000C6A  CFF5 F019          	movff	tablat,sprintf@c
  3700   000C6E  5019               	movf	sprintf@c^0,w,c
  3701                           
  3702                           ; Switch size 1, requested type "simple"
  3703                           ; Number of cases is 4, Range of values is 0 to 105
  3704                           ; switch strategies available:
  3705                           ; Name         Instructions Cycles
  3706                           ; simple_byte           13     7 (average)
  3707                           ;	Chosen strategy is simple_byte
  3708   000C70  0A00               	xorlw	0	; case 0
  3709   000C72  B4D8               	btfsc	status,2,c
  3710   000C74  D07A               	goto	u1850
  3711   000C76  0A63               	xorlw	99	; case 99
  3712   000C78  B4D8               	btfsc	status,2,c
  3713   000C7A  D7E7               	goto	l2432
  3714   000C7C  0A07               	xorlw	7	; case 100
  3715   000C7E  B4D8               	btfsc	status,2,c
  3716   000C80  D003               	goto	l2444
  3717   000C82  0A0D               	xorlw	13	; case 105
  3718   000C84  A4D8               	btfss	status,2,c
  3719   000C86  D7D7               	goto	u1790
  3720   000C88                     l2444:
  3721                           
  3722                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3723   000C88  5016               	movf	sprintf@ap^0,w,c
  3724   000C8A  6ED9               	movwf	fsr2l,c
  3725   000C8C  6ADA               	clrf	fsr2h,c
  3726   000C8E  CFDE F017          	movff	postinc2,sprintf@val
  3727   000C92  CFDD F018          	movff	postdec2,sprintf@val+1
  3728   000C96  0E02               	movlw	2
  3729   000C98  2616               	addwf	sprintf@ap^0,f,c
  3730                           
  3731                           ;doprnt.c: 1287: if((int)val < 0) {
  3732   000C9A  AE18               	btfss	(sprintf@val+1)^0,7,c
  3733   000C9C  D006               	goto	l2454
  3734                           
  3735                           ;doprnt.c: 1288: flag |= 0x03;
  3736   000C9E  0E03               	movlw	3
  3737   000CA0  1214               	iorwf	sprintf@flag^0,f,c
  3738                           
  3739                           ;doprnt.c: 1289: val = -val;
  3740   000CA2  6C17               	negf	sprintf@val^0,c
  3741   000CA4  1E18               	comf	(sprintf@val+1)^0,f,c
  3742   000CA6  B0D8               	btfsc	status,0,c
  3743   000CA8  2A18               	incf	(sprintf@val+1)^0,f,c
  3744   000CAA                     l2454:
  3745                           
  3746                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3747   000CAA  0E01               	movlw	1
  3748   000CAC  6E19               	movwf	sprintf@c^0,c
  3749   000CAE                     l2460:
  3750                           
  3751                           ;doprnt.c: 1332: if(val < dpowers[c])
  3752   000CAE  5019               	movf	sprintf@c^0,w,c
  3753   000CB0  0D02               	mullw	2
  3754   000CB2  50F3               	movf	243,w,c
  3755   000CB4  0F01               	addlw	low _dpowers
  3756   000CB6  6E13               	movwf	??_sprintf^0,c
  3757   000CB8  C013  FFF6         	movff	??_sprintf,tblptrl
  3758   000CBC                     	if	1	;There is more than 1 active tblptr byte
  3759   000CBC  0E08               	movlw	high __smallconst
  3760   000CBE  6EF7               	movwf	tblptrh,c
  3761   000CC0                     	endif
  3762   000CC0                     	if	0	;tblptru may be non-zero
  3763   000CC0                     	endif
  3764   000CC0                     	if	0	;tblptru may be non-zero
  3765   000CC0                     	endif
  3766   000CC0  0009               	tblrd		*+
  3767   000CC2  50F5               	movf	tablat,w,c
  3768   000CC4  5C17               	subwf	sprintf@val^0,w,c
  3769   000CC6  0009               	tblrd		*+
  3770   000CC8  50F5               	movf	tablat,w,c
  3771   000CCA  5818               	subwfb	(sprintf@val+1)^0,w,c
  3772   000CCC  A0D8               	btfss	status,0,c
  3773   000CCE  D005               	goto	u1820
  3774   000CD0  2A19               	incf	sprintf@c^0,f,c
  3775   000CD2  0E05               	movlw	5
  3776   000CD4  1819               	xorwf	sprintf@c^0,w,c
  3777   000CD6  A4D8               	btfss	status,2,c
  3778   000CD8  D7EA               	goto	l2460
  3779   000CDA                     u1820:
  3780                           
  3781                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3782   000CDA  C014  F013         	movff	sprintf@flag,??_sprintf
  3783   000CDE  0E03               	movlw	3
  3784   000CE0  1613               	andwf	??_sprintf^0,f,c
  3785   000CE2  B4D8               	btfsc	status,2,c
  3786   000CE4  D006               	goto	l2474
  3787                           
  3788                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3789   000CE6  500D               	movf	sprintf@sp^0,w,c
  3790   000CE8  6ED9               	movwf	fsr2l,c
  3791   000CEA  6ADA               	clrf	fsr2h,c
  3792   000CEC  0E2D               	movlw	45
  3793   000CEE  6EDF               	movwf	indf2,c
  3794   000CF0  2A0D               	incf	sprintf@sp^0,f,c
  3795   000CF2                     l2474:
  3796                           
  3797                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3798   000CF2  C019  F015         	movff	sprintf@c,sprintf@prec
  3799                           
  3800                           ;doprnt.c: 1500: while(prec--) {
  3801   000CF6  D028               	goto	l2482
  3802   000CF8                     l2476:
  3803                           
  3804                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3805   000CF8  5015               	movf	sprintf@prec^0,w,c
  3806   000CFA  0D02               	mullw	2
  3807   000CFC  50F3               	movf	243,w,c
  3808   000CFE  0F01               	addlw	low _dpowers
  3809   000D00  6E13               	movwf	??_sprintf^0,c
  3810   000D02  C013  FFF6         	movff	??_sprintf,tblptrl
  3811   000D06                     	if	1	;There is more than 1 active tblptr byte
  3812   000D06  0E08               	movlw	high __smallconst
  3813   000D08  6EF7               	movwf	tblptrh,c
  3814   000D0A                     	endif
  3815   000D0A                     	if	0	;tblptru may be non-zero
  3816   000D0A                     	endif
  3817   000D0A                     	if	0	;tblptru may be non-zero
  3818   000D0A                     	endif
  3819   000D0A  0009               	tblrd		*+
  3820   000D0C  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3821   000D10  000A               	tblrd		*-
  3822   000D12  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3823   000D16  C017  F001         	movff	sprintf@val,___lwdiv@dividend
  3824   000D1A  C018  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3825   000D1E  ECF7  F00A         	call	___lwdiv	;wreg free
  3826   000D22  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3827   000D26  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3828   000D2A  0E00               	movlw	0
  3829   000D2C  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3830   000D2E  0E0A               	movlw	10
  3831   000D30  6E0A               	movwf	___lwmod@divisor^0,c
  3832   000D32  EC6B  F00B         	call	___lwmod	;wreg free
  3833   000D36  5008               	movf	?___lwmod^0,w,c
  3834   000D38  0F30               	addlw	48
  3835   000D3A  6E19               	movwf	sprintf@c^0,c
  3836                           
  3837                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  3838   000D3C  500D               	movf	sprintf@sp^0,w,c
  3839   000D3E  6ED9               	movwf	fsr2l,c
  3840   000D40  6ADA               	clrf	fsr2h,c
  3841   000D42  C019  FFDF         	movff	sprintf@c,indf2
  3842   000D46  2A0D               	incf	sprintf@sp^0,f,c
  3843   000D48                     l2482:
  3844   000D48  0615               	decf	sprintf@prec^0,f,c
  3845   000D4A  2815               	incf	sprintf@prec^0,w,c
  3846   000D4C  A4D8               	btfss	status,2,c
  3847   000D4E  D7D4               	goto	l2476
  3848   000D50                     u1840:
  3849   000D50  2A0E               	incf	sprintf@f^0,f,c
  3850   000D52  040E               	decf	sprintf@f^0,w,c
  3851   000D54  6E13               	movwf	??_sprintf^0,c
  3852   000D56  C013  FFF6         	movff	??_sprintf,tblptrl
  3853   000D5A                     	if	1	;There is more than 1 active tblptr byte
  3854   000D5A  0E08               	movlw	high __smallconst
  3855   000D5C  6EF7               	movwf	tblptrh,c
  3856   000D5E                     	endif
  3857   000D5E                     	if	0	;tblptru may be non-zero
  3858   000D5E                     	endif
  3859   000D5E                     	if	0	;tblptru may be non-zero
  3860   000D5E                     	endif
  3861   000D5E  0008               	tblrd		*
  3862   000D60  CFF5 F019          	movff	tablat,sprintf@c
  3863   000D64  5019               	movf	sprintf@c^0,w,c
  3864   000D66  A4D8               	btfss	status,2,c
  3865   000D68  D762               	goto	l2424
  3866   000D6A                     u1850:
  3867                           
  3868                           ;doprnt.c: 1564: *sp = 0;
  3869   000D6A  500D               	movf	sprintf@sp^0,w,c
  3870   000D6C  6ED9               	movwf	fsr2l,c
  3871   000D6E  6ADA               	clrf	fsr2h,c
  3872   000D70  6ADF               	clrf	indf2,c
  3873   000D72  0012               	return		;funcret
  3874   000D74                     __end_of_sprintf:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function ___lwmod *****************
  3878 ;; Defined at:
  3879 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwmod.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  dividend        2    7[COMRAM] unsigned int 
  3882 ;;  divisor         2    9[COMRAM] unsigned int 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  counter         1   11[COMRAM] unsigned char 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  2    7[COMRAM] unsigned int 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3894 ;;      Params:         4       0       0       0       0       0       0       0       0
  3895 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3897 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3898 ;;Total ram usage:        5 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; Hardware stack levels required when called: 1
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_sprintf
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text28
  3909   0016D6                     __ptext28:
  3910                           	callstack 0
  3911   0016D6                     ___lwmod:
  3912                           	callstack 27
  3913                           
  3914                           ;incstack = 0
  3915   0016D6  500A               	movf	___lwmod@divisor^0,w,c
  3916   0016D8  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  3917   0016DA  B4D8               	btfsc	status,2,c
  3918   0016DC  D018               	goto	l906
  3919   0016DE  0E01               	movlw	1
  3920   0016E0  6E0C               	movwf	___lwmod@counter^0,c
  3921   0016E2  D004               	goto	l2240
  3922   0016E4                     l2238:
  3923   0016E4  90D8               	bcf	status,0,c
  3924   0016E6  360A               	rlcf	___lwmod@divisor^0,f,c
  3925   0016E8  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  3926   0016EA  2A0C               	incf	___lwmod@counter^0,f,c
  3927   0016EC                     l2240:
  3928   0016EC  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  3929   0016EE  D7FA               	goto	l2238
  3930   0016F0                     u1470:
  3931   0016F0  500A               	movf	___lwmod@divisor^0,w,c
  3932   0016F2  5C08               	subwf	___lwmod@dividend^0,w,c
  3933   0016F4  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3934   0016F6  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  3935   0016F8  A0D8               	btfss	status,0,c
  3936   0016FA  D004               	goto	l2246
  3937   0016FC  500A               	movf	___lwmod@divisor^0,w,c
  3938   0016FE  5E08               	subwf	___lwmod@dividend^0,f,c
  3939   001700  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3940   001702  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  3941   001704                     l2246:
  3942   001704  90D8               	bcf	status,0,c
  3943   001706  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  3944   001708  320A               	rrcf	___lwmod@divisor^0,f,c
  3945   00170A  2E0C               	decfsz	___lwmod@counter^0,f,c
  3946   00170C  D7F1               	goto	u1470
  3947   00170E                     l906:
  3948   00170E  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3949   001712  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3950   001716  0012               	return		;funcret
  3951   001718                     __end_of___lwmod:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function ___lwdiv *****************
  3955 ;; Defined at:
  3956 ;;		line 7 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lwdiv.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  dividend        2    0[COMRAM] unsigned int 
  3959 ;;  divisor         2    2[COMRAM] unsigned int 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  quotient        2    4[COMRAM] unsigned int 
  3962 ;;  counter         1    6[COMRAM] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  2    0[COMRAM] unsigned int 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3972 ;;      Params:         4       0       0       0       0       0       0       0       0
  3973 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3975 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3976 ;;Total ram usage:        7 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; Hardware stack levels required when called: 1
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_sprintf
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text29
  3987   0015EE                     __ptext29:
  3988                           	callstack 0
  3989   0015EE                     ___lwdiv:
  3990                           	callstack 27
  3991                           
  3992                           ;incstack = 0
  3993   0015EE  0E00               	movlw	0
  3994   0015F0  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3995   0015F2  0E00               	movlw	0
  3996   0015F4  6E05               	movwf	___lwdiv@quotient^0,c
  3997   0015F6  5003               	movf	___lwdiv@divisor^0,w,c
  3998   0015F8  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3999   0015FA  B4D8               	btfsc	status,2,c
  4000   0015FC  D01C               	goto	l896
  4001   0015FE  0E01               	movlw	1
  4002   001600  6E07               	movwf	___lwdiv@counter^0,c
  4003   001602  D004               	goto	l2220
  4004   001604                     l2218:
  4005   001604  90D8               	bcf	status,0,c
  4006   001606  3603               	rlcf	___lwdiv@divisor^0,f,c
  4007   001608  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4008   00160A  2A07               	incf	___lwdiv@counter^0,f,c
  4009   00160C                     l2220:
  4010   00160C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4011   00160E  D7FA               	goto	l2218
  4012   001610                     u1440:
  4013   001610  90D8               	bcf	status,0,c
  4014   001612  3605               	rlcf	___lwdiv@quotient^0,f,c
  4015   001614  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4016   001616  5003               	movf	___lwdiv@divisor^0,w,c
  4017   001618  5C01               	subwf	___lwdiv@dividend^0,w,c
  4018   00161A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4019   00161C  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4020   00161E  A0D8               	btfss	status,0,c
  4021   001620  D005               	goto	l2230
  4022   001622  5003               	movf	___lwdiv@divisor^0,w,c
  4023   001624  5E01               	subwf	___lwdiv@dividend^0,f,c
  4024   001626  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4025   001628  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4026   00162A  8005               	bsf	___lwdiv@quotient^0,0,c
  4027   00162C                     l2230:
  4028   00162C  90D8               	bcf	status,0,c
  4029   00162E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4030   001630  3203               	rrcf	___lwdiv@divisor^0,f,c
  4031   001632  2E07               	decfsz	___lwdiv@counter^0,f,c
  4032   001634  D7ED               	goto	u1440
  4033   001636                     l896:
  4034   001636  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4035   00163A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4036   00163E  0012               	return		;funcret
  4037   001640                     __end_of___lwdiv:
  4038                           	callstack 0
  4039                           
  4040 ;; *************** function ___lbtoft *****************
  4041 ;; Defined at:
  4042 ;;		line 27 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/lbtoft.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  c               1    wreg     unsigned char 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;  c               1   11[COMRAM] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  3    8[COMRAM] float 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 3F/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4056 ;;      Params:         3       0       0       0       0       0       0       0       0
  4057 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4059 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4060 ;;Total ram usage:        4 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; Hardware stack levels required when called: 2
  4063 ;; This function calls:
  4064 ;;		___ftpack
  4065 ;; This function is called by:
  4066 ;;		_choose_scale_temperature_and_fill_buffers
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text30
  4071   001800                     __ptext30:
  4072                           	callstack 0
  4073   001800                     ___lbtoft:
  4074                           	callstack 27
  4075                           
  4076                           ;incstack = 0
  4077                           ;___lbtoft@c stored from wreg
  4078   001800  6E0C               	movwf	___lbtoft@c^0,c
  4079   001802  500C               	movf	___lbtoft@c^0,w,c
  4080   001804  6E01               	movwf	___ftpack@arg^0,c
  4081   001806  6A02               	clrf	(___ftpack@arg+1)^0,c
  4082   001808  6A03               	clrf	(___ftpack@arg+2)^0,c
  4083   00180A  0E8E               	movlw	142
  4084   00180C  6E04               	movwf	___ftpack@exp^0,c
  4085   00180E  0E00               	movlw	0
  4086   001810  6E05               	movwf	___ftpack@sign^0,c
  4087   001812  EC83  F008         	call	___ftpack	;wreg free
  4088   001816  C001  F009         	movff	?___ftpack,?___lbtoft
  4089   00181A  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  4090   00181E  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  4091   001822  0012               	return		;funcret
  4092   001824                     __end_of___lbtoft:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function ___fttol *****************
  4096 ;; Defined at:
  4097 ;;		line 44 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/fttol.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  f1              3   54[COMRAM] float 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  lval            4   64[COMRAM] unsigned long 
  4102 ;;  exp1            1   68[COMRAM] unsigned char 
  4103 ;;  sign1           1   63[COMRAM] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  4   54[COMRAM] long 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4113 ;;      Params:         4       0       0       0       0       0       0       0       0
  4114 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4115 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4116 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4117 ;;Total ram usage:       15 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; Hardware stack levels required when called: 1
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_choose_scale_temperature_and_fill_buffers
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text31
  4128   001034                     __ptext31:
  4129                           	callstack 0
  4130   001034                     ___fttol:
  4131                           	callstack 28
  4132                           
  4133                           ;incstack = 0
  4134   001034  C039  F03B         	movff	___fttol@f1+2,??___fttol
  4135   001038  6A3C               	clrf	(??___fttol+1)^0,c
  4136   00103A  6A3D               	clrf	(??___fttol+2)^0,c
  4137   00103C  3438               	rlcf	(___fttol@f1+1)^0,w,c
  4138   00103E  363B               	rlcf	??___fttol^0,f,c
  4139   001040  E301               	bnc	u2191
  4140   001042  803C               	bsf	(??___fttol+1)^0,0,c
  4141   001044                     u2191:
  4142   001044  503B               	movf	??___fttol^0,w,c
  4143   001046  6E45               	movwf	___fttol@exp1^0,c
  4144   001048  5045               	movf	___fttol@exp1^0,w,c
  4145   00104A  A4D8               	btfss	status,2,c
  4146   00104C  D009               	goto	l2666
  4147   00104E                     u2200:
  4148   00104E  0E00               	movlw	0
  4149   001050  6E37               	movwf	?___fttol^0,c
  4150   001052  0E00               	movlw	0
  4151   001054  6E38               	movwf	(?___fttol+1)^0,c
  4152   001056  0E00               	movlw	0
  4153   001058  6E39               	movwf	(?___fttol+2)^0,c
  4154   00105A  0E00               	movlw	0
  4155   00105C  6E3A               	movwf	(?___fttol+3)^0,c
  4156   00105E  0012               	return	
  4157   001060                     l2666:
  4158   001060  0E17               	movlw	23
  4159   001062  6E3B               	movwf	??___fttol^0,c
  4160   001064  C037  F03C         	movff	___fttol@f1,??___fttol+1
  4161   001068  C038  F03D         	movff	___fttol@f1+1,??___fttol+2
  4162   00106C  C039  F03E         	movff	___fttol@f1+2,??___fttol+3
  4163   001070  283B               	incf	??___fttol^0,w,c
  4164   001072  6E3F               	movwf	(??___fttol+4)^0,c
  4165   001074  D004               	goto	u2210
  4166   001076                     u2215:
  4167   001076  90D8               	bcf	status,0,c
  4168   001078  323E               	rrcf	(??___fttol+3)^0,f,c
  4169   00107A  323D               	rrcf	(??___fttol+2)^0,f,c
  4170   00107C  323C               	rrcf	(??___fttol+1)^0,f,c
  4171   00107E                     u2210:
  4172   00107E  2E3F               	decfsz	(??___fttol+4)^0,f,c
  4173   001080  D7FA               	goto	u2215
  4174   001082  503C               	movf	(??___fttol+1)^0,w,c
  4175   001084  6E40               	movwf	___fttol@sign1^0,c
  4176   001086  8E38               	bsf	(___fttol@f1+1)^0,7,c
  4177   001088  0EFF               	movlw	255
  4178   00108A  1637               	andwf	___fttol@f1^0,f,c
  4179   00108C  0EFF               	movlw	255
  4180   00108E  1638               	andwf	(___fttol@f1+1)^0,f,c
  4181   001090  0E00               	movlw	0
  4182   001092  1639               	andwf	(___fttol@f1+2)^0,f,c
  4183   001094  5037               	movf	___fttol@f1^0,w,c
  4184   001096  6E41               	movwf	___fttol@lval^0,c
  4185   001098  5038               	movf	(___fttol@f1+1)^0,w,c
  4186   00109A  6E42               	movwf	(___fttol@lval+1)^0,c
  4187   00109C  5039               	movf	(___fttol@f1+2)^0,w,c
  4188   00109E  6E43               	movwf	(___fttol@lval+2)^0,c
  4189   0010A0  6A44               	clrf	(___fttol@lval+3)^0,c
  4190   0010A2  0E8E               	movlw	142
  4191   0010A4  5E45               	subwf	___fttol@exp1^0,f,c
  4192   0010A6  AE45               	btfss	___fttol@exp1^0,7,c
  4193   0010A8  D00D               	goto	l2688
  4194   0010AA  5045               	movf	___fttol@exp1^0,w,c
  4195   0010AC  0A80               	xorlw	128
  4196   0010AE  0F8F               	addlw	143
  4197   0010B0  A0D8               	btfss	status,0,c
  4198   0010B2  D7CD               	goto	u2200
  4199   0010B4                     l2684:
  4200   0010B4  90D8               	bcf	status,0,c
  4201   0010B6  3244               	rrcf	(___fttol@lval+3)^0,f,c
  4202   0010B8  3243               	rrcf	(___fttol@lval+2)^0,f,c
  4203   0010BA  3242               	rrcf	(___fttol@lval+1)^0,f,c
  4204   0010BC  3241               	rrcf	___fttol@lval^0,f,c
  4205   0010BE  3E45               	incfsz	___fttol@exp1^0,f,c
  4206   0010C0  D7F9               	goto	l2684
  4207   0010C2  D00D               	goto	u2250
  4208   0010C4                     l2688:
  4209   0010C4  0E17               	movlw	23
  4210   0010C6  6445               	cpfsgt	___fttol@exp1^0,c
  4211   0010C8  D007               	goto	l2696
  4212   0010CA  D7C1               	goto	u2200
  4213   0010CC                     l2694:
  4214   0010CC  90D8               	bcf	status,0,c
  4215   0010CE  3641               	rlcf	___fttol@lval^0,f,c
  4216   0010D0  3642               	rlcf	(___fttol@lval+1)^0,f,c
  4217   0010D2  3643               	rlcf	(___fttol@lval+2)^0,f,c
  4218   0010D4  3644               	rlcf	(___fttol@lval+3)^0,f,c
  4219   0010D6  0645               	decf	___fttol@exp1^0,f,c
  4220   0010D8                     l2696:
  4221   0010D8  5045               	movf	___fttol@exp1^0,w,c
  4222   0010DA  A4D8               	btfss	status,2,c
  4223   0010DC  D7F7               	goto	l2694
  4224   0010DE                     u2250:
  4225   0010DE  5040               	movf	___fttol@sign1^0,w,c
  4226   0010E0  B4D8               	btfsc	status,2,c
  4227   0010E2  D008               	goto	l2702
  4228   0010E4  1E44               	comf	(___fttol@lval+3)^0,f,c
  4229   0010E6  1E43               	comf	(___fttol@lval+2)^0,f,c
  4230   0010E8  1E42               	comf	(___fttol@lval+1)^0,f,c
  4231   0010EA  6C41               	negf	___fttol@lval^0,c
  4232   0010EC  0E00               	movlw	0
  4233   0010EE  2242               	addwfc	(___fttol@lval+1)^0,f,c
  4234   0010F0  2243               	addwfc	(___fttol@lval+2)^0,f,c
  4235   0010F2  2244               	addwfc	(___fttol@lval+3)^0,f,c
  4236   0010F4                     l2702:
  4237   0010F4  C041  F037         	movff	___fttol@lval,?___fttol
  4238   0010F8  C042  F038         	movff	___fttol@lval+1,?___fttol+1
  4239   0010FC  C043  F039         	movff	___fttol@lval+2,?___fttol+2
  4240   001100  C044  F03A         	movff	___fttol@lval+3,?___fttol+3
  4241   001104  0012               	return		;funcret
  4242   001106                     __end_of___fttol:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function ___ftmul *****************
  4246 ;; Defined at:
  4247 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftmul.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  f1              3   12[COMRAM] float 
  4250 ;;  f2              3   15[COMRAM] float 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  4253 ;;  sign            1   26[COMRAM] unsigned char 
  4254 ;;  cntr            1   25[COMRAM] unsigned char 
  4255 ;;  exp             1   21[COMRAM] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  3   12[COMRAM] float 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4265 ;;      Params:         6       0       0       0       0       0       0       0       0
  4266 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4267 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4268 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4269 ;;Total ram usage:       15 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; Hardware stack levels required when called: 2
  4272 ;; This function calls:
  4273 ;;		___ftpack
  4274 ;; This function is called by:
  4275 ;;		_choose_scale_temperature_and_fill_buffers
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text32
  4280   000D74                     __ptext32:
  4281                           	callstack 0
  4282   000D74                     ___ftmul:
  4283                           	callstack 27
  4284                           
  4285                           ;incstack = 0
  4286   000D74  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  4287   000D78  6A14               	clrf	(??___ftmul+1)^0,c
  4288   000D7A  6A15               	clrf	(??___ftmul+2)^0,c
  4289   000D7C  340E               	rlcf	(___ftmul@f1+1)^0,w,c
  4290   000D7E  3613               	rlcf	??___ftmul^0,f,c
  4291   000D80  E301               	bnc	u2131
  4292   000D82  8014               	bsf	(??___ftmul+1)^0,0,c
  4293   000D84                     u2131:
  4294   000D84  5013               	movf	??___ftmul^0,w,c
  4295   000D86  6E16               	movwf	___ftmul@exp^0,c
  4296   000D88  5016               	movf	___ftmul@exp^0,w,c
  4297   000D8A  A4D8               	btfss	status,2,c
  4298   000D8C  D007               	goto	l2618
  4299   000D8E  0E00               	movlw	0
  4300   000D90  6E0D               	movwf	?___ftmul^0,c
  4301   000D92  0E00               	movlw	0
  4302   000D94  6E0E               	movwf	(?___ftmul+1)^0,c
  4303   000D96  0E00               	movlw	0
  4304   000D98  6E0F               	movwf	(?___ftmul+2)^0,c
  4305   000D9A  0012               	return	
  4306   000D9C                     l2618:
  4307   000D9C  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  4308   000DA0  6A14               	clrf	(??___ftmul+1)^0,c
  4309   000DA2  6A15               	clrf	(??___ftmul+2)^0,c
  4310   000DA4  3411               	rlcf	(___ftmul@f2+1)^0,w,c
  4311   000DA6  3613               	rlcf	??___ftmul^0,f,c
  4312   000DA8  E301               	bnc	u2151
  4313   000DAA  8014               	bsf	(??___ftmul+1)^0,0,c
  4314   000DAC                     u2151:
  4315   000DAC  5013               	movf	??___ftmul^0,w,c
  4316   000DAE  6E1B               	movwf	___ftmul@sign^0,c
  4317   000DB0  501B               	movf	___ftmul@sign^0,w,c
  4318   000DB2  A4D8               	btfss	status,2,c
  4319   000DB4  D007               	goto	l2624
  4320   000DB6  0E00               	movlw	0
  4321   000DB8  6E0D               	movwf	?___ftmul^0,c
  4322   000DBA  0E00               	movlw	0
  4323   000DBC  6E0E               	movwf	(?___ftmul+1)^0,c
  4324   000DBE  0E00               	movlw	0
  4325   000DC0  6E0F               	movwf	(?___ftmul+2)^0,c
  4326   000DC2  0012               	return	
  4327   000DC4                     l2624:
  4328   000DC4  501B               	movf	___ftmul@sign^0,w,c
  4329   000DC6  0F7B               	addlw	123
  4330   000DC8  2616               	addwf	___ftmul@exp^0,f,c
  4331   000DCA  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  4332   000DCE  5012               	movf	(___ftmul@f2+2)^0,w,c
  4333   000DD0  1A1B               	xorwf	___ftmul@sign^0,f,c
  4334   000DD2  0E80               	movlw	128
  4335   000DD4  161B               	andwf	___ftmul@sign^0,f,c
  4336   000DD6  8E0E               	bsf	(___ftmul@f1+1)^0,7,c
  4337   000DD8  8E11               	bsf	(___ftmul@f2+1)^0,7,c
  4338   000DDA  0EFF               	movlw	255
  4339   000DDC  1610               	andwf	___ftmul@f2^0,f,c
  4340   000DDE  0EFF               	movlw	255
  4341   000DE0  1611               	andwf	(___ftmul@f2+1)^0,f,c
  4342   000DE2  0E00               	movlw	0
  4343   000DE4  1612               	andwf	(___ftmul@f2+2)^0,f,c
  4344   000DE6  0E00               	movlw	0
  4345   000DE8  6E17               	movwf	___ftmul@f3_as_product^0,c
  4346   000DEA  0E00               	movlw	0
  4347   000DEC  6E18               	movwf	(___ftmul@f3_as_product+1)^0,c
  4348   000DEE  0E00               	movlw	0
  4349   000DF0  6E19               	movwf	(___ftmul@f3_as_product+2)^0,c
  4350   000DF2  0E07               	movlw	7
  4351   000DF4  6E1A               	movwf	___ftmul@cntr^0,c
  4352   000DF6                     l2638:
  4353   000DF6  A00D               	btfss	___ftmul@f1^0,0,c
  4354   000DF8  D006               	goto	l2642
  4355   000DFA  5010               	movf	___ftmul@f2^0,w,c
  4356   000DFC  2617               	addwf	___ftmul@f3_as_product^0,f,c
  4357   000DFE  5011               	movf	(___ftmul@f2+1)^0,w,c
  4358   000E00  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4359   000E02  5012               	movf	(___ftmul@f2+2)^0,w,c
  4360   000E04  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4361   000E06                     l2642:
  4362   000E06  90D8               	bcf	status,0,c
  4363   000E08  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  4364   000E0A  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  4365   000E0C  320D               	rrcf	___ftmul@f1^0,f,c
  4366   000E0E  90D8               	bcf	status,0,c
  4367   000E10  3610               	rlcf	___ftmul@f2^0,f,c
  4368   000E12  3611               	rlcf	(___ftmul@f2+1)^0,f,c
  4369   000E14  3612               	rlcf	(___ftmul@f2+2)^0,f,c
  4370   000E16  2E1A               	decfsz	___ftmul@cntr^0,f,c
  4371   000E18  D7EE               	goto	l2638
  4372   000E1A  0E09               	movlw	9
  4373   000E1C  6E1A               	movwf	___ftmul@cntr^0,c
  4374   000E1E                     l2648:
  4375   000E1E  A00D               	btfss	___ftmul@f1^0,0,c
  4376   000E20  D006               	goto	l2652
  4377   000E22  5010               	movf	___ftmul@f2^0,w,c
  4378   000E24  2617               	addwf	___ftmul@f3_as_product^0,f,c
  4379   000E26  5011               	movf	(___ftmul@f2+1)^0,w,c
  4380   000E28  2218               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4381   000E2A  5012               	movf	(___ftmul@f2+2)^0,w,c
  4382   000E2C  2219               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4383   000E2E                     l2652:
  4384   000E2E  90D8               	bcf	status,0,c
  4385   000E30  320F               	rrcf	(___ftmul@f1+2)^0,f,c
  4386   000E32  320E               	rrcf	(___ftmul@f1+1)^0,f,c
  4387   000E34  320D               	rrcf	___ftmul@f1^0,f,c
  4388   000E36  90D8               	bcf	status,0,c
  4389   000E38  3219               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  4390   000E3A  3218               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  4391   000E3C  3217               	rrcf	___ftmul@f3_as_product^0,f,c
  4392   000E3E  2E1A               	decfsz	___ftmul@cntr^0,f,c
  4393   000E40  D7EE               	goto	l2648
  4394   000E42  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4395   000E46  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4396   000E4A  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4397   000E4E  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  4398   000E52  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  4399   000E56  EC83  F008         	call	___ftpack	;wreg free
  4400   000E5A  C001  F00D         	movff	?___ftpack,?___ftmul
  4401   000E5E  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  4402   000E62  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  4403   000E66  0012               	return		;funcret
  4404   000E68                     __end_of___ftmul:
  4405                           	callstack 0
  4406                           
  4407 ;; *************** function ___ftdiv *****************
  4408 ;; Defined at:
  4409 ;;		line 54 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftdiv.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  f1              3   27[COMRAM] float 
  4412 ;;  f2              3   30[COMRAM] float 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  f3              3   37[COMRAM] float 
  4415 ;;  sign            1   41[COMRAM] unsigned char 
  4416 ;;  exp             1   40[COMRAM] unsigned char 
  4417 ;;  cntr            1   36[COMRAM] unsigned char 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  3   27[COMRAM] float 
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4427 ;;      Params:         6       0       0       0       0       0       0       0       0
  4428 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4429 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4430 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4431 ;;Total ram usage:       15 bytes
  4432 ;; Hardware stack levels used: 1
  4433 ;; Hardware stack levels required when called: 2
  4434 ;; This function calls:
  4435 ;;		___ftpack
  4436 ;; This function is called by:
  4437 ;;		_choose_scale_temperature_and_fill_buffers
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text33
  4442   000F4E                     __ptext33:
  4443                           	callstack 0
  4444   000F4E                     ___ftdiv:
  4445                           	callstack 27
  4446                           
  4447                           ;incstack = 0
  4448   000F4E  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  4449   000F52  6A23               	clrf	(??___ftdiv+1)^0,c
  4450   000F54  6A24               	clrf	(??___ftdiv+2)^0,c
  4451   000F56  341D               	rlcf	(___ftdiv@f1+1)^0,w,c
  4452   000F58  3622               	rlcf	??___ftdiv^0,f,c
  4453   000F5A  E301               	bnc	u2081
  4454   000F5C  8023               	bsf	(??___ftdiv+1)^0,0,c
  4455   000F5E                     u2081:
  4456   000F5E  5022               	movf	??___ftdiv^0,w,c
  4457   000F60  6E29               	movwf	___ftdiv@exp^0,c
  4458   000F62  5029               	movf	___ftdiv@exp^0,w,c
  4459   000F64  A4D8               	btfss	status,2,c
  4460   000F66  D007               	goto	l2572
  4461   000F68  0E00               	movlw	0
  4462   000F6A  6E1C               	movwf	?___ftdiv^0,c
  4463   000F6C  0E00               	movlw	0
  4464   000F6E  6E1D               	movwf	(?___ftdiv+1)^0,c
  4465   000F70  0E00               	movlw	0
  4466   000F72  6E1E               	movwf	(?___ftdiv+2)^0,c
  4467   000F74  0012               	return	
  4468   000F76                     l2572:
  4469   000F76  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  4470   000F7A  6A23               	clrf	(??___ftdiv+1)^0,c
  4471   000F7C  6A24               	clrf	(??___ftdiv+2)^0,c
  4472   000F7E  3420               	rlcf	(___ftdiv@f2+1)^0,w,c
  4473   000F80  3622               	rlcf	??___ftdiv^0,f,c
  4474   000F82  E301               	bnc	u2101
  4475   000F84  8023               	bsf	(??___ftdiv+1)^0,0,c
  4476   000F86                     u2101:
  4477   000F86  5022               	movf	??___ftdiv^0,w,c
  4478   000F88  6E2A               	movwf	___ftdiv@sign^0,c
  4479   000F8A  502A               	movf	___ftdiv@sign^0,w,c
  4480   000F8C  A4D8               	btfss	status,2,c
  4481   000F8E  D007               	goto	l2578
  4482   000F90  0E00               	movlw	0
  4483   000F92  6E1C               	movwf	?___ftdiv^0,c
  4484   000F94  0E00               	movlw	0
  4485   000F96  6E1D               	movwf	(?___ftdiv+1)^0,c
  4486   000F98  0E00               	movlw	0
  4487   000F9A  6E1E               	movwf	(?___ftdiv+2)^0,c
  4488   000F9C  0012               	return	
  4489   000F9E                     l2578:
  4490   000F9E  0E00               	movlw	0
  4491   000FA0  6E26               	movwf	___ftdiv@f3^0,c
  4492   000FA2  0E00               	movlw	0
  4493   000FA4  6E27               	movwf	(___ftdiv@f3+1)^0,c
  4494   000FA6  0E00               	movlw	0
  4495   000FA8  6E28               	movwf	(___ftdiv@f3+2)^0,c
  4496   000FAA  502A               	movf	___ftdiv@sign^0,w,c
  4497   000FAC  0F89               	addlw	137
  4498   000FAE  5E29               	subwf	___ftdiv@exp^0,f,c
  4499   000FB0  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  4500   000FB4  5021               	movf	(___ftdiv@f2+2)^0,w,c
  4501   000FB6  1A2A               	xorwf	___ftdiv@sign^0,f,c
  4502   000FB8  0E80               	movlw	128
  4503   000FBA  162A               	andwf	___ftdiv@sign^0,f,c
  4504   000FBC  8E1D               	bsf	(___ftdiv@f1+1)^0,7,c
  4505   000FBE  0EFF               	movlw	255
  4506   000FC0  161C               	andwf	___ftdiv@f1^0,f,c
  4507   000FC2  0EFF               	movlw	255
  4508   000FC4  161D               	andwf	(___ftdiv@f1+1)^0,f,c
  4509   000FC6  0E00               	movlw	0
  4510   000FC8  161E               	andwf	(___ftdiv@f1+2)^0,f,c
  4511   000FCA  8E20               	bsf	(___ftdiv@f2+1)^0,7,c
  4512   000FCC  0EFF               	movlw	255
  4513   000FCE  161F               	andwf	___ftdiv@f2^0,f,c
  4514   000FD0  0EFF               	movlw	255
  4515   000FD2  1620               	andwf	(___ftdiv@f2+1)^0,f,c
  4516   000FD4  0E00               	movlw	0
  4517   000FD6  1621               	andwf	(___ftdiv@f2+2)^0,f,c
  4518   000FD8  0E18               	movlw	24
  4519   000FDA  6E25               	movwf	___ftdiv@cntr^0,c
  4520   000FDC                     l2598:
  4521   000FDC  90D8               	bcf	status,0,c
  4522   000FDE  3626               	rlcf	___ftdiv@f3^0,f,c
  4523   000FE0  3627               	rlcf	(___ftdiv@f3+1)^0,f,c
  4524   000FE2  3628               	rlcf	(___ftdiv@f3+2)^0,f,c
  4525   000FE4  501F               	movf	___ftdiv@f2^0,w,c
  4526   000FE6  5C1C               	subwf	___ftdiv@f1^0,w,c
  4527   000FE8  5020               	movf	(___ftdiv@f2+1)^0,w,c
  4528   000FEA  581D               	subwfb	(___ftdiv@f1+1)^0,w,c
  4529   000FEC  5021               	movf	(___ftdiv@f2+2)^0,w,c
  4530   000FEE  581E               	subwfb	(___ftdiv@f1+2)^0,w,c
  4531   000FF0  A0D8               	btfss	status,0,c
  4532   000FF2  D007               	goto	l758
  4533   000FF4  501F               	movf	___ftdiv@f2^0,w,c
  4534   000FF6  5E1C               	subwf	___ftdiv@f1^0,f,c
  4535   000FF8  5020               	movf	(___ftdiv@f2+1)^0,w,c
  4536   000FFA  5A1D               	subwfb	(___ftdiv@f1+1)^0,f,c
  4537   000FFC  5021               	movf	(___ftdiv@f2+2)^0,w,c
  4538   000FFE  5A1E               	subwfb	(___ftdiv@f1+2)^0,f,c
  4539   001000  8026               	bsf	___ftdiv@f3^0,0,c
  4540   001002                     l758:
  4541   001002  90D8               	bcf	status,0,c
  4542   001004  361C               	rlcf	___ftdiv@f1^0,f,c
  4543   001006  361D               	rlcf	(___ftdiv@f1+1)^0,f,c
  4544   001008  361E               	rlcf	(___ftdiv@f1+2)^0,f,c
  4545   00100A  2E25               	decfsz	___ftdiv@cntr^0,f,c
  4546   00100C  D7E7               	goto	l2598
  4547   00100E  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  4548   001012  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4549   001016  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4550   00101A  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  4551   00101E  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  4552   001022  EC83  F008         	call	___ftpack	;wreg free
  4553   001026  C001  F01C         	movff	?___ftpack,?___ftdiv
  4554   00102A  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  4555   00102E  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  4556   001032  0012               	return		;funcret
  4557   001034                     __end_of___ftdiv:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function ___ftadd *****************
  4561 ;; Defined at:
  4562 ;;		line 86 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/ftadd.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  f1              3   42[COMRAM] float 
  4565 ;;  f2              3   45[COMRAM] float 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  exp1            1   53[COMRAM] unsigned char 
  4568 ;;  exp2            1   52[COMRAM] unsigned char 
  4569 ;;  sign            1   51[COMRAM] unsigned char 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  3   42[COMRAM] float 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4579 ;;      Params:         6       0       0       0       0       0       0       0       0
  4580 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4581 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4582 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4583 ;;Total ram usage:       12 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; Hardware stack levels required when called: 2
  4586 ;; This function calls:
  4587 ;;		___ftpack
  4588 ;; This function is called by:
  4589 ;;		_choose_scale_temperature_and_fill_buffers
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text34
  4594   000A80                     __ptext34:
  4595                           	callstack 0
  4596   000A80                     ___ftadd:
  4597                           	callstack 27
  4598                           
  4599                           ;incstack = 0
  4600   000A80  C02D  F031         	movff	___ftadd@f1+2,??___ftadd
  4601   000A84  6A32               	clrf	(??___ftadd+1)^0,c
  4602   000A86  6A33               	clrf	(??___ftadd+2)^0,c
  4603   000A88  342C               	rlcf	(___ftadd@f1+1)^0,w,c
  4604   000A8A  3631               	rlcf	??___ftadd^0,f,c
  4605   000A8C  E301               	bnc	u1871
  4606   000A8E  8032               	bsf	(??___ftadd+1)^0,0,c
  4607   000A90                     u1871:
  4608   000A90  5031               	movf	??___ftadd^0,w,c
  4609   000A92  6E36               	movwf	___ftadd@exp1^0,c
  4610   000A94  C030  F031         	movff	___ftadd@f2+2,??___ftadd
  4611   000A98  6A32               	clrf	(??___ftadd+1)^0,c
  4612   000A9A  6A33               	clrf	(??___ftadd+2)^0,c
  4613   000A9C  342F               	rlcf	(___ftadd@f2+1)^0,w,c
  4614   000A9E  3631               	rlcf	??___ftadd^0,f,c
  4615   000AA0  E301               	bnc	u1881
  4616   000AA2  8032               	bsf	(??___ftadd+1)^0,0,c
  4617   000AA4                     u1881:
  4618   000AA4  5031               	movf	??___ftadd^0,w,c
  4619   000AA6  6E35               	movwf	___ftadd@exp2^0,c
  4620   000AA8  5036               	movf	___ftadd@exp1^0,w,c
  4621   000AAA  B4D8               	btfsc	status,2,c
  4622   000AAC  D00A               	goto	u1910
  4623   000AAE  5035               	movf	___ftadd@exp2^0,w,c
  4624   000AB0  5C36               	subwf	___ftadd@exp1^0,w,c
  4625   000AB2  B0D8               	btfsc	status,0,c
  4626   000AB4  D00D               	goto	l2504
  4627   000AB6  5036               	movf	___ftadd@exp1^0,w,c
  4628   000AB8  5C35               	subwf	___ftadd@exp2^0,w,c
  4629   000ABA  6E31               	movwf	??___ftadd^0,c
  4630   000ABC  0E18               	movlw	24
  4631   000ABE  6431               	cpfsgt	??___ftadd^0,c
  4632   000AC0  D007               	goto	l2504
  4633   000AC2                     u1910:
  4634   000AC2  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  4635   000AC6  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  4636   000ACA  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  4637   000ACE  0012               	return	
  4638   000AD0                     l2504:
  4639   000AD0  5035               	movf	___ftadd@exp2^0,w,c
  4640   000AD2  B4D8               	btfsc	status,2,c
  4641   000AD4  D00A               	goto	u1940
  4642   000AD6  5036               	movf	___ftadd@exp1^0,w,c
  4643   000AD8  5C35               	subwf	___ftadd@exp2^0,w,c
  4644   000ADA  B0D8               	btfsc	status,0,c
  4645   000ADC  D00D               	goto	l2510
  4646   000ADE  5035               	movf	___ftadd@exp2^0,w,c
  4647   000AE0  5C36               	subwf	___ftadd@exp1^0,w,c
  4648   000AE2  6E31               	movwf	??___ftadd^0,c
  4649   000AE4  0E18               	movlw	24
  4650   000AE6  6431               	cpfsgt	??___ftadd^0,c
  4651   000AE8  D007               	goto	l2510
  4652   000AEA                     u1940:
  4653   000AEA  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  4654   000AEE  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  4655   000AF2  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  4656   000AF6  0012               	return	
  4657   000AF8                     l2510:
  4658   000AF8  0E06               	movlw	6
  4659   000AFA  6E34               	movwf	___ftadd@sign^0,c
  4660   000AFC  BE2D               	btfsc	(___ftadd@f1+2)^0,7,c
  4661   000AFE  8E34               	bsf	___ftadd@sign^0,7,c
  4662   000B00  BE30               	btfsc	(___ftadd@f2+2)^0,7,c
  4663   000B02  8C34               	bsf	___ftadd@sign^0,6,c
  4664   000B04  8E2C               	bsf	(___ftadd@f1+1)^0,7,c
  4665   000B06  0EFF               	movlw	255
  4666   000B08  162B               	andwf	___ftadd@f1^0,f,c
  4667   000B0A  0EFF               	movlw	255
  4668   000B0C  162C               	andwf	(___ftadd@f1+1)^0,f,c
  4669   000B0E  0E00               	movlw	0
  4670   000B10  162D               	andwf	(___ftadd@f1+2)^0,f,c
  4671   000B12  8E2F               	bsf	(___ftadd@f2+1)^0,7,c
  4672   000B14  0EFF               	movlw	255
  4673   000B16  162E               	andwf	___ftadd@f2^0,f,c
  4674   000B18  0EFF               	movlw	255
  4675   000B1A  162F               	andwf	(___ftadd@f2+1)^0,f,c
  4676   000B1C  0E00               	movlw	0
  4677   000B1E  1630               	andwf	(___ftadd@f2+2)^0,f,c
  4678   000B20  5035               	movf	___ftadd@exp2^0,w,c
  4679   000B22  5C36               	subwf	___ftadd@exp1^0,w,c
  4680   000B24  B0D8               	btfsc	status,0,c
  4681   000B26  D01B               	goto	l2536
  4682   000B28                     u1970:
  4683   000B28  90D8               	bcf	status,0,c
  4684   000B2A  362E               	rlcf	___ftadd@f2^0,f,c
  4685   000B2C  362F               	rlcf	(___ftadd@f2+1)^0,f,c
  4686   000B2E  3630               	rlcf	(___ftadd@f2+2)^0,f,c
  4687   000B30  0635               	decf	___ftadd@exp2^0,f,c
  4688   000B32  5036               	movf	___ftadd@exp1^0,w,c
  4689   000B34  1835               	xorwf	___ftadd@exp2^0,w,c
  4690   000B36  B4D8               	btfsc	status,2,c
  4691   000B38  D00D               	goto	l2534
  4692   000B3A  0634               	decf	___ftadd@sign^0,f,c
  4693   000B3C  C034  F031         	movff	___ftadd@sign,??___ftadd
  4694   000B40  0E07               	movlw	7
  4695   000B42  1631               	andwf	??___ftadd^0,f,c
  4696   000B44  B4D8               	btfsc	status,2,c
  4697   000B46  D006               	goto	l2534
  4698   000B48  D7EF               	goto	u1970
  4699   000B4A                     l2532:
  4700   000B4A  90D8               	bcf	status,0,c
  4701   000B4C  322D               	rrcf	(___ftadd@f1+2)^0,f,c
  4702   000B4E  322C               	rrcf	(___ftadd@f1+1)^0,f,c
  4703   000B50  322B               	rrcf	___ftadd@f1^0,f,c
  4704   000B52  2A36               	incf	___ftadd@exp1^0,f,c
  4705   000B54                     l2534:
  4706   000B54  5035               	movf	___ftadd@exp2^0,w,c
  4707   000B56  1836               	xorwf	___ftadd@exp1^0,w,c
  4708   000B58  B4D8               	btfsc	status,2,c
  4709   000B5A  D01F               	goto	u2040
  4710   000B5C  D7F6               	goto	l2532
  4711   000B5E                     l2536:
  4712   000B5E  5036               	movf	___ftadd@exp1^0,w,c
  4713   000B60  5C35               	subwf	___ftadd@exp2^0,w,c
  4714   000B62  B0D8               	btfsc	status,0,c
  4715   000B64  D01A               	goto	u2040
  4716   000B66                     u2010:
  4717   000B66  90D8               	bcf	status,0,c
  4718   000B68  362B               	rlcf	___ftadd@f1^0,f,c
  4719   000B6A  362C               	rlcf	(___ftadd@f1+1)^0,f,c
  4720   000B6C  362D               	rlcf	(___ftadd@f1+2)^0,f,c
  4721   000B6E  0636               	decf	___ftadd@exp1^0,f,c
  4722   000B70  5036               	movf	___ftadd@exp1^0,w,c
  4723   000B72  1835               	xorwf	___ftadd@exp2^0,w,c
  4724   000B74  B4D8               	btfsc	status,2,c
  4725   000B76  D00D               	goto	l2546
  4726   000B78  0634               	decf	___ftadd@sign^0,f,c
  4727   000B7A  C034  F031         	movff	___ftadd@sign,??___ftadd
  4728   000B7E  0E07               	movlw	7
  4729   000B80  1631               	andwf	??___ftadd^0,f,c
  4730   000B82  B4D8               	btfsc	status,2,c
  4731   000B84  D006               	goto	l2546
  4732   000B86  D7EF               	goto	u2010
  4733   000B88                     l2544:
  4734   000B88  90D8               	bcf	status,0,c
  4735   000B8A  3230               	rrcf	(___ftadd@f2+2)^0,f,c
  4736   000B8C  322F               	rrcf	(___ftadd@f2+1)^0,f,c
  4737   000B8E  322E               	rrcf	___ftadd@f2^0,f,c
  4738   000B90  2A35               	incf	___ftadd@exp2^0,f,c
  4739   000B92                     l2546:
  4740   000B92  5035               	movf	___ftadd@exp2^0,w,c
  4741   000B94  1836               	xorwf	___ftadd@exp1^0,w,c
  4742   000B96  A4D8               	btfss	status,2,c
  4743   000B98  D7F7               	goto	l2544
  4744   000B9A                     u2040:
  4745   000B9A  AE34               	btfss	___ftadd@sign^0,7,c
  4746   000B9C  D00C               	goto	l747
  4747   000B9E  0EFF               	movlw	255
  4748   000BA0  1A2B               	xorwf	___ftadd@f1^0,f,c
  4749   000BA2  0EFF               	movlw	255
  4750   000BA4  1A2C               	xorwf	(___ftadd@f1+1)^0,f,c
  4751   000BA6  0EFF               	movlw	255
  4752   000BA8  1A2D               	xorwf	(___ftadd@f1+2)^0,f,c
  4753   000BAA  0E01               	movlw	1
  4754   000BAC  262B               	addwf	___ftadd@f1^0,f,c
  4755   000BAE  0E00               	movlw	0
  4756   000BB0  222C               	addwfc	(___ftadd@f1+1)^0,f,c
  4757   000BB2  0E00               	movlw	0
  4758   000BB4  222D               	addwfc	(___ftadd@f1+2)^0,f,c
  4759   000BB6                     l747:
  4760   000BB6  AC34               	btfss	___ftadd@sign^0,6,c
  4761   000BB8  D00C               	goto	l2552
  4762   000BBA  0EFF               	movlw	255
  4763   000BBC  1A2E               	xorwf	___ftadd@f2^0,f,c
  4764   000BBE  0EFF               	movlw	255
  4765   000BC0  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  4766   000BC2  0EFF               	movlw	255
  4767   000BC4  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  4768   000BC6  0E01               	movlw	1
  4769   000BC8  262E               	addwf	___ftadd@f2^0,f,c
  4770   000BCA  0E00               	movlw	0
  4771   000BCC  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  4772   000BCE  0E00               	movlw	0
  4773   000BD0  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  4774   000BD2                     l2552:
  4775   000BD2  0E00               	movlw	0
  4776   000BD4  6E34               	movwf	___ftadd@sign^0,c
  4777   000BD6  502B               	movf	___ftadd@f1^0,w,c
  4778   000BD8  262E               	addwf	___ftadd@f2^0,f,c
  4779   000BDA  502C               	movf	(___ftadd@f1+1)^0,w,c
  4780   000BDC  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  4781   000BDE  502D               	movf	(___ftadd@f1+2)^0,w,c
  4782   000BE0  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  4783   000BE2  AE30               	btfss	(___ftadd@f2+2)^0,7,c
  4784   000BE4  D00E               	goto	l2562
  4785   000BE6  0EFF               	movlw	255
  4786   000BE8  1A2E               	xorwf	___ftadd@f2^0,f,c
  4787   000BEA  0EFF               	movlw	255
  4788   000BEC  1A2F               	xorwf	(___ftadd@f2+1)^0,f,c
  4789   000BEE  0EFF               	movlw	255
  4790   000BF0  1A30               	xorwf	(___ftadd@f2+2)^0,f,c
  4791   000BF2  0E01               	movlw	1
  4792   000BF4  262E               	addwf	___ftadd@f2^0,f,c
  4793   000BF6  0E00               	movlw	0
  4794   000BF8  222F               	addwfc	(___ftadd@f2+1)^0,f,c
  4795   000BFA  0E00               	movlw	0
  4796   000BFC  2230               	addwfc	(___ftadd@f2+2)^0,f,c
  4797   000BFE  0E01               	movlw	1
  4798   000C00  6E34               	movwf	___ftadd@sign^0,c
  4799   000C02                     l2562:
  4800   000C02  C02E  F001         	movff	___ftadd@f2,___ftpack@arg
  4801   000C06  C02F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4802   000C0A  C030  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4803   000C0E  C036  F004         	movff	___ftadd@exp1,___ftpack@exp
  4804   000C12  C034  F005         	movff	___ftadd@sign,___ftpack@sign
  4805   000C16  EC83  F008         	call	___ftpack	;wreg free
  4806   000C1A  C001  F02B         	movff	?___ftpack,?___ftadd
  4807   000C1E  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  4808   000C22  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  4809   000C26  0012               	return		;funcret
  4810   000C28                     __end_of___ftadd:
  4811                           	callstack 0
  4812                           
  4813 ;; *************** function ___ftpack *****************
  4814 ;; Defined at:
  4815 ;;		line 62 in file "/opt/microchip/xc8/v2.41/pic/sources/c90/common/float.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  arg             3    0[COMRAM] unsigned um
  4818 ;;  exp             1    3[COMRAM] unsigned char 
  4819 ;;  sign            1    4[COMRAM] unsigned char 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  3    0[COMRAM] float 
  4824 ;; Registers used:
  4825 ;;		wreg, status,2, status,0
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4831 ;;      Params:         5       0       0       0       0       0       0       0       0
  4832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4833 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4834 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4835 ;;Total ram usage:        8 bytes
  4836 ;; Hardware stack levels used: 1
  4837 ;; Hardware stack levels required when called: 1
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		___ftadd
  4842 ;;		___ftdiv
  4843 ;;		___ftmul
  4844 ;;		___lbtoft
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text35
  4849   001106                     __ptext35:
  4850                           	callstack 0
  4851   001106                     ___ftpack:
  4852                           	callstack 27
  4853                           
  4854                           ;incstack = 0
  4855   001106  5004               	movf	___ftpack@exp^0,w,c
  4856   001108  B4D8               	btfsc	status,2,c
  4857   00110A  D005               	goto	u1320
  4858   00110C  5001               	movf	___ftpack@arg^0,w,c
  4859   00110E  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  4860   001110  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  4861   001112  A4D8               	btfss	status,2,c
  4862   001114  D00C               	goto	l2144
  4863   001116                     u1320:
  4864   001116  0E00               	movlw	0
  4865   001118  6E01               	movwf	?___ftpack^0,c
  4866   00111A  0E00               	movlw	0
  4867   00111C  6E02               	movwf	(?___ftpack+1)^0,c
  4868   00111E  0E00               	movlw	0
  4869   001120  6E03               	movwf	(?___ftpack+2)^0,c
  4870   001122  0012               	return	
  4871   001124                     l2142:
  4872   001124  2A04               	incf	___ftpack@exp^0,f,c
  4873   001126  90D8               	bcf	status,0,c
  4874   001128  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  4875   00112A  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  4876   00112C  3201               	rrcf	___ftpack@arg^0,f,c
  4877   00112E                     l2144:
  4878   00112E  0E00               	movlw	0
  4879   001130  1401               	andwf	___ftpack@arg^0,w,c
  4880   001132  6E06               	movwf	??___ftpack^0,c
  4881   001134  0E00               	movlw	0
  4882   001136  1402               	andwf	(___ftpack@arg+1)^0,w,c
  4883   001138  6E07               	movwf	(??___ftpack+1)^0,c
  4884   00113A  0EFE               	movlw	254
  4885   00113C  1403               	andwf	(___ftpack@arg+2)^0,w,c
  4886   00113E  6E08               	movwf	(??___ftpack+2)^0,c
  4887   001140  5006               	movf	??___ftpack^0,w,c
  4888   001142  1007               	iorwf	(??___ftpack+1)^0,w,c
  4889   001144  1008               	iorwf	(??___ftpack+2)^0,w,c
  4890   001146  B4D8               	btfsc	status,2,c
  4891   001148  D00C               	goto	l2150
  4892   00114A  D7EC               	goto	l2142
  4893   00114C                     l2146:
  4894   00114C  2A04               	incf	___ftpack@exp^0,f,c
  4895   00114E  0E01               	movlw	1
  4896   001150  2601               	addwf	___ftpack@arg^0,f,c
  4897   001152  0E00               	movlw	0
  4898   001154  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  4899   001156  0E00               	movlw	0
  4900   001158  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  4901   00115A  90D8               	bcf	status,0,c
  4902   00115C  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  4903   00115E  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  4904   001160  3201               	rrcf	___ftpack@arg^0,f,c
  4905   001162                     l2150:
  4906   001162  0E00               	movlw	0
  4907   001164  1401               	andwf	___ftpack@arg^0,w,c
  4908   001166  6E06               	movwf	??___ftpack^0,c
  4909   001168  0E00               	movlw	0
  4910   00116A  1402               	andwf	(___ftpack@arg+1)^0,w,c
  4911   00116C  6E07               	movwf	(??___ftpack+1)^0,c
  4912   00116E  0EFF               	movlw	255
  4913   001170  1403               	andwf	(___ftpack@arg+2)^0,w,c
  4914   001172  6E08               	movwf	(??___ftpack+2)^0,c
  4915   001174  5006               	movf	??___ftpack^0,w,c
  4916   001176  1007               	iorwf	(??___ftpack+1)^0,w,c
  4917   001178  1008               	iorwf	(??___ftpack+2)^0,w,c
  4918   00117A  B4D8               	btfsc	status,2,c
  4919   00117C  D006               	goto	l2154
  4920   00117E  D7E6               	goto	l2146
  4921   001180                     l2152:
  4922   001180  0604               	decf	___ftpack@exp^0,f,c
  4923   001182  90D8               	bcf	status,0,c
  4924   001184  3601               	rlcf	___ftpack@arg^0,f,c
  4925   001186  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  4926   001188  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  4927   00118A                     l2154:
  4928   00118A  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  4929   00118C  D003               	goto	u1360
  4930   00118E  0E02               	movlw	2
  4931   001190  6004               	cpfslt	___ftpack@exp^0,c
  4932   001192  D7F6               	goto	l2152
  4933   001194                     u1360:
  4934   001194  A004               	btfss	___ftpack@exp^0,0,c
  4935   001196  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  4936   001198  90D8               	bcf	status,0,c
  4937   00119A  3204               	rrcf	___ftpack@exp^0,f,c
  4938   00119C  5004               	movf	___ftpack@exp^0,w,c
  4939   00119E  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  4940   0011A0  5005               	movf	___ftpack@sign^0,w,c
  4941   0011A2  A4D8               	btfss	status,2,c
  4942   0011A4  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  4943   0011A6  C001  F001         	movff	___ftpack@arg,?___ftpack
  4944   0011AA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4945   0011AE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4946   0011B2  0012               	return		;funcret
  4947   0011B4                     __end_of___ftpack:
  4948                           	callstack 0
  4949                           
  4950 ;; *************** function _check_potentiometer_voltaje *****************
  4951 ;; Defined at:
  4952 ;;		line 279 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;		None
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  1    wreg      void 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4966 ;;      Params:         0       0       0       0       0       0       0       0       0
  4967 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4968 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4969 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4970 ;;Total ram usage:        0 bytes
  4971 ;; Hardware stack levels used: 1
  4972 ;; Hardware stack levels required when called: 1
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_main
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text36
  4981   001888                     __ptext36:
  4982                           	callstack 0
  4983   001888                     _check_potentiometer_voltaje:
  4984                           	callstack 29
  4985                           
  4986                           ;LAB05.c: 280: ADON=1;
  4987                           
  4988                           ;incstack = 0
  4989   001888  80C2               	bsf	4034,0,c	;volatile
  4990                           
  4991                           ;LAB05.c: 281: GO=1;
  4992   00188A  82C2               	bsf	4034,1,c	;volatile
  4993   00188C                     l304:
  4994   00188C  B2C2               	btfsc	4034,1,c	;volatile
  4995   00188E  D7FE               	goto	l304
  4996                           
  4997                           ;LAB05.c: 283: if(ADRES > 511)
  4998   001890  0E00               	movlw	0
  4999   001892  5CC3               	subwf	195,w,c	;volatile
  5000   001894  0E02               	movlw	2
  5001   001896  58C4               	subwfb	196,w,c	;volatile
  5002   001898  A0D8               	btfss	status,0,c
  5003   00189A  D002               	goto	l307
  5004                           
  5005                           ;LAB05.c: 284: RB0 = 1;
  5006   00189C  8081               	bsf	3969,0,c	;volatile
  5007   00189E  D001               	goto	l308
  5008   0018A0                     l307:
  5009                           
  5010                           ;LAB05.c: 285: else;LAB05.c: 286: RB0 = 0;
  5011   0018A0  9081               	bcf	3969,0,c	;volatile
  5012   0018A2                     l308:
  5013                           
  5014                           ;LAB05.c: 287: ADON=0;
  5015   0018A2  90C2               	bcf	4034,0,c	;volatile
  5016                           
  5017                           ;LAB05.c: 288: return;
  5018   0018A4  0012               	return		;funcret
  5019   0018A6                     __end_of_check_potentiometer_voltaje:
  5020                           	callstack 0
  5021                           
  5022 ;; *************** function _ISR *****************
  5023 ;; Defined at:
  5024 ;;		line 452 in file "/home/esteban/Esteban/UN/semester12/Microcontroladores/MPLAB_X_IDE/lab05_ADC.X/LAB05.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;		None
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      void 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5038 ;;      Params:         0       0       0       0       0       0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5041 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5042 ;;Total ram usage:        0 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		Interrupt level 2
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	intcode
  5052   000008                     __pintcode:
  5053                           	callstack 0
  5054   000008                     _ISR:
  5055                           	callstack 25
  5056                           
  5057                           ;incstack = 0
  5058   000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5059   00000A  ED12  F00C         	call	int_func,f	;refresh shadow registers
  5060                           
  5061                           	psect	intcode_body
  5062   001824                     __pintcode_body:
  5063                           	callstack 25
  5064   001824                     int_func:
  5065                           	callstack 25
  5066   001824  0006               	pop		; remove dummy address from shadow register refresh
  5067                           
  5068                           ;LAB05.c: 453: if(TMR0IF==1){
  5069   001826  A4F2               	btfss	4082,2,c	;volatile
  5070   001828  D00D               	goto	i2l376
  5071                           
  5072                           ;LAB05.c: 454: TMR0=3036;
  5073   00182A  0E0B               	movlw	11
  5074   00182C  6ED7               	movwf	215,c	;volatile
  5075   00182E  0EDC               	movlw	220
  5076   001830  6ED6               	movwf	214,c	;volatile
  5077                           
  5078                           ;LAB05.c: 455: TMR0IF=0;
  5079   001832  94F2               	bcf	4082,2,c	;volatile
  5080                           
  5081                           ;LAB05.c: 456: RC2=~RC2;
  5082   001834  B482               	btfsc	3970,2,c	;volatile
  5083   001836  D002               	goto	i2u255_40
  5084   001838  8482               	bsf	3970,2,c	;volatile
  5085   00183A  D001               	goto	i2u256_45
  5086   00183C                     i2u255_40:
  5087   00183C  9482               	bcf	3970,2,c	;volatile
  5088   00183E                     i2u256_45:
  5089                           
  5090                           ;LAB05.c: 457: Enable_sample=1;
  5091   00183E  0E01               	movlw	1
  5092   001840  0100               	movlb	0	; () banked
  5093   001842  6F86               	movwf	_Enable_sample& (0+255),b
  5094   001844                     i2l376:
  5095   001844  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5096   001846  0011               	retfie		f
  5097   001848                     __end_of_ISR:
  5098                           	callstack 0
  5099                           
  5100                           	psect	rparam
  5101   000000                     
  5102                           	psect	temp
  5103   00004D                     btemp:
  5104                           	callstack 0
  5105   00004D                     	ds	1
  5106   000000                     int$flags	set	btemp
  5107   000000                     wtemp8	set	btemp+1
  5108   000000                     ttemp5	set	btemp+1
  5109   000000                     ttemp6	set	btemp+4
  5110   000000                     ttemp7	set	btemp+8
  5111                           
  5112                           	psect	idloc
  5113                           
  5114                           ;Config register IDLOC0 @ 0x200000
  5115                           ;	unspecified, using default values
  5116   200000                     	org	2097152
  5117   200000  FF                 	db	255
  5118                           
  5119                           ;Config register IDLOC1 @ 0x200001
  5120                           ;	unspecified, using default values
  5121   200001                     	org	2097153
  5122   200001  FF                 	db	255
  5123                           
  5124                           ;Config register IDLOC2 @ 0x200002
  5125                           ;	unspecified, using default values
  5126   200002                     	org	2097154
  5127   200002  FF                 	db	255
  5128                           
  5129                           ;Config register IDLOC3 @ 0x200003
  5130                           ;	unspecified, using default values
  5131   200003                     	org	2097155
  5132   200003  FF                 	db	255
  5133                           
  5134                           ;Config register IDLOC4 @ 0x200004
  5135                           ;	unspecified, using default values
  5136   200004                     	org	2097156
  5137   200004  FF                 	db	255
  5138                           
  5139                           ;Config register IDLOC5 @ 0x200005
  5140                           ;	unspecified, using default values
  5141   200005                     	org	2097157
  5142   200005  FF                 	db	255
  5143                           
  5144                           ;Config register IDLOC6 @ 0x200006
  5145                           ;	unspecified, using default values
  5146   200006                     	org	2097158
  5147   200006  FF                 	db	255
  5148                           
  5149                           ;Config register IDLOC7 @ 0x200007
  5150                           ;	unspecified, using default values
  5151   200007                     	org	2097159
  5152   200007  FF                 	db	255
  5153                           
  5154                           	psect	config
  5155                           
  5156                           ;Config register CONFIG1L @ 0x300000
  5157                           ;	unspecified, using default values
  5158                           ;	PLL Prescaler Selection bits
  5159                           ;	PLLDIV = 0x0, unprogrammed default
  5160                           ;	System Clock Postscaler Selection bits
  5161                           ;	CPUDIV = 0x0, unprogrammed default
  5162                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5163                           ;	USBDIV = 0x0, unprogrammed default
  5164   300000                     	org	3145728
  5165   300000  00                 	db	0
  5166                           
  5167                           ;Config register CONFIG1H @ 0x300001
  5168                           ;	Oscillator Selection bits
  5169                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5170                           ;	Fail-Safe Clock Monitor Enable bit
  5171                           ;	FCMEN = 0x0, unprogrammed default
  5172                           ;	Internal/External Oscillator Switchover bit
  5173                           ;	IESO = 0x0, unprogrammed default
  5174   300001                     	org	3145729
  5175   300001  09                 	db	9
  5176                           
  5177                           ;Config register CONFIG2L @ 0x300002
  5178                           ;	unspecified, using default values
  5179                           ;	Power-up Timer Enable bit
  5180                           ;	PWRT = 0x1, unprogrammed default
  5181                           ;	Brown-out Reset Enable bits
  5182                           ;	BOR = 0x3, unprogrammed default
  5183                           ;	Brown-out Reset Voltage bits
  5184                           ;	BORV = 0x3, unprogrammed default
  5185                           ;	USB Voltage Regulator Enable bit
  5186                           ;	VREGEN = 0x0, unprogrammed default
  5187   300002                     	org	3145730
  5188   300002  1F                 	db	31
  5189                           
  5190                           ;Config register CONFIG2H @ 0x300003
  5191                           ;	Watchdog Timer Enable bit
  5192                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5193                           ;	Watchdog Timer Postscale Select bits
  5194                           ;	WDTPS = 512, 1:512
  5195   300003                     	org	3145731
  5196   300003  12                 	db	18
  5197                           
  5198                           ; Padding undefined space
  5199   300004                     	org	3145732
  5200   300004  FF                 	db	255
  5201                           
  5202                           ;Config register CONFIG3H @ 0x300005
  5203                           ;	unspecified, using default values
  5204                           ;	CCP2 MUX bit
  5205                           ;	CCP2MX = 0x1, unprogrammed default
  5206                           ;	PORTB A/D Enable bit
  5207                           ;	PBADEN = 0x1, unprogrammed default
  5208                           ;	Low-Power Timer 1 Oscillator Enable bit
  5209                           ;	LPT1OSC = 0x0, unprogrammed default
  5210                           ;	MCLR Pin Enable bit
  5211                           ;	MCLRE = 0x1, unprogrammed default
  5212   300005                     	org	3145733
  5213   300005  83                 	db	131
  5214                           
  5215                           ;Config register CONFIG4L @ 0x300006
  5216                           ;	unspecified, using default values
  5217                           ;	Stack Full/Underflow Reset Enable bit
  5218                           ;	STVREN = 0x1, unprogrammed default
  5219                           ;	Single-Supply ICSP Enable bit
  5220                           ;	LVP = 0x1, unprogrammed default
  5221                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5222                           ;	ICPRT = 0x0, unprogrammed default
  5223                           ;	Extended Instruction Set Enable bit
  5224                           ;	XINST = 0x0, unprogrammed default
  5225                           ;	Background Debugger Enable bit
  5226                           ;	DEBUG = 0x1, unprogrammed default
  5227   300006                     	org	3145734
  5228   300006  85                 	db	133
  5229                           
  5230                           ; Padding undefined space
  5231   300007                     	org	3145735
  5232   300007  FF                 	db	255
  5233                           
  5234                           ;Config register CONFIG5L @ 0x300008
  5235                           ;	unspecified, using default values
  5236                           ;	Code Protection bit
  5237                           ;	CP0 = 0x1, unprogrammed default
  5238                           ;	Code Protection bit
  5239                           ;	CP1 = 0x1, unprogrammed default
  5240                           ;	Code Protection bit
  5241                           ;	CP2 = 0x1, unprogrammed default
  5242                           ;	Code Protection bit
  5243                           ;	CP3 = 0x1, unprogrammed default
  5244   300008                     	org	3145736
  5245   300008  0F                 	db	15
  5246                           
  5247                           ;Config register CONFIG5H @ 0x300009
  5248                           ;	unspecified, using default values
  5249                           ;	Boot Block Code Protection bit
  5250                           ;	CPB = 0x1, unprogrammed default
  5251                           ;	Data EEPROM Code Protection bit
  5252                           ;	CPD = 0x1, unprogrammed default
  5253   300009                     	org	3145737
  5254   300009  C0                 	db	192
  5255                           
  5256                           ;Config register CONFIG6L @ 0x30000A
  5257                           ;	unspecified, using default values
  5258                           ;	Write Protection bit
  5259                           ;	WRT0 = 0x1, unprogrammed default
  5260                           ;	Write Protection bit
  5261                           ;	WRT1 = 0x1, unprogrammed default
  5262                           ;	Write Protection bit
  5263                           ;	WRT2 = 0x1, unprogrammed default
  5264                           ;	Write Protection bit
  5265                           ;	WRT3 = 0x1, unprogrammed default
  5266   30000A                     	org	3145738
  5267   30000A  0F                 	db	15
  5268                           
  5269                           ;Config register CONFIG6H @ 0x30000B
  5270                           ;	unspecified, using default values
  5271                           ;	Configuration Register Write Protection bit
  5272                           ;	WRTC = 0x1, unprogrammed default
  5273                           ;	Boot Block Write Protection bit
  5274                           ;	WRTB = 0x1, unprogrammed default
  5275                           ;	Data EEPROM Write Protection bit
  5276                           ;	WRTD = 0x1, unprogrammed default
  5277   30000B                     	org	3145739
  5278   30000B  E0                 	db	224
  5279                           
  5280                           ;Config register CONFIG7L @ 0x30000C
  5281                           ;	unspecified, using default values
  5282                           ;	Table Read Protection bit
  5283                           ;	EBTR0 = 0x1, unprogrammed default
  5284                           ;	Table Read Protection bit
  5285                           ;	EBTR1 = 0x1, unprogrammed default
  5286                           ;	Table Read Protection bit
  5287                           ;	EBTR2 = 0x1, unprogrammed default
  5288                           ;	Table Read Protection bit
  5289                           ;	EBTR3 = 0x1, unprogrammed default
  5290   30000C                     	org	3145740
  5291   30000C  0F                 	db	15
  5292                           
  5293                           ;Config register CONFIG7H @ 0x30000D
  5294                           ;	unspecified, using default values
  5295                           ;	Boot Block Table Read Protection bit
  5296                           ;	EBTRB = 0x1, unprogrammed default
  5297   30000D                     	org	3145741
  5298   30000D  40                 	db	64
  5299                           tosu	equ	0xFFF
  5300                           tosh	equ	0xFFE
  5301                           tosl	equ	0xFFD
  5302                           stkptr	equ	0xFFC
  5303                           pclatu	equ	0xFFB
  5304                           pclath	equ	0xFFA
  5305                           pcl	equ	0xFF9
  5306                           tblptru	equ	0xFF8
  5307                           tblptrh	equ	0xFF7
  5308                           tblptrl	equ	0xFF6
  5309                           tablat	equ	0xFF5
  5310                           prodh	equ	0xFF4
  5311                           prodl	equ	0xFF3
  5312                           indf0	equ	0xFEF
  5313                           postinc0	equ	0xFEE
  5314                           postdec0	equ	0xFED
  5315                           preinc0	equ	0xFEC
  5316                           plusw0	equ	0xFEB
  5317                           fsr0h	equ	0xFEA
  5318                           fsr0l	equ	0xFE9
  5319                           wreg	equ	0xFE8
  5320                           indf1	equ	0xFE7
  5321                           postinc1	equ	0xFE6
  5322                           postdec1	equ	0xFE5
  5323                           preinc1	equ	0xFE4
  5324                           plusw1	equ	0xFE3
  5325                           fsr1h	equ	0xFE2
  5326                           fsr1l	equ	0xFE1
  5327                           bsr	equ	0xFE0
  5328                           indf2	equ	0xFDF
  5329                           postinc2	equ	0xFDE
  5330                           postdec2	equ	0xFDD
  5331                           preinc2	equ	0xFDC
  5332                           plusw2	equ	0xFDB
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8

Data Sizes:
    Strings     107
    Constant    10
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      76
    BANK0           160     37      41
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[9]), STR_14(CODE[9]), STR_13(CODE[8]), STR_12(CODE[9]), 
		 -> STR_11(CODE[9]), STR_10(CODE[9]), STR_9(CODE[8]), STR_8(CODE[9]), 
		 -> STR_7(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> send_temperature_RS232@buffer_RS232(COMRAM[12]), main@buffer_LCD_row_2(BANK0[17]), main@buffer_LCD_row_1(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    show_temperature_LCD@buffer_LCD_row_2	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_2(BANK0[17]), 

    show_temperature_LCD@buffer_LCD_row_1	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_1(BANK0[17]), 

    choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_2(BANK0[17]), 

    choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer_LCD_row_1(BANK0[17]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[3]), STR_5(CODE[5]), STR_4(CODE[17]), STR_3(CODE[13]), 
		 -> STR_2(CODE[8]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_choose_scale_temperature_and_fill_buffers
    _welcome_operations->_EscribeLCD_n8
    _MensajeLCD_Var->_DireccionaLCD
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_n8->___lbdiv
    ___lbdiv->___lbmod
    _show_temperature_LCD->_DireccionaLCD
    _show_temperature_LCD->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _send_temperature_RS232->_sprintf
    _save_temperature_c_EEPROM->_EEPROM_Write
    _measure_temperature_c_humidity_per->_DHT11_ReadData
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD
    _choose_scale_temperature_and_fill_buffers->___fttol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   30603
                                              0 BANK0     37    37      0
        _check_potentiometer_voltaje
_choose_scale_temperature_and_fill_b
                 _init_configuration
 _measure_temperature_c_humidity_per
          _save_temperature_c_EEPROM
             _send_temperature_RS232
               _show_temperature_LCD
             _show_temperature_c_RGB
                 _welcome_operations
 ---------------------------------------------------------------------------------
 (1) _welcome_operations                                   2     2      0    2548
                                             13 COMRAM     2     2      0
                           _BorraLCD
                        _EEPROM_Read
                      _EscribeLCD_n8
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       3     2      1    1009
                                              5 COMRAM     3     2      1
                           _BorraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_n8                                        5     4      1    1407
                                              8 COMRAM     5     4      1
                        _EEPROM_Read (ARG)
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     539
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _show_temperature_c_RGB                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _show_temperature_LCD                                 6     1      5     936
                                              5 COMRAM     6     1      5
                      _DireccionaLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _DireccionaLCD                                        1     1      0     132
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _send_temperature_RS232                              15    15      0    5709
                                             25 COMRAM    15    15      0
                         _Transmitir
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _save_temperature_c_EEPROM                            0     0      0     120
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _measure_temperature_c_humidity_per                   0     0      0     115
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       3     3      0     115
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_configuration                                   2     2      0     286
                                              4 COMRAM     2     2      0
                       _ConfiguraLCD
                      _InicializaLCD
 ---------------------------------------------------------------------------------
 (2) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      88
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfiguraLCD                                         1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _choose_scale_temperature_and_fill_buffers            5     3      2   20705
                                             69 COMRAM     5     3      2
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    5563
                                             12 COMRAM    13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    2075
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1574
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2866
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     480
                                             54 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3602
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3404
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4392
                                             42 COMRAM    12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _check_potentiometer_voltaje                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_potentiometer_voltaje
   _choose_scale_temperature_and_fill_buffers
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
       ___ftmul (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
     ___ftdiv
     ___ftmul
     ___fttol
       ___ftadd (ARG)
       ___ftdiv (ARG)
       ___ftmul (ARG)
       ___lbtoft (ARG)
     ___lbtoft
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_configuration
     _ConfiguraLCD
     _InicializaLCD
       _BorraLCD
         _EnviaDato
           _HabilitaLCD
           _RetardoLCD
         _HabilitaLCD
         _RetardoLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _measure_temperature_c_humidity_per
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _save_temperature_c_EEPROM
     _EEPROM_Write
   _send_temperature_RS232
     _Transmitir
     _sprintf
   _show_temperature_LCD
     _DireccionaLCD
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD
   _show_temperature_c_RGB
   _welcome_operations
     _BorraLCD
     _EEPROM_Read
     _EscribeLCD_n8
       _EEPROM_Read (ARG)
       _EnviaDato (ARG)
       _HabilitaLCD (ARG)
       _RetardoLCD (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
     _MensajeLCD_Var
       _BorraLCD
       _DireccionaLCD
       _EscribeLCD_c

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      29       5       25.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      4C       1       80.9%
BITBIGSFRll         20      0       0      33        0.0%
BITBIGSFRhhhhl      1A      0       0      21        0.0%
BITBIGSFRhllhll      F      0       0      29        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhlhhh       B      0       0      24        0.0%
BITBIGSFRhlhlh       8      0       0      26        0.0%
BITBIGSFRhlhhl       7      0       0      25        0.0%
BITBIGSFRlhh         4      0       0      31        0.0%
BITBIGSFRhllll       4      0       0      30        0.0%
BITBIGSFRhllhh       1      0       0      28        0.0%
BITBIGSFRlhl         1      0       0      32        0.0%
BITBIGSFRhlhll       1      0       0      27        0.0%
BITBIGSFRhhhl        1      0       0      22        0.0%
BITBIGSFRhhl         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      75      34        0.0%
DATA                 0      0      75       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun  4 02:22:11 2023

                                        Transmitir@BufferT 0001  
                                 ??_show_temperature_c_RGB 0001  
                                                       _GO 7E11  
                                                       _RD 7D30  
                                                       _TO 7E83  
                                                       _WR 7D31  
                                               EnviaDato@a 0004  
               __end_of_measure_temperature_c_humidity_per 1800  
                     ??_measure_temperature_c_humidity_per 0004  
                      ?_measure_temperature_c_humidity_per 0001  
                       _measure_temperature_c_humidity_per 17DA  
                                             ___ftadd@exp1 0036  
                                             ___ftadd@exp2 0035  
                                              main@Temp_n1 0082  
                                             ___ftadd@sign 0034  
                                            _InicializaLCD 11B4  
                                                      l304 188C  
                                                      l307 18A0  
                                                      l308 18A2  
                                                      l332 08C2  
                                                      l334 093A  
                                                      l327 14C4  
                                                      l336 09CE  
                                                      l283 15D2  
                                                      l278 15A0  
                                                      l379 1880  
                                                      l906 170E  
                                                      l747 0BB6  
                                                      l758 1002  
                                                      l896 1636  
                                                      _GIE 7F97  
                                                      _RB0 7C08  
                                                      _RA2 7C02  
                                                      _RA3 7C03  
                                                      _RA4 7C04  
                                                      _RC2 7C12  
                                                      _RE0 7C20  
                                                      _RE1 7C21  
                                                      _RE2 7C22  
                                                      _ISR 0008  
                                                      _Che 004B  
                                                      _Hum 0087  
                                                      wreg 0FE8  
                                                     ?_ISR 0001  
                                             ___ftdiv@cntr 0025  
                                             ___ftdiv@sign 002A  
                                                     l2106 16C8  
                                                     l2220 160C  
                                                     l2300 123A  
                                                     l2150 1162  
                                                     l2142 1124  
                                                     l2230 162C  
                                                     l2206 17D2  
                                                     l2310 0E6E  
                                                     l2152 1180  
                                                     l2144 112E  
                                                     l2240 16EC  
                                                     l2400 15CC  
                                                     l2154 118A  
                                                     l2146 114C  
                                                     l2218 1604  
                                                     l2090 1572  
                                                     l2084 1536  
                                                     l2260 11C6  
                                                     l2180 1730  
                                                     l2316 0E8E  
                                                     l2510 0AF8  
                                                     l2246 1704  
                                                     l2238 16E4  
                                                     l2430 0C44  
                                                     l2086 1548  
                                                     l2094 157C  
                                                     l2270 11E4  
                                                     l2326 0ED4  
                                                     l2342 0F38  
                                                     l2504 0AD0  
                                                     l2432 0C4A  
                                                     l2424 0C2E  
                                                     l2088 1568  
                                                     l2280 1202  
                                                     l2176 172A  
                                                     l2192 174E  
                                                     l2360 1332  
                                                     l2352 1306  
                                                     l2442 0C5A  
                                                     l2346 12E6  
                                                     l2532 0B4A  
                                                     l2460 0CAE  
                                                     l2444 0C88  
                                                     l2188 1746  
                                                     l2356 131C  
                                                     l2364 134A  
                                                     l2534 0B54  
                                                     l2702 10F4  
                                                     l2454 0CAA  
                                                     l2198 17BA  
                                                     l2552 0BD2  
                                                     l2544 0B88  
                                                     l2536 0B5E  
                                                     l2624 0DC4  
                                                     l2562 0C02  
                                                     l2546 0B92  
                                                     l2642 0E06  
                                                     l2618 0D9C  
                                                     l2482 0D48  
                                                     l2474 0CF2  
                                                     l2490 191A  
                                                     l2572 0F76  
                                                     l2652 0E2E  
                                                     l2476 0CF8  
                                                     l2638 0DF6  
                                                     l2814 1658  
                                                     l2648 0E1E  
                                                     l2912 127C  
                                                     l2578 0F9E  
                                                     l2666 1060  
                                                     l2818 1668  
                                                     l2930 12C0  
                                                     l2914 128C  
                                                     l2684 10B4  
                                                     l2932 12D0  
                                                     l2908 126C  
                                                     l2772 13F4  
                                                     l2598 0FDC  
                                                     l2694 10CC  
                                                     l2926 12B0  
                                                     l2918 1294  
                                                     l2696 10D8  
                                                     l2688 10C4  
                                                     l2936 12D8  
                                                     l2880 147E  
                                                     l2892 14A8  
                                                     l2884 148C  
                                                     l2876 1470  
                                                     l2956 14DE  
                                                     l2896 14B6  
                                                     l2888 149A  
                                                     _ADON 7E10  
                                                     STR_1 081C  
                                                     STR_2 0869  
                                                     STR_3 0829  
                                                     STR_4 080B  
                                                     STR_5 0871  
                                                     STR_6 0856  
                                                     STR_7 0851  
                                                     STR_8 0848  
                                                     STR_9 0861  
                                                     u2010 0B66  
                                                     u2101 0F86  
                                                     u1320 1116  
                                                     u2040 0B9A  
                                                     u2200 104E  
                                                     u1400 1734  
                                                     u2210 107E  
                                                     u2131 0D84  
                                                     u1500 18B8  
                                                     u2151 0DAC  
                                                     u2215 1076  
                                                     u1360 1194  
                                                     u1440 1610  
                                                     _LATD 0F8C  
                                                     u2081 0F5E  
                                                     _LATE 0F8D  
                                                     u2250 10DE  
                                                     u1610 1762  
                                                     u1620 176C  
                                                     u1470 16F0  
                                                     u1710 15C0  
                                                     u2191 1044  
                                                     u1640 1772  
                                                     u1608 175E  
                                                     u1650 177C  
                                                     u2450 1264  
                                                     u1820 0CDA  
                                                     u1740 15DC  
                                                     u1910 0AC2  
                                                     u1638 176E  
                                                     u1590 175C  
                                                     u2470 129A  
                                                     u2607 1852  
                                                     u1840 0D50  
                                                     u1728 15C2  
                                                     u1680 15AA  
                                                     u2617 185E  
                                                     u1850 0D6A  
                                                     u2707 1902  
                                                     u2627 15B2  
                                                     u1940 0AEA  
                                                     u1668 177E  
                                                     u2717 087E  
                                                     u2637 136E  
                                                     u1790 0C36  
                                                     u1758 15DE  
                                                     u1871 0A90  
                                                     u2647 13D6  
                                                     u1881 0AA4  
                                                     u2657 153C  
                                                     u2577 1412  
                                                     u1970 0B28  
                                                     u1698 15AC  
                                                     u2667 154E  
                                                     u2587 1452  
                                                     u2677 1558  
                                                     u2597 1680  
                                                     u2687 156A  
                                                     u2697 1574  
                                                     _TMR0 0FD6  
                                                     _TRMT 7D61  
                                                     _WREN 7D32  
                                           ??_EscribeLCD_c 0005  
                                                     _Temp 0088  
                                                     _main 14CC  
                                             ___ftpack@arg 0001  
                                             ___ftpack@exp 0004  
                                                     fsr2h 0FDA  
                                                     indf2 0FDF  
                                                     fsr2l 0FD9  
                                                     btemp 004D  
                                     main@buffer_LCD_row_1 0060  
                                     main@buffer_LCD_row_2 0071  
                                                     prodl 0FF3  
                                                     start 000E  
                                         ??_DHT11_ReadData 0001  
                                             ___ftmul@cntr 001A  
                                             ___param_bank 0000  
                                             ___ftmul@sign 001B  
                                                    ??_ISR 0001  
                                             ___fttol@exp1 0045  
                                     __end_of_EEPROM_Write 1888  
                                             ___fttol@lval 0041  
                              ??_save_temperature_c_EEPROM 0003  
                                           ?_InicializaLCD 0001  
                                                    ?_main 0001  
        __end_of_choose_scale_temperature_and_fill_buffers 0A80  
              ??_choose_scale_temperature_and_fill_buffers 0048  
               ?_choose_scale_temperature_and_fill_buffers 0046  
                _choose_scale_temperature_and_fill_buffers 0878  
                                          __end_of___lbdiv 1752  
                                                    _ADRES 0FC3  
                                                    _EEADR 0FA9  
                                          __end_of___ftadd 0C28  
                                                    STR_10 0848  
                                                    STR_11 083F  
                                                    STR_12 0848  
                                                    STR_13 0859  
                                                    STR_14 0848  
                                                    STR_15 0836  
                                            EscribeLCD_c@a 0005  
                                          __end_of___lbmod 17DA  
                                          __end_of___ftdiv 1034  
                                          __end_of___ftmul 0E68  
                                                    _T0CON 0FD5  
                                          __end_of___fttol 1106  
                                                    _LATB0 7C50  
                                                    _LATA4 7C4C  
                                                    _LATC2 7C5A  
                                                    _LATD0 7C60  
                                                    _LATD1 7C61  
                                          __end_of___lwdiv 1640  
                                          __end_of___lwmod 1718  
                                                    i2l376 1844  
                                                    _RCSTA 0FAB  
                                                    _SPBRG 0FAF  
                                                    _TRISD 0F95  
                                                    _TRISE 0F96  
                                                    _TXREG 0FAD  
                                                    _TXSTA 0FAC  
                                          ??_EscribeLCD_n8 000A  
                                          __end_of_dpowers 080B  
                                            ___ftpack@sign 0005  
  choose_scale_temperature_and_fill_buffers@temp_converted 0049  
                                                    tablat 0FF5  
                                              _HabilitaLCD 18FE  
                                                    ttemp5 004E  
                                                    ttemp6 0051  
                                                    ttemp7 0055  
                                                    status 0FD8  
                                                    wtemp8 004E  
                                          __end_of_sprintf 0D74  
                                          ___lbdiv@divisor 0005  
                                         EEPROM_Write@data 0001  
                                          ___lbdiv@counter 0007  
                                         __end_of_BorraLCD 18FE  
                                          __initialization 1784  
                                             __end_of_main 1532  
                                                   ??_main 004B  
                                     __end_of_ConfiguraLCD 18BE  
                                            ___fttol@sign1 0040  
                                    MensajeLCD_Var@counter 0008  
                                            __activetblptr 0002  
                                                   _ADCON0 0FC2  
                                                   _ADCON1 0FC1  
                                                   _ADCON2 0FC0  
                                                   _EEDATA 0FA8  
                                           DireccionaLCD@a 0005  
                                                   _EECON2 0FA7  
                                           EscribeLCD_n8@a 000D  
                                           EscribeLCD_n8@b 0009  
                                      _DHT11_CheckResponse 1752  
                                         __end_of___ftpack 11B4  
                                         __end_of___lbtoft 1824  
                                _save_temperature_c_EEPROM 1924  
                                                   _OSCCON 0FD3  
                                                   _TMR0IE 7F95  
                                                   _TMR0IF 7F92  
                                                   _TMR0ON 7EAF  
                                                   _TRISA2 7C92  
                                                   _TRISB0 7C98  
                                                   _TRISA3 7C93  
                                                   _TRISA4 7C94  
                                                   _TRISC2 7CA2  
                                                   _SWDTEN 7E88  
                                    __end_of_DireccionaLCD 18EA  
                                               _RetardoLCD 1532  
choose_scale_temperature_and_fill_buffers@buffer_LCD_row_1 0046  
choose_scale_temperature_and_fill_buffers@buffer_LCD_row_2 0047  
                                     EscribeLCD_n8@centena 000A  
                            send_temperature_RS232@counter 0028  
                                                ??___lbdiv 0006  
                                                ??___ftadd 0031  
                                                ??___lbmod 0002  
                                                ??___ftdiv 0022  
                                     ?_DHT11_CheckResponse 0001  
                                                ??___ftmul 0013  
                                                ??___fttol 003B  
                                                ??___lwdiv 0005  
                                                ??___lwmod 000C  
                                          ??_InicializaLCD 0005  
                                                   isa$std 0001  
                                     __end_of_EscribeLCD_c 18D4  
                                    ___ftmul@f3_as_product 0017  
                                             __pdataCOMRAM 004C  
                                             __mediumconst 0000  
                                   _send_temperature_RS232 1640  
                                                   tblptrh 0FF7  
                                                   tblptrl 0FF6  
                                                   tblptru 0FF8  
                                                ??_sprintf 0013  
                                               _Transmitir 1918  
                                         ___lbdiv@dividend 0006  
                                   _show_temperature_c_RGB 1460  
                                          ___lbmod@divisor 0001  
                                               __accesstop 0060  
                                  __end_of__initialization 17A2  
                                          ___lbmod@counter 0003  
                                               ___ftadd@f1 002B  
                                               ___ftadd@f2 002E  
                                            ___rparam_used 0001  
                                               ___ftdiv@f1 001C  
                                               ___ftdiv@f2 001F  
                                               ___ftdiv@f3 0026  
                               __end_of_welcome_operations 1460  
                                               ___lbtoft@c 000C  
                                               ___ftmul@f1 000D  
                                               ___ftmul@f2 0010  
                                               ___fttol@f1 0037  
                                           __pcstackCOMRAM 0001  
                                    ??_DHT11_CheckResponse 0001  
                                        __end_of_EnviaDato 16D6  
                                         ___lbdiv@quotient 0008  
                                                ?_BorraLCD 0001  
                                           _MensajeLCD_Var 12E0  
                               __end_of_init_configuration 13E4  
                                             _EEPROM_Write 186A  
                                               __pbssBANK0 0085  
                                          MensajeLCD_Var@a 0006  
                                              ?_RetardoLCD 0001  
                                              RetardoLCD@a 0002  
                                                  _BAUDCON 0FB8  
                                                ?___ftpack 0001  
                                                ?___lbtoft 0009  
                                   __end_of_MensajeLCD_Var 1364  
                                               ??_BorraLCD 0005  
                                              ?_Transmitir 0001  
                                             ?_HabilitaLCD 0001  
                                            ??_DHT11_Start 0001  
                 show_temperature_LCD@Scale_Temperature_n1 000A  
                                             _ConfiguraLCD 18A6  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                                  ___lbdiv 1718  
                                                  ___ftadd 0A80  
                                                  ___lbmod 17B0  
                                                  ___ftdiv 0F4E  
                                                  ___ftmul 0D74  
                                                  ___fttol 1034  
                                                  ___lwdiv 15EE  
                                                  ___lwmod 16D6  
                                             __psmallconst 0800  
                                                  __pcinit 1784  
                                               ??___ftpack 0006  
                                               ??___lbtoft 000C  
                                                  __ramtop 0800  
                                                  __ptext0 14CC  
                                                  __ptext1 13E4  
                                                  __ptext2 12E0  
                                                  __ptext3 0E68  
                                                  __ptext4 17B0  
                                                  __ptext5 1718  
                                                  __ptext6 190C  
                                                  __ptext7 1460  
                                                  __ptext8 1250  
                                                  __ptext9 18BE  
                                                  _dpowers 0801  
                      __end_of_check_potentiometer_voltaje 18A6  
                              _check_potentiometer_voltaje 1888  
                                          ?_MensajeLCD_Var 0006  
                                    __end_of_EscribeLCD_n8 0F4E  
                                                  _sprintf 0C28  
                                           __pintcode_body 1824  
                                     end_of_initialization 17A2  
                            ??_check_potentiometer_voltaje 0001  
                                            ??_EEPROM_Read 0001  
                                            __Lmediumconst 0000  
                                                  int_func 1824  
                                             _EscribeLCD_c 18BE  
                                      __end_of_DHT11_Start 186A  
                                                  postdec2 0FDD  
                        __end_of_save_temperature_c_EEPROM 1930  
                                                  postinc2 0FDE  
                                  ?_send_temperature_RS232 0001  
                                         ___lbmod@dividend 0002  
                                  ?_show_temperature_c_RGB 0001  
                                               main@Hum_n1 0083  
                                              ___lbmod@rem 0004  
                                              ___ftdiv@exp 0029  
                                       DHT11_ReadData@data 0003  
                                              ___ftmul@exp 0016  
                                        _Scale_Temperature 0085  
                                      __end_of_EEPROM_Read 1918  
                           __end_of_send_temperature_RS232 1690  
                              show_temperature_LCD@Temp_n1 0008  
                                            __pidataCOMRAM 1930  
                                    __end_of_InicializaLCD 1250  
                                       _welcome_operations 13E4  
                                                _EnviaDato 1690  
                           __end_of_show_temperature_c_RGB 14CC  
                                      start_initialization 1784  
                                              __end_of_ISR 1848  
                                      ?_welcome_operations 0001  
                              show_temperature_LCD@counter 000B  
                                             ??_RetardoLCD 0001  
                                              _DHT11_Start 1848  
                              __end_of_DHT11_CheckResponse 1784  
                                      EscribeLCD_n8@decena 000B  
                                     ??_welcome_operations 000E  
                                       _init_configuration 1364  
                                      EscribeLCD_n8@unidad 000C  
                                      ?_init_configuration 0001  
                                            _Enable_sample 0086  
                                               ?_EnviaDato 0001  
                                              __pbssCOMRAM 004B  
                                       __end_of_RetardoLCD 1598  
                                            __pcstackBANK0 0060  
                             __end_of_show_temperature_LCD 12E0  
                                             ??_Transmitir 0001  
                                     ??_init_configuration 0005  
                                              sprintf@flag 0014  
                                              _EEPROM_Read 190C  
                                              sprintf@prec 0015  
                                            _DireccionaLCD 18D4  
                                         ___lwdiv@dividend 0001  
                                                __pintcode 0008  
                                                 ?___lbdiv 0005  
                                                 ?___ftadd 002B  
                                                 ?___lbmod 0001  
                                                 ?___ftdiv 001C  
                                                 ?___ftmul 000D  
                                                 ?___fttol 0037  
                                                 ?___lwdiv 0001  
                                                 ?___lwmod 0008  
                                       __end_of_Transmitir 1924  
                                           _DHT11_ReadData 1598  
                                         ??_MensajeLCD_Var 0007  
                       send_temperature_RS232@buffer_RS232 001C  
                                              __smallconst 0800  
                                         ___lwdiv@quotient 0005  
                                                 ?_sprintf 000D  
                                           ?_DireccionaLCD 0001  
                                                 i2u255_40 183C  
                                                 i2u256_45 183E  
                                   __end_of_DHT11_ReadData 15EE  
                                              ??_EnviaDato 0003  
                               show_temperature_LCD@Hum_n1 0009  
                                                 _BorraLCD 18EA  
                                                 __Hrparam 0000  
                                                 __Lrparam 0000  
                                     _show_temperature_LCD 1250  
                                          ?_DHT11_ReadData 0001  
                               ?_save_temperature_c_EEPROM 0001  
                                                 ___ftpack 1106  
                                                 ___lbtoft 1800  
                                          DHT11_ReadData@i 0002  
                                            ConfiguraLCD@a 0001  
                                               sprintf@val 0017  
                                          ___lwdiv@divisor 0003  
                                          ___lwdiv@counter 0007  
                                                 __ptext10 18D4  
                                                 __ptext11 1640  
                                                 __ptext20 11B4  
                                                 __ptext12 1918  
                                                 __ptext21 18EA  
                                                 __ptext13 1924  
                                                 __ptext30 1800  
                                                 __ptext22 1690  
                                                 __ptext14 186A  
                                                 __ptext31 1034  
                                                 __ptext23 1532  
                                                 __ptext15 17DA  
                                                 __ptext32 0D74  
                                                 __ptext24 18FE  
                                                 __ptext16 1848  
                                                 __ptext33 0F4E  
                                                 __ptext25 18A6  
                                                 __ptext17 1598  
                                                 __ptext34 0A80  
                                                 __ptext26 0878  
                                                 __ptext18 1752  
                                                 __ptext35 1106  
                                                 __ptext27 0C28  
                                                 __ptext19 1364  
                                                 __ptext36 1888  
                                                 __ptext28 16D6  
                                                 __ptext29 15EE  
                                            ?_EEPROM_Write 0001  
                                          ??_DireccionaLCD 0005  
                                             ?_DHT11_Start 0001  
                                                 _interfaz 004C  
                                 main@Scale_Temperature_n1 0084  
                                                 isa$xinst 0000  
                                    ?_show_temperature_LCD 0006  
                                                 int$flags 004D  
                     show_temperature_LCD@buffer_LCD_row_1 0006  
                     show_temperature_LCD@buffer_LCD_row_2 0007  
                                           ??_EEPROM_Write 0002  
                                            _EscribeLCD_n8 0E68  
                                                 intlevel2 0000  
                                                sprintf@ap 0016  
                                            ??_HabilitaLCD 0001  
                                                sprintf@sp 000D  
                                         ___lwmod@dividend 0008  
                                             ?_EEPROM_Read 0001  
                                            ?_ConfiguraLCD 0001  
                                       EEPROM_Read@address 0001  
                                                 sprintf@c 0019  
                                                 sprintf@f 000E  
                                          ___lwmod@divisor 000A  
                                          ___lwmod@counter 000C  
                             ?_check_potentiometer_voltaje 0001  
                                           ?_EscribeLCD_n8 0009  
                                           ??_ConfiguraLCD 0001  
                                            ?_EscribeLCD_c 0001  
                                      EEPROM_Write@address 0002  
                                 ??_send_temperature_RS232 001A  
                                      __end_of_HabilitaLCD 190C  
                                   ??_show_temperature_LCD 000B  
